{
  "_filename": "mkcalendar.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luadate/mkcalendar.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 2
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 3,
    "label": "has",
    "to": 6
  }, {
    "from": 3,
    "label": "has",
    "to": 7
  }, {
    "from": 3,
    "label": "has",
    "to": 8
  }, {
    "from": 3,
    "label": "has",
    "to": 9
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 9,
    "label": "has",
    "to": 11
  }, {
    "from": 9,
    "label": "has",
    "to": 12
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 3,
    "label": "has",
    "to": 14
  }, {
    "from": 3,
    "label": "has",
    "to": 15
  }, {
    "from": 16,
    "label": "has",
    "to": 17
  }, {
    "from": 16,
    "label": "has",
    "to": 18
  }, {
    "from": 18,
    "label": "has",
    "to": 19
  }, {
    "from": 18,
    "label": "has",
    "to": 20
  }, {
    "from": 18,
    "label": "has",
    "to": 21
  }, {
    "from": 21,
    "label": "has",
    "to": 22
  }, {
    "from": 16,
    "label": "has",
    "to": 23
  }, {
    "from": 16,
    "label": "has",
    "to": 24
  }, {
    "from": 25,
    "label": "calls",
    "to": 31
  }, {
    "from": 16,
    "label": "calls",
    "to": 29
  }, {
    "from": 16,
    "label": "calls",
    "to": 29
  }, {
    "from": 16,
    "label": "calls",
    "to": 30
  }, {
    "from": 25,
    "label": "calls",
    "to": 30
  }, {
    "from": 3,
    "label": "calls",
    "to": 28
  }, {
    "from": 3,
    "label": "calls",
    "to": 28
  }, {
    "from": 3,
    "label": "calls",
    "to": 27
  }, {
    "from": 25,
    "label": "calls",
    "to": 16
  }, {
    "from": 16,
    "label": "calls",
    "to": 3
  }, {
    "from": 25,
    "label": "calls",
    "to": 26
  }, {
    "from": 2,
    "label": "contains",
    "to": 25
  }, {
    "from": 25,
    "label": "declares",
    "to": 3
  }, {
    "from": 25,
    "label": "declares",
    "to": 16
  }, {
    "from": 2,
    "label": "contains",
    "to": 32
  }, {
    "from": 2,
    "label": "contains",
    "to": 33
  }, {
    "from": 32,
    "label": "initializes",
    "to": 34
  }, {
    "from": 34,
    "label": "assigns",
    "to": 35
  }, {
    "from": 32,
    "label": "initializes",
    "to": 36
  }, {
    "from": 36,
    "label": "assigns",
    "to": 37
  }, {
    "from": 32,
    "label": "initializes",
    "to": 38
  }, {
    "from": 38,
    "label": "assigns",
    "to": 39
  }, {
    "from": 32,
    "label": "initializes",
    "to": 40
  }, {
    "from": 40,
    "label": "assigns",
    "to": 41
  }, {
    "from": 32,
    "label": "initializes",
    "to": 42
  }, {
    "from": 42,
    "label": "assigns",
    "to": 43
  }, {
    "from": 32,
    "label": "initializes",
    "to": 44
  }, {
    "from": 44,
    "label": "assigns",
    "to": 45
  }, {
    "from": 33,
    "label": "initializes",
    "to": 46
  }, {
    "from": 46,
    "label": "requires",
    "to": 1
  }, {
    "from": 47,
    "label": "initializes",
    "to": 46
  }, {
    "from": 46,
    "label": "requires",
    "to": 1
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "date",
    "type": "module"
  }, {
    "id": 2,
    "text": "mkcalendar",
    "type": "module"
  }, {
    "id": 3,
    "text": "function makemonth(y,m)\r\n\tlocal t = {}\r\n\tlocal d = date(y,m,1)\r\n\tt.name = d:fmt(\"%B\")\r\n\tt.year = y\r\n\t-- get back to the nearest sunday\r\n\td:adddays(-(d:getweekday()-1))\r\n\trepeat\r\n\t\tlocal tt = {}\r\n\t\ttable.insert(t,tt)\r\n\t\trepeat -- insert the week days\r\n\t\t\ttable.insert(tt, d:getday())\r\n\t\tuntil d:adddays(1):getweekday() == 1\r\n\tuntil d:getmonth() ~= m\r\n\treturn t\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "local t = {}",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "local d = date(y,m,1)",
    "type": "statement:localassign"
  }, {
    "id": 6,
    "text": "t.name = d:fmt(\"%B\")",
    "type": "statement:assign"
  }, {
    "id": 7,
    "text": "t.year = y",
    "type": "statement:assign"
  }, {
    "id": 8,
    "text": "d:adddays(-(d:getweekday()-1))",
    "type": "statement:functioncall"
  }, {
    "id": 9,
    "text": "repeat\r\n\t\tlocal tt = {}\r\n\t\ttable.insert(t,tt)\r\n\t\trepeat -- insert the week days\r\n\t\t\ttable.insert(tt, d:getday())\r\n\t\tuntil d:adddays(1):getweekday() == 1\r\n\tuntil d:getmonth() ~= m",
    "type": "statement:repeat"
  }, {
    "id": 10,
    "text": "local tt = {}",
    "type": "statement:localassign"
  }, {
    "id": 11,
    "text": "table.insert(t,tt)",
    "type": "statement:functioncall"
  }, {
    "id": 12,
    "text": "repeat -- insert the week days\r\n\t\t\ttable.insert(tt, d:getday())\r\n\t\tuntil d:adddays(1):getweekday() == 1",
    "type": "statement:repeat"
  }, {
    "id": 13,
    "text": "table.insert(tt, d:getday())",
    "type": "statement:functioncall"
  }, {
    "id": 14,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 15,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 16,
    "text": "function makecalendar(y, iox)\r\n\tiox:write(htm_yearhead)\t\r\n\tfor i = 1, 12 do\r\n\t\tlocal tm = makemonth(y, i)\r\n\t\tiox:write(string.format(htm_monhead, tm.name, tm.year))\r\n\t\tfor k, v in ipairs(tm) do\r\n\t\t\tiox:write(string.format(htm_monweek, v[1], v[2], v[3], v[4], v[5], v[6], v[7]))\r\n\t\tend\r\n\tend\r\n\tiox:write(htm_yearfoot)\r\n\t\t\t\r\nend",
    "type": "function"
  }, {
    "id": 17,
    "text": "iox:write(htm_yearhead)",
    "type": "statement:functioncall"
  }, {
    "id": 18,
    "text": "for i = 1, 12 do\r\n\t\tlocal tm = makemonth(y, i)\r\n\t\tiox:write(string.format(htm_monhead, tm.name, tm.year))\r\n\t\tfor k, v in ipairs(tm) do\r\n\t\t\tiox:write(string.format(htm_monweek, v[1], v[2], v[3], v[4], v[5], v[6], v[7]))\r\n\t\tend\r\n\tend",
    "type": "statement:numericfor"
  }, {
    "id": 19,
    "text": "local tm = makemonth(y, i)",
    "type": "statement:localassign"
  }, {
    "id": 20,
    "text": "iox:write(string.format(htm_monhead, tm.name, tm.year))",
    "type": "statement:functioncall"
  }, {
    "id": 21,
    "text": "for k, v in ipairs(tm) do\r\n\t\t\tiox:write(string.format(htm_monweek, v[1], v[2], v[3], v[4], v[5], v[6], v[7]))\r\n\t\tend",
    "type": "statement:genericfor"
  }, {
    "id": 22,
    "text": "iox:write(string.format(htm_monweek, v[1], v[2], v[3], v[4], v[5], v[6], v[7]))",
    "type": "statement:functioncall"
  }, {
    "id": 23,
    "text": "iox:write(htm_yearfoot)",
    "type": "statement:functioncall"
  }, {
    "id": 24,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 25,
    "text": "",
    "type": "function container"
  }, {
    "id": 26,
    "text": "require",
    "type": "global function"
  }, {
    "id": 27,
    "text": "date",
    "type": "global function"
  }, {
    "id": 28,
    "text": "insert",
    "type": "global function"
  }, {
    "id": 29,
    "text": "format",
    "type": "global function"
  }, {
    "id": 30,
    "text": "ipairs",
    "type": "global function"
  }, {
    "id": 31,
    "text": "tonumber",
    "type": "global function"
  }, {
    "id": 32,
    "text": "",
    "type": "variable container"
  }, {
    "id": 33,
    "text": "",
    "type": "require container"
  }, {
    "id": 34,
    "text": "",
    "type": "local variable"
  }, {
    "id": 35,
    "text": "",
    "type": "string"
  }, {
    "id": 36,
    "text": "",
    "type": "local variable"
  }, {
    "id": 37,
    "text": "",
    "type": "string"
  }, {
    "id": 38,
    "text": "",
    "type": "local variable"
  }, {
    "id": 39,
    "text": "",
    "type": "string"
  }, {
    "id": 40,
    "text": "",
    "type": "local variable"
  }, {
    "id": 41,
    "text": "",
    "type": "string"
  }, {
    "id": 42,
    "text": "",
    "type": "local variable"
  }, {
    "id": 43,
    "text": "",
    "type": "string"
  }, {
    "id": 44,
    "text": "",
    "type": "local variable"
  }, {
    "id": 45,
    "text": "",
    "type": "string"
  }, {
    "id": 46,
    "text": "",
    "type": "global variable"
  }, {
    "id": 47,
    "text": "",
    "type": "require container"
  } ]
}