{
  "_filename": "check-memory.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luasocket/etc/check-memory.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 9,
    "label": "calls",
    "to": 2
  }, {
    "from": 9,
    "label": "calls",
    "to": 2
  }, {
    "from": 9,
    "label": "calls",
    "to": 2
  }, {
    "from": 9,
    "label": "calls",
    "to": 2
  }, {
    "from": 9,
    "label": "calls",
    "to": 2
  }, {
    "from": 9,
    "label": "calls",
    "to": 2
  }, {
    "from": 9,
    "label": "calls",
    "to": 2
  }, {
    "from": 9,
    "label": "calls",
    "to": 2
  }, {
    "from": 2,
    "label": "calls",
    "to": 11
  }, {
    "from": 2,
    "label": "calls",
    "to": 11
  }, {
    "from": 2,
    "label": "calls",
    "to": 12
  }, {
    "from": 2,
    "label": "calls",
    "to": 13
  }, {
    "from": 2,
    "label": "calls",
    "to": 10
  }, {
    "from": 2,
    "label": "calls",
    "to": 10
  }, {
    "from": 1,
    "label": "contains",
    "to": 9
  }, {
    "from": 9,
    "label": "declares",
    "to": 2
  }, {
    "from": 1,
    "label": "contains",
    "to": 14
  }, {
    "from": 1,
    "label": "contains",
    "to": 15
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "check-memory",
    "type": "module"
  }, {
    "id": 2,
    "text": "function load(s)\r\n    collectgarbage()\r\n    local a = gcinfo()\r\n    _G[s] = require(s)\r\n    collectgarbage()\r\n    local b = gcinfo()\r\n    print(s .. \":\\t \" .. (b-a) .. \"k\")\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "collectgarbage()",
    "type": "statement:functioncall"
  }, {
    "id": 4,
    "text": "local a = gcinfo()",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "_G[s] = require(s)",
    "type": "statement:assign"
  }, {
    "id": 6,
    "text": "local b = gcinfo()",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "print(s .. \":\\t \" .. (b-a) .. \"k\")",
    "type": "statement:functioncall"
  }, {
    "id": 8,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 9,
    "text": "",
    "type": "function container"
  }, {
    "id": 10,
    "text": "gcinfo",
    "type": "global function"
  }, {
    "id": 11,
    "text": "collectgarbage",
    "type": "global function"
  }, {
    "id": 12,
    "text": "print",
    "type": "global function"
  }, {
    "id": 13,
    "text": "require",
    "type": "global function"
  }, {
    "id": 14,
    "text": "",
    "type": "variable container"
  }, {
    "id": 15,
    "text": "",
    "type": "require container"
  } ]
}