{
  "_filename": "cddb.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luasocket/samples/cddb.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 9
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 9,
    "label": "has",
    "to": 11
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 11,
    "label": "has",
    "to": 13
  }, {
    "from": 11,
    "label": "has",
    "to": 14
  }, {
    "from": 11,
    "label": "has",
    "to": 15
  }, {
    "from": 11,
    "label": "has",
    "to": 16
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 17
  }, {
    "from": 2,
    "label": "calls",
    "to": 30
  }, {
    "from": 18,
    "label": "calls",
    "to": 22
  }, {
    "from": 18,
    "label": "calls",
    "to": 28
  }, {
    "from": 18,
    "label": "calls",
    "to": 32
  }, {
    "from": 18,
    "label": "calls",
    "to": 32
  }, {
    "from": 18,
    "label": "calls",
    "to": 32
  }, {
    "from": 18,
    "label": "calls",
    "to": 31
  }, {
    "from": 18,
    "label": "calls",
    "to": 20
  }, {
    "from": 18,
    "label": "calls",
    "to": 26
  }, {
    "from": 2,
    "label": "calls",
    "to": 23
  }, {
    "from": 2,
    "label": "calls",
    "to": 23
  }, {
    "from": 2,
    "label": "calls",
    "to": 23
  }, {
    "from": 2,
    "label": "calls",
    "to": 27
  }, {
    "from": 18,
    "label": "calls",
    "to": 21
  }, {
    "from": 2,
    "label": "calls",
    "to": 29
  }, {
    "from": 2,
    "label": "calls",
    "to": 19
  }, {
    "from": 2,
    "label": "calls",
    "to": 19
  }, {
    "from": 18,
    "label": "calls",
    "to": 2
  }, {
    "from": 18,
    "label": "calls",
    "to": 33
  }, {
    "from": 18,
    "label": "calls",
    "to": 33
  }, {
    "from": 2,
    "label": "calls",
    "to": 25
  }, {
    "from": 2,
    "label": "calls",
    "to": 24
  }, {
    "from": 2,
    "label": "calls",
    "to": 24
  }, {
    "from": 1,
    "label": "contains",
    "to": 18
  }, {
    "from": 18,
    "label": "declares",
    "to": 2
  }, {
    "from": 1,
    "label": "contains",
    "to": 36
  }, {
    "from": 1,
    "label": "contains",
    "to": 37
  }, {
    "from": 36,
    "label": "initializes",
    "to": 38
  }, {
    "from": 38,
    "label": "assigns",
    "to": 39
  }, {
    "from": 36,
    "label": "initializes",
    "to": 40
  }, {
    "from": 40,
    "label": "assigns",
    "to": 41
  }, {
    "from": 36,
    "label": "initializes",
    "to": 42
  }, {
    "from": 42,
    "label": "assigns",
    "to": 43
  }, {
    "from": 36,
    "label": "initializes",
    "to": 44
  }, {
    "from": 44,
    "label": "assigns",
    "to": 45
  }, {
    "from": 36,
    "label": "initializes",
    "to": 46
  }, {
    "from": 46,
    "label": "assigns",
    "to": 47
  }, {
    "from": 36,
    "label": "initializes",
    "to": 48
  }, {
    "from": 36,
    "label": "initializes",
    "to": 49
  }, {
    "from": 37,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 35
  }, {
    "from": 37,
    "label": "initializes",
    "to": 51
  }, {
    "from": 51,
    "label": "requires",
    "to": 34
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "cddb",
    "type": "module"
  }, {
    "id": 2,
    "text": "function parse(body)\r\n    local lines = string.gfind(body, \"(.-)\\r\\n\")\r\n    local status = lines()\r\n    local code, message = socket.skip(2, string.find(status, \"(%d%d%d) (.*)\"))\r\n    if tonumber(code) ~= 210 then\r\n        return nil, code, message\r\n    end\r\n    local data = {}\r\n    for l in lines do\r\n        local c = string.sub(l, 1, 1)\r\n        if c ~= '#' and c ~= '.' then\r\n            local key, value = socket.skip(2, string.find(l, \"(.-)=(.*)\"))\r\n            value = string.gsub(value, \"\\\\n\", \"\\n\")\r\n            value = string.gsub(value, \"\\\\\\\\\", \"\\\\\")\r\n            value = string.gsub(value, \"\\\\t\", \"\\t\")\r\n            data[key] = value\r\n        end\r\n    end\r\n    return data, code, message \r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local lines = string.gfind(body, \"(.-)\\r\\n\")",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "local status = lines()",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "local code, message = socket.skip(2, string.find(status, \"(%d%d%d) (.*)\"))",
    "type": "statement:localassign"
  }, {
    "id": 6,
    "text": "if tonumber(code) ~= 210 then\r\n        return nil, code, message\r\n    end",
    "type": "statement:if"
  }, {
    "id": 7,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 8,
    "text": "local data = {}",
    "type": "statement:localassign"
  }, {
    "id": 9,
    "text": "for l in lines do\r\n        local c = string.sub(l, 1, 1)\r\n        if c ~= '#' and c ~= '.' then\r\n            local key, value = socket.skip(2, string.find(l, \"(.-)=(.*)\"))\r\n            value = string.gsub(value, \"\\\\n\", \"\\n\")\r\n            value = string.gsub(value, \"\\\\\\\\\", \"\\\\\")\r\n            value = string.gsub(value, \"\\\\t\", \"\\t\")\r\n            data[key] = value\r\n        end\r\n    end",
    "type": "statement:genericfor"
  }, {
    "id": 10,
    "text": "local c = string.sub(l, 1, 1)",
    "type": "statement:localassign"
  }, {
    "id": 11,
    "text": "if c ~= '#' and c ~= '.' then\r\n            local key, value = socket.skip(2, string.find(l, \"(.-)=(.*)\"))\r\n            value = string.gsub(value, \"\\\\n\", \"\\n\")\r\n            value = string.gsub(value, \"\\\\\\\\\", \"\\\\\")\r\n            value = string.gsub(value, \"\\\\t\", \"\\t\")\r\n            data[key] = value\r\n        end",
    "type": "statement:if"
  }, {
    "id": 12,
    "text": "local key, value = socket.skip(2, string.find(l, \"(.-)=(.*)\"))",
    "type": "statement:localassign"
  }, {
    "id": 13,
    "text": "value = string.gsub(value, \"\\\\n\", \"\\n\")",
    "type": "statement:assign"
  }, {
    "id": 14,
    "text": "value = string.gsub(value, \"\\\\\\\\\", \"\\\\\")",
    "type": "statement:assign"
  }, {
    "id": 15,
    "text": "value = string.gsub(value, \"\\\\t\", \"\\t\")",
    "type": "statement:assign"
  }, {
    "id": 16,
    "text": "data[key] = value",
    "type": "statement:assign"
  }, {
    "id": 17,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 18,
    "text": "",
    "type": "function container"
  }, {
    "id": 19,
    "text": "find",
    "type": "global function"
  }, {
    "id": 20,
    "text": "request",
    "type": "global function"
  }, {
    "id": 21,
    "text": "dns.gethostname",
    "type": "global function"
  }, {
    "id": 22,
    "text": "format",
    "type": "global function"
  }, {
    "id": 23,
    "text": "gsub",
    "type": "global function"
  }, {
    "id": 24,
    "text": "skip",
    "type": "global function"
  }, {
    "id": 25,
    "text": "sub",
    "type": "global function"
  }, {
    "id": 26,
    "text": "write",
    "type": "global function"
  }, {
    "id": 27,
    "text": "tonumber",
    "type": "global function"
  }, {
    "id": 28,
    "text": "exit",
    "type": "global function"
  }, {
    "id": 29,
    "text": "lines",
    "type": "global function"
  }, {
    "id": 30,
    "text": "gfind",
    "type": "global function"
  }, {
    "id": 31,
    "text": "pairs",
    "type": "global function"
  }, {
    "id": 32,
    "text": "print",
    "type": "global function"
  }, {
    "id": 33,
    "text": "require",
    "type": "global function"
  }, {
    "id": 34,
    "text": "http)",
    "type": "module"
  }, {
    "id": 35,
    "text": "(socket)",
    "type": "module"
  }, {
    "id": 36,
    "text": "",
    "type": "variable container"
  }, {
    "id": 37,
    "text": "",
    "type": "require container"
  }, {
    "id": 38,
    "text": "",
    "type": "local variable"
  }, {
    "id": 39,
    "text": "",
    "type": "n/a"
  }, {
    "id": 40,
    "text": "",
    "type": "local variable"
  }, {
    "id": 41,
    "text": "",
    "type": "n/a"
  }, {
    "id": 42,
    "text": "",
    "type": "local variable"
  }, {
    "id": 43,
    "text": "",
    "type": "string"
  }, {
    "id": 44,
    "text": "",
    "type": "local variable"
  }, {
    "id": 45,
    "text": "",
    "type": "n/a"
  }, {
    "id": 46,
    "text": "",
    "type": "local variable"
  }, {
    "id": 47,
    "text": "",
    "type": "n/a"
  }, {
    "id": 48,
    "text": "",
    "type": "local variable"
  }, {
    "id": 49,
    "text": "",
    "type": "local variable"
  }, {
    "id": 50,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 51,
    "text": "",
    "type": "require local variable"
  } ]
}