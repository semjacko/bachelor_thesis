{
  "_filename": "httptest.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/luasocket/test/httptest.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 12,
    "label": "has",
    "to": 14
  }, {
    "from": 12,
    "label": "has",
    "to": 15
  }, {
    "from": 12,
    "label": "has",
    "to": 16
  }, {
    "from": 9,
    "label": "has",
    "to": 17
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 18,
    "label": "has",
    "to": 19
  }, {
    "from": 19,
    "label": "has",
    "to": 13
  }, {
    "from": 19,
    "label": "has",
    "to": 20
  }, {
    "from": 19,
    "label": "has",
    "to": 21
  }, {
    "from": 19,
    "label": "has",
    "to": 15
  }, {
    "from": 19,
    "label": "has",
    "to": 16
  }, {
    "from": 9,
    "label": "has",
    "to": 22
  }, {
    "from": 9,
    "label": "has",
    "to": 23
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 24,
    "label": "has",
    "to": 26
  }, {
    "from": 26,
    "label": "has",
    "to": 27
  }, {
    "from": 24,
    "label": "has",
    "to": 28
  }, {
    "from": 24,
    "label": "has",
    "to": 29
  }, {
    "from": 24,
    "label": "has",
    "to": 30
  }, {
    "from": 24,
    "label": "has",
    "to": 31
  }, {
    "from": 31,
    "label": "has",
    "to": 32
  }, {
    "from": 24,
    "label": "has",
    "to": 33
  }, {
    "from": 24,
    "label": "has",
    "to": 34
  }, {
    "from": 35,
    "label": "has",
    "to": 36
  }, {
    "from": 35,
    "label": "has",
    "to": 37
  }, {
    "from": 35,
    "label": "has",
    "to": 38
  }, {
    "from": 35,
    "label": "has",
    "to": 39
  }, {
    "from": 40,
    "label": "calls",
    "to": 42
  }, {
    "from": 40,
    "label": "calls",
    "to": 56
  }, {
    "from": 40,
    "label": "calls",
    "to": 56
  }, {
    "from": 40,
    "label": "calls",
    "to": 56
  }, {
    "from": 40,
    "label": "calls",
    "to": 56
  }, {
    "from": 40,
    "label": "calls",
    "to": 56
  }, {
    "from": 40,
    "label": "calls",
    "to": 56
  }, {
    "from": 40,
    "label": "calls",
    "to": 56
  }, {
    "from": 40,
    "label": "calls",
    "to": 56
  }, {
    "from": 40,
    "label": "calls",
    "to": 56
  }, {
    "from": 40,
    "label": "calls",
    "to": 57
  }, {
    "from": 40,
    "label": "calls",
    "to": 57
  }, {
    "from": 40,
    "label": "calls",
    "to": 57
  }, {
    "from": 40,
    "label": "calls",
    "to": 57
  }, {
    "from": 40,
    "label": "calls",
    "to": 57
  }, {
    "from": 40,
    "label": "calls",
    "to": 58
  }, {
    "from": 40,
    "label": "calls",
    "to": 58
  }, {
    "from": 40,
    "label": "calls",
    "to": 58
  }, {
    "from": 40,
    "label": "calls",
    "to": 58
  }, {
    "from": 40,
    "label": "calls",
    "to": 58
  }, {
    "from": 40,
    "label": "calls",
    "to": 58
  }, {
    "from": 40,
    "label": "calls",
    "to": 58
  }, {
    "from": 40,
    "label": "calls",
    "to": 58
  }, {
    "from": 40,
    "label": "calls",
    "to": 58
  }, {
    "from": 40,
    "label": "calls",
    "to": 48
  }, {
    "from": 35,
    "label": "calls",
    "to": 59
  }, {
    "from": 35,
    "label": "calls",
    "to": 59
  }, {
    "from": 40,
    "label": "calls",
    "to": 46
  }, {
    "from": 40,
    "label": "calls",
    "to": 47
  }, {
    "from": 40,
    "label": "calls",
    "to": 65
  }, {
    "from": 40,
    "label": "calls",
    "to": 65
  }, {
    "from": 40,
    "label": "calls",
    "to": 65
  }, {
    "from": 40,
    "label": "calls",
    "to": 65
  }, {
    "from": 40,
    "label": "calls",
    "to": 65
  }, {
    "from": 40,
    "label": "calls",
    "to": 65
  }, {
    "from": 40,
    "label": "calls",
    "to": 65
  }, {
    "from": 40,
    "label": "calls",
    "to": 65
  }, {
    "from": 40,
    "label": "calls",
    "to": 65
  }, {
    "from": 40,
    "label": "calls",
    "to": 65
  }, {
    "from": 40,
    "label": "calls",
    "to": 8
  }, {
    "from": 40,
    "label": "calls",
    "to": 53
  }, {
    "from": 40,
    "label": "calls",
    "to": 63
  }, {
    "from": 40,
    "label": "calls",
    "to": 63
  }, {
    "from": 40,
    "label": "calls",
    "to": 52
  }, {
    "from": 40,
    "label": "calls",
    "to": 52
  }, {
    "from": 40,
    "label": "calls",
    "to": 52
  }, {
    "from": 40,
    "label": "calls",
    "to": 52
  }, {
    "from": 40,
    "label": "calls",
    "to": 52
  }, {
    "from": 40,
    "label": "calls",
    "to": 52
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 55
  }, {
    "from": 40,
    "label": "calls",
    "to": 62
  }, {
    "from": 40,
    "label": "calls",
    "to": 62
  }, {
    "from": 40,
    "label": "calls",
    "to": 62
  }, {
    "from": 40,
    "label": "calls",
    "to": 4
  }, {
    "from": 40,
    "label": "calls",
    "to": 60
  }, {
    "from": 40,
    "label": "calls",
    "to": 60
  }, {
    "from": 40,
    "label": "calls",
    "to": 7
  }, {
    "from": 40,
    "label": "calls",
    "to": 7
  }, {
    "from": 40,
    "label": "calls",
    "to": 3
  }, {
    "from": 40,
    "label": "calls",
    "to": 3
  }, {
    "from": 40,
    "label": "calls",
    "to": 50
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 24
  }, {
    "from": 40,
    "label": "calls",
    "to": 51
  }, {
    "from": 40,
    "label": "calls",
    "to": 51
  }, {
    "from": 40,
    "label": "calls",
    "to": 51
  }, {
    "from": 40,
    "label": "calls",
    "to": 9
  }, {
    "from": 40,
    "label": "calls",
    "to": 5
  }, {
    "from": 40,
    "label": "calls",
    "to": 43
  }, {
    "from": 40,
    "label": "calls",
    "to": 45
  }, {
    "from": 40,
    "label": "calls",
    "to": 49
  }, {
    "from": 40,
    "label": "calls",
    "to": 66
  }, {
    "from": 40,
    "label": "calls",
    "to": 66
  }, {
    "from": 40,
    "label": "calls",
    "to": 66
  }, {
    "from": 40,
    "label": "calls",
    "to": 54
  }, {
    "from": 40,
    "label": "calls",
    "to": 54
  }, {
    "from": 40,
    "label": "calls",
    "to": 2
  }, {
    "from": 40,
    "label": "calls",
    "to": 44
  }, {
    "from": 40,
    "label": "calls",
    "to": 41
  }, {
    "from": 40,
    "label": "calls",
    "to": 41
  }, {
    "from": 40,
    "label": "calls",
    "to": 41
  }, {
    "from": 40,
    "label": "calls",
    "to": 41
  }, {
    "from": 40,
    "label": "calls",
    "to": 41
  }, {
    "from": 40,
    "label": "calls",
    "to": 41
  }, {
    "from": 40,
    "label": "calls",
    "to": 41
  }, {
    "from": 40,
    "label": "calls",
    "to": 41
  }, {
    "from": 40,
    "label": "calls",
    "to": 41
  }, {
    "from": 40,
    "label": "calls",
    "to": 41
  }, {
    "from": 40,
    "label": "calls",
    "to": 6
  }, {
    "from": 40,
    "label": "calls",
    "to": 61
  }, {
    "from": 40,
    "label": "calls",
    "to": 67
  }, {
    "from": 40,
    "label": "calls",
    "to": 67
  }, {
    "from": 40,
    "label": "calls",
    "to": 67
  }, {
    "from": 40,
    "label": "calls",
    "to": 67
  }, {
    "from": 40,
    "label": "calls",
    "to": 67
  }, {
    "from": 40,
    "label": "calls",
    "to": 64
  }, {
    "from": 40,
    "label": "calls",
    "to": 35
  }, {
    "from": 1,
    "label": "contains",
    "to": 40
  }, {
    "from": 40,
    "label": "declares",
    "to": 9
  }, {
    "from": 40,
    "label": "declares",
    "to": 24
  }, {
    "from": 40,
    "label": "declares",
    "to": 35
  }, {
    "from": 1,
    "label": "contains",
    "to": 73
  }, {
    "from": 1,
    "label": "contains",
    "to": 74
  }, {
    "from": 73,
    "label": "initializes",
    "to": 75
  }, {
    "from": 73,
    "label": "initializes",
    "to": 76
  }, {
    "from": 73,
    "label": "initializes",
    "to": 77
  }, {
    "from": 73,
    "label": "initializes",
    "to": 78
  }, {
    "from": 73,
    "label": "initializes",
    "to": 79
  }, {
    "from": 73,
    "label": "initializes",
    "to": 80
  }, {
    "from": 73,
    "label": "initializes",
    "to": 81
  }, {
    "from": 73,
    "label": "initializes",
    "to": 82
  }, {
    "from": 73,
    "label": "initializes",
    "to": 83
  }, {
    "from": 73,
    "label": "initializes",
    "to": 84
  }, {
    "from": 73,
    "label": "initializes",
    "to": 85
  }, {
    "from": 73,
    "label": "initializes",
    "to": 86
  }, {
    "from": 86,
    "label": "assigns",
    "to": 87
  }, {
    "from": 73,
    "label": "initializes",
    "to": 88
  }, {
    "from": 88,
    "label": "assigns",
    "to": 89
  }, {
    "from": 73,
    "label": "initializes",
    "to": 90
  }, {
    "from": 90,
    "label": "assigns",
    "to": 91
  }, {
    "from": 73,
    "label": "initializes",
    "to": 92
  }, {
    "from": 92,
    "label": "assigns",
    "to": 93
  }, {
    "from": 73,
    "label": "initializes",
    "to": 94
  }, {
    "from": 94,
    "label": "assigns",
    "to": 95
  }, {
    "from": 73,
    "label": "initializes",
    "to": 96
  }, {
    "from": 73,
    "label": "initializes",
    "to": 97
  }, {
    "from": 73,
    "label": "initializes",
    "to": 98
  }, {
    "from": 98,
    "label": "assigns",
    "to": 99
  }, {
    "from": 73,
    "label": "initializes",
    "to": 100
  }, {
    "from": 73,
    "label": "initializes",
    "to": 101
  }, {
    "from": 101,
    "label": "assigns",
    "to": 102
  }, {
    "from": 73,
    "label": "initializes",
    "to": 103
  }, {
    "from": 103,
    "label": "assigns",
    "to": 104
  }, {
    "from": 73,
    "label": "initializes",
    "to": 105
  }, {
    "from": 73,
    "label": "initializes",
    "to": 106
  }, {
    "from": 106,
    "label": "assigns",
    "to": 107
  }, {
    "from": 73,
    "label": "initializes",
    "to": 108
  }, {
    "from": 73,
    "label": "initializes",
    "to": 109
  }, {
    "from": 73,
    "label": "initializes",
    "to": 110
  }, {
    "from": 110,
    "label": "assigns",
    "to": 111
  }, {
    "from": 73,
    "label": "initializes",
    "to": 112
  }, {
    "from": 73,
    "label": "initializes",
    "to": 113
  }, {
    "from": 113,
    "label": "assigns",
    "to": 114
  }, {
    "from": 73,
    "label": "initializes",
    "to": 115
  }, {
    "from": 73,
    "label": "initializes",
    "to": 116
  }, {
    "from": 73,
    "label": "initializes",
    "to": 117
  }, {
    "from": 117,
    "label": "assigns",
    "to": 118
  }, {
    "from": 73,
    "label": "initializes",
    "to": 119
  }, {
    "from": 119,
    "label": "assigns",
    "to": 120
  }, {
    "from": 73,
    "label": "initializes",
    "to": 121
  }, {
    "from": 121,
    "label": "assigns",
    "to": 122
  }, {
    "from": 73,
    "label": "initializes",
    "to": 123
  }, {
    "from": 123,
    "label": "assigns",
    "to": 124
  }, {
    "from": 73,
    "label": "initializes",
    "to": 125
  }, {
    "from": 73,
    "label": "initializes",
    "to": 126
  }, {
    "from": 126,
    "label": "assigns",
    "to": 127
  }, {
    "from": 73,
    "label": "initializes",
    "to": 128
  }, {
    "from": 128,
    "label": "assigns",
    "to": 129
  }, {
    "from": 73,
    "label": "initializes",
    "to": 130
  }, {
    "from": 73,
    "label": "initializes",
    "to": 131
  }, {
    "from": 131,
    "label": "assigns",
    "to": 132
  }, {
    "from": 73,
    "label": "initializes",
    "to": 133
  }, {
    "from": 133,
    "label": "assigns",
    "to": 134
  }, {
    "from": 73,
    "label": "initializes",
    "to": 135
  }, {
    "from": 135,
    "label": "assigns",
    "to": 136
  }, {
    "from": 73,
    "label": "initializes",
    "to": 137
  }, {
    "from": 137,
    "label": "assigns",
    "to": 138
  }, {
    "from": 73,
    "label": "initializes",
    "to": 139
  }, {
    "from": 139,
    "label": "assigns",
    "to": 140
  }, {
    "from": 73,
    "label": "initializes",
    "to": 141
  }, {
    "from": 141,
    "label": "assigns",
    "to": 142
  }, {
    "from": 73,
    "label": "initializes",
    "to": 143
  }, {
    "from": 143,
    "label": "assigns",
    "to": 144
  }, {
    "from": 73,
    "label": "initializes",
    "to": 145
  }, {
    "from": 145,
    "label": "assigns",
    "to": 146
  }, {
    "from": 73,
    "label": "initializes",
    "to": 147
  }, {
    "from": 73,
    "label": "initializes",
    "to": 148
  }, {
    "from": 148,
    "label": "assigns",
    "to": 149
  }, {
    "from": 73,
    "label": "initializes",
    "to": 150
  }, {
    "from": 150,
    "label": "assigns",
    "to": 151
  }, {
    "from": 73,
    "label": "initializes",
    "to": 152
  }, {
    "from": 152,
    "label": "assigns",
    "to": 153
  }, {
    "from": 73,
    "label": "initializes",
    "to": 154
  }, {
    "from": 154,
    "label": "assigns",
    "to": 155
  }, {
    "from": 73,
    "label": "initializes",
    "to": 156
  }, {
    "from": 156,
    "label": "assigns",
    "to": 157
  }, {
    "from": 73,
    "label": "initializes",
    "to": 158
  }, {
    "from": 158,
    "label": "assigns",
    "to": 159
  }, {
    "from": 73,
    "label": "initializes",
    "to": 160
  }, {
    "from": 160,
    "label": "assigns",
    "to": 161
  }, {
    "from": 73,
    "label": "initializes",
    "to": 162
  }, {
    "from": 162,
    "label": "assigns",
    "to": 163
  }, {
    "from": 73,
    "label": "initializes",
    "to": 164
  }, {
    "from": 164,
    "label": "assigns",
    "to": 165
  }, {
    "from": 73,
    "label": "initializes",
    "to": 166
  }, {
    "from": 166,
    "label": "assigns",
    "to": 167
  }, {
    "from": 73,
    "label": "initializes",
    "to": 168
  }, {
    "from": 168,
    "label": "assigns",
    "to": 169
  }, {
    "from": 73,
    "label": "initializes",
    "to": 170
  }, {
    "from": 170,
    "label": "assigns",
    "to": 171
  }, {
    "from": 73,
    "label": "initializes",
    "to": 172
  }, {
    "from": 172,
    "label": "assigns",
    "to": 173
  }, {
    "from": 73,
    "label": "initializes",
    "to": 174
  }, {
    "from": 174,
    "label": "assigns",
    "to": 175
  }, {
    "from": 73,
    "label": "initializes",
    "to": 176
  }, {
    "from": 176,
    "label": "assigns",
    "to": 177
  }, {
    "from": 73,
    "label": "initializes",
    "to": 178
  }, {
    "from": 178,
    "label": "assigns",
    "to": 179
  }, {
    "from": 73,
    "label": "initializes",
    "to": 180
  }, {
    "from": 180,
    "label": "assigns",
    "to": 181
  }, {
    "from": 73,
    "label": "initializes",
    "to": 182
  }, {
    "from": 182,
    "label": "assigns",
    "to": 183
  }, {
    "from": 73,
    "label": "initializes",
    "to": 184
  }, {
    "from": 184,
    "label": "assigns",
    "to": 185
  }, {
    "from": 73,
    "label": "initializes",
    "to": 186
  }, {
    "from": 186,
    "label": "assigns",
    "to": 187
  }, {
    "from": 73,
    "label": "initializes",
    "to": 188
  }, {
    "from": 188,
    "label": "assigns",
    "to": 189
  }, {
    "from": 73,
    "label": "initializes",
    "to": 190
  }, {
    "from": 190,
    "label": "assigns",
    "to": 191
  }, {
    "from": 73,
    "label": "initializes",
    "to": 192
  }, {
    "from": 192,
    "label": "assigns",
    "to": 193
  }, {
    "from": 73,
    "label": "initializes",
    "to": 194
  }, {
    "from": 194,
    "label": "assigns",
    "to": 195
  }, {
    "from": 73,
    "label": "initializes",
    "to": 196
  }, {
    "from": 196,
    "label": "assigns",
    "to": 197
  }, {
    "from": 73,
    "label": "initializes",
    "to": 198
  }, {
    "from": 198,
    "label": "assigns",
    "to": 199
  }, {
    "from": 73,
    "label": "initializes",
    "to": 200
  }, {
    "from": 200,
    "label": "assigns",
    "to": 201
  }, {
    "from": 73,
    "label": "initializes",
    "to": 202
  }, {
    "from": 202,
    "label": "assigns",
    "to": 203
  }, {
    "from": 73,
    "label": "initializes",
    "to": 204
  }, {
    "from": 204,
    "label": "assigns",
    "to": 205
  }, {
    "from": 73,
    "label": "initializes",
    "to": 206
  }, {
    "from": 206,
    "label": "assigns",
    "to": 207
  }, {
    "from": 73,
    "label": "initializes",
    "to": 208
  }, {
    "from": 208,
    "label": "assigns",
    "to": 209
  }, {
    "from": 73,
    "label": "initializes",
    "to": 210
  }, {
    "from": 210,
    "label": "assigns",
    "to": 211
  }, {
    "from": 73,
    "label": "initializes",
    "to": 212
  }, {
    "from": 212,
    "label": "assigns",
    "to": 213
  }, {
    "from": 73,
    "label": "initializes",
    "to": 214
  }, {
    "from": 214,
    "label": "assigns",
    "to": 215
  }, {
    "from": 73,
    "label": "initializes",
    "to": 216
  }, {
    "from": 216,
    "label": "assigns",
    "to": 217
  }, {
    "from": 73,
    "label": "initializes",
    "to": 218
  }, {
    "from": 218,
    "label": "assigns",
    "to": 219
  }, {
    "from": 73,
    "label": "initializes",
    "to": 220
  }, {
    "from": 220,
    "label": "assigns",
    "to": 221
  }, {
    "from": 73,
    "label": "initializes",
    "to": 222
  }, {
    "from": 222,
    "label": "assigns",
    "to": 223
  }, {
    "from": 73,
    "label": "initializes",
    "to": 224
  }, {
    "from": 224,
    "label": "assigns",
    "to": 225
  }, {
    "from": 73,
    "label": "initializes",
    "to": 226
  }, {
    "from": 226,
    "label": "assigns",
    "to": 227
  }, {
    "from": 73,
    "label": "initializes",
    "to": 228
  }, {
    "from": 228,
    "label": "assigns",
    "to": 229
  }, {
    "from": 73,
    "label": "initializes",
    "to": 230
  }, {
    "from": 230,
    "label": "assigns",
    "to": 231
  }, {
    "from": 73,
    "label": "initializes",
    "to": 232
  }, {
    "from": 232,
    "label": "assigns",
    "to": 233
  }, {
    "from": 73,
    "label": "initializes",
    "to": 234
  }, {
    "from": 234,
    "label": "assigns",
    "to": 235
  }, {
    "from": 73,
    "label": "initializes",
    "to": 236
  }, {
    "from": 74,
    "label": "initializes",
    "to": 237
  }, {
    "from": 237,
    "label": "requires",
    "to": 72
  }, {
    "from": 74,
    "label": "initializes",
    "to": 238
  }, {
    "from": 238,
    "label": "requires",
    "to": 71
  }, {
    "from": 74,
    "label": "initializes",
    "to": 239
  }, {
    "from": 239,
    "label": "requires",
    "to": 70
  }, {
    "from": 74,
    "label": "initializes",
    "to": 240
  }, {
    "from": 240,
    "label": "requires",
    "to": 69
  }, {
    "from": 74,
    "label": "initializes",
    "to": 241
  }, {
    "from": 241,
    "label": "requires",
    "to": 68
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "httptest",
    "type": "module"
  }, {
    "id": 2,
    "text": "function filter.chain(...)\r\n    local arg = {...}\r\n    local n = select('#',...)\r\n    local top, index = 1, 1\r\n    local retry = \"\"\r\n    return function(chunk)\r\n        retry = chunk and retry\r\n        while true do\r\n            if index == top then\r\n                chunk = arg[index](chunk)\r\n                if chunk == \"\" or top == n then return chunk\r\n                elseif chunk then index = index + 1\r\n                else\r\n                    top = top+1\r\n                    index = top\r\n                end\r\n            else\r\n                chunk = arg[index](chunk or \"\")\r\n                if chunk == \"\" then\r\n                    index = index - 1\r\n                    chunk = retry\r\n                elseif chunk then\r\n                    if index == n then return chunk\r\n                    else index = index + 1 end\r\n                else base.error(\"filter returned inappropriate nil\") end\r\n            end\r\n        end\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "function source.file(handle, io_err)\r\n    if handle then\r\n        return function()\r\n            local chunk = handle:read(_M.BLOCKSIZE)\r\n            if not chunk then handle:close() end\r\n            return chunk\r\n        end\r\n    else return source.error(io_err or \"unable to open file\") end\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "function source.string(s)\r\n    if s then\r\n        local i = 1\r\n        return function()\r\n            local chunk = string.sub(s, i, i+_M.BLOCKSIZE-1)\r\n            i = i + _M.BLOCKSIZE\r\n            if chunk ~= \"\" then return chunk\r\n            else return nil end\r\n        end\r\n    else return source.empty() end\r\nend",
    "type": "function"
  }, {
    "id": 5,
    "text": "function source.chain(src, f)\r\n    base.assert(src and f)\r\n    local last_in, last_out = \"\", \"\"\r\n    local state = \"feeding\"\r\n    local err\r\n    return function()\r\n        if not last_out then\r\n            base.error('source is empty!', 2)\r\n        end\r\n        while true do\r\n            if state == \"feeding\" then\r\n                last_in, err = src()\r\n                if err then return nil, err end\r\n                last_out = f(last_in)\r\n                if not last_out then\r\n                    if last_in then\r\n                        base.error('filter returned inappropriate nil')\r\n                    else\r\n                        return nil\r\n                    end\r\n                elseif last_out ~= \"\" then\r\n                    state = \"eating\"\r\n                    if last_in then last_in = \"\" end\r\n                    return last_out\r\n                end\r\n            else\r\n                last_out = f(last_in)\r\n                if last_out == \"\" then\r\n                    if last_in == \"\" then\r\n                        state = \"feeding\"\r\n                    else\r\n                        base.error('filter returned \"\"')\r\n                    end\r\n                elseif not last_out then\r\n                    if last_in then\r\n                        base.error('filter returned inappropriate nil')\r\n                    else\r\n                        return nil\r\n                    end\r\n                else\r\n                    return last_out\r\n                end\r\n            end\r\n        end\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 6,
    "text": "function sink.table(t)\r\n    t = t or {}\r\n    local f = function(chunk, err)\r\n        if chunk then table.insert(t, chunk) end\r\n        return 1\r\n    end\r\n    return f, t\r\nend",
    "type": "function"
  }, {
    "id": 7,
    "text": "function sink.file(handle, io_err)\r\n    if handle then\r\n        return function(chunk, err)\r\n            if not chunk then\r\n                handle:close()\r\n                return 1\r\n            else return handle:write(chunk) end\r\n        end\r\n    else return sink.error(io_err or \"unable to open file\") end\r\nend",
    "type": "function"
  }, {
    "id": 8,
    "text": "function sink.chain(f, snk)\r\n    base.assert(f and snk)\r\n    return function(chunk, err)\r\n        if chunk ~= \"\" then\r\n            local filtered = f(chunk)\r\n            local done = chunk and \"\"\r\n            while true do\r\n                local ret, snkerr = snk(filtered, err)\r\n                if not ret then return nil, snkerr end\r\n                if filtered == done then return 1 end\r\n                filtered = f(done)\r\n            end\r\n        else return 1 end\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 9,
    "text": "function(response, expect, ignore)\r\n    for i,v in pairs(response) do\r\n        if not ignore[i] then\r\n            if v ~= expect[i] then \r\n                local f = io.open(\"err\", \"w\")\r\n                f:write(tostring(v), \"\\n\\n versus\\n\\n\", tostring(expect[i]))\r\n                f:close()\r\n                fail(i .. \" differs!\") \r\n            end\r\n        end\r\n    end\r\n    for i,v in pairs(expect) do\r\n        if not ignore[i] then\r\n            if v ~= response[i] then \r\n                local f = io.open(\"err\", \"w\")\r\n                f:write(tostring(response[i]), \"\\n\\n versus\\n\\n\", tostring(v))\r\n                v = string.sub(type(v) == \"string\" and v or \"\", 1, 70)\r\n                f:close()\r\n                fail(i .. \" differs!\") \r\n            end\r\n        end\r\n    end\r\n    print(\"ok\")\r\nend",
    "type": "function"
  }, {
    "id": 10,
    "text": "for i,v in pairs(response) do\r\n        if not ignore[i] then\r\n            if v ~= expect[i] then \r\n                local f = io.open(\"err\", \"w\")\r\n                f:write(tostring(v), \"\\n\\n versus\\n\\n\", tostring(expect[i]))\r\n                f:close()\r\n                fail(i .. \" differs!\") \r\n            end\r\n        end\r\n    end",
    "type": "statement:genericfor"
  }, {
    "id": 11,
    "text": "if not ignore[i] then\r\n            if v ~= expect[i] then \r\n                local f = io.open(\"err\", \"w\")\r\n                f:write(tostring(v), \"\\n\\n versus\\n\\n\", tostring(expect[i]))\r\n                f:close()\r\n                fail(i .. \" differs!\") \r\n            end\r\n        end",
    "type": "statement:if"
  }, {
    "id": 12,
    "text": "if v ~= expect[i] then \r\n                local f = io.open(\"err\", \"w\")\r\n                f:write(tostring(v), \"\\n\\n versus\\n\\n\", tostring(expect[i]))\r\n                f:close()\r\n                fail(i .. \" differs!\") \r\n            end",
    "type": "statement:if"
  }, {
    "id": 13,
    "text": "local f = io.open(\"err\", \"w\")",
    "type": "statement:localassign"
  }, {
    "id": 14,
    "text": "f:write(tostring(v), \"\\n\\n versus\\n\\n\", tostring(expect[i]))",
    "type": "statement:functioncall"
  }, {
    "id": 15,
    "text": "f:close()",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "fail(i .. \" differs!\")",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "for i,v in pairs(expect) do\r\n        if not ignore[i] then\r\n            if v ~= response[i] then \r\n                local f = io.open(\"err\", \"w\")\r\n                f:write(tostring(response[i]), \"\\n\\n versus\\n\\n\", tostring(v))\r\n                v = string.sub(type(v) == \"string\" and v or \"\", 1, 70)\r\n                f:close()\r\n                fail(i .. \" differs!\") \r\n            end\r\n        end\r\n    end",
    "type": "statement:genericfor"
  }, {
    "id": 18,
    "text": "if not ignore[i] then\r\n            if v ~= response[i] then \r\n                local f = io.open(\"err\", \"w\")\r\n                f:write(tostring(response[i]), \"\\n\\n versus\\n\\n\", tostring(v))\r\n                v = string.sub(type(v) == \"string\" and v or \"\", 1, 70)\r\n                f:close()\r\n                fail(i .. \" differs!\") \r\n            end\r\n        end",
    "type": "statement:if"
  }, {
    "id": 19,
    "text": "if v ~= response[i] then \r\n                local f = io.open(\"err\", \"w\")\r\n                f:write(tostring(response[i]), \"\\n\\n versus\\n\\n\", tostring(v))\r\n                v = string.sub(type(v) == \"string\" and v or \"\", 1, 70)\r\n                f:close()\r\n                fail(i .. \" differs!\") \r\n            end",
    "type": "statement:if"
  }, {
    "id": 20,
    "text": "f:write(tostring(response[i]), \"\\n\\n versus\\n\\n\", tostring(v))",
    "type": "statement:functioncall"
  }, {
    "id": 21,
    "text": "v = string.sub(type(v) == \"string\" and v or \"\", 1, 70)",
    "type": "statement:assign"
  }, {
    "id": 22,
    "text": "print(\"ok\")",
    "type": "statement:functioncall"
  }, {
    "id": 23,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 24,
    "text": "function(request, expect, ignore)\r\n    local t\r\n    if not request.sink then request.sink, t = ltn12.sink.table() end\r\n    request.source = request.source or \r\n        (request.body and ltn12.source.string(request.body))\r\n    local response = {}\r\n    response.code, response.headers, response.status = \r\n        socket.skip(1, http.request(request))\r\n    if t and #t > 0 then response.body = table.concat(t) end\r\n    check_result(response, expect, ignore)\r\nend",
    "type": "function"
  }, {
    "id": 25,
    "text": "local t",
    "type": "statement:localassign"
  }, {
    "id": 26,
    "text": "if not request.sink then request.sink, t = ltn12.sink.table() end",
    "type": "statement:if"
  }, {
    "id": 27,
    "text": "request.sink, t = ltn12.sink.table()",
    "type": "statement:assign"
  }, {
    "id": 28,
    "text": "request.source = request.source or \r\n        (request.body and ltn12.source.string(request.body))",
    "type": "statement:assign"
  }, {
    "id": 29,
    "text": "local response = {}",
    "type": "statement:localassign"
  }, {
    "id": 30,
    "text": "response.code, response.headers, response.status = \r\n        socket.skip(1, http.request(request))",
    "type": "statement:assign"
  }, {
    "id": 31,
    "text": "if t and #t > 0 then response.body = table.concat(t) end",
    "type": "statement:if"
  }, {
    "id": 32,
    "text": "response.body = table.concat(t)",
    "type": "statement:assign"
  }, {
    "id": 33,
    "text": "check_result(response, expect, ignore)",
    "type": "statement:functioncall"
  }, {
    "id": 34,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 35,
    "text": "local function b64length(len)\r\n    local a = math.ceil(len/3)*4 \r\n    local l = math.ceil(a/76)\r\n    return a + l*2\r\nend",
    "type": "function"
  }, {
    "id": 36,
    "text": "local a = math.ceil(len/3)*4",
    "type": "statement:localassign"
  }, {
    "id": 37,
    "text": "local l = math.ceil(a/76)",
    "type": "statement:localassign"
  }, {
    "id": 38,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 39,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 40,
    "text": "",
    "type": "function container"
  }, {
    "id": 41,
    "text": "request",
    "type": "global function"
  }, {
    "id": 42,
    "text": "concat",
    "type": "global function"
  }, {
    "id": 43,
    "text": "format",
    "type": "global function"
  }, {
    "id": 44,
    "text": "decode",
    "type": "global function"
  }, {
    "id": 45,
    "text": "b64",
    "type": "global function"
  }, {
    "id": 46,
    "text": "skip",
    "type": "global function"
  }, {
    "id": 47,
    "text": "encode",
    "type": "global function"
  }, {
    "id": 48,
    "text": "parse",
    "type": "global function"
  }, {
    "id": 49,
    "text": "connect",
    "type": "global function"
  }, {
    "id": 50,
    "text": "sub",
    "type": "global function"
  }, {
    "id": 51,
    "text": "len",
    "type": "global function"
  }, {
    "id": 52,
    "text": "open",
    "type": "global function"
  }, {
    "id": 53,
    "text": "wrap",
    "type": "global function"
  }, {
    "id": 54,
    "text": "gettime",
    "type": "global function"
  }, {
    "id": 55,
    "text": "write",
    "type": "global function"
  }, {
    "id": 56,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 57,
    "text": "fail",
    "type": "global function"
  }, {
    "id": 58,
    "text": "tostring",
    "type": "global function"
  }, {
    "id": 59,
    "text": "ceil",
    "type": "global function"
  }, {
    "id": 60,
    "text": "similar",
    "type": "global function"
  }, {
    "id": 61,
    "text": "type",
    "type": "global function"
  }, {
    "id": 62,
    "text": "remove",
    "type": "global function"
  }, {
    "id": 63,
    "text": "pairs",
    "type": "global function"
  }, {
    "id": 64,
    "text": "dofile",
    "type": "global function"
  }, {
    "id": 65,
    "text": "print",
    "type": "global function"
  }, {
    "id": 66,
    "text": "readfile",
    "type": "global function"
  }, {
    "id": 67,
    "text": "require",
    "type": "global function"
  }, {
    "id": 68,
    "text": "(ltn12)",
    "type": "module"
  }, {
    "id": 69,
    "text": "(mime)",
    "type": "module"
  }, {
    "id": 70,
    "text": "url)",
    "type": "module"
  }, {
    "id": 71,
    "text": "http)",
    "type": "module"
  }, {
    "id": 72,
    "text": "(socket)",
    "type": "module"
  }, {
    "id": 73,
    "text": "",
    "type": "variable container"
  }, {
    "id": 74,
    "text": "",
    "type": "require container"
  }, {
    "id": 75,
    "text": "",
    "type": "local variable"
  }, {
    "id": 76,
    "text": "",
    "type": "local variable"
  }, {
    "id": 77,
    "text": "",
    "type": "local variable"
  }, {
    "id": 78,
    "text": "",
    "type": "local variable"
  }, {
    "id": 79,
    "text": "",
    "type": "local variable"
  }, {
    "id": 80,
    "text": "",
    "type": "local variable"
  }, {
    "id": 81,
    "text": "",
    "type": "local variable"
  }, {
    "id": 82,
    "text": "",
    "type": "local variable"
  }, {
    "id": 83,
    "text": "",
    "type": "local variable"
  }, {
    "id": 84,
    "text": "",
    "type": "local variable"
  }, {
    "id": 85,
    "text": "",
    "type": "local variable"
  }, {
    "id": 86,
    "text": "",
    "type": "local variable"
  }, {
    "id": 87,
    "text": "",
    "type": "n/a"
  }, {
    "id": 88,
    "text": "",
    "type": "local variable"
  }, {
    "id": 89,
    "text": "",
    "type": "n/a"
  }, {
    "id": 90,
    "text": "",
    "type": "local variable"
  }, {
    "id": 91,
    "text": "",
    "type": "n/a"
  }, {
    "id": 92,
    "text": "",
    "type": "local variable"
  }, {
    "id": 93,
    "text": "",
    "type": "n/a"
  }, {
    "id": 94,
    "text": "",
    "type": "local variable"
  }, {
    "id": 95,
    "text": "",
    "type": "n/a"
  }, {
    "id": 96,
    "text": "",
    "type": "local variable"
  }, {
    "id": 97,
    "text": "",
    "type": "local variable"
  }, {
    "id": 98,
    "text": "",
    "type": "local variable"
  }, {
    "id": 99,
    "text": "",
    "type": "n/a"
  }, {
    "id": 100,
    "text": "",
    "type": "local variable"
  }, {
    "id": 101,
    "text": "",
    "type": "local variable"
  }, {
    "id": 102,
    "text": "",
    "type": "n/a"
  }, {
    "id": 103,
    "text": "",
    "type": "local variable"
  }, {
    "id": 104,
    "text": "",
    "type": "n/a"
  }, {
    "id": 105,
    "text": "",
    "type": "local variable"
  }, {
    "id": 106,
    "text": "",
    "type": "local variable"
  }, {
    "id": 107,
    "text": "",
    "type": "n/a"
  }, {
    "id": 108,
    "text": "",
    "type": "local variable"
  }, {
    "id": 109,
    "text": "",
    "type": "local variable"
  }, {
    "id": 110,
    "text": "",
    "type": "local variable"
  }, {
    "id": 111,
    "text": "",
    "type": "n/a"
  }, {
    "id": 112,
    "text": "",
    "type": "local variable"
  }, {
    "id": 113,
    "text": "",
    "type": "local variable"
  }, {
    "id": 114,
    "text": "",
    "type": "n/a"
  }, {
    "id": 115,
    "text": "",
    "type": "local variable"
  }, {
    "id": 116,
    "text": "",
    "type": "global variable"
  }, {
    "id": 117,
    "text": "",
    "type": "global variable"
  }, {
    "id": 118,
    "text": "",
    "type": "n/a"
  }, {
    "id": 119,
    "text": "",
    "type": "global variable"
  }, {
    "id": 120,
    "text": "",
    "type": "n/a"
  }, {
    "id": 121,
    "text": "",
    "type": "global variable"
  }, {
    "id": 122,
    "text": "",
    "type": "n/a"
  }, {
    "id": 123,
    "text": "",
    "type": "global variable"
  }, {
    "id": 124,
    "text": "",
    "type": "n/a"
  }, {
    "id": 125,
    "text": "",
    "type": "global variable"
  }, {
    "id": 126,
    "text": "",
    "type": "global variable"
  }, {
    "id": 127,
    "text": "",
    "type": "n/a"
  }, {
    "id": 128,
    "text": "",
    "type": "global variable"
  }, {
    "id": 129,
    "text": "",
    "type": "n/a"
  }, {
    "id": 130,
    "text": "",
    "type": "global variable"
  }, {
    "id": 131,
    "text": "",
    "type": "global variable"
  }, {
    "id": 132,
    "text": "",
    "type": "n/a"
  }, {
    "id": 133,
    "text": "",
    "type": "global variable"
  }, {
    "id": 134,
    "text": "",
    "type": "n/a"
  }, {
    "id": 135,
    "text": "",
    "type": "global variable"
  }, {
    "id": 136,
    "text": "",
    "type": "n/a"
  }, {
    "id": 137,
    "text": "",
    "type": "global variable"
  }, {
    "id": 138,
    "text": "",
    "type": "n/a"
  }, {
    "id": 139,
    "text": "",
    "type": "global variable"
  }, {
    "id": 140,
    "text": "",
    "type": "n/a"
  }, {
    "id": 141,
    "text": "",
    "type": "global variable"
  }, {
    "id": 142,
    "text": "",
    "type": "n/a"
  }, {
    "id": 143,
    "text": "",
    "type": "global variable"
  }, {
    "id": 144,
    "text": "",
    "type": "n/a"
  }, {
    "id": 145,
    "text": "",
    "type": "global variable"
  }, {
    "id": 146,
    "text": "",
    "type": "n/a"
  }, {
    "id": 147,
    "text": "",
    "type": "global variable"
  }, {
    "id": 148,
    "text": "",
    "type": "global variable"
  }, {
    "id": 149,
    "text": "",
    "type": "n/a"
  }, {
    "id": 150,
    "text": "",
    "type": "global variable"
  }, {
    "id": 151,
    "text": "",
    "type": "n/a"
  }, {
    "id": 152,
    "text": "",
    "type": "global variable"
  }, {
    "id": 153,
    "text": "",
    "type": "n/a"
  }, {
    "id": 154,
    "text": "",
    "type": "global variable"
  }, {
    "id": 155,
    "text": "",
    "type": "n/a"
  }, {
    "id": 156,
    "text": "",
    "type": "global variable"
  }, {
    "id": 157,
    "text": "",
    "type": "n/a"
  }, {
    "id": 158,
    "text": "",
    "type": "global variable"
  }, {
    "id": 159,
    "text": "",
    "type": "n/a"
  }, {
    "id": 160,
    "text": "",
    "type": "global variable"
  }, {
    "id": 161,
    "text": "",
    "type": "n/a"
  }, {
    "id": 162,
    "text": "",
    "type": "global variable"
  }, {
    "id": 163,
    "text": "",
    "type": "n/a"
  }, {
    "id": 164,
    "text": "",
    "type": "global variable"
  }, {
    "id": 165,
    "text": "",
    "type": "n/a"
  }, {
    "id": 166,
    "text": "",
    "type": "global variable"
  }, {
    "id": 167,
    "text": "",
    "type": "n/a"
  }, {
    "id": 168,
    "text": "",
    "type": "global variable"
  }, {
    "id": 169,
    "text": "",
    "type": "n/a"
  }, {
    "id": 170,
    "text": "",
    "type": "global variable"
  }, {
    "id": 171,
    "text": "",
    "type": "n/a"
  }, {
    "id": 172,
    "text": "",
    "type": "global variable"
  }, {
    "id": 173,
    "text": "",
    "type": "n/a"
  }, {
    "id": 174,
    "text": "",
    "type": "global variable"
  }, {
    "id": 175,
    "text": "",
    "type": "n/a"
  }, {
    "id": 176,
    "text": "",
    "type": "global variable"
  }, {
    "id": 177,
    "text": "",
    "type": "n/a"
  }, {
    "id": 178,
    "text": "",
    "type": "global variable"
  }, {
    "id": 179,
    "text": "",
    "type": "n/a"
  }, {
    "id": 180,
    "text": "",
    "type": "global variable"
  }, {
    "id": 181,
    "text": "",
    "type": "n/a"
  }, {
    "id": 182,
    "text": "",
    "type": "global variable"
  }, {
    "id": 183,
    "text": "",
    "type": "n/a"
  }, {
    "id": 184,
    "text": "",
    "type": "global variable"
  }, {
    "id": 185,
    "text": "",
    "type": "n/a"
  }, {
    "id": 186,
    "text": "",
    "type": "global variable"
  }, {
    "id": 187,
    "text": "",
    "type": "n/a"
  }, {
    "id": 188,
    "text": "",
    "type": "global variable"
  }, {
    "id": 189,
    "text": "",
    "type": "n/a"
  }, {
    "id": 190,
    "text": "",
    "type": "global variable"
  }, {
    "id": 191,
    "text": "",
    "type": "n/a"
  }, {
    "id": 192,
    "text": "",
    "type": "global variable"
  }, {
    "id": 193,
    "text": "",
    "type": "n/a"
  }, {
    "id": 194,
    "text": "",
    "type": "global variable"
  }, {
    "id": 195,
    "text": "",
    "type": "n/a"
  }, {
    "id": 196,
    "text": "",
    "type": "global variable"
  }, {
    "id": 197,
    "text": "",
    "type": "n/a"
  }, {
    "id": 198,
    "text": "",
    "type": "global variable"
  }, {
    "id": 199,
    "text": "",
    "type": "n/a"
  }, {
    "id": 200,
    "text": "",
    "type": "global variable"
  }, {
    "id": 201,
    "text": "",
    "type": "n/a"
  }, {
    "id": 202,
    "text": "",
    "type": "global variable"
  }, {
    "id": 203,
    "text": "",
    "type": "n/a"
  }, {
    "id": 204,
    "text": "",
    "type": "global variable"
  }, {
    "id": 205,
    "text": "",
    "type": "n/a"
  }, {
    "id": 206,
    "text": "",
    "type": "global variable"
  }, {
    "id": 207,
    "text": "",
    "type": "n/a"
  }, {
    "id": 208,
    "text": "",
    "type": "global variable"
  }, {
    "id": 209,
    "text": "",
    "type": "n/a"
  }, {
    "id": 210,
    "text": "",
    "type": "global variable"
  }, {
    "id": 211,
    "text": "",
    "type": "n/a"
  }, {
    "id": 212,
    "text": "",
    "type": "global variable"
  }, {
    "id": 213,
    "text": "",
    "type": "n/a"
  }, {
    "id": 214,
    "text": "",
    "type": "global variable"
  }, {
    "id": 215,
    "text": "",
    "type": "n/a"
  }, {
    "id": 216,
    "text": "",
    "type": "global variable"
  }, {
    "id": 217,
    "text": "",
    "type": "n/a"
  }, {
    "id": 218,
    "text": "",
    "type": "global variable"
  }, {
    "id": 219,
    "text": "",
    "type": "n/a"
  }, {
    "id": 220,
    "text": "",
    "type": "global variable"
  }, {
    "id": 221,
    "text": "",
    "type": "n/a"
  }, {
    "id": 222,
    "text": "",
    "type": "global variable"
  }, {
    "id": 223,
    "text": "",
    "type": "n/a"
  }, {
    "id": 224,
    "text": "",
    "type": "global variable"
  }, {
    "id": 225,
    "text": "",
    "type": "n/a"
  }, {
    "id": 226,
    "text": "",
    "type": "global variable"
  }, {
    "id": 227,
    "text": "",
    "type": "n/a"
  }, {
    "id": 228,
    "text": "",
    "type": "global variable"
  }, {
    "id": 229,
    "text": "",
    "type": "n/a"
  }, {
    "id": 230,
    "text": "",
    "type": "global variable"
  }, {
    "id": 231,
    "text": "",
    "type": "n/a"
  }, {
    "id": 232,
    "text": "",
    "type": "global variable"
  }, {
    "id": 233,
    "text": "",
    "type": "n/a"
  }, {
    "id": 234,
    "text": "",
    "type": "global variable"
  }, {
    "id": 235,
    "text": "",
    "type": "n/a"
  }, {
    "id": 236,
    "text": "",
    "type": "global variable"
  }, {
    "id": 237,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 238,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 239,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 240,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 241,
    "text": "",
    "type": "require local variable"
  } ]
}