{
  "_filename": "smtptest.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/luasocket/test/smtptest.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 8,
    "label": "has",
    "to": 6
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 10,
    "label": "has",
    "to": 12
  }, {
    "from": 10,
    "label": "has",
    "to": 13
  }, {
    "from": 10,
    "label": "has",
    "to": 14
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 15,
    "label": "has",
    "to": 17
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 15,
    "label": "has",
    "to": 6
  }, {
    "from": 15,
    "label": "has",
    "to": 19
  }, {
    "from": 15,
    "label": "has",
    "to": 20
  }, {
    "from": 15,
    "label": "has",
    "to": 6
  }, {
    "from": 15,
    "label": "has",
    "to": 21
  }, {
    "from": 22,
    "label": "has",
    "to": 23
  }, {
    "from": 23,
    "label": "has",
    "to": 24
  }, {
    "from": 23,
    "label": "has",
    "to": 25
  }, {
    "from": 25,
    "label": "has",
    "to": 18
  }, {
    "from": 23,
    "label": "has",
    "to": 20
  }, {
    "from": 22,
    "label": "has",
    "to": 26
  }, {
    "from": 27,
    "label": "has",
    "to": 28
  }, {
    "from": 27,
    "label": "has",
    "to": 29
  }, {
    "from": 29,
    "label": "has",
    "to": 30
  }, {
    "from": 27,
    "label": "has",
    "to": 6
  }, {
    "from": 27,
    "label": "has",
    "to": 31
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 32,
    "label": "has",
    "to": 34
  }, {
    "from": 32,
    "label": "has",
    "to": 35
  }, {
    "from": 35,
    "label": "has",
    "to": 36
  }, {
    "from": 36,
    "label": "has",
    "to": 37
  }, {
    "from": 32,
    "label": "has",
    "to": 38
  }, {
    "from": 39,
    "label": "has",
    "to": 40
  }, {
    "from": 39,
    "label": "has",
    "to": 41
  }, {
    "from": 39,
    "label": "has",
    "to": 42
  }, {
    "from": 42,
    "label": "has",
    "to": 43
  }, {
    "from": 39,
    "label": "has",
    "to": 44
  }, {
    "from": 45,
    "label": "has",
    "to": 46
  }, {
    "from": 45,
    "label": "has",
    "to": 47
  }, {
    "from": 47,
    "label": "has",
    "to": 48
  }, {
    "from": 47,
    "label": "has",
    "to": 49
  }, {
    "from": 49,
    "label": "has",
    "to": 50
  }, {
    "from": 49,
    "label": "has",
    "to": 51
  }, {
    "from": 49,
    "label": "has",
    "to": 52
  }, {
    "from": 49,
    "label": "has",
    "to": 53
  }, {
    "from": 45,
    "label": "has",
    "to": 6
  }, {
    "from": 45,
    "label": "has",
    "to": 54
  }, {
    "from": 45,
    "label": "has",
    "to": 55
  }, {
    "from": 56,
    "label": "has",
    "to": 57
  }, {
    "from": 57,
    "label": "has",
    "to": 58
  }, {
    "from": 57,
    "label": "has",
    "to": 59
  }, {
    "from": 56,
    "label": "has",
    "to": 60
  }, {
    "from": 56,
    "label": "has",
    "to": 61
  }, {
    "from": 56,
    "label": "has",
    "to": 62
  }, {
    "from": 56,
    "label": "has",
    "to": 63
  }, {
    "from": 64,
    "label": "has",
    "to": 65
  }, {
    "from": 64,
    "label": "has",
    "to": 6
  }, {
    "from": 64,
    "label": "has",
    "to": 66
  }, {
    "from": 67,
    "label": "has",
    "to": 68
  }, {
    "from": 67,
    "label": "has",
    "to": 69
  }, {
    "from": 67,
    "label": "has",
    "to": 70
  }, {
    "from": 70,
    "label": "has",
    "to": 71
  }, {
    "from": 70,
    "label": "has",
    "to": 72
  }, {
    "from": 70,
    "label": "has",
    "to": 73
  }, {
    "from": 73,
    "label": "has",
    "to": 74
  }, {
    "from": 70,
    "label": "has",
    "to": 75
  }, {
    "from": 70,
    "label": "has",
    "to": 76
  }, {
    "from": 70,
    "label": "has",
    "to": 77
  }, {
    "from": 67,
    "label": "has",
    "to": 78
  }, {
    "from": 78,
    "label": "has",
    "to": 79
  }, {
    "from": 78,
    "label": "has",
    "to": 53
  }, {
    "from": 67,
    "label": "has",
    "to": 80
  }, {
    "from": 81,
    "label": "calls",
    "to": 84
  }, {
    "from": 81,
    "label": "calls",
    "to": 93
  }, {
    "from": 81,
    "label": "calls",
    "to": 39
  }, {
    "from": 81,
    "label": "calls",
    "to": 95
  }, {
    "from": 81,
    "label": "calls",
    "to": 10
  }, {
    "from": 81,
    "label": "calls",
    "to": 10
  }, {
    "from": 81,
    "label": "calls",
    "to": 10
  }, {
    "from": 81,
    "label": "calls",
    "to": 10
  }, {
    "from": 81,
    "label": "calls",
    "to": 10
  }, {
    "from": 81,
    "label": "calls",
    "to": 10
  }, {
    "from": 81,
    "label": "calls",
    "to": 10
  }, {
    "from": 81,
    "label": "calls",
    "to": 10
  }, {
    "from": 81,
    "label": "calls",
    "to": 10
  }, {
    "from": 81,
    "label": "calls",
    "to": 10
  }, {
    "from": 81,
    "label": "calls",
    "to": 87
  }, {
    "from": 81,
    "label": "calls",
    "to": 87
  }, {
    "from": 81,
    "label": "calls",
    "to": 32
  }, {
    "from": 81,
    "label": "calls",
    "to": 96
  }, {
    "from": 81,
    "label": "calls",
    "to": 96
  }, {
    "from": 81,
    "label": "calls",
    "to": 2
  }, {
    "from": 81,
    "label": "calls",
    "to": 85
  }, {
    "from": 81,
    "label": "calls",
    "to": 85
  }, {
    "from": 81,
    "label": "calls",
    "to": 91
  }, {
    "from": 81,
    "label": "calls",
    "to": 92
  }, {
    "from": 81,
    "label": "calls",
    "to": 56
  }, {
    "from": 81,
    "label": "calls",
    "to": 56
  }, {
    "from": 81,
    "label": "calls",
    "to": 56
  }, {
    "from": 81,
    "label": "calls",
    "to": 56
  }, {
    "from": 81,
    "label": "calls",
    "to": 56
  }, {
    "from": 81,
    "label": "calls",
    "to": 56
  }, {
    "from": 81,
    "label": "calls",
    "to": 27
  }, {
    "from": 81,
    "label": "calls",
    "to": 27
  }, {
    "from": 81,
    "label": "calls",
    "to": 83
  }, {
    "from": 81,
    "label": "calls",
    "to": 83
  }, {
    "from": 81,
    "label": "calls",
    "to": 89
  }, {
    "from": 81,
    "label": "calls",
    "to": 89
  }, {
    "from": 81,
    "label": "calls",
    "to": 88
  }, {
    "from": 81,
    "label": "calls",
    "to": 88
  }, {
    "from": 81,
    "label": "calls",
    "to": 88
  }, {
    "from": 81,
    "label": "calls",
    "to": 88
  }, {
    "from": 81,
    "label": "calls",
    "to": 88
  }, {
    "from": 81,
    "label": "calls",
    "to": 88
  }, {
    "from": 81,
    "label": "calls",
    "to": 88
  }, {
    "from": 81,
    "label": "calls",
    "to": 88
  }, {
    "from": 81,
    "label": "calls",
    "to": 88
  }, {
    "from": 81,
    "label": "calls",
    "to": 88
  }, {
    "from": 81,
    "label": "calls",
    "to": 86
  }, {
    "from": 81,
    "label": "calls",
    "to": 97
  }, {
    "from": 81,
    "label": "calls",
    "to": 97
  }, {
    "from": 81,
    "label": "calls",
    "to": 97
  }, {
    "from": 81,
    "label": "calls",
    "to": 97
  }, {
    "from": 81,
    "label": "calls",
    "to": 97
  }, {
    "from": 81,
    "label": "calls",
    "to": 97
  }, {
    "from": 81,
    "label": "calls",
    "to": 97
  }, {
    "from": 81,
    "label": "calls",
    "to": 97
  }, {
    "from": 81,
    "label": "calls",
    "to": 97
  }, {
    "from": 81,
    "label": "calls",
    "to": 97
  }, {
    "from": 81,
    "label": "calls",
    "to": 97
  }, {
    "from": 81,
    "label": "calls",
    "to": 15
  }, {
    "from": 81,
    "label": "calls",
    "to": 82
  }, {
    "from": 81,
    "label": "calls",
    "to": 98
  }, {
    "from": 81,
    "label": "calls",
    "to": 98
  }, {
    "from": 81,
    "label": "calls",
    "to": 98
  }, {
    "from": 81,
    "label": "calls",
    "to": 98
  }, {
    "from": 81,
    "label": "calls",
    "to": 94
  }, {
    "from": 81,
    "label": "calls",
    "to": 94
  }, {
    "from": 81,
    "label": "calls",
    "to": 94
  }, {
    "from": 81,
    "label": "calls",
    "to": 94
  }, {
    "from": 81,
    "label": "calls",
    "to": 45
  }, {
    "from": 81,
    "label": "calls",
    "to": 22
  }, {
    "from": 81,
    "label": "calls",
    "to": 90
  }, {
    "from": 81,
    "label": "calls",
    "to": 90
  }, {
    "from": 81,
    "label": "calls",
    "to": 67
  }, {
    "from": 81,
    "label": "calls",
    "to": 8
  }, {
    "from": 81,
    "label": "calls",
    "to": 8
  }, {
    "from": 81,
    "label": "calls",
    "to": 64
  }, {
    "from": 1,
    "label": "contains",
    "to": 81
  }, {
    "from": 81,
    "label": "declares",
    "to": 2
  }, {
    "from": 81,
    "label": "declares",
    "to": 8
  }, {
    "from": 81,
    "label": "declares",
    "to": 10
  }, {
    "from": 81,
    "label": "declares",
    "to": 15
  }, {
    "from": 81,
    "label": "declares",
    "to": 22
  }, {
    "from": 81,
    "label": "declares",
    "to": 27
  }, {
    "from": 81,
    "label": "declares",
    "to": 32
  }, {
    "from": 81,
    "label": "declares",
    "to": 39
  }, {
    "from": 81,
    "label": "declares",
    "to": 45
  }, {
    "from": 81,
    "label": "declares",
    "to": 56
  }, {
    "from": 81,
    "label": "declares",
    "to": 64
  }, {
    "from": 81,
    "label": "declares",
    "to": 67
  }, {
    "from": 1,
    "label": "contains",
    "to": 99
  }, {
    "from": 1,
    "label": "contains",
    "to": 100
  }, {
    "from": 99,
    "label": "initializes",
    "to": 101
  }, {
    "from": 101,
    "label": "assigns",
    "to": 102
  }, {
    "from": 99,
    "label": "initializes",
    "to": 103
  }, {
    "from": 103,
    "label": "assigns",
    "to": 104
  }, {
    "from": 99,
    "label": "initializes",
    "to": 105
  }, {
    "from": 105,
    "label": "assigns",
    "to": 106
  }, {
    "from": 99,
    "label": "initializes",
    "to": 107
  }, {
    "from": 107,
    "label": "assigns",
    "to": 108
  }, {
    "from": 99,
    "label": "initializes",
    "to": 109
  }, {
    "from": 109,
    "label": "assigns",
    "to": 110
  }, {
    "from": 110,
    "label": "assigns",
    "to": 111
  }, {
    "from": 110,
    "label": "assigns",
    "to": 112
  }, {
    "from": 110,
    "label": "assigns",
    "to": 113
  }, {
    "from": 110,
    "label": "assigns",
    "to": 114
  }, {
    "from": 99,
    "label": "initializes",
    "to": 115
  }, {
    "from": 115,
    "label": "assigns",
    "to": 116
  }, {
    "from": 99,
    "label": "initializes",
    "to": 117
  }, {
    "from": 99,
    "label": "initializes",
    "to": 118
  }, {
    "from": 118,
    "label": "assigns",
    "to": 119
  }, {
    "from": 99,
    "label": "initializes",
    "to": 120
  }, {
    "from": 120,
    "label": "assigns",
    "to": 121
  }, {
    "from": 99,
    "label": "initializes",
    "to": 122
  }, {
    "from": 122,
    "label": "assigns",
    "to": 123
  }, {
    "from": 99,
    "label": "initializes",
    "to": 124
  }, {
    "from": 124,
    "label": "assigns",
    "to": 125
  }, {
    "from": 99,
    "label": "initializes",
    "to": 126
  }, {
    "from": 126,
    "label": "assigns",
    "to": 127
  }, {
    "from": 99,
    "label": "initializes",
    "to": 128
  }, {
    "from": 128,
    "label": "assigns",
    "to": 129
  }, {
    "from": 99,
    "label": "initializes",
    "to": 130
  }, {
    "from": 130,
    "label": "assigns",
    "to": 131
  }, {
    "from": 99,
    "label": "initializes",
    "to": 132
  }, {
    "from": 132,
    "label": "assigns",
    "to": 133
  }, {
    "from": 99,
    "label": "initializes",
    "to": 134
  }, {
    "from": 134,
    "label": "assigns",
    "to": 135
  }, {
    "from": 99,
    "label": "initializes",
    "to": 136
  }, {
    "from": 136,
    "label": "assigns",
    "to": 137
  }, {
    "from": 99,
    "label": "initializes",
    "to": 138
  }, {
    "from": 138,
    "label": "assigns",
    "to": 139
  }, {
    "from": 99,
    "label": "initializes",
    "to": 140
  }, {
    "from": 140,
    "label": "assigns",
    "to": 141
  }, {
    "from": 99,
    "label": "initializes",
    "to": 142
  }, {
    "from": 142,
    "label": "assigns",
    "to": 143
  }, {
    "from": 99,
    "label": "initializes",
    "to": 144
  }, {
    "from": 144,
    "label": "assigns",
    "to": 145
  }, {
    "from": 99,
    "label": "initializes",
    "to": 146
  }, {
    "from": 146,
    "label": "assigns",
    "to": 147
  }, {
    "from": 99,
    "label": "initializes",
    "to": 148
  }, {
    "from": 99,
    "label": "initializes",
    "to": 149
  }, {
    "from": 149,
    "label": "assigns",
    "to": 150
  }, {
    "from": 99,
    "label": "initializes",
    "to": 151
  }, {
    "from": 99,
    "label": "initializes",
    "to": 152
  }, {
    "from": 152,
    "label": "assigns",
    "to": 153
  }, {
    "from": 99,
    "label": "initializes",
    "to": 154
  }, {
    "from": 99,
    "label": "initializes",
    "to": 155
  }, {
    "from": 155,
    "label": "assigns",
    "to": 156
  }, {
    "from": 99,
    "label": "initializes",
    "to": 157
  }, {
    "from": 99,
    "label": "initializes",
    "to": 158
  }, {
    "from": 158,
    "label": "assigns",
    "to": 159
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "smtptest",
    "type": "module"
  }, {
    "id": 2,
    "text": "function()\r\n    local t = 0\r\n    for i = 1, #sent do\r\n        t = t + sent[i].count\r\n    end\r\n    return t\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local t = 0",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "for i = 1, #sent do\r\n        t = t + sent[i].count\r\n    end",
    "type": "statement:numericfor"
  }, {
    "id": 5,
    "text": "t = t + sent[i].count",
    "type": "statement:assign"
  }, {
    "id": 6,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 7,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 8,
    "text": "function(s1, s2)\r\n    return \r\n    string.lower(string.gsub(s1, \"%s\", \"\")) == \r\n    string.lower(string.gsub(s2, \"%s\", \"\"))\r\nend",
    "type": "function"
  }, {
    "id": 9,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 10,
    "text": "function(s)\r\n    s = s or \"failed!\"\r\n    print(s)\r\n    os.exit()\r\nend",
    "type": "function"
  }, {
    "id": 11,
    "text": "s = s or \"failed!\"",
    "type": "statement:assign"
  }, {
    "id": 12,
    "text": "print(s)",
    "type": "statement:functioncall"
  }, {
    "id": 13,
    "text": "os.exit()",
    "type": "statement:functioncall"
  }, {
    "id": 14,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 15,
    "text": "function(name)\r\n    local f = io.open(name, \"r\")\r\n    if not f then \r\n        fail(\"unable to open file!\")\r\n        return nil \r\n    end\r\n    local s = f:read(\"*a\")\r\n    f:close()\r\n    return s\r\nend",
    "type": "function"
  }, {
    "id": 16,
    "text": "local f = io.open(name, \"r\")",
    "type": "statement:localassign"
  }, {
    "id": 17,
    "text": "if not f then \r\n        fail(\"unable to open file!\")\r\n        return nil \r\n    end",
    "type": "statement:if"
  }, {
    "id": 18,
    "text": "fail(\"unable to open file!\")",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "local s = f:read(\"*a\")",
    "type": "statement:localassign"
  }, {
    "id": 20,
    "text": "f:close()",
    "type": "statement:functioncall"
  }, {
    "id": 21,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 22,
    "text": "function()\r\n    for i,v in ipairs(files) do\r\n        local f = io.open(v, \"w\")\r\n        if not f then \r\n            fail(\"unable to open file!\")\r\n        end\r\n        f:close()\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 23,
    "text": "for i,v in ipairs(files) do\r\n        local f = io.open(v, \"w\")\r\n        if not f then \r\n            fail(\"unable to open file!\")\r\n        end\r\n        f:close()\r\n    end",
    "type": "statement:genericfor"
  }, {
    "id": 24,
    "text": "local f = io.open(v, \"w\")",
    "type": "statement:localassign"
  }, {
    "id": 25,
    "text": "if not f then \r\n            fail(\"unable to open file!\")\r\n        end",
    "type": "statement:if"
  }, {
    "id": 26,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 27,
    "text": "function()\r\n    local s = \"\"\r\n    for i,v in ipairs(files) do\r\n        s = s .. \"\\n\" .. readfile(v)\r\n    end\r\n    return s\r\nend",
    "type": "function"
  }, {
    "id": 28,
    "text": "local s = \"\"",
    "type": "statement:localassign"
  }, {
    "id": 29,
    "text": "for i,v in ipairs(files) do\r\n        s = s .. \"\\n\" .. readfile(v)\r\n    end",
    "type": "statement:genericfor"
  }, {
    "id": 30,
    "text": "s = s .. \"\\n\" .. readfile(v)",
    "type": "statement:assign"
  }, {
    "id": 31,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 32,
    "text": "function(sent, got)\r\n    sent = sent or {}\r\n    got = got or {}\r\n    for i,v in pairs(sent) do\r\n        if not similar(v, got[i]) then fail(\"header \" .. v .. \"failed!\") end\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 33,
    "text": "sent = sent or {}",
    "type": "statement:assign"
  }, {
    "id": 34,
    "text": "got = got or {}",
    "type": "statement:assign"
  }, {
    "id": 35,
    "text": "for i,v in pairs(sent) do\r\n        if not similar(v, got[i]) then fail(\"header \" .. v .. \"failed!\") end\r\n    end",
    "type": "statement:genericfor"
  }, {
    "id": 36,
    "text": "if not similar(v, got[i]) then fail(\"header \" .. v .. \"failed!\") end",
    "type": "statement:if"
  }, {
    "id": 37,
    "text": "fail(\"header \" .. v .. \"failed!\")",
    "type": "statement:functioncall"
  }, {
    "id": 38,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 39,
    "text": "function(sent, got)\r\n    sent = sent or \"\"\r\n    got = got or \"\"\r\n    if not similar(sent, got) then fail(\"bodies differ!\") end\r\nend",
    "type": "function"
  }, {
    "id": 40,
    "text": "sent = sent or \"\"",
    "type": "statement:assign"
  }, {
    "id": 41,
    "text": "got = got or \"\"",
    "type": "statement:assign"
  }, {
    "id": 42,
    "text": "if not similar(sent, got) then fail(\"bodies differ!\") end",
    "type": "statement:if"
  }, {
    "id": 43,
    "text": "fail(\"bodies differ!\")",
    "type": "statement:functioncall"
  }, {
    "id": 44,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 45,
    "text": "function(sent, m)\r\n    io.write(\"checking \", m.headers.title, \": \")\r\n    for i = 1, #sent do\r\n        local s = sent[i]\r\n        if s.title == m.headers.title and s.count > 0 then\r\n            check_headers(s.headers, m.headers)\r\n            check_body(s.body, m.body)\r\n            s.count = s.count - 1\r\n            print(\"ok\")\r\n            return\r\n        end\r\n    end\r\n    fail(\"not found\")\r\nend",
    "type": "function"
  }, {
    "id": 46,
    "text": "io.write(\"checking \", m.headers.title, \": \")",
    "type": "statement:functioncall"
  }, {
    "id": 47,
    "text": "for i = 1, #sent do\r\n        local s = sent[i]\r\n        if s.title == m.headers.title and s.count > 0 then\r\n            check_headers(s.headers, m.headers)\r\n            check_body(s.body, m.body)\r\n            s.count = s.count - 1\r\n            print(\"ok\")\r\n            return\r\n        end\r\n    end",
    "type": "statement:numericfor"
  }, {
    "id": 48,
    "text": "local s = sent[i]",
    "type": "statement:localassign"
  }, {
    "id": 49,
    "text": "if s.title == m.headers.title and s.count > 0 then\r\n            check_headers(s.headers, m.headers)\r\n            check_body(s.body, m.body)\r\n            s.count = s.count - 1\r\n            print(\"ok\")\r\n            return\r\n        end",
    "type": "statement:if"
  }, {
    "id": 50,
    "text": "check_headers(s.headers, m.headers)",
    "type": "statement:functioncall"
  }, {
    "id": 51,
    "text": "check_body(s.body, m.body)",
    "type": "statement:functioncall"
  }, {
    "id": 52,
    "text": "s.count = s.count - 1",
    "type": "statement:assign"
  }, {
    "id": 53,
    "text": "print(\"ok\")",
    "type": "statement:functioncall"
  }, {
    "id": 54,
    "text": "fail(\"not found\")",
    "type": "statement:functioncall"
  }, {
    "id": 55,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 56,
    "text": "function(sent, message)\r\n    if type(message.rcpt) == \"table\" then\r\n        message.count = #message.rcpt\r\n    else message.count = 1 end\r\n    message.headers = message.headers or {}\r\n    message.headers.title = message.title\r\n    table.insert(sent, message)\r\nend",
    "type": "function"
  }, {
    "id": 57,
    "text": "if type(message.rcpt) == \"table\" then\r\n        message.count = #message.rcpt\r\n    else message.count = 1 end",
    "type": "statement:if"
  }, {
    "id": 58,
    "text": "message.count = #message.rcpt",
    "type": "statement:assign"
  }, {
    "id": 59,
    "text": "message.count = 1",
    "type": "statement:assign"
  }, {
    "id": 60,
    "text": "message.headers = message.headers or {}",
    "type": "statement:assign"
  }, {
    "id": 61,
    "text": "message.headers.title = message.title",
    "type": "statement:assign"
  }, {
    "id": 62,
    "text": "table.insert(sent, message)",
    "type": "statement:functioncall"
  }, {
    "id": 63,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 64,
    "text": "function()\r\n    local time = socket.time()\r\n    return { time = time }\r\nend",
    "type": "function"
  }, {
    "id": 65,
    "text": "local time = socket.time()",
    "type": "statement:localassign"
  }, {
    "id": 66,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 67,
    "text": "function(sentinel, n)\r\n    local to\r\n    io.write(\"waiting for \", n, \" messages: \")\r\n    while 1 do\r\n        local mbox = parse(get())\r\n        if n == #mbox then break end\r\n        if socket.time() - sentinel.time > 50 then \r\n            to = 1 \r\n            break\r\n        end\r\n        socket.sleep(1)\r\n        io.write(\".\")\r\n        io.stdout:flush()\r\n    end\r\n    if to then fail(\"timeout\")\r\n    else print(\"ok\") end\r\nend",
    "type": "function"
  }, {
    "id": 68,
    "text": "local to",
    "type": "statement:localassign"
  }, {
    "id": 69,
    "text": "io.write(\"waiting for \", n, \" messages: \")",
    "type": "statement:functioncall"
  }, {
    "id": 70,
    "text": "while 1 do\r\n        local mbox = parse(get())\r\n        if n == #mbox then break end\r\n        if socket.time() - sentinel.time > 50 then \r\n            to = 1 \r\n            break\r\n        end\r\n        socket.sleep(1)\r\n        io.write(\".\")\r\n        io.stdout:flush()\r\n    end",
    "type": "statement:while"
  }, {
    "id": 71,
    "text": "local mbox = parse(get())",
    "type": "statement:localassign"
  }, {
    "id": 72,
    "text": "if n == #mbox then break end",
    "type": "statement:if"
  }, {
    "id": 73,
    "text": "if socket.time() - sentinel.time > 50 then \r\n            to = 1 \r\n            break\r\n        end",
    "type": "statement:if"
  }, {
    "id": 74,
    "text": "to = 1",
    "type": "statement:assign"
  }, {
    "id": 75,
    "text": "socket.sleep(1)",
    "type": "statement:functioncall"
  }, {
    "id": 76,
    "text": "io.write(\".\")",
    "type": "statement:functioncall"
  }, {
    "id": 77,
    "text": "io.stdout:flush()",
    "type": "statement:functioncall"
  }, {
    "id": 78,
    "text": "if to then fail(\"timeout\")\r\n    else print(\"ok\") end",
    "type": "statement:if"
  }, {
    "id": 79,
    "text": "fail(\"timeout\")",
    "type": "statement:functioncall"
  }, {
    "id": 80,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 81,
    "text": "",
    "type": "function container"
  }, {
    "id": 82,
    "text": "sleep",
    "type": "global function"
  }, {
    "id": 83,
    "text": "lower",
    "type": "global function"
  }, {
    "id": 84,
    "text": "format",
    "type": "global function"
  }, {
    "id": 85,
    "text": "gsub",
    "type": "global function"
  }, {
    "id": 86,
    "text": "insert",
    "type": "global function"
  }, {
    "id": 87,
    "text": "open",
    "type": "global function"
  }, {
    "id": 88,
    "text": "write",
    "type": "global function"
  }, {
    "id": 89,
    "text": "ipairs",
    "type": "global function"
  }, {
    "id": 90,
    "text": "parse",
    "type": "global function"
  }, {
    "id": 91,
    "text": "type",
    "type": "global function"
  }, {
    "id": 92,
    "text": "connect",
    "type": "global function"
  }, {
    "id": 93,
    "text": "exit",
    "type": "global function"
  }, {
    "id": 94,
    "text": "socket.smtp.mail",
    "type": "global function"
  }, {
    "id": 95,
    "text": "pairs",
    "type": "global function"
  }, {
    "id": 96,
    "text": "dofile",
    "type": "global function"
  }, {
    "id": 97,
    "text": "print",
    "type": "global function"
  }, {
    "id": 98,
    "text": "time",
    "type": "global function"
  }, {
    "id": 99,
    "text": "",
    "type": "variable container"
  }, {
    "id": 100,
    "text": "",
    "type": "require container"
  }, {
    "id": 101,
    "text": "",
    "type": "local variable"
  }, {
    "id": 102,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 103,
    "text": "",
    "type": "local variable"
  }, {
    "id": 104,
    "text": "",
    "type": "string"
  }, {
    "id": 105,
    "text": "",
    "type": "local variable"
  }, {
    "id": 106,
    "text": "",
    "type": "string"
  }, {
    "id": 107,
    "text": "",
    "type": "local variable"
  }, {
    "id": 108,
    "text": "",
    "type": "string"
  }, {
    "id": 109,
    "text": "",
    "type": "local variable"
  }, {
    "id": 110,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 111,
    "text": "",
    "type": "string"
  }, {
    "id": 112,
    "text": "",
    "type": "string"
  }, {
    "id": 113,
    "text": "",
    "type": "string"
  }, {
    "id": 114,
    "text": "",
    "type": "string"
  }, {
    "id": 115,
    "text": "",
    "type": "local variable"
  }, {
    "id": 116,
    "text": "",
    "type": "n/a"
  }, {
    "id": 117,
    "text": "",
    "type": "local variable"
  }, {
    "id": 118,
    "text": "",
    "type": "local variable"
  }, {
    "id": 119,
    "text": "",
    "type": "n/a"
  }, {
    "id": 120,
    "text": "",
    "type": "local variable"
  }, {
    "id": 121,
    "text": "",
    "type": "n/a"
  }, {
    "id": 122,
    "text": "",
    "type": "local variable"
  }, {
    "id": 123,
    "text": "",
    "type": "n/a"
  }, {
    "id": 124,
    "text": "",
    "type": "local variable"
  }, {
    "id": 125,
    "text": "",
    "type": "n/a"
  }, {
    "id": 126,
    "text": "",
    "type": "local variable"
  }, {
    "id": 127,
    "text": "",
    "type": "n/a"
  }, {
    "id": 128,
    "text": "",
    "type": "local variable"
  }, {
    "id": 129,
    "text": "",
    "type": "n/a"
  }, {
    "id": 130,
    "text": "",
    "type": "local variable"
  }, {
    "id": 131,
    "text": "",
    "type": "n/a"
  }, {
    "id": 132,
    "text": "",
    "type": "local variable"
  }, {
    "id": 133,
    "text": "",
    "type": "n/a"
  }, {
    "id": 134,
    "text": "",
    "type": "local variable"
  }, {
    "id": 135,
    "text": "",
    "type": "n/a"
  }, {
    "id": 136,
    "text": "",
    "type": "local variable"
  }, {
    "id": 137,
    "text": "",
    "type": "n/a"
  }, {
    "id": 138,
    "text": "",
    "type": "local variable"
  }, {
    "id": 139,
    "text": "",
    "type": "n/a"
  }, {
    "id": 140,
    "text": "",
    "type": "local variable"
  }, {
    "id": 141,
    "text": "",
    "type": "n/a"
  }, {
    "id": 142,
    "text": "",
    "type": "local variable"
  }, {
    "id": 143,
    "text": "",
    "type": "n/a"
  }, {
    "id": 144,
    "text": "",
    "type": "local variable"
  }, {
    "id": 145,
    "text": "",
    "type": "string"
  }, {
    "id": 146,
    "text": "",
    "type": "local variable"
  }, {
    "id": 147,
    "text": "",
    "type": "n/a"
  }, {
    "id": 148,
    "text": "",
    "type": "local variable"
  }, {
    "id": 149,
    "text": "",
    "type": "local variable"
  }, {
    "id": 150,
    "text": "",
    "type": "n/a"
  }, {
    "id": 151,
    "text": "",
    "type": "local variable"
  }, {
    "id": 152,
    "text": "",
    "type": "local variable"
  }, {
    "id": 153,
    "text": "",
    "type": "n/a"
  }, {
    "id": 154,
    "text": "",
    "type": "local variable"
  }, {
    "id": 155,
    "text": "",
    "type": "local variable"
  }, {
    "id": 156,
    "text": "",
    "type": "n/a"
  }, {
    "id": 157,
    "text": "",
    "type": "local variable"
  }, {
    "id": 158,
    "text": "",
    "type": "local variable"
  }, {
    "id": 159,
    "text": "",
    "type": "n/a"
  } ]
}