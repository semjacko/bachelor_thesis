{
  "_filename": "ex5.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luasocket/gem/ex5.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 6,
    "label": "has",
    "to": 7
  }, {
    "from": 6,
    "label": "has",
    "to": 8
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 6,
    "label": "has",
    "to": 3
  }, {
    "from": 5,
    "label": "has",
    "to": 3
  }, {
    "from": 5,
    "label": "has",
    "to": 3
  }, {
    "from": 5,
    "label": "has",
    "to": 10
  }, {
    "from": 11,
    "label": "has",
    "to": 3
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 13,
    "label": "has",
    "to": 7
  }, {
    "from": 13,
    "label": "has",
    "to": 8
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 13,
    "label": "has",
    "to": 3
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 5,
    "label": "calls",
    "to": 2
  }, {
    "from": 1,
    "label": "contains",
    "to": 15
  }, {
    "from": 15,
    "label": "declares",
    "to": 2
  }, {
    "from": 15,
    "label": "declares",
    "to": 5
  }, {
    "from": 15,
    "label": "declares",
    "to": 11
  }, {
    "from": 15,
    "label": "declares",
    "to": 13
  }, {
    "from": 1,
    "label": "contains",
    "to": 16
  }, {
    "from": 1,
    "label": "contains",
    "to": 17
  }, {
    "from": 18,
    "label": "contains",
    "to": 2
  }, {
    "from": 19,
    "label": "contains",
    "to": 2
  }, {
    "from": 20,
    "label": "contains",
    "to": 2
  }, {
    "from": 21,
    "label": "contains",
    "to": 2
  }, {
    "from": 22,
    "label": "contains",
    "to": 2
  }, {
    "from": 23,
    "label": "contains",
    "to": 2
  }, {
    "from": 18,
    "label": "contains",
    "to": 5
  }, {
    "from": 19,
    "label": "contains",
    "to": 5
  }, {
    "from": 20,
    "label": "contains",
    "to": 5
  }, {
    "from": 21,
    "label": "contains",
    "to": 5
  }, {
    "from": 22,
    "label": "contains",
    "to": 5
  }, {
    "from": 23,
    "label": "contains",
    "to": 5
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "ex5",
    "type": "module"
  }, {
    "id": 2,
    "text": "function source.empty(err)\r\n  return function()\r\n    return nil, err\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 4,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 5,
    "text": "function source.file(handle, io_err)\r\n  if handle then\r\n    return function()\r\n      local chunk = handle:read(20)\r\n      if not chunk then handle:close() end\r\n      return chunk\r\n    end\r\n  else return source.empty(io_err or \"unable to open file\") end\r\nend",
    "type": "function"
  }, {
    "id": 6,
    "text": "if handle then\r\n    return function()\r\n      local chunk = handle:read(20)\r\n      if not chunk then handle:close() end\r\n      return chunk\r\n    end\r\n  else return source.empty(io_err or \"unable to open file\") end",
    "type": "statement:if"
  }, {
    "id": 7,
    "text": "local chunk = handle:read(20)",
    "type": "statement:localassign"
  }, {
    "id": 8,
    "text": "if not chunk then handle:close() end",
    "type": "statement:if"
  }, {
    "id": 9,
    "text": "handle:close()",
    "type": "statement:functioncall"
  }, {
    "id": 10,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 11,
    "text": "function()\r\n    return nil, err\r\n  end",
    "type": "function"
  }, {
    "id": 12,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 13,
    "text": "function()\r\n      local chunk = handle:read(20)\r\n      if not chunk then handle:close() end\r\n      return chunk\r\n    end",
    "type": "function"
  }, {
    "id": 14,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 15,
    "text": "",
    "type": "function container"
  }, {
    "id": 16,
    "text": "",
    "type": "variable container"
  }, {
    "id": 17,
    "text": "",
    "type": "require container"
  }, {
    "id": 18,
    "text": "",
    "type": "global variable"
  }, {
    "id": 19,
    "text": "",
    "type": "global variable"
  }, {
    "id": 20,
    "text": "",
    "type": "global variable"
  }, {
    "id": 21,
    "text": "",
    "type": "global variable"
  }, {
    "id": 22,
    "text": "",
    "type": "global variable"
  }, {
    "id": 23,
    "text": "",
    "type": "local variable"
  } ]
}