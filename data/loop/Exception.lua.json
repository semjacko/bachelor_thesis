{
  "_filename": "Exception.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/loop/lua/loop/object/Exception.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 2
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 6,
    "label": "has",
    "to": 7
  }, {
    "from": 6,
    "label": "has",
    "to": 8
  }, {
    "from": 4,
    "label": "has",
    "to": 9
  }, {
    "from": 4,
    "label": "has",
    "to": 10
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 11,
    "label": "has",
    "to": 14
  }, {
    "from": 14,
    "label": "has",
    "to": 15
  }, {
    "from": 11,
    "label": "has",
    "to": 9
  }, {
    "from": 11,
    "label": "has",
    "to": 16
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 17,
    "label": "has",
    "to": 19
  }, {
    "from": 19,
    "label": "has",
    "to": 20
  }, {
    "from": 19,
    "label": "has",
    "to": 21
  }, {
    "from": 17,
    "label": "has",
    "to": 22
  }, {
    "from": 22,
    "label": "has",
    "to": 23
  }, {
    "from": 22,
    "label": "has",
    "to": 24
  }, {
    "from": 17,
    "label": "has",
    "to": 9
  }, {
    "from": 17,
    "label": "has",
    "to": 25
  }, {
    "from": 4,
    "label": "calls",
    "to": 30
  }, {
    "from": 4,
    "label": "calls",
    "to": 30
  }, {
    "from": 17,
    "label": "calls",
    "to": 28
  }, {
    "from": 26,
    "label": "calls",
    "to": 29
  }, {
    "from": 4,
    "label": "calls",
    "to": 27
  }, {
    "from": 11,
    "label": "calls",
    "to": 32
  }, {
    "from": 11,
    "label": "calls",
    "to": 32
  }, {
    "from": 11,
    "label": "calls",
    "to": 32
  }, {
    "from": 11,
    "label": "calls",
    "to": 32
  }, {
    "from": 26,
    "label": "calls",
    "to": 31
  }, {
    "from": 26,
    "label": "calls",
    "to": 31
  }, {
    "from": 2,
    "label": "contains",
    "to": 26
  }, {
    "from": 26,
    "label": "declares",
    "to": 4
  }, {
    "from": 26,
    "label": "declares",
    "to": 11
  }, {
    "from": 26,
    "label": "declares",
    "to": 17
  }, {
    "from": 2,
    "label": "contains",
    "to": 33
  }, {
    "from": 2,
    "label": "contains",
    "to": 34
  }, {
    "from": 33,
    "label": "initializes",
    "to": 35
  }, {
    "from": 35,
    "label": "assigns",
    "to": 36
  }, {
    "from": 33,
    "label": "initializes",
    "to": 37
  }, {
    "from": 37,
    "label": "assigns",
    "to": 38
  }, {
    "from": 33,
    "label": "initializes",
    "to": 39
  }, {
    "from": 39,
    "label": "assigns",
    "to": 40
  }, {
    "from": 34,
    "label": "initializes",
    "to": 41
  }, {
    "from": 41,
    "label": "requires",
    "to": 3
  }, {
    "from": 34,
    "label": "initializes",
    "to": 42
  }, {
    "from": 42,
    "label": "requires",
    "to": 1
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "base",
    "type": "module"
  }, {
    "id": 2,
    "text": "Exception",
    "type": "module"
  }, {
    "id": 3,
    "text": "table",
    "type": "module"
  }, {
    "id": 4,
    "text": "function __init(class, object)\r\n\tif traceback then\r\n\t\tif not object then\r\n\t\t\tobject = { traceback = traceback() }\r\n\t\telseif object.traceback == nil then\r\n\t\t\tobject.traceback = traceback()\r\n\t\tend\r\n\tend\r\n\treturn oo.rawnew(class, object)\r\nend",
    "type": "function"
  }, {
    "id": 5,
    "text": "if traceback then\r\n\t\tif not object then\r\n\t\t\tobject = { traceback = traceback() }\r\n\t\telseif object.traceback == nil then\r\n\t\t\tobject.traceback = traceback()\r\n\t\tend\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 6,
    "text": "if not object then\r\n\t\t\tobject = { traceback = traceback() }\r\n\t\telseif object.traceback == nil then\r\n\t\t\tobject.traceback = traceback()\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 7,
    "text": "object = { traceback = traceback() }",
    "type": "statement:assign"
  }, {
    "id": 8,
    "text": "object.traceback = traceback()",
    "type": "statement:assign"
  }, {
    "id": 9,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 10,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 11,
    "text": "function __concat(op1, op2)\r\n\tif type(op1) == \"table\" and type(op1.__tostring) == \"function\" then\r\n\t\top1 = op1:__tostring()\r\n\tend\r\n\tif type(op2) == \"table\" and type(op2.__tostring) == \"function\" then\r\n\t\top2 = op2:__tostring()\r\n\tend\r\n\treturn op1..op2\r\nend",
    "type": "function"
  }, {
    "id": 12,
    "text": "if type(op1) == \"table\" and type(op1.__tostring) == \"function\" then\r\n\t\top1 = op1:__tostring()\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 13,
    "text": "op1 = op1:__tostring()",
    "type": "statement:assign"
  }, {
    "id": 14,
    "text": "if type(op2) == \"table\" and type(op2.__tostring) == \"function\" then\r\n\t\top2 = op2:__tostring()\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 15,
    "text": "op2 = op2:__tostring()",
    "type": "statement:assign"
  }, {
    "id": 16,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 17,
    "text": "function __tostring(self)\r\n\tlocal message = { self[1] or self._NAME or \"Exception\",\" raised\" }\r\n\tif self.message then\r\n\t\tmessage[#message + 1] = \": \"\r\n\t\tmessage[#message + 1] = self.message\r\n\tend\r\n\tif self.traceback then\r\n\t\tmessage[#message + 1] = \"\\n\"\r\n\t\tmessage[#message + 1] = self.traceback\r\n\tend\r\n\treturn table.concat(message)\r\nend",
    "type": "function"
  }, {
    "id": 18,
    "text": "local message = { self[1] or self._NAME or \"Exception\",\" raised\" }",
    "type": "statement:localassign"
  }, {
    "id": 19,
    "text": "if self.message then\r\n\t\tmessage[#message + 1] = \": \"\r\n\t\tmessage[#message + 1] = self.message\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 20,
    "text": "message[#message + 1] = \": \"",
    "type": "statement:assign"
  }, {
    "id": 21,
    "text": "message[#message + 1] = self.message",
    "type": "statement:assign"
  }, {
    "id": 22,
    "text": "if self.traceback then\r\n\t\tmessage[#message + 1] = \"\\n\"\r\n\t\tmessage[#message + 1] = self.traceback\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 23,
    "text": "message[#message + 1] = \"\\n\"",
    "type": "statement:assign"
  }, {
    "id": 24,
    "text": "message[#message + 1] = self.traceback",
    "type": "statement:assign"
  }, {
    "id": 25,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 26,
    "text": "",
    "type": "function container"
  }, {
    "id": 27,
    "text": "rawnew",
    "type": "global function"
  }, {
    "id": 28,
    "text": "concat",
    "type": "global function"
  }, {
    "id": 29,
    "text": "module",
    "type": "global function"
  }, {
    "id": 30,
    "text": "traceback",
    "type": "global function"
  }, {
    "id": 31,
    "text": "require",
    "type": "global function"
  }, {
    "id": 32,
    "text": "type",
    "type": "global function"
  }, {
    "id": 33,
    "text": "",
    "type": "variable container"
  }, {
    "id": 34,
    "text": "",
    "type": "require container"
  }, {
    "id": 35,
    "text": "",
    "type": "local variable"
  }, {
    "id": 36,
    "text": "",
    "type": "n/a"
  }, {
    "id": 37,
    "text": "",
    "type": "local variable"
  }, {
    "id": 38,
    "text": "",
    "type": "n/a"
  }, {
    "id": 39,
    "text": "",
    "type": "local variable"
  }, {
    "id": 40,
    "text": "",
    "type": "n/a"
  }, {
    "id": 41,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 42,
    "text": "",
    "type": "require local variable"
  } ]
}