{
  "_filename": "staticmodule.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luafish/lib/luafish/staticmodule.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 4
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 5,
    "label": "has",
    "to": 8
  }, {
    "from": 5,
    "label": "has",
    "to": 9
  }, {
    "from": 5,
    "label": "has",
    "to": 10
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 11
  }, {
    "from": 12,
    "label": "has",
    "to": 7
  }, {
    "from": 12,
    "label": "has",
    "to": 8
  }, {
    "from": 12,
    "label": "has",
    "to": 9
  }, {
    "from": 12,
    "label": "has",
    "to": 10
  }, {
    "from": 12,
    "label": "has",
    "to": 6
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 5,
    "label": "calls",
    "to": 16
  }, {
    "from": 5,
    "label": "calls",
    "to": 21
  }, {
    "from": 5,
    "label": "calls",
    "to": 19
  }, {
    "from": 5,
    "label": "calls",
    "to": 18
  }, {
    "from": 5,
    "label": "calls",
    "to": 15
  }, {
    "from": 14,
    "label": "calls",
    "to": 20
  }, {
    "from": 14,
    "label": "calls",
    "to": 20
  }, {
    "from": 14,
    "label": "calls",
    "to": 20
  }, {
    "from": 5,
    "label": "calls",
    "to": 22
  }, {
    "from": 5,
    "label": "calls",
    "to": 17
  }, {
    "from": 4,
    "label": "contains",
    "to": 14
  }, {
    "from": 14,
    "label": "declares",
    "to": 5
  }, {
    "from": 14,
    "label": "declares",
    "to": 12
  }, {
    "from": 23,
    "label": "requires",
    "to": 4
  }, {
    "from": 23,
    "label": "requires",
    "to": 4
  }, {
    "from": 4,
    "label": "contains",
    "to": 24
  }, {
    "from": 4,
    "label": "contains",
    "to": 25
  }, {
    "from": 25,
    "label": "initializes",
    "to": 26
  }, {
    "from": 26,
    "label": "requires",
    "to": 2
  }, {
    "from": 25,
    "label": "initializes",
    "to": 27
  }, {
    "from": 27,
    "label": "requires",
    "to": 1
  }, {
    "from": 25,
    "label": "initializes",
    "to": 28
  }, {
    "from": 28,
    "label": "requires",
    "to": 3
  }, {
    "from": 4,
    "label": "provides",
    "to": 29
  }, {
    "from": 5,
    "label": "represents",
    "to": 30
  }, {
    "from": 29,
    "label": "provides",
    "to": 30
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "macro",
    "type": "module"
  }, {
    "id": 2,
    "text": "parser",
    "type": "module"
  }, {
    "id": 3,
    "text": "serializer",
    "type": "module"
  }, {
    "id": 4,
    "text": "staticmodule",
    "type": "module"
  }, {
    "id": 5,
    "text": "local function runtime(vars)\r\n  return function(code)\r\n    local ast = LuaFishParser():parse(code)\r\n    LuaFishMacro.resolve_lexical_scope(ast)\r\n    LuaFishMacro.process_macros(ast, {MACRO = vars})\r\n    local f = assert(loadstring(LuaFishSerializer.ast_to_code(ast)))\r\n    return f()\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 6,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 7,
    "text": "local ast = LuaFishParser():parse(code)",
    "type": "statement:localassign"
  }, {
    "id": 8,
    "text": "LuaFishMacro.resolve_lexical_scope(ast)",
    "type": "statement:functioncall"
  }, {
    "id": 9,
    "text": "LuaFishMacro.process_macros(ast, {MACRO = vars})",
    "type": "statement:functioncall"
  }, {
    "id": 10,
    "text": "local f = assert(loadstring(LuaFishSerializer.ast_to_code(ast)))",
    "type": "statement:localassign"
  }, {
    "id": 11,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 12,
    "text": "function(code)\r\n    local ast = LuaFishParser():parse(code)\r\n    LuaFishMacro.resolve_lexical_scope(ast)\r\n    LuaFishMacro.process_macros(ast, {MACRO = vars})\r\n    local f = assert(loadstring(LuaFishSerializer.ast_to_code(ast)))\r\n    return f()\r\n  end",
    "type": "function"
  }, {
    "id": 13,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 14,
    "text": "",
    "type": "function container"
  }, {
    "id": 15,
    "text": "ast_to_code",
    "type": "global function"
  }, {
    "id": 16,
    "text": "resolve_lexical_scope",
    "type": "global function"
  }, {
    "id": 17,
    "text": "process_macros",
    "type": "global function"
  }, {
    "id": 18,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 19,
    "text": "loadstring",
    "type": "global function"
  }, {
    "id": 20,
    "text": "require",
    "type": "global function"
  }, {
    "id": 21,
    "text": "f",
    "type": "global function"
  }, {
    "id": 22,
    "text": "LuaFishParser",
    "type": "global function"
  }, {
    "id": 23,
    "text": "",
    "type": "global variable"
  }, {
    "id": 24,
    "text": "",
    "type": "variable container"
  }, {
    "id": 25,
    "text": "",
    "type": "require container"
  }, {
    "id": 26,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 27,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 28,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 29,
    "text": "",
    "type": "interface container"
  }, {
    "id": 30,
    "text": "",
    "type": "interface"
  } ]
}