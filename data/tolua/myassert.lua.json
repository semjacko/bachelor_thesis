{
  "_filename": "myassert.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/tolua/src/tests/myassert.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "calls",
    "to": 8
  }, {
    "from": 2,
    "label": "calls",
    "to": 9
  }, {
    "from": 1,
    "label": "contains",
    "to": 7
  }, {
    "from": 7,
    "label": "declares",
    "to": 2
  }, {
    "from": 1,
    "label": "contains",
    "to": 10
  }, {
    "from": 1,
    "label": "contains",
    "to": 11
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "myassert",
    "type": "module"
  }, {
    "id": 2,
    "text": "function assert (status,msg) \r\n   if not status then \r\n      print(\"ERROR: \" .. (msg or \"assertion failed\")) error() \r\n   end \r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "if not status then \r\n      print(\"ERROR: \" .. (msg or \"assertion failed\")) error() \r\n   end",
    "type": "statement:if"
  }, {
    "id": 4,
    "text": "print(\"ERROR: \" .. (msg or \"assertion failed\"))",
    "type": "statement:functioncall"
  }, {
    "id": 5,
    "text": "error()",
    "type": "statement:functioncall"
  }, {
    "id": 6,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 7,
    "text": "",
    "type": "function container"
  }, {
    "id": 8,
    "text": "error",
    "type": "global function"
  }, {
    "id": 9,
    "text": "print",
    "type": "global function"
  }, {
    "id": 10,
    "text": "",
    "type": "variable container"
  }, {
    "id": 11,
    "text": "",
    "type": "require container"
  } ]
}