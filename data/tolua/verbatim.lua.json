{
  "_filename": "verbatim.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/tolua/src/bin/lua/verbatim.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 6,
    "label": "has",
    "to": 7
  }, {
    "from": 7,
    "label": "has",
    "to": 4
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 6,
    "label": "has",
    "to": 9
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 11,
    "label": "has",
    "to": 4
  }, {
    "from": 10,
    "label": "has",
    "to": 12
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 13,
    "label": "has",
    "to": 15
  }, {
    "from": 13,
    "label": "has",
    "to": 16
  }, {
    "from": 13,
    "label": "has",
    "to": 17
  }, {
    "from": 18,
    "label": "has",
    "to": 19
  }, {
    "from": 18,
    "label": "has",
    "to": 20
  }, {
    "from": 18,
    "label": "has",
    "to": 21
  }, {
    "from": 18,
    "label": "has",
    "to": 22
  }, {
    "from": 23,
    "label": "has",
    "to": 24
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 24,
    "label": "has",
    "to": 26
  }, {
    "from": 23,
    "label": "has",
    "to": 21
  }, {
    "from": 23,
    "label": "has",
    "to": 27
  }, {
    "from": 28,
    "label": "calls",
    "to": 33
  }, {
    "from": 18,
    "label": "calls",
    "to": 33
  }, {
    "from": 2,
    "label": "calls",
    "to": 31
  }, {
    "from": 6,
    "label": "calls",
    "to": 31
  }, {
    "from": 6,
    "label": "calls",
    "to": 31
  }, {
    "from": 10,
    "label": "calls",
    "to": 31
  }, {
    "from": 18,
    "label": "calls",
    "to": 29
  }, {
    "from": 13,
    "label": "calls",
    "to": 34
  }, {
    "from": 13,
    "label": "calls",
    "to": 34
  }, {
    "from": 13,
    "label": "calls",
    "to": 34
  }, {
    "from": 23,
    "label": "calls",
    "to": 18
  }, {
    "from": 6,
    "label": "calls",
    "to": 32
  }, {
    "from": 10,
    "label": "calls",
    "to": 32
  }, {
    "from": 23,
    "label": "calls",
    "to": 30
  }, {
    "from": 23,
    "label": "calls",
    "to": 30
  }, {
    "from": 1,
    "label": "contains",
    "to": 28
  }, {
    "from": 28,
    "label": "declares",
    "to": 2
  }, {
    "from": 28,
    "label": "declares",
    "to": 6
  }, {
    "from": 28,
    "label": "declares",
    "to": 10
  }, {
    "from": 28,
    "label": "declares",
    "to": 13
  }, {
    "from": 28,
    "label": "declares",
    "to": 18
  }, {
    "from": 28,
    "label": "declares",
    "to": 23
  }, {
    "from": 1,
    "label": "contains",
    "to": 35
  }, {
    "from": 1,
    "label": "contains",
    "to": 36
  }, {
    "from": 35,
    "label": "initializes",
    "to": 37
  }, {
    "from": 37,
    "label": "assigns",
    "to": 38
  }, {
    "from": 35,
    "label": "initializes",
    "to": 39
  }, {
    "from": 39,
    "label": "assigns",
    "to": 40
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "verbatim",
    "type": "module"
  }, {
    "id": 2,
    "text": "function classVerbatim:preamble ()\r\n if self.cond == '' then\r\n  write(self.line)\r\n end\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "if self.cond == '' then\r\n  write(self.line)\r\n end",
    "type": "statement:if"
  }, {
    "id": 4,
    "text": "write(self.line)",
    "type": "statement:functioncall"
  }, {
    "id": 5,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 6,
    "text": "function classVerbatim:supcode ()\r\n if strfind(self.cond,'s') then\r\n  write(self.line)\r\n  write('\\n')\r\n end\r\nend",
    "type": "function"
  }, {
    "id": 7,
    "text": "if strfind(self.cond,'s') then\r\n  write(self.line)\r\n  write('\\n')\r\n end",
    "type": "statement:if"
  }, {
    "id": 8,
    "text": "write('\\n')",
    "type": "statement:functioncall"
  }, {
    "id": 9,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 10,
    "text": "function classVerbatim:register ()\r\n if strfind(self.cond,'r') then\r\n  write(self.line)\r\n end\r\nend",
    "type": "function"
  }, {
    "id": 11,
    "text": "if strfind(self.cond,'r') then\r\n  write(self.line)\r\n end",
    "type": "statement:if"
  }, {
    "id": 12,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 13,
    "text": "function classVerbatim:print (ident,close)\r\n print(ident..\"Verbatim{\")\r\n print(ident..\" line = '\"..self.line..\"',\")\r\n print(ident..\"}\"..close)\r\nend",
    "type": "function"
  }, {
    "id": 14,
    "text": "print(ident..\"Verbatim{\")",
    "type": "statement:functioncall"
  }, {
    "id": 15,
    "text": "print(ident..\" line = '\"..self.line..\"',\")",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "print(ident..\"}\"..close)",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 18,
    "text": "function _Verbatim (t)\r\n setmetatable(t,classVerbatim)\r\n append(t)\r\n return t\r\nend",
    "type": "function"
  }, {
    "id": 19,
    "text": "setmetatable(t,classVerbatim)",
    "type": "statement:functioncall"
  }, {
    "id": 20,
    "text": "append(t)",
    "type": "statement:functioncall"
  }, {
    "id": 21,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 22,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 23,
    "text": "function Verbatim (l,cond)\r\n if strsub(l,1,1) == '$' then\r\n  cond = 'sr'       -- generates in both suport and register fragments\r\n  l = strsub(l,2)\r\n end\r\n return _Verbatim {\r\n  line = l,\r\n  cond = cond or '',\r\n }\r\nend",
    "type": "function"
  }, {
    "id": 24,
    "text": "if strsub(l,1,1) == '$' then\r\n  cond = 'sr'       -- generates in both suport and register fragments\r\n  l = strsub(l,2)\r\n end",
    "type": "statement:if"
  }, {
    "id": 25,
    "text": "cond = 'sr'",
    "type": "statement:assign"
  }, {
    "id": 26,
    "text": "l = strsub(l,2)",
    "type": "statement:assign"
  }, {
    "id": 27,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 28,
    "text": "",
    "type": "function container"
  }, {
    "id": 29,
    "text": "append",
    "type": "global function"
  }, {
    "id": 30,
    "text": "strsub",
    "type": "global function"
  }, {
    "id": 31,
    "text": "write",
    "type": "global function"
  }, {
    "id": 32,
    "text": "strfind",
    "type": "global function"
  }, {
    "id": 33,
    "text": "setmetatable",
    "type": "global function"
  }, {
    "id": 34,
    "text": "print",
    "type": "global function"
  }, {
    "id": 35,
    "text": "",
    "type": "variable container"
  }, {
    "id": 36,
    "text": "",
    "type": "require container"
  }, {
    "id": 37,
    "text": "",
    "type": "global variable"
  }, {
    "id": 38,
    "text": "",
    "type": "n/a"
  }, {
    "id": 39,
    "text": "",
    "type": "global variable"
  }, {
    "id": 40,
    "text": "",
    "type": "n/a"
  } ]
}