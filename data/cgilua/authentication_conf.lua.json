{
  "_filename": "authentication_conf.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/cgilua/examples/authentication_conf.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 6,
    "label": "has",
    "to": 7
  }, {
    "from": 6,
    "label": "has",
    "to": 8
  }, {
    "from": 6,
    "label": "has",
    "to": 9
  }, {
    "from": 6,
    "label": "has",
    "to": 10
  }, {
    "from": 6,
    "label": "has",
    "to": 11
  }, {
    "from": 6,
    "label": "has",
    "to": 12
  }, {
    "from": 6,
    "label": "has",
    "to": 13
  }, {
    "from": 6,
    "label": "has",
    "to": 14
  }, {
    "from": 6,
    "label": "has",
    "to": 15
  }, {
    "from": 6,
    "label": "has",
    "to": 16
  }, {
    "from": 6,
    "label": "has",
    "to": 17
  }, {
    "from": 6,
    "label": "has",
    "to": 12
  }, {
    "from": 6,
    "label": "has",
    "to": 12
  }, {
    "from": 6,
    "label": "has",
    "to": 18
  }, {
    "from": 19,
    "label": "has",
    "to": 12
  }, {
    "from": 19,
    "label": "has",
    "to": 20
  }, {
    "from": 21,
    "label": "has",
    "to": 22
  }, {
    "from": 21,
    "label": "has",
    "to": 23
  }, {
    "from": 21,
    "label": "has",
    "to": 24
  }, {
    "from": 21,
    "label": "has",
    "to": 12
  }, {
    "from": 21,
    "label": "has",
    "to": 12
  }, {
    "from": 21,
    "label": "has",
    "to": 25
  }, {
    "from": 26,
    "label": "has",
    "to": 27
  }, {
    "from": 26,
    "label": "has",
    "to": 12
  }, {
    "from": 26,
    "label": "has",
    "to": 12
  }, {
    "from": 26,
    "label": "has",
    "to": 28
  }, {
    "from": 29,
    "label": "calls",
    "to": 32
  }, {
    "from": 29,
    "label": "calls",
    "to": 30
  }, {
    "from": 29,
    "label": "calls",
    "to": 33
  }, {
    "from": 29,
    "label": "calls",
    "to": 35
  }, {
    "from": 29,
    "label": "calls",
    "to": 35
  }, {
    "from": 29,
    "label": "calls",
    "to": 35
  }, {
    "from": 29,
    "label": "calls",
    "to": 35
  }, {
    "from": 29,
    "label": "calls",
    "to": 34
  }, {
    "from": 1,
    "label": "contains",
    "to": 29
  }, {
    "from": 29,
    "label": "declares",
    "to": 6
  }, {
    "from": 29,
    "label": "declares",
    "to": 19
  }, {
    "from": 29,
    "label": "declares",
    "to": 21
  }, {
    "from": 29,
    "label": "declares",
    "to": 26
  }, {
    "from": 1,
    "label": "contains",
    "to": 36
  }, {
    "from": 1,
    "label": "contains",
    "to": 37
  }, {
    "from": 36,
    "label": "initializes",
    "to": 38
  }, {
    "from": 38,
    "label": "assigns",
    "to": 39
  }, {
    "from": 39,
    "label": "assigns",
    "to": 40
  }, {
    "from": 40,
    "label": "assigns",
    "to": 41
  }, {
    "from": 39,
    "label": "assigns",
    "to": 42
  }, {
    "from": 42,
    "label": "assigns",
    "to": 43
  }, {
    "from": 39,
    "label": "assigns",
    "to": 44
  }, {
    "from": 44,
    "label": "assigns",
    "to": 45
  }, {
    "from": 39,
    "label": "assigns",
    "to": 46
  }, {
    "from": 46,
    "label": "assigns",
    "to": 47
  }, {
    "from": 39,
    "label": "assigns",
    "to": 48
  }, {
    "from": 48,
    "label": "assigns",
    "to": 49
  }, {
    "from": 36,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "assigns",
    "to": 51
  }, {
    "from": 51,
    "label": "assigns",
    "to": 52
  }, {
    "from": 52,
    "label": "assigns",
    "to": 53
  }, {
    "from": 51,
    "label": "assigns",
    "to": 54
  }, {
    "from": 54,
    "label": "assigns",
    "to": 55
  }, {
    "from": 51,
    "label": "assigns",
    "to": 56
  }, {
    "from": 56,
    "label": "assigns",
    "to": 57
  }, {
    "from": 51,
    "label": "assigns",
    "to": 58
  }, {
    "from": 58,
    "label": "assigns",
    "to": 59
  }, {
    "from": 36,
    "label": "initializes",
    "to": 60
  }, {
    "from": 60,
    "label": "assigns",
    "to": 61
  }, {
    "from": 36,
    "label": "initializes",
    "to": 62
  }, {
    "from": 62,
    "label": "assigns",
    "to": 63
  }, {
    "from": 36,
    "label": "initializes",
    "to": 64
  }, {
    "from": 64,
    "label": "assigns",
    "to": 65
  }, {
    "from": 36,
    "label": "initializes",
    "to": 66
  }, {
    "from": 66,
    "label": "assigns",
    "to": 67
  }, {
    "from": 36,
    "label": "initializes",
    "to": 68
  }, {
    "from": 68,
    "label": "assigns",
    "to": 69
  }, {
    "from": 36,
    "label": "initializes",
    "to": 70
  }, {
    "from": 70,
    "label": "assigns",
    "to": 71
  }, {
    "from": 36,
    "label": "initializes",
    "to": 72
  }, {
    "from": 72,
    "label": "assigns",
    "to": 73
  }, {
    "from": 37,
    "label": "initializes",
    "to": 74
  }, {
    "from": 74,
    "label": "requires",
    "to": 2
  }, {
    "from": 37,
    "label": "initializes",
    "to": 74
  }, {
    "from": 74,
    "label": "requires",
    "to": 75
  }, {
    "from": 37,
    "label": "initializes",
    "to": 74
  }, {
    "from": 74,
    "label": "requires",
    "to": 76
  }, {
    "from": 77,
    "label": "initializes",
    "to": 74
  }, {
    "from": 74,
    "label": "requires",
    "to": 3
  }, {
    "from": 78,
    "label": "initializes",
    "to": 74
  }, {
    "from": 74,
    "label": "requires",
    "to": 5
  }, {
    "from": 79,
    "label": "initializes",
    "to": 74
  }, {
    "from": 74,
    "label": "requires",
    "to": 31
  }, {
    "from": 80,
    "label": "initializes",
    "to": 74
  }, {
    "from": 74,
    "label": "requires",
    "to": 4
  }, {
    "from": 80,
    "label": "initializes",
    "to": 74
  }, {
    "from": 74,
    "label": "requires",
    "to": 5
  }, {
    "from": 81,
    "label": "initializes",
    "to": 74
  }, {
    "from": 74,
    "label": "requires",
    "to": 82
  }, {
    "from": 83,
    "label": "initializes",
    "to": 74
  }, {
    "from": 74,
    "label": "requires",
    "to": 84
  }, {
    "from": 85,
    "label": "initializes",
    "to": 74
  }, {
    "from": 74,
    "label": "requires",
    "to": 86
  }, {
    "from": 87,
    "label": "initializes",
    "to": 74
  }, {
    "from": 74,
    "label": "requires",
    "to": 84
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "authentication_conf",
    "type": "module"
  }, {
    "id": 2,
    "text": "authentication",
    "type": "module"
  }, {
    "id": 3,
    "text": "cookies",
    "type": "module"
  }, {
    "id": 4,
    "text": "readuntil",
    "type": "module"
  }, {
    "id": 5,
    "text": "urlcode",
    "type": "module"
  }, {
    "id": 6,
    "text": "function(username,userpasswd)\r\n    local simpledatabase = options.simpledatabase\r\n    require (\"luasql.\"..simpledatabase.driver)\r\n\r\n    local query = \"SELECT \"..simpledatabase.pass_field..\" FROM \"..simpledatabase.users_table..\" WHERE \"..simpledatabase.user_name_field..\" = '\"..username..\"'\"\r\n    local conn,err = luasql[simpledatabase.driver]:connect(simpledatabase.sourcename,simpledatabase.dbusername,simpledatabase.dbpassword)\r\n    if conn == nil then\r\n        return false, err\r\n    end\r\n    local cur=conn:execute(query)\r\n    local row=cur:fetch()\r\n    local retpasswd=row[simpledatabase.pass_field]\r\n    local passwdhash=simpledatabase.passwd_hash_function(userpasswd)\r\n    if retpasswd==passwdhash then\r\n        return true\r\n    end\r\n    return false, \"Username and password do not match.\"\r\nend",
    "type": "function"
  }, {
    "id": 7,
    "text": "local simpledatabase = options.simpledatabase",
    "type": "statement:localassign"
  }, {
    "id": 8,
    "text": "require (\"luasql.\"..simpledatabase.driver)",
    "type": "statement:functioncall"
  }, {
    "id": 9,
    "text": "local query = \"SELECT \"..simpledatabase.pass_field..\" FROM \"..simpledatabase.users_table..\" WHERE \"..simpledatabase.user_name_field..\" = '\"..username..\"'\"",
    "type": "statement:localassign"
  }, {
    "id": 10,
    "text": "local conn,err = luasql[simpledatabase.driver]:connect(simpledatabase.sourcename,simpledatabase.dbusername,simpledatabase.dbpassword)",
    "type": "statement:localassign"
  }, {
    "id": 11,
    "text": "if conn == nil then\r\n        return false, err\r\n    end",
    "type": "statement:if"
  }, {
    "id": 12,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 13,
    "text": "local cur=conn:execute(query)",
    "type": "statement:localassign"
  }, {
    "id": 14,
    "text": "local row=cur:fetch()",
    "type": "statement:localassign"
  }, {
    "id": 15,
    "text": "local retpasswd=row[simpledatabase.pass_field]",
    "type": "statement:localassign"
  }, {
    "id": 16,
    "text": "local passwdhash=simpledatabase.passwd_hash_function(userpasswd)",
    "type": "statement:localassign"
  }, {
    "id": 17,
    "text": "if retpasswd==passwdhash then\r\n        return true\r\n    end",
    "type": "statement:if"
  }, {
    "id": 18,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 19,
    "text": "function ()\r\n\treturn cgilua.servervariable (options.webserver.user_env_var)\r\nend",
    "type": "function"
  }, {
    "id": 20,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 21,
    "text": "function(username,userpasswd)\r\n    require\"lualdap\"\r\n\tlocal ld,err = options.lualdap.open_simple (options.ldap.host,\r\n                options.ldap.RDNatributeName..\"=\"..username..\",\"..options.ldap.baseDN,\r\n\t\t        userpasswd, options.ldap.usetls)\r\n\tif ld~=nil then\r\n\t\treturn true\r\n\telse\r\n\t    return false, err\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 22,
    "text": "require\"lualdap\"",
    "type": "statement:functioncall"
  }, {
    "id": 23,
    "text": "local ld,err = options.lualdap.open_simple (options.ldap.host,\r\n                options.ldap.RDNatributeName..\"=\"..username..\",\"..options.ldap.baseDN,\r\n\t\t        userpasswd, options.ldap.usetls)",
    "type": "statement:localassign"
  }, {
    "id": 24,
    "text": "if ld~=nil then\r\n\t\treturn true\r\n\telse\r\n\t    return false, err\r\n    end",
    "type": "statement:if"
  }, {
    "id": 25,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 26,
    "text": "function(username,userpasswd)\r\n    if (username == \"admin\") and (userpasswd == \"admin\") then\r\n        return true\r\n    else\r\n        return false, \"Wrong user/password combination!\"\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 27,
    "text": "if (username == \"admin\") and (userpasswd == \"admin\") then\r\n        return true\r\n    else\r\n        return false, \"Wrong user/password combination!\"\r\n    end",
    "type": "statement:if"
  }, {
    "id": 28,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 29,
    "text": "",
    "type": "function container"
  }, {
    "id": 30,
    "text": "function configure(options, methods)\r\n    configuration = options\r\n    local method = methods[options.method] or {}\r\n    \r\n    if method.check then\r\n        _check = method.check\r\n    end\r\n    if method.username then\r\n        username = method.username\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 31,
    "text": "lfs",
    "type": "module"
  }, {
    "id": 32,
    "text": "options.lualdap.open_simple",
    "type": "global function"
  }, {
    "id": 33,
    "text": "servervariable",
    "type": "global function"
  }, {
    "id": 34,
    "text": "passwd_hash_function",
    "type": "global function"
  }, {
    "id": 35,
    "text": "require",
    "type": "global function"
  }, {
    "id": 36,
    "text": "",
    "type": "variable container"
  }, {
    "id": 37,
    "text": "",
    "type": "require container"
  }, {
    "id": 38,
    "text": "",
    "type": "local variable"
  }, {
    "id": 39,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 40,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 41,
    "text": "",
    "type": "string"
  }, {
    "id": 42,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 43,
    "text": "",
    "type": "string"
  }, {
    "id": 44,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 45,
    "text": "",
    "type": "string"
  }, {
    "id": 46,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 47,
    "text": "",
    "type": "string"
  }, {
    "id": 48,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 49,
    "text": "",
    "type": "string"
  }, {
    "id": 50,
    "text": "",
    "type": "local variable"
  }, {
    "id": 51,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 52,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 53,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 54,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 55,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 56,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 57,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 58,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 59,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 60,
    "text": "",
    "type": "global variable"
  }, {
    "id": 61,
    "text": "",
    "type": "n/a"
  }, {
    "id": 62,
    "text": "",
    "type": "global variable"
  }, {
    "id": 63,
    "text": "",
    "type": "n/a"
  }, {
    "id": 64,
    "text": "",
    "type": "global variable"
  }, {
    "id": 65,
    "text": "",
    "type": "n/a"
  }, {
    "id": 66,
    "text": "",
    "type": "global variable"
  }, {
    "id": 67,
    "text": "",
    "type": "n/a"
  }, {
    "id": 68,
    "text": "",
    "type": "global variable"
  }, {
    "id": 69,
    "text": "",
    "type": "n/a"
  }, {
    "id": 70,
    "text": "",
    "type": "global variable"
  }, {
    "id": 71,
    "text": "",
    "type": "n/a"
  }, {
    "id": 72,
    "text": "",
    "type": "global variable"
  }, {
    "id": 73,
    "text": "",
    "type": "n/a"
  }, {
    "id": 74,
    "text": "",
    "type": "global variable"
  }, {
    "id": 75,
    "text": "driver)",
    "type": "module"
  }, {
    "id": 76,
    "text": "lualdap",
    "type": "module"
  }, {
    "id": 77,
    "text": "",
    "type": "require container"
  }, {
    "id": 78,
    "text": "",
    "type": "require container"
  }, {
    "id": 79,
    "text": "",
    "type": "require container"
  }, {
    "id": 80,
    "text": "",
    "type": "require container"
  }, {
    "id": 81,
    "text": "",
    "type": "require container"
  }, {
    "id": 82,
    "text": "luasocket",
    "type": "module"
  }, {
    "id": 83,
    "text": "",
    "type": "require container"
  }, {
    "id": 84,
    "text": "postgres",
    "type": "module"
  }, {
    "id": 85,
    "text": "",
    "type": "require container"
  }, {
    "id": 86,
    "text": "htk",
    "type": "module"
  }, {
    "id": 87,
    "text": "",
    "type": "require container"
  } ]
}