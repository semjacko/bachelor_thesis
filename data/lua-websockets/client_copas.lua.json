{
  "_filename": "client_copas.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/lua-websockets/src/websocket/client_copas.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 4,
    "label": "has",
    "to": 6
  }, {
    "from": 4,
    "label": "has",
    "to": 7
  }, {
    "from": 4,
    "label": "has",
    "to": 8
  }, {
    "from": 9,
    "label": "has",
    "to": 7
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 11,
    "label": "has",
    "to": 7
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 13,
    "label": "has",
    "to": 15
  }, {
    "from": 13,
    "label": "has",
    "to": 16
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 17,
    "label": "has",
    "to": 19
  }, {
    "from": 17,
    "label": "has",
    "to": 20
  }, {
    "from": 17,
    "label": "has",
    "to": 21
  }, {
    "from": 21,
    "label": "has",
    "to": 22
  }, {
    "from": 17,
    "label": "has",
    "to": 23
  }, {
    "from": 17,
    "label": "has",
    "to": 24
  }, {
    "from": 24,
    "label": "has",
    "to": 5
  }, {
    "from": 24,
    "label": "has",
    "to": 6
  }, {
    "from": 24,
    "label": "has",
    "to": 7
  }, {
    "from": 17,
    "label": "has",
    "to": 25
  }, {
    "from": 25,
    "label": "has",
    "to": 7
  }, {
    "from": 17,
    "label": "has",
    "to": 26
  }, {
    "from": 26,
    "label": "has",
    "to": 7
  }, {
    "from": 17,
    "label": "has",
    "to": 27
  }, {
    "from": 27,
    "label": "has",
    "to": 14
  }, {
    "from": 27,
    "label": "has",
    "to": 15
  }, {
    "from": 17,
    "label": "has",
    "to": 28
  }, {
    "from": 17,
    "label": "has",
    "to": 29
  }, {
    "from": 17,
    "label": "has",
    "to": 7
  }, {
    "from": 17,
    "label": "has",
    "to": 30
  }, {
    "from": 31,
    "label": "calls",
    "to": 32
  }, {
    "from": 31,
    "label": "calls",
    "to": 34
  }, {
    "from": 31,
    "label": "calls",
    "to": 38
  }, {
    "from": 31,
    "label": "calls",
    "to": 39
  }, {
    "from": 31,
    "label": "calls",
    "to": 39
  }, {
    "from": 31,
    "label": "calls",
    "to": 39
  }, {
    "from": 31,
    "label": "calls",
    "to": 39
  }, {
    "from": 31,
    "label": "calls",
    "to": 37
  }, {
    "from": 31,
    "label": "calls",
    "to": 36
  }, {
    "from": 1,
    "label": "contains",
    "to": 31
  }, {
    "from": 31,
    "label": "declares",
    "to": 4
  }, {
    "from": 31,
    "label": "declares",
    "to": 9
  }, {
    "from": 31,
    "label": "declares",
    "to": 11
  }, {
    "from": 31,
    "label": "declares",
    "to": 13
  }, {
    "from": 31,
    "label": "declares",
    "to": 17
  }, {
    "from": 1,
    "label": "contains",
    "to": 41
  }, {
    "from": 1,
    "label": "contains",
    "to": 42
  }, {
    "from": 41,
    "label": "initializes",
    "to": 43
  }, {
    "from": 43,
    "label": "assigns",
    "to": 44
  }, {
    "from": 42,
    "label": "initializes",
    "to": 45
  }, {
    "from": 45,
    "label": "requires",
    "to": 35
  }, {
    "from": 42,
    "label": "initializes",
    "to": 46
  }, {
    "from": 46,
    "label": "requires",
    "to": 2
  }, {
    "from": 42,
    "label": "initializes",
    "to": 47
  }, {
    "from": 47,
    "label": "requires",
    "to": 3
  }, {
    "from": 42,
    "label": "initializes",
    "to": 48
  }, {
    "from": 48,
    "label": "requires",
    "to": 33
  }, {
    "from": 1,
    "label": "provides",
    "to": 49
  }, {
    "from": 40,
    "label": "represents",
    "to": 50
  }, {
    "from": 49,
    "label": "provides",
    "to": 50
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "client_copas",
    "type": "module"
  }, {
    "id": 2,
    "text": "sync",
    "type": "module"
  }, {
    "id": 3,
    "text": "tools",
    "type": "module"
  }, {
    "id": 4,
    "text": "function(self,host,port)\r\n    local _,err = copas.connect(sock,host,port)\r\n    if err and err ~= 'already connected' then\r\n      return nil,err\r\n    end\r\n  end",
    "type": "function"
  }, {
    "id": 5,
    "text": "local _,err = copas.connect(sock,host,port)",
    "type": "statement:localassign"
  }, {
    "id": 6,
    "text": "if err and err ~= 'already connected' then\r\n      return nil,err\r\n    end",
    "type": "statement:if"
  }, {
    "id": 7,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 8,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 9,
    "text": "function(self,...)\r\n    return copas.send(sock,...)\r\n  end",
    "type": "function"
  }, {
    "id": 10,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 11,
    "text": "function(self,...)\r\n    return copas.receive(sock,...)\r\n  end",
    "type": "function"
  }, {
    "id": 12,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 13,
    "text": "function(self)\r\n    sock:shutdown()\r\n    sock:close()\r\n  end",
    "type": "function"
  }, {
    "id": 14,
    "text": "sock:shutdown()",
    "type": "statement:functioncall"
  }, {
    "id": 15,
    "text": "sock:close()",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 17,
    "text": "function(ws)\r\n  ws = ws or {}\r\n  local copas = require'copas'\r\n  local sock = socket.tcp()\r\n  if ws.timeout ~= nil then\r\n    sock:settimeout(ws.timeout)\r\n  end\r\n  \r\n  local self = {}\r\n  \r\n  self.sock_connect = function(self,host,port)\r\n    local _,err = copas.connect(sock,host,port)\r\n    if err and err ~= 'already connected' then\r\n      return nil,err\r\n    end\r\n  end\r\n  \r\n  self.sock_send = function(self,...)\r\n    return copas.send(sock,...)\r\n  end\r\n  \r\n  self.sock_receive = function(self,...)\r\n    return copas.receive(sock,...)\r\n  end\r\n  \r\n  self.sock_close = function(self)\r\n    sock:shutdown()\r\n    sock:close()\r\n  end\r\n  \r\n  self = sync.extend(self)\r\n  self.state = 'CLOSED'\r\n  return self\r\nend",
    "type": "function"
  }, {
    "id": 18,
    "text": "ws = ws or {}",
    "type": "statement:assign"
  }, {
    "id": 19,
    "text": "local copas = require'copas'",
    "type": "statement:localassign"
  }, {
    "id": 20,
    "text": "local sock = socket.tcp()",
    "type": "statement:localassign"
  }, {
    "id": 21,
    "text": "if ws.timeout ~= nil then\r\n    sock:settimeout(ws.timeout)\r\n  end",
    "type": "statement:if"
  }, {
    "id": 22,
    "text": "sock:settimeout(ws.timeout)",
    "type": "statement:functioncall"
  }, {
    "id": 23,
    "text": "local self = {}",
    "type": "statement:localassign"
  }, {
    "id": 24,
    "text": "self.sock_connect = function(self,host,port)\r\n    local _,err = copas.connect(sock,host,port)\r\n    if err and err ~= 'already connected' then\r\n      return nil,err\r\n    end\r\n  end",
    "type": "statement:assign"
  }, {
    "id": 25,
    "text": "self.sock_send = function(self,...)\r\n    return copas.send(sock,...)\r\n  end",
    "type": "statement:assign"
  }, {
    "id": 26,
    "text": "self.sock_receive = function(self,...)\r\n    return copas.receive(sock,...)\r\n  end",
    "type": "statement:assign"
  }, {
    "id": 27,
    "text": "self.sock_close = function(self)\r\n    sock:shutdown()\r\n    sock:close()\r\n  end",
    "type": "statement:assign"
  }, {
    "id": 28,
    "text": "self = sync.extend(self)",
    "type": "statement:assign"
  }, {
    "id": 29,
    "text": "self.state = 'CLOSED'",
    "type": "statement:assign"
  }, {
    "id": 30,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 31,
    "text": "",
    "type": "function container"
  }, {
    "id": 32,
    "text": "function(obj)\r\n  assert(obj.sock_send)\r\n  assert(obj.sock_receive)\r\n  assert(obj.sock_close)\r\n  obj.receive = receive\r\n  obj.send = send\r\n  obj.close = close\r\n  obj.connect = connect\r\n  return obj\r\nend",
    "type": "function"
  }, {
    "id": 33,
    "text": "copas",
    "type": "module"
  }, {
    "id": 34,
    "text": "receive",
    "type": "global function"
  }, {
    "id": 35,
    "text": "socket",
    "type": "module"
  }, {
    "id": 36,
    "text": "tcp",
    "type": "global function"
  }, {
    "id": 37,
    "text": "connect",
    "type": "global function"
  }, {
    "id": 38,
    "text": "send",
    "type": "global function"
  }, {
    "id": 39,
    "text": "require",
    "type": "global function"
  }, {
    "id": 40,
    "text": "",
    "type": "local variable"
  }, {
    "id": 41,
    "text": "",
    "type": "variable container"
  }, {
    "id": 42,
    "text": "",
    "type": "require container"
  }, {
    "id": 43,
    "text": "",
    "type": "local variable"
  }, {
    "id": 44,
    "text": "",
    "type": "n/a"
  }, {
    "id": 45,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 46,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 47,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 48,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 49,
    "text": "",
    "type": "interface container"
  }, {
    "id": 50,
    "text": "",
    "type": "interface"
  } ]
}