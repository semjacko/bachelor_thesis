{
  "_filename": "debug.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luadoc/src/luadoc/doclet/debug.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 5,
    "label": "has",
    "to": 9
  }, {
    "from": 5,
    "label": "has",
    "to": 10
  }, {
    "from": 5,
    "label": "has",
    "to": 11
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 5,
    "label": "has",
    "to": 9
  }, {
    "from": 5,
    "label": "has",
    "to": 13
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 5,
    "label": "has",
    "to": 9
  }, {
    "from": 5,
    "label": "has",
    "to": 15
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 5,
    "label": "has",
    "to": 9
  }, {
    "from": 5,
    "label": "has",
    "to": 17
  }, {
    "from": 17,
    "label": "has",
    "to": 16
  }, {
    "from": 5,
    "label": "has",
    "to": 9
  }, {
    "from": 5,
    "label": "has",
    "to": 18
  }, {
    "from": 5,
    "label": "has",
    "to": 19
  }, {
    "from": 19,
    "label": "has",
    "to": 16
  }, {
    "from": 5,
    "label": "has",
    "to": 20
  }, {
    "from": 21,
    "label": "calls",
    "to": 25
  }, {
    "from": 2,
    "label": "calls",
    "to": 22
  }, {
    "from": 5,
    "label": "calls",
    "to": 26
  }, {
    "from": 5,
    "label": "calls",
    "to": 26
  }, {
    "from": 5,
    "label": "calls",
    "to": 26
  }, {
    "from": 5,
    "label": "calls",
    "to": 26
  }, {
    "from": 2,
    "label": "calls",
    "to": 24
  }, {
    "from": 5,
    "label": "calls",
    "to": 24
  }, {
    "from": 5,
    "label": "calls",
    "to": 24
  }, {
    "from": 5,
    "label": "calls",
    "to": 24
  }, {
    "from": 5,
    "label": "calls",
    "to": 24
  }, {
    "from": 5,
    "label": "calls",
    "to": 24
  }, {
    "from": 5,
    "label": "calls",
    "to": 24
  }, {
    "from": 5,
    "label": "calls",
    "to": 24
  }, {
    "from": 5,
    "label": "calls",
    "to": 24
  }, {
    "from": 5,
    "label": "calls",
    "to": 24
  }, {
    "from": 5,
    "label": "calls",
    "to": 23
  }, {
    "from": 5,
    "label": "calls",
    "to": 23
  }, {
    "from": 5,
    "label": "calls",
    "to": 2
  }, {
    "from": 5,
    "label": "calls",
    "to": 2
  }, {
    "from": 5,
    "label": "calls",
    "to": 2
  }, {
    "from": 5,
    "label": "calls",
    "to": 2
  }, {
    "from": 5,
    "label": "calls",
    "to": 2
  }, {
    "from": 1,
    "label": "contains",
    "to": 21
  }, {
    "from": 21,
    "label": "declares",
    "to": 2
  }, {
    "from": 21,
    "label": "declares",
    "to": 5
  }, {
    "from": 1,
    "label": "contains",
    "to": 27
  }, {
    "from": 1,
    "label": "contains",
    "to": 28
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "debug",
    "type": "module"
  }, {
    "id": 2,
    "text": "function printline()\r\n\tprint(string.rep('-', 79))\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "print(string.rep('-', 79))",
    "type": "statement:functioncall"
  }, {
    "id": 4,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 5,
    "text": "function start (doc)\r\n\tprint(\"Files:\")\r\n\tfor _, filepath in ipairs(doc.files) do\r\n\t\tprint('\\t', filepath)\r\n\tend\r\n\tprintline()\r\n\r\n\tprint(\"Modules:\")\r\n\tfor _, modulename in ipairs(doc.modules) do\r\n\t\tprint('\\t', modulename)\r\n\tend\r\n\tprintline()\r\n\t\r\n\tfor i, v in pairs(doc.files) do\r\n\t\tprint('\\t', i, v)\r\n\tend\r\n\tprintline()\r\n\tfor i, v in pairs(doc.files[doc.files[1]]) do\r\n\t\tprint(i, v)\r\n\tend\r\n\t\r\n\tprintline()\r\n\tfor i, v in pairs(doc.files[doc.files[1]].doc[1]) do\r\n\t\tprint(i, v)\r\n\tend\r\n\tprintline()\r\n\tprint(\"Params\")\r\n\tfor i, v in pairs(doc.files[doc.files[1]].doc[1].param) do\r\n\t\tprint(i, v)\r\n\tend\r\nend",
    "type": "function"
  }, {
    "id": 6,
    "text": "print(\"Files:\")",
    "type": "statement:functioncall"
  }, {
    "id": 7,
    "text": "for _, filepath in ipairs(doc.files) do\r\n\t\tprint('\\t', filepath)\r\n\tend",
    "type": "statement:genericfor"
  }, {
    "id": 8,
    "text": "print('\\t', filepath)",
    "type": "statement:functioncall"
  }, {
    "id": 9,
    "text": "printline()",
    "type": "statement:functioncall"
  }, {
    "id": 10,
    "text": "print(\"Modules:\")",
    "type": "statement:functioncall"
  }, {
    "id": 11,
    "text": "for _, modulename in ipairs(doc.modules) do\r\n\t\tprint('\\t', modulename)\r\n\tend",
    "type": "statement:genericfor"
  }, {
    "id": 12,
    "text": "print('\\t', modulename)",
    "type": "statement:functioncall"
  }, {
    "id": 13,
    "text": "for i, v in pairs(doc.files) do\r\n\t\tprint('\\t', i, v)\r\n\tend",
    "type": "statement:genericfor"
  }, {
    "id": 14,
    "text": "print('\\t', i, v)",
    "type": "statement:functioncall"
  }, {
    "id": 15,
    "text": "for i, v in pairs(doc.files[doc.files[1]]) do\r\n\t\tprint(i, v)\r\n\tend",
    "type": "statement:genericfor"
  }, {
    "id": 16,
    "text": "print(i, v)",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "for i, v in pairs(doc.files[doc.files[1]].doc[1]) do\r\n\t\tprint(i, v)\r\n\tend",
    "type": "statement:genericfor"
  }, {
    "id": 18,
    "text": "print(\"Params\")",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "for i, v in pairs(doc.files[doc.files[1]].doc[1].param) do\r\n\t\tprint(i, v)\r\n\tend",
    "type": "statement:genericfor"
  }, {
    "id": 20,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 21,
    "text": "",
    "type": "function container"
  }, {
    "id": 22,
    "text": "rep",
    "type": "global function"
  }, {
    "id": 23,
    "text": "ipairs",
    "type": "global function"
  }, {
    "id": 24,
    "text": "print",
    "type": "global function"
  }, {
    "id": 25,
    "text": "module",
    "type": "global function"
  }, {
    "id": 26,
    "text": "pairs",
    "type": "global function"
  }, {
    "id": 27,
    "text": "",
    "type": "variable container"
  }, {
    "id": 28,
    "text": "",
    "type": "require container"
  } ]
}