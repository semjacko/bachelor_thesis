{
  "_filename": "dpool.lua",
  "_isShebang": true,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/luasys/test/thread/dpool.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 6,
    "label": "has",
    "to": 7
  }, {
    "from": 6,
    "label": "has",
    "to": 8
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 10,
    "label": "has",
    "to": 12
  }, {
    "from": 10,
    "label": "has",
    "to": 13
  }, {
    "from": 10,
    "label": "has",
    "to": 14
  }, {
    "from": 9,
    "label": "has",
    "to": 15
  }, {
    "from": 16,
    "label": "has",
    "to": 17
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 17,
    "label": "has",
    "to": 19
  }, {
    "from": 16,
    "label": "has",
    "to": 20
  }, {
    "from": 21,
    "label": "calls",
    "to": 29
  }, {
    "from": 2,
    "label": "calls",
    "to": 25
  }, {
    "from": 6,
    "label": "calls",
    "to": 25
  }, {
    "from": 9,
    "label": "calls",
    "to": 25
  }, {
    "from": 21,
    "label": "calls",
    "to": 26
  }, {
    "from": 21,
    "label": "calls",
    "to": 24
  }, {
    "from": 21,
    "label": "calls",
    "to": 24
  }, {
    "from": 21,
    "label": "calls",
    "to": 24
  }, {
    "from": 21,
    "label": "calls",
    "to": 24
  }, {
    "from": 21,
    "label": "calls",
    "to": 24
  }, {
    "from": 21,
    "label": "calls",
    "to": 24
  }, {
    "from": 21,
    "label": "calls",
    "to": 23
  }, {
    "from": 21,
    "label": "calls",
    "to": 28
  }, {
    "from": 21,
    "label": "calls",
    "to": 28
  }, {
    "from": 21,
    "label": "calls",
    "to": 30
  }, {
    "from": 9,
    "label": "calls",
    "to": 27
  }, {
    "from": 16,
    "label": "calls",
    "to": 27
  }, {
    "from": 1,
    "label": "contains",
    "to": 21
  }, {
    "from": 21,
    "label": "declares",
    "to": 2
  }, {
    "from": 21,
    "label": "declares",
    "to": 6
  }, {
    "from": 21,
    "label": "declares",
    "to": 9
  }, {
    "from": 21,
    "label": "declares",
    "to": 16
  }, {
    "from": 1,
    "label": "contains",
    "to": 31
  }, {
    "from": 1,
    "label": "contains",
    "to": 32
  }, {
    "from": 32,
    "label": "initializes",
    "to": 33
  }, {
    "from": 33,
    "label": "requires",
    "to": 22
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "dpool",
    "type": "module"
  }, {
    "id": 2,
    "text": "local function on_full(dpool, ...)\r\n\tprint(\"put on full>\", ...)\r\n\treturn ...\r\n    end",
    "type": "function"
  }, {
    "id": 3,
    "text": "print(\"put on full>\", ...)",
    "type": "statement:functioncall"
  }, {
    "id": 4,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 5,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 6,
    "text": "local function on_empty()\r\n\tprint(\"get on empty>\")\r\n    end",
    "type": "function"
  }, {
    "id": 7,
    "text": "print(\"get on empty>\")",
    "type": "statement:functioncall"
  }, {
    "id": 8,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 9,
    "text": "local function consumer()\r\n\twhile true do\r\n\t    local i, s = dpool:get(200)\r\n\t    if not i then break end\r\n\t    print(i, s)\r\n\t    thread.sleep(200)\r\n\tend\r\n    end",
    "type": "function"
  }, {
    "id": 10,
    "text": "while true do\r\n\t    local i, s = dpool:get(200)\r\n\t    if not i then break end\r\n\t    print(i, s)\r\n\t    thread.sleep(200)\r\n\tend",
    "type": "statement:while"
  }, {
    "id": 11,
    "text": "local i, s = dpool:get(200)",
    "type": "statement:localassign"
  }, {
    "id": 12,
    "text": "if not i then break end",
    "type": "statement:if"
  }, {
    "id": 13,
    "text": "print(i, s)",
    "type": "statement:functioncall"
  }, {
    "id": 14,
    "text": "thread.sleep(200)",
    "type": "statement:functioncall"
  }, {
    "id": 15,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 16,
    "text": "local function producer()\r\n\tfor i = 1, 10 do\r\n\t    dpool:put(i, (i % 2 == 0) and \"even\" or \"odd\")\r\n\t    thread.sleep(100)\r\n\tend\r\n    end",
    "type": "function"
  }, {
    "id": 17,
    "text": "for i = 1, 10 do\r\n\t    dpool:put(i, (i % 2 == 0) and \"even\" or \"odd\")\r\n\t    thread.sleep(100)\r\n\tend",
    "type": "statement:numericfor"
  }, {
    "id": 18,
    "text": "dpool:put(i, (i % 2 == 0) and \"even\" or \"odd\")",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "thread.sleep(100)",
    "type": "statement:functioncall"
  }, {
    "id": 20,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 21,
    "text": "",
    "type": "function container"
  }, {
    "id": 22,
    "text": "sys",
    "type": "module"
  }, {
    "id": 23,
    "text": "event_queue",
    "type": "global function"
  }, {
    "id": 24,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 25,
    "text": "print",
    "type": "global function"
  }, {
    "id": 26,
    "text": "data_pool",
    "type": "global function"
  }, {
    "id": 27,
    "text": "sleep",
    "type": "global function"
  }, {
    "id": 28,
    "text": "run",
    "type": "global function"
  }, {
    "id": 29,
    "text": "require",
    "type": "global function"
  }, {
    "id": 30,
    "text": "init",
    "type": "global function"
  }, {
    "id": 31,
    "text": "",
    "type": "variable container"
  }, {
    "id": 32,
    "text": "",
    "type": "require container"
  }, {
    "id": 33,
    "text": "",
    "type": "require local variable"
  } ]
}