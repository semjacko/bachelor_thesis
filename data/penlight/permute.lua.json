{
  "_filename": "permute.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/penlight/lua/pl/permute.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 7,
    "label": "has",
    "to": 9
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 4,
    "label": "has",
    "to": 10
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 11,
    "label": "has",
    "to": 13
  }, {
    "from": 11,
    "label": "has",
    "to": 14
  }, {
    "from": 14,
    "label": "has",
    "to": 15
  }, {
    "from": 11,
    "label": "has",
    "to": 16
  }, {
    "from": 11,
    "label": "has",
    "to": 17
  }, {
    "from": 11,
    "label": "has",
    "to": 16
  }, {
    "from": 11,
    "label": "has",
    "to": 18
  }, {
    "from": 19,
    "label": "has",
    "to": 12
  }, {
    "from": 19,
    "label": "has",
    "to": 20
  }, {
    "from": 19,
    "label": "has",
    "to": 13
  }, {
    "from": 19,
    "label": "has",
    "to": 21
  }, {
    "from": 21,
    "label": "has",
    "to": 22
  }, {
    "from": 19,
    "label": "has",
    "to": 16
  }, {
    "from": 19,
    "label": "has",
    "to": 23
  }, {
    "from": 24,
    "label": "has",
    "to": 15
  }, {
    "from": 25,
    "label": "has",
    "to": 17
  }, {
    "from": 25,
    "label": "has",
    "to": 16
  }, {
    "from": 25,
    "label": "has",
    "to": 26
  }, {
    "from": 27,
    "label": "has",
    "to": 22
  }, {
    "from": 28,
    "label": "calls",
    "to": 31
  }, {
    "from": 28,
    "label": "calls",
    "to": 31
  }, {
    "from": 28,
    "label": "calls",
    "to": 4
  }, {
    "from": 11,
    "label": "calls",
    "to": 4
  }, {
    "from": 19,
    "label": "calls",
    "to": 4
  }, {
    "from": 11,
    "label": "calls",
    "to": 30
  }, {
    "from": 11,
    "label": "calls",
    "to": 34
  }, {
    "from": 19,
    "label": "calls",
    "to": 29
  }, {
    "from": 28,
    "label": "calls",
    "to": 32
  }, {
    "from": 11,
    "label": "calls",
    "to": 35
  }, {
    "from": 19,
    "label": "calls",
    "to": 35
  }, {
    "from": 19,
    "label": "calls",
    "to": 33
  }, {
    "from": 1,
    "label": "contains",
    "to": 28
  }, {
    "from": 28,
    "label": "declares",
    "to": 4
  }, {
    "from": 28,
    "label": "declares",
    "to": 11
  }, {
    "from": 28,
    "label": "declares",
    "to": 19
  }, {
    "from": 28,
    "label": "declares",
    "to": 24
  }, {
    "from": 28,
    "label": "declares",
    "to": 25
  }, {
    "from": 28,
    "label": "declares",
    "to": 27
  }, {
    "from": 1,
    "label": "contains",
    "to": 36
  }, {
    "from": 1,
    "label": "contains",
    "to": 37
  }, {
    "from": 36,
    "label": "initializes",
    "to": 38
  }, {
    "from": 38,
    "label": "assigns",
    "to": 39
  }, {
    "from": 36,
    "label": "initializes",
    "to": 40
  }, {
    "from": 40,
    "label": "assigns",
    "to": 41
  }, {
    "from": 36,
    "label": "initializes",
    "to": 42
  }, {
    "from": 42,
    "label": "assigns",
    "to": 43
  }, {
    "from": 36,
    "label": "initializes",
    "to": 44
  }, {
    "from": 44,
    "label": "assigns",
    "to": 45
  }, {
    "from": 36,
    "label": "initializes",
    "to": 46
  }, {
    "from": 46,
    "label": "assigns",
    "to": 47
  }, {
    "from": 36,
    "label": "initializes",
    "to": 48
  }, {
    "from": 48,
    "label": "assigns",
    "to": 49
  }, {
    "from": 36,
    "label": "initializes",
    "to": 50
  }, {
    "from": 36,
    "label": "initializes",
    "to": 51
  }, {
    "from": 51,
    "label": "assigns",
    "to": 52
  }, {
    "from": 37,
    "label": "initializes",
    "to": 53
  }, {
    "from": 53,
    "label": "requires",
    "to": 2
  }, {
    "from": 37,
    "label": "initializes",
    "to": 54
  }, {
    "from": 54,
    "label": "requires",
    "to": 3
  }, {
    "from": 1,
    "label": "provides",
    "to": 55
  }, {
    "from": 48,
    "label": "represents",
    "to": 56
  }, {
    "from": 55,
    "label": "provides",
    "to": 56
  }, {
    "from": 57,
    "label": "requires",
    "to": 1
  }, {
    "from": 48,
    "label": "contains",
    "to": 11
  }, {
    "from": 48,
    "label": "contains",
    "to": 19
  }, {
    "from": 21,
    "label": "hasArgument",
    "to": 27
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "permute",
    "type": "module"
  }, {
    "id": 2,
    "text": "tablex",
    "type": "module"
  }, {
    "id": 3,
    "text": "utils",
    "type": "module"
  }, {
    "id": 4,
    "text": "function (a, n, fn)\r\n  if n == 0 then\r\n    fn(a)\r\n  else\r\n    for i=1,n do\r\n      -- put i-th element as the last one\r\n      a[n], a[i] = a[i], a[n]\r\n\r\n      -- generate all permutations of the other elements\r\n      permgen(a, n - 1, fn)\r\n\r\n      -- restore i-th element\r\n      a[n], a[i] = a[i], a[n]\r\n\r\n    end\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 5,
    "text": "if n == 0 then\r\n    fn(a)\r\n  else\r\n    for i=1,n do\r\n      -- put i-th element as the last one\r\n      a[n], a[i] = a[i], a[n]\r\n\r\n      -- generate all permutations of the other elements\r\n      permgen(a, n - 1, fn)\r\n\r\n      -- restore i-th element\r\n      a[n], a[i] = a[i], a[n]\r\n\r\n    end\r\n  end",
    "type": "statement:if"
  }, {
    "id": 6,
    "text": "fn(a)",
    "type": "statement:functioncall"
  }, {
    "id": 7,
    "text": "for i=1,n do\r\n      -- put i-th element as the last one\r\n      a[n], a[i] = a[i], a[n]\r\n\r\n      -- generate all permutations of the other elements\r\n      permgen(a, n - 1, fn)\r\n\r\n      -- restore i-th element\r\n      a[n], a[i] = a[i], a[n]\r\n\r\n    end",
    "type": "statement:numericfor"
  }, {
    "id": 8,
    "text": "a[n], a[i] = a[i], a[n]",
    "type": "statement:assign"
  }, {
    "id": 9,
    "text": "permgen(a, n - 1, fn)",
    "type": "statement:functioncall"
  }, {
    "id": 10,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 11,
    "text": "function permute.iter (a)\r\n    assert_arg(1,a,'table')\r\n    local n = #a\r\n    local co = coroutine.create(function () permgen(a, n, coroutine.yield) end)\r\n    return function ()   -- iterator\r\n        local code, res = resume(co)\r\n        return res\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 12,
    "text": "assert_arg(1,a,'table')",
    "type": "statement:functioncall"
  }, {
    "id": 13,
    "text": "local n = #a",
    "type": "statement:localassign"
  }, {
    "id": 14,
    "text": "local co = coroutine.create(function () permgen(a, n, coroutine.yield) end)",
    "type": "statement:localassign"
  }, {
    "id": 15,
    "text": "permgen(a, n, coroutine.yield)",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 17,
    "text": "local code, res = resume(co)",
    "type": "statement:localassign"
  }, {
    "id": 18,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 19,
    "text": "function permute.table (a)\r\n    assert_arg(1,a,'table')\r\n    local res = {}\r\n    local n = #a\r\n    permgen(a,n,function(t) append(res,copy(t)) end)\r\n    return res\r\nend",
    "type": "function"
  }, {
    "id": 20,
    "text": "local res = {}",
    "type": "statement:localassign"
  }, {
    "id": 21,
    "text": "permgen(a,n,function(t) append(res,copy(t)) end)",
    "type": "statement:functioncall"
  }, {
    "id": 22,
    "text": "append(res,copy(t))",
    "type": "statement:functioncall"
  }, {
    "id": 23,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 24,
    "text": "function () permgen(a, n, coroutine.yield) end",
    "type": "function"
  }, {
    "id": 25,
    "text": "function ()   -- iterator\r\n        local code, res = resume(co)\r\n        return res\r\n    end",
    "type": "function"
  }, {
    "id": 26,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 27,
    "text": "function(t) append(res,copy(t)) end",
    "type": "function"
  }, {
    "id": 28,
    "text": "",
    "type": "function container"
  }, {
    "id": 29,
    "text": "append",
    "type": "global function"
  }, {
    "id": 30,
    "text": "resume",
    "type": "global function"
  }, {
    "id": 31,
    "text": "require",
    "type": "global function"
  }, {
    "id": 32,
    "text": "fn",
    "type": "global function"
  }, {
    "id": 33,
    "text": "copy",
    "type": "global function"
  }, {
    "id": 34,
    "text": "create",
    "type": "global function"
  }, {
    "id": 35,
    "text": "assert_arg",
    "type": "global function"
  }, {
    "id": 36,
    "text": "",
    "type": "variable container"
  }, {
    "id": 37,
    "text": "",
    "type": "require container"
  }, {
    "id": 38,
    "text": "",
    "type": "local variable"
  }, {
    "id": 39,
    "text": "",
    "type": "n/a"
  }, {
    "id": 40,
    "text": "",
    "type": "local variable"
  }, {
    "id": 41,
    "text": "",
    "type": "n/a"
  }, {
    "id": 42,
    "text": "",
    "type": "local variable"
  }, {
    "id": 43,
    "text": "",
    "type": "n/a"
  }, {
    "id": 44,
    "text": "",
    "type": "local variable"
  }, {
    "id": 45,
    "text": "",
    "type": "n/a"
  }, {
    "id": 46,
    "text": "",
    "type": "local variable"
  }, {
    "id": 47,
    "text": "",
    "type": "n/a"
  }, {
    "id": 48,
    "text": "",
    "type": "local variable"
  }, {
    "id": 49,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 50,
    "text": "",
    "type": "local variable"
  }, {
    "id": 51,
    "text": "",
    "type": "global variable"
  }, {
    "id": 52,
    "text": "",
    "type": "n/a"
  }, {
    "id": 53,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 54,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 55,
    "text": "",
    "type": "interface container"
  }, {
    "id": 56,
    "text": "",
    "type": "interface"
  }, {
    "id": 57,
    "text": "",
    "type": "require local variable"
  } ]
}