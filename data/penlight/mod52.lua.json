{
  "_filename": "mod52.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/penlight/tests/lua/mod52.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 3
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 4,
    "label": "has",
    "to": 7
  }, {
    "from": 4,
    "label": "has",
    "to": 8
  }, {
    "from": 9,
    "label": "has",
    "to": 6
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 4,
    "label": "calls",
    "to": 18
  }, {
    "from": 11,
    "label": "calls",
    "to": 15
  }, {
    "from": 11,
    "label": "calls",
    "to": 17
  }, {
    "from": 11,
    "label": "calls",
    "to": 17
  }, {
    "from": 11,
    "label": "calls",
    "to": 16
  }, {
    "from": 4,
    "label": "calls",
    "to": 16
  }, {
    "from": 4,
    "label": "calls",
    "to": 14
  }, {
    "from": 4,
    "label": "calls",
    "to": 19
  }, {
    "from": 3,
    "label": "contains",
    "to": 11
  }, {
    "from": 11,
    "label": "declares",
    "to": 4
  }, {
    "from": 11,
    "label": "declares",
    "to": 9
  }, {
    "from": 12,
    "label": "calls",
    "to": 4
  }, {
    "from": 13,
    "label": "calls",
    "to": 4
  }, {
    "from": 3,
    "label": "contains",
    "to": 21
  }, {
    "from": 3,
    "label": "contains",
    "to": 22
  }, {
    "from": 21,
    "label": "initializes",
    "to": 23
  }, {
    "from": 23,
    "label": "assigns",
    "to": 24
  }, {
    "from": 21,
    "label": "initializes",
    "to": 25
  }, {
    "from": 22,
    "label": "initializes",
    "to": 26
  }, {
    "from": 26,
    "label": "requires",
    "to": 2
  }, {
    "from": 22,
    "label": "initializes",
    "to": 27
  }, {
    "from": 27,
    "label": "requires",
    "to": 1
  }, {
    "from": 22,
    "label": "initializes",
    "to": 28
  }, {
    "from": 28,
    "label": "requires",
    "to": 1
  }, {
    "from": 3,
    "label": "provides",
    "to": 29
  }, {
    "from": 20,
    "label": "represents",
    "to": 30
  }, {
    "from": 29,
    "label": "provides",
    "to": 30
  }, {
    "from": 31,
    "label": "requires",
    "to": 3
  }, {
    "from": 5,
    "label": "hasArgument",
    "to": 9
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "import_into",
    "type": "module"
  }, {
    "id": 2,
    "text": "test",
    "type": "module"
  }, {
    "id": 3,
    "text": "mod52",
    "type": "module"
  }, {
    "id": 4,
    "text": "function answer ()\r\n    -- of course, you don't have the usual global environment available\r\n    -- so define it as a local up above, or use utils.import(_G).\r\n    test.assertraise(function()\r\n        print 'hello'\r\n    end,(LUA_VERSION~=\"Lua 5.3\") and \"attempt to call global 'print'\" or \"attempt to call a nil value\")\r\n\r\n    -- but all the Penlight modules are available\r\n    return pretty.write(utils.split '10 20  30', '')\r\nend",
    "type": "function"
  }, {
    "id": 5,
    "text": "test.assertraise(function()\r\n        print 'hello'\r\n    end,(LUA_VERSION~=\"Lua 5.3\") and \"attempt to call global 'print'\" or \"attempt to call a nil value\")",
    "type": "statement:functioncall"
  }, {
    "id": 6,
    "text": "print 'hello'",
    "type": "statement:functioncall"
  }, {
    "id": 7,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 8,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 9,
    "text": "function()\r\n        print 'hello'\r\n    end",
    "type": "function"
  }, {
    "id": 10,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 11,
    "text": "",
    "type": "function container"
  }, {
    "id": 12,
    "text": "",
    "type": "function container"
  }, {
    "id": 13,
    "text": "",
    "type": "function container"
  }, {
    "id": 14,
    "text": "assertraise",
    "type": "global function"
  }, {
    "id": 15,
    "text": "rawget",
    "type": "global function"
  }, {
    "id": 16,
    "text": "print",
    "type": "global function"
  }, {
    "id": 17,
    "text": "require",
    "type": "global function"
  }, {
    "id": 18,
    "text": "split",
    "type": "global function"
  }, {
    "id": 19,
    "text": "write",
    "type": "global function"
  }, {
    "id": 20,
    "text": "",
    "type": "local variable"
  }, {
    "id": 21,
    "text": "",
    "type": "variable container"
  }, {
    "id": 22,
    "text": "",
    "type": "require container"
  }, {
    "id": 23,
    "text": "",
    "type": "local variable"
  }, {
    "id": 24,
    "text": "",
    "type": "n/a"
  }, {
    "id": 25,
    "text": "",
    "type": "local variable"
  }, {
    "id": 26,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 27,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 28,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 29,
    "text": "",
    "type": "interface container"
  }, {
    "id": 30,
    "text": "",
    "type": "interface"
  }, {
    "id": 31,
    "text": "",
    "type": "require local variable"
  } ]
}