{
  "_filename": "test-tablex.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/penlight/tests/test-tablex.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 2
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 4,
    "label": "has",
    "to": 7
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 8,
    "label": "has",
    "to": 10
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 10,
    "label": "has",
    "to": 12
  }, {
    "from": 10,
    "label": "has",
    "to": 13
  }, {
    "from": 8,
    "label": "has",
    "to": 14
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 17,
    "label": "has",
    "to": 16
  }, {
    "from": 18,
    "label": "has",
    "to": 16
  }, {
    "from": 19,
    "label": "has",
    "to": 16
  }, {
    "from": 20,
    "label": "has",
    "to": 16
  }, {
    "from": 21,
    "label": "has",
    "to": 16
  }, {
    "from": 22,
    "label": "calls",
    "to": 42
  }, {
    "from": 22,
    "label": "calls",
    "to": 42
  }, {
    "from": 4,
    "label": "calls",
    "to": 45
  }, {
    "from": 22,
    "label": "calls",
    "to": 45
  }, {
    "from": 22,
    "label": "calls",
    "to": 45
  }, {
    "from": 22,
    "label": "calls",
    "to": 44
  }, {
    "from": 22,
    "label": "calls",
    "to": 44
  }, {
    "from": 22,
    "label": "calls",
    "to": 34
  }, {
    "from": 22,
    "label": "calls",
    "to": 34
  }, {
    "from": 22,
    "label": "calls",
    "to": 34
  }, {
    "from": 4,
    "label": "calls",
    "to": 3
  }, {
    "from": 22,
    "label": "calls",
    "to": 41
  }, {
    "from": 22,
    "label": "calls",
    "to": 41
  }, {
    "from": 22,
    "label": "calls",
    "to": 41
  }, {
    "from": 22,
    "label": "calls",
    "to": 41
  }, {
    "from": 22,
    "label": "calls",
    "to": 8
  }, {
    "from": 22,
    "label": "calls",
    "to": 8
  }, {
    "from": 22,
    "label": "calls",
    "to": 46
  }, {
    "from": 22,
    "label": "calls",
    "to": 24
  }, {
    "from": 22,
    "label": "calls",
    "to": 26
  }, {
    "from": 22,
    "label": "calls",
    "to": 26
  }, {
    "from": 22,
    "label": "calls",
    "to": 26
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 8,
    "label": "calls",
    "to": 27
  }, {
    "from": 8,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 28
  }, {
    "from": 22,
    "label": "calls",
    "to": 40
  }, {
    "from": 22,
    "label": "calls",
    "to": 40
  }, {
    "from": 22,
    "label": "calls",
    "to": 40
  }, {
    "from": 22,
    "label": "calls",
    "to": 40
  }, {
    "from": 22,
    "label": "calls",
    "to": 40
  }, {
    "from": 22,
    "label": "calls",
    "to": 40
  }, {
    "from": 22,
    "label": "calls",
    "to": 39
  }, {
    "from": 22,
    "label": "calls",
    "to": 33
  }, {
    "from": 22,
    "label": "calls",
    "to": 38
  }, {
    "from": 22,
    "label": "calls",
    "to": 38
  }, {
    "from": 22,
    "label": "calls",
    "to": 38
  }, {
    "from": 22,
    "label": "calls",
    "to": 43
  }, {
    "from": 22,
    "label": "calls",
    "to": 43
  }, {
    "from": 22,
    "label": "calls",
    "to": 43
  }, {
    "from": 22,
    "label": "calls",
    "to": 43
  }, {
    "from": 22,
    "label": "calls",
    "to": 32
  }, {
    "from": 22,
    "label": "calls",
    "to": 32
  }, {
    "from": 22,
    "label": "calls",
    "to": 32
  }, {
    "from": 22,
    "label": "calls",
    "to": 31
  }, {
    "from": 22,
    "label": "calls",
    "to": 31
  }, {
    "from": 22,
    "label": "calls",
    "to": 30
  }, {
    "from": 22,
    "label": "calls",
    "to": 30
  }, {
    "from": 22,
    "label": "calls",
    "to": 30
  }, {
    "from": 22,
    "label": "calls",
    "to": 30
  }, {
    "from": 22,
    "label": "calls",
    "to": 37
  }, {
    "from": 22,
    "label": "calls",
    "to": 4
  }, {
    "from": 22,
    "label": "calls",
    "to": 4
  }, {
    "from": 22,
    "label": "calls",
    "to": 4
  }, {
    "from": 22,
    "label": "calls",
    "to": 36
  }, {
    "from": 22,
    "label": "calls",
    "to": 23
  }, {
    "from": 22,
    "label": "calls",
    "to": 35
  }, {
    "from": 22,
    "label": "calls",
    "to": 29
  }, {
    "from": 22,
    "label": "calls",
    "to": 29
  }, {
    "from": 22,
    "label": "calls",
    "to": 25
  }, {
    "from": 22,
    "label": "calls",
    "to": 25
  }, {
    "from": 22,
    "label": "calls",
    "to": 25
  }, {
    "from": 2,
    "label": "contains",
    "to": 22
  }, {
    "from": 22,
    "label": "declares",
    "to": 4
  }, {
    "from": 22,
    "label": "declares",
    "to": 8
  }, {
    "from": 22,
    "label": "declares",
    "to": 15
  }, {
    "from": 22,
    "label": "declares",
    "to": 17
  }, {
    "from": 22,
    "label": "declares",
    "to": 18
  }, {
    "from": 22,
    "label": "declares",
    "to": 19
  }, {
    "from": 22,
    "label": "declares",
    "to": 20
  }, {
    "from": 22,
    "label": "declares",
    "to": 21
  }, {
    "from": 2,
    "label": "contains",
    "to": 49
  }, {
    "from": 2,
    "label": "contains",
    "to": 50
  }, {
    "from": 49,
    "label": "initializes",
    "to": 51
  }, {
    "from": 51,
    "label": "assigns",
    "to": 52
  }, {
    "from": 49,
    "label": "initializes",
    "to": 53
  }, {
    "from": 53,
    "label": "assigns",
    "to": 54
  }, {
    "from": 49,
    "label": "initializes",
    "to": 55
  }, {
    "from": 55,
    "label": "assigns",
    "to": 56
  }, {
    "from": 49,
    "label": "initializes",
    "to": 57
  }, {
    "from": 57,
    "label": "assigns",
    "to": 58
  }, {
    "from": 58,
    "label": "assigns",
    "to": 59
  }, {
    "from": 59,
    "label": "assigns",
    "to": 60
  }, {
    "from": 58,
    "label": "assigns",
    "to": 61
  }, {
    "from": 61,
    "label": "assigns",
    "to": 62
  }, {
    "from": 58,
    "label": "assigns",
    "to": 63
  }, {
    "from": 63,
    "label": "assigns",
    "to": 64
  }, {
    "from": 58,
    "label": "assigns",
    "to": 65
  }, {
    "from": 65,
    "label": "assigns",
    "to": 66
  }, {
    "from": 58,
    "label": "assigns",
    "to": 67
  }, {
    "from": 67,
    "label": "assigns",
    "to": 68
  }, {
    "from": 58,
    "label": "assigns",
    "to": 69
  }, {
    "from": 69,
    "label": "assigns",
    "to": 70
  }, {
    "from": 58,
    "label": "assigns",
    "to": 71
  }, {
    "from": 71,
    "label": "assigns",
    "to": 72
  }, {
    "from": 58,
    "label": "assigns",
    "to": 73
  }, {
    "from": 73,
    "label": "assigns",
    "to": 74
  }, {
    "from": 58,
    "label": "assigns",
    "to": 75
  }, {
    "from": 75,
    "label": "assigns",
    "to": 76
  }, {
    "from": 58,
    "label": "assigns",
    "to": 77
  }, {
    "from": 77,
    "label": "assigns",
    "to": 78
  }, {
    "from": 49,
    "label": "initializes",
    "to": 79
  }, {
    "from": 79,
    "label": "assigns",
    "to": 80
  }, {
    "from": 49,
    "label": "initializes",
    "to": 81
  }, {
    "from": 81,
    "label": "assigns",
    "to": 82
  }, {
    "from": 49,
    "label": "initializes",
    "to": 83
  }, {
    "from": 83,
    "label": "assigns",
    "to": 84
  }, {
    "from": 50,
    "label": "initializes",
    "to": 85
  }, {
    "from": 85,
    "label": "requires",
    "to": 1
  }, {
    "from": 50,
    "label": "initializes",
    "to": 86
  }, {
    "from": 86,
    "label": "requires",
    "to": 47
  }, {
    "from": 50,
    "label": "initializes",
    "to": 87
  }, {
    "from": 87,
    "label": "requires",
    "to": 48
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "tablex",
    "type": "module"
  }, {
    "id": 2,
    "text": "test-tablex",
    "type": "module"
  }, {
    "id": 3,
    "text": "local function complain (x,y,msg,where)\r\n    local i = debug.getinfo(3 + (where or 0))\r\n    test.error_handler(i.short_src,i.currentline,dump(x),dump(y),msg)\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "function asserteq_no_order (x,y)\r\n    if not compare_no_order(x,y) then\r\n        test.complain(x,y,\"these lists contained different elements\")\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 5,
    "text": "if not compare_no_order(x,y) then\r\n        test.complain(x,y,\"these lists contained different elements\")\r\n    end",
    "type": "statement:if"
  }, {
    "id": 6,
    "text": "test.complain(x,y,\"these lists contained different elements\")",
    "type": "statement:functioncall"
  }, {
    "id": 7,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 8,
    "text": "function assert_iter_order(iter,l)\r\n   local i = 0\r\n   for k,v in iter do\r\n      i = i + 1\r\n      asserteq(k,l[i][1])\r\n      asserteq(v,l[i][2])\r\n   end\r\nend",
    "type": "function"
  }, {
    "id": 9,
    "text": "local i = 0",
    "type": "statement:localassign"
  }, {
    "id": 10,
    "text": "for k,v in iter do\r\n      i = i + 1\r\n      asserteq(k,l[i][1])\r\n      asserteq(v,l[i][2])\r\n   end",
    "type": "statement:genericfor"
  }, {
    "id": 11,
    "text": "i = i + 1",
    "type": "statement:assign"
  }, {
    "id": 12,
    "text": "asserteq(k,l[i][1])",
    "type": "statement:functioncall"
  }, {
    "id": 13,
    "text": "asserteq(v,l[i][2])",
    "type": "statement:functioncall"
  }, {
    "id": 14,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 15,
    "text": "function(i,v) return v end",
    "type": "function"
  }, {
    "id": 16,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 17,
    "text": "function(k,v) return v end",
    "type": "function"
  }, {
    "id": 18,
    "text": "function(i,v) return v,i end",
    "type": "function"
  }, {
    "id": 19,
    "text": "function(k,v) return {k,v},k end",
    "type": "function"
  }, {
    "id": 20,
    "text": "function(v) return v*v end",
    "type": "function"
  }, {
    "id": 21,
    "text": "function(x,y,z) return x+y+z end",
    "type": "function"
  }, {
    "id": 22,
    "text": "",
    "type": "function container"
  }, {
    "id": 23,
    "text": "import",
    "type": "global function"
  }, {
    "id": 24,
    "text": "map2",
    "type": "global function"
  }, {
    "id": 25,
    "text": "map",
    "type": "global function"
  }, {
    "id": 26,
    "text": "range",
    "type": "global function"
  }, {
    "id": 27,
    "text": "asserteq",
    "type": "global function"
  }, {
    "id": 28,
    "text": "sort",
    "type": "global function"
  }, {
    "id": 29,
    "text": "index_map",
    "type": "global function"
  }, {
    "id": 30,
    "text": "move",
    "type": "global function"
  }, {
    "id": 31,
    "text": "mapn",
    "type": "global function"
  }, {
    "id": 32,
    "text": "require",
    "type": "global function"
  }, {
    "id": 33,
    "text": "copy",
    "type": "global function"
  }, {
    "id": 34,
    "text": "L",
    "type": "global function"
  }, {
    "id": 35,
    "text": "sortv",
    "type": "global function"
  }, {
    "id": 36,
    "text": "set",
    "type": "global function"
  }, {
    "id": 37,
    "text": "update",
    "type": "global function"
  }, {
    "id": 38,
    "text": "insertvalues",
    "type": "global function"
  }, {
    "id": 39,
    "text": "deepcopy",
    "type": "global function"
  }, {
    "id": 40,
    "text": "pairmap",
    "type": "global function"
  }, {
    "id": 41,
    "text": "icopy",
    "type": "global function"
  }, {
    "id": 42,
    "text": "merge",
    "type": "global function"
  }, {
    "id": 43,
    "text": "difference",
    "type": "global function"
  }, {
    "id": 44,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 45,
    "text": "compare_no_order",
    "type": "global function"
  }, {
    "id": 46,
    "text": "zip",
    "type": "global function"
  }, {
    "id": 47,
    "text": "utils)",
    "type": "module"
  }, {
    "id": 48,
    "text": "test)",
    "type": "module"
  }, {
    "id": 49,
    "text": "",
    "type": "variable container"
  }, {
    "id": 50,
    "text": "",
    "type": "require container"
  }, {
    "id": 51,
    "text": "",
    "type": "local variable"
  }, {
    "id": 52,
    "text": "",
    "type": "n/a"
  }, {
    "id": 53,
    "text": "",
    "type": "local variable"
  }, {
    "id": 54,
    "text": "",
    "type": "n/a"
  }, {
    "id": 55,
    "text": "",
    "type": "local variable"
  }, {
    "id": 56,
    "text": "",
    "type": "n/a"
  }, {
    "id": 57,
    "text": "",
    "type": "local variable"
  }, {
    "id": 58,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 59,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 60,
    "text": "",
    "type": "number"
  }, {
    "id": 61,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 62,
    "text": "",
    "type": "number"
  }, {
    "id": 63,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 64,
    "text": "",
    "type": "number"
  }, {
    "id": 65,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 66,
    "text": "",
    "type": "number"
  }, {
    "id": 67,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 68,
    "text": "",
    "type": "number"
  }, {
    "id": 69,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 70,
    "text": "",
    "type": "number"
  }, {
    "id": 71,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 72,
    "text": "",
    "type": "number"
  }, {
    "id": 73,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 74,
    "text": "",
    "type": "number"
  }, {
    "id": 75,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 76,
    "text": "",
    "type": "number"
  }, {
    "id": 77,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 78,
    "text": "",
    "type": "number"
  }, {
    "id": 79,
    "text": "",
    "type": "global variable"
  }, {
    "id": 80,
    "text": "",
    "type": "n/a"
  }, {
    "id": 81,
    "text": "",
    "type": "global variable"
  }, {
    "id": 82,
    "text": "",
    "type": "n/a"
  }, {
    "id": 83,
    "text": "",
    "type": "global variable"
  }, {
    "id": 84,
    "text": "",
    "type": "n/a"
  }, {
    "id": 85,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 86,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 87,
    "text": "",
    "type": "require local variable"
  } ]
}