{
  "_filename": "test-import_into.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/penlight/tests/test-import_into.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 5
  }, {
    "from": 7,
    "label": "calls",
    "to": 9
  }, {
    "from": 7,
    "label": "calls",
    "to": 9
  }, {
    "from": 7,
    "label": "calls",
    "to": 9
  }, {
    "from": 7,
    "label": "calls",
    "to": 9
  }, {
    "from": 7,
    "label": "calls",
    "to": 9
  }, {
    "from": 7,
    "label": "calls",
    "to": 9
  }, {
    "from": 7,
    "label": "calls",
    "to": 9
  }, {
    "from": 7,
    "label": "calls",
    "to": 9
  }, {
    "from": 7,
    "label": "calls",
    "to": 6
  }, {
    "from": 7,
    "label": "calls",
    "to": 8
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 7,
    "label": "calls",
    "to": 10
  }, {
    "from": 5,
    "label": "contains",
    "to": 7
  }, {
    "from": 5,
    "label": "contains",
    "to": 12
  }, {
    "from": 5,
    "label": "contains",
    "to": 13
  }, {
    "from": 13,
    "label": "initializes",
    "to": 14
  }, {
    "from": 14,
    "label": "requires",
    "to": 2
  }, {
    "from": 13,
    "label": "initializes",
    "to": 15
  }, {
    "from": 15,
    "label": "requires",
    "to": 3
  }, {
    "from": 13,
    "label": "initializes",
    "to": 16
  }, {
    "from": 16,
    "label": "requires",
    "to": 4
  }, {
    "from": 13,
    "label": "initializes",
    "to": 17
  }, {
    "from": 17,
    "label": "requires",
    "to": 1
  }, {
    "from": 13,
    "label": "initializes",
    "to": 11
  }, {
    "from": 13,
    "label": "initializes",
    "to": 11
  }, {
    "from": 13,
    "label": "initializes",
    "to": 11
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "import_into",
    "type": "module"
  }, {
    "id": 2,
    "text": "test",
    "type": "module"
  }, {
    "id": 3,
    "text": "utils",
    "type": "module"
  }, {
    "id": 4,
    "text": "mod52",
    "type": "module"
  }, {
    "id": 5,
    "text": "test-import_into",
    "type": "module"
  }, {
    "id": 6,
    "text": "function answer ()\r\n    -- of course, you don't have the usual global environment available\r\n    -- so define it as a local up above, or use utils.import(_G).\r\n    test.assertraise(function()\r\n        print 'hello'\r\n    end,(LUA_VERSION~=\"Lua 5.3\") and \"attempt to call global 'print'\" or \"attempt to call a nil value\")\r\n\r\n    -- but all the Penlight modules are available\r\n    return pretty.write(utils.split '10 20  30', '')\r\nend",
    "type": "function"
  }, {
    "id": 7,
    "text": "",
    "type": "function container"
  }, {
    "id": 8,
    "text": "asserteq",
    "type": "global function"
  }, {
    "id": 9,
    "text": "require",
    "type": "global function"
  }, {
    "id": 10,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 11,
    "text": "",
    "type": "global variable"
  }, {
    "id": 12,
    "text": "",
    "type": "variable container"
  }, {
    "id": 13,
    "text": "",
    "type": "require container"
  }, {
    "id": 14,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 15,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 16,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 17,
    "text": "",
    "type": "require local variable"
  } ]
}