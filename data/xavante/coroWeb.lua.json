{
  "_filename": "coroWeb.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/xavante/src/codeweb/coroWeb.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 3,
    "label": "has",
    "to": 6
  }, {
    "from": 3,
    "label": "has",
    "to": 7
  }, {
    "from": 3,
    "label": "has",
    "to": 8
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 8,
    "label": "has",
    "to": 10
  }, {
    "from": 8,
    "label": "has",
    "to": 11
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 8,
    "label": "has",
    "to": 13
  }, {
    "from": 8,
    "label": "has",
    "to": 14
  }, {
    "from": 14,
    "label": "has",
    "to": 15
  }, {
    "from": 3,
    "label": "has",
    "to": 13
  }, {
    "from": 3,
    "label": "has",
    "to": 6
  }, {
    "from": 3,
    "label": "has",
    "to": 6
  }, {
    "from": 3,
    "label": "has",
    "to": 16
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 17,
    "label": "has",
    "to": 19
  }, {
    "from": 20,
    "label": "has",
    "to": 6
  }, {
    "from": 20,
    "label": "has",
    "to": 21
  }, {
    "from": 20,
    "label": "has",
    "to": 22
  }, {
    "from": 20,
    "label": "has",
    "to": 23
  }, {
    "from": 20,
    "label": "has",
    "to": 24
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 20,
    "label": "has",
    "to": 6
  }, {
    "from": 20,
    "label": "has",
    "to": 26
  }, {
    "from": 27,
    "label": "has",
    "to": 28
  }, {
    "from": 27,
    "label": "has",
    "to": 29
  }, {
    "from": 27,
    "label": "has",
    "to": 30
  }, {
    "from": 30,
    "label": "has",
    "to": 31
  }, {
    "from": 30,
    "label": "has",
    "to": 32
  }, {
    "from": 30,
    "label": "has",
    "to": 33
  }, {
    "from": 33,
    "label": "has",
    "to": 34
  }, {
    "from": 30,
    "label": "has",
    "to": 35
  }, {
    "from": 35,
    "label": "has",
    "to": 36
  }, {
    "from": 35,
    "label": "has",
    "to": 37
  }, {
    "from": 35,
    "label": "has",
    "to": 31
  }, {
    "from": 27,
    "label": "has",
    "to": 6
  }, {
    "from": 27,
    "label": "has",
    "to": 38
  }, {
    "from": 39,
    "label": "has",
    "to": 7
  }, {
    "from": 39,
    "label": "has",
    "to": 8
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 8,
    "label": "has",
    "to": 10
  }, {
    "from": 8,
    "label": "has",
    "to": 11
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 8,
    "label": "has",
    "to": 13
  }, {
    "from": 8,
    "label": "has",
    "to": 14
  }, {
    "from": 14,
    "label": "has",
    "to": 15
  }, {
    "from": 39,
    "label": "has",
    "to": 13
  }, {
    "from": 39,
    "label": "has",
    "to": 6
  }, {
    "from": 39,
    "label": "has",
    "to": 40
  }, {
    "from": 41,
    "label": "has",
    "to": 6
  }, {
    "from": 41,
    "label": "has",
    "to": 42
  }, {
    "from": 43,
    "label": "has",
    "to": 21
  }, {
    "from": 43,
    "label": "has",
    "to": 22
  }, {
    "from": 43,
    "label": "has",
    "to": 23
  }, {
    "from": 43,
    "label": "has",
    "to": 24
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 43,
    "label": "has",
    "to": 6
  }, {
    "from": 43,
    "label": "has",
    "to": 44
  }, {
    "from": 27,
    "label": "calls",
    "to": 48
  }, {
    "from": 27,
    "label": "calls",
    "to": 48
  }, {
    "from": 20,
    "label": "calls",
    "to": 61
  }, {
    "from": 3,
    "label": "calls",
    "to": 55
  }, {
    "from": 20,
    "label": "calls",
    "to": 50
  }, {
    "from": 20,
    "label": "calls",
    "to": 46
  }, {
    "from": 45,
    "label": "calls",
    "to": 3
  }, {
    "from": 3,
    "label": "calls",
    "to": 51
  }, {
    "from": 3,
    "label": "calls",
    "to": 51
  }, {
    "from": 20,
    "label": "calls",
    "to": 47
  }, {
    "from": 3,
    "label": "calls",
    "to": 54
  }, {
    "from": 20,
    "label": "calls",
    "to": 54
  }, {
    "from": 3,
    "label": "calls",
    "to": 59
  }, {
    "from": 3,
    "label": "calls",
    "to": 59
  }, {
    "from": 3,
    "label": "calls",
    "to": 59
  }, {
    "from": 3,
    "label": "calls",
    "to": 59
  }, {
    "from": 27,
    "label": "calls",
    "to": 58
  }, {
    "from": 45,
    "label": "calls",
    "to": 49
  }, {
    "from": 3,
    "label": "calls",
    "to": 52
  }, {
    "from": 27,
    "label": "calls",
    "to": 53
  }, {
    "from": 45,
    "label": "calls",
    "to": 60
  }, {
    "from": 27,
    "label": "calls",
    "to": 56
  }, {
    "from": 27,
    "label": "calls",
    "to": 56
  }, {
    "from": 3,
    "label": "calls",
    "to": 57
  }, {
    "from": 3,
    "label": "calls",
    "to": 57
  }, {
    "from": 1,
    "label": "contains",
    "to": 45
  }, {
    "from": 45,
    "label": "declares",
    "to": 3
  }, {
    "from": 45,
    "label": "declares",
    "to": 17
  }, {
    "from": 45,
    "label": "declares",
    "to": 20
  }, {
    "from": 45,
    "label": "declares",
    "to": 27
  }, {
    "from": 45,
    "label": "declares",
    "to": 39
  }, {
    "from": 45,
    "label": "declares",
    "to": 41
  }, {
    "from": 45,
    "label": "declares",
    "to": 43
  }, {
    "from": 1,
    "label": "contains",
    "to": 62
  }, {
    "from": 1,
    "label": "contains",
    "to": 63
  }, {
    "from": 62,
    "label": "initializes",
    "to": 64
  }, {
    "from": 64,
    "label": "assigns",
    "to": 65
  }, {
    "from": 62,
    "label": "initializes",
    "to": 66
  }, {
    "from": 66,
    "label": "assigns",
    "to": 67
  }, {
    "from": 62,
    "label": "initializes",
    "to": 68
  }, {
    "from": 68,
    "label": "assigns",
    "to": 69
  }, {
    "from": 62,
    "label": "initializes",
    "to": 70
  }, {
    "from": 63,
    "label": "initializes",
    "to": 71
  }, {
    "from": 71,
    "label": "requires",
    "to": 2
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "coroWeb",
    "type": "module"
  }, {
    "id": 2,
    "text": "session",
    "type": "module"
  }, {
    "id": 3,
    "text": "local function _ortoroutines (err)\r\n\terr = err or error\r\n\tlocal _tag = {}\r\n\treturn\r\n\t\tfunction (co, ...)\r\n\t\t\tlocal r,sts\r\n\t\t\trepeat\r\n\t\t\t\tr = { o_resume (co, unpack (arg)) }\r\n\t\t\t\tsts = coroutine.status (co)\r\n\t\t\t\t\r\n\t\t\t\tif not r[1] then err (r[2]) end\r\n\t\t\t\ttable.remove (r,1)\r\n\t\t\t\t\r\n\t\t\t\tif r[1] ~= _tag and sts == \"suspended\" then\r\n\t\t\t\t\targ = { o_yield (unpack (r)) }\r\n\t\t\t\tend\r\n\t\t\tuntil r[1] == _tag or sts == \"dead\"\r\n\t\t\ttable.remove (r,1)\r\n\t\t\treturn unpack (r)\r\n\t\tend,\r\n\t\tfunction (...)\r\n\t\t\treturn o_yield (_tag, unpack (arg))\r\n\t\tend\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "err = err or error",
    "type": "statement:assign"
  }, {
    "id": 5,
    "text": "local _tag = {}",
    "type": "statement:localassign"
  }, {
    "id": 6,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 7,
    "text": "local r,sts",
    "type": "statement:localassign"
  }, {
    "id": 8,
    "text": "repeat\r\n\t\t\t\tr = { o_resume (co, unpack (arg)) }\r\n\t\t\t\tsts = coroutine.status (co)\r\n\t\t\t\t\r\n\t\t\t\tif not r[1] then err (r[2]) end\r\n\t\t\t\ttable.remove (r,1)\r\n\t\t\t\t\r\n\t\t\t\tif r[1] ~= _tag and sts == \"suspended\" then\r\n\t\t\t\t\targ = { o_yield (unpack (r)) }\r\n\t\t\t\tend\r\n\t\t\tuntil r[1] == _tag or sts == \"dead\"",
    "type": "statement:repeat"
  }, {
    "id": 9,
    "text": "r = { o_resume (co, unpack (arg)) }",
    "type": "statement:assign"
  }, {
    "id": 10,
    "text": "sts = coroutine.status (co)",
    "type": "statement:assign"
  }, {
    "id": 11,
    "text": "if not r[1] then err (r[2]) end",
    "type": "statement:if"
  }, {
    "id": 12,
    "text": "err (r[2])",
    "type": "statement:functioncall"
  }, {
    "id": 13,
    "text": "table.remove (r,1)",
    "type": "statement:functioncall"
  }, {
    "id": 14,
    "text": "if r[1] ~= _tag and sts == \"suspended\" then\r\n\t\t\t\t\targ = { o_yield (unpack (r)) }\r\n\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 15,
    "text": "arg = { o_yield (unpack (r)) }",
    "type": "statement:assign"
  }, {
    "id": 16,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 17,
    "text": "local function _error (res, err)\r\n\tres:send_data (\"<h1>error:\"..err..\"</h1>\")\r\nend",
    "type": "function"
  }, {
    "id": 18,
    "text": "res:send_data (\"<h1>error:\"..err..\"</h1>\")",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 20,
    "text": "function handler (name, h)\r\n\treturn function (req, res)\r\n\t\tlocal sess = session.open (req, res, name)\r\n\t\tsess.coHandler = sess.coHandler or coroutine.create (h)\r\n\t\t\r\n\t\tresume (sess.coHandler, req, res)\r\n\t\t\r\n\t\tif coroutine.status (sess.coHandler) == \"dead\" then\r\n\t\t\tsession.close (req, res, name)\r\n\t\tend\r\n\t\t\r\n\t\treturn res\r\n\tend\r\nend",
    "type": "function"
  }, {
    "id": 21,
    "text": "local sess = session.open (req, res, name)",
    "type": "statement:localassign"
  }, {
    "id": 22,
    "text": "sess.coHandler = sess.coHandler or coroutine.create (h)",
    "type": "statement:assign"
  }, {
    "id": 23,
    "text": "resume (sess.coHandler, req, res)",
    "type": "statement:functioncall"
  }, {
    "id": 24,
    "text": "if coroutine.status (sess.coHandler) == \"dead\" then\r\n\t\t\tsession.close (req, res, name)\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 25,
    "text": "session.close (req, res, name)",
    "type": "statement:functioncall"
  }, {
    "id": 26,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 27,
    "text": "function event (in_req, sh_t, get_all)\r\n\tlocal req, res\r\n\tlocal subH, ret\r\n\trepeat\r\n\t\treq, res = yield ()\r\n\t\tsubH = sh_t [req.relpath]\r\n\t\tif subH and type (subH) == \"function\" then\r\n\t\t\tret = subH (req, res)\r\n\r\n\t\tend\r\n\t\tif ret then\r\n\t\t\txavante.httpd.redirect (res, ret)\r\n\t\t\t\r\n\t\telseif ret == \"refresh\" then\r\n\t\t\txavante.httpd.redirect (res, in_req.parsed_url.path)\r\n\t\t\treq, res = yield ()\r\n\t\tend\r\n\tuntil not subH or get_all or ret == \"refresh\"\r\n\treturn req, res\r\nend",
    "type": "function"
  }, {
    "id": 28,
    "text": "local req, res",
    "type": "statement:localassign"
  }, {
    "id": 29,
    "text": "local subH, ret",
    "type": "statement:localassign"
  }, {
    "id": 30,
    "text": "repeat\r\n\t\treq, res = yield ()\r\n\t\tsubH = sh_t [req.relpath]\r\n\t\tif subH and type (subH) == \"function\" then\r\n\t\t\tret = subH (req, res)\r\n\r\n\t\tend\r\n\t\tif ret then\r\n\t\t\txavante.httpd.redirect (res, ret)\r\n\t\t\t\r\n\t\telseif ret == \"refresh\" then\r\n\t\t\txavante.httpd.redirect (res, in_req.parsed_url.path)\r\n\t\t\treq, res = yield ()\r\n\t\tend\r\n\tuntil not subH or get_all or ret == \"refresh\"",
    "type": "statement:repeat"
  }, {
    "id": 31,
    "text": "req, res = yield ()",
    "type": "statement:assign"
  }, {
    "id": 32,
    "text": "subH = sh_t [req.relpath]",
    "type": "statement:assign"
  }, {
    "id": 33,
    "text": "if subH and type (subH) == \"function\" then\r\n\t\t\tret = subH (req, res)\r\n\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 34,
    "text": "ret = subH (req, res)",
    "type": "statement:assign"
  }, {
    "id": 35,
    "text": "if ret then\r\n\t\t\txavante.httpd.redirect (res, ret)\r\n\t\t\t\r\n\t\telseif ret == \"refresh\" then\r\n\t\t\txavante.httpd.redirect (res, in_req.parsed_url.path)\r\n\t\t\treq, res = yield ()\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 36,
    "text": "xavante.httpd.redirect (res, ret)",
    "type": "statement:functioncall"
  }, {
    "id": 37,
    "text": "xavante.httpd.redirect (res, in_req.parsed_url.path)",
    "type": "statement:functioncall"
  }, {
    "id": 38,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 39,
    "text": "function (co, ...)\r\n\t\t\tlocal r,sts\r\n\t\t\trepeat\r\n\t\t\t\tr = { o_resume (co, unpack (arg)) }\r\n\t\t\t\tsts = coroutine.status (co)\r\n\t\t\t\t\r\n\t\t\t\tif not r[1] then err (r[2]) end\r\n\t\t\t\ttable.remove (r,1)\r\n\t\t\t\t\r\n\t\t\t\tif r[1] ~= _tag and sts == \"suspended\" then\r\n\t\t\t\t\targ = { o_yield (unpack (r)) }\r\n\t\t\t\tend\r\n\t\t\tuntil r[1] == _tag or sts == \"dead\"\r\n\t\t\ttable.remove (r,1)\r\n\t\t\treturn unpack (r)\r\n\t\tend",
    "type": "function"
  }, {
    "id": 40,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 41,
    "text": "function (...)\r\n\t\t\treturn o_yield (_tag, unpack (arg))\r\n\t\tend",
    "type": "function"
  }, {
    "id": 42,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 43,
    "text": "function (req, res)\r\n\t\tlocal sess = session.open (req, res, name)\r\n\t\tsess.coHandler = sess.coHandler or coroutine.create (h)\r\n\t\t\r\n\t\tresume (sess.coHandler, req, res)\r\n\t\t\r\n\t\tif coroutine.status (sess.coHandler) == \"dead\" then\r\n\t\t\tsession.close (req, res, name)\r\n\t\tend\r\n\t\t\r\n\t\treturn res\r\n\tend",
    "type": "function"
  }, {
    "id": 44,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 45,
    "text": "",
    "type": "function container"
  }, {
    "id": 46,
    "text": "close",
    "type": "global function"
  }, {
    "id": 47,
    "text": "open",
    "type": "global function"
  }, {
    "id": 48,
    "text": "xavante.httpd.redirect",
    "type": "global function"
  }, {
    "id": 49,
    "text": "module",
    "type": "global function"
  }, {
    "id": 50,
    "text": "resume",
    "type": "global function"
  }, {
    "id": 51,
    "text": "remove",
    "type": "global function"
  }, {
    "id": 52,
    "text": "err",
    "type": "global function"
  }, {
    "id": 53,
    "text": "type",
    "type": "global function"
  }, {
    "id": 54,
    "text": "status",
    "type": "global function"
  }, {
    "id": 55,
    "text": "o_resume",
    "type": "global function"
  }, {
    "id": 56,
    "text": "yield",
    "type": "global function"
  }, {
    "id": 57,
    "text": "o_yield",
    "type": "global function"
  }, {
    "id": 58,
    "text": "subH",
    "type": "global function"
  }, {
    "id": 59,
    "text": "unpack",
    "type": "global function"
  }, {
    "id": 60,
    "text": "require",
    "type": "global function"
  }, {
    "id": 61,
    "text": "create",
    "type": "global function"
  }, {
    "id": 62,
    "text": "",
    "type": "variable container"
  }, {
    "id": 63,
    "text": "",
    "type": "require container"
  }, {
    "id": 64,
    "text": "",
    "type": "local variable"
  }, {
    "id": 65,
    "text": "",
    "type": "n/a"
  }, {
    "id": 66,
    "text": "",
    "type": "local variable"
  }, {
    "id": 67,
    "text": "",
    "type": "n/a"
  }, {
    "id": 68,
    "text": "",
    "type": "global variable"
  }, {
    "id": 69,
    "text": "",
    "type": "n/a"
  }, {
    "id": 70,
    "text": "",
    "type": "global variable"
  }, {
    "id": 71,
    "text": "",
    "type": "require local variable"
  } ]
}