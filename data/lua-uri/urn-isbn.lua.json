{
  "_filename": "urn-isbn.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/lua-uri/test/urn-isbn.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 5,
    "label": "has",
    "to": 8
  }, {
    "from": 5,
    "label": "has",
    "to": 9
  }, {
    "from": 5,
    "label": "has",
    "to": 10
  }, {
    "from": 5,
    "label": "has",
    "to": 11
  }, {
    "from": 5,
    "label": "has",
    "to": 12
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 5,
    "label": "has",
    "to": 8
  }, {
    "from": 5,
    "label": "has",
    "to": 9
  }, {
    "from": 5,
    "label": "has",
    "to": 10
  }, {
    "from": 5,
    "label": "has",
    "to": 11
  }, {
    "from": 5,
    "label": "has",
    "to": 13
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 13,
    "label": "has",
    "to": 15
  }, {
    "from": 13,
    "label": "has",
    "to": 16
  }, {
    "from": 13,
    "label": "has",
    "to": 17
  }, {
    "from": 13,
    "label": "has",
    "to": 18
  }, {
    "from": 13,
    "label": "has",
    "to": 19
  }, {
    "from": 5,
    "label": "has",
    "to": 20
  }, {
    "from": 5,
    "label": "has",
    "to": 21
  }, {
    "from": 22,
    "label": "has",
    "to": 23
  }, {
    "from": 22,
    "label": "has",
    "to": 24
  }, {
    "from": 22,
    "label": "has",
    "to": 25
  }, {
    "from": 22,
    "label": "has",
    "to": 26
  }, {
    "from": 22,
    "label": "has",
    "to": 27
  }, {
    "from": 28,
    "label": "has",
    "to": 29
  }, {
    "from": 28,
    "label": "has",
    "to": 30
  }, {
    "from": 30,
    "label": "has",
    "to": 31
  }, {
    "from": 28,
    "label": "has",
    "to": 32
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 28,
    "label": "has",
    "to": 34
  }, {
    "from": 34,
    "label": "has",
    "to": 35
  }, {
    "from": 28,
    "label": "has",
    "to": 36
  }, {
    "from": 28,
    "label": "has",
    "to": 37
  }, {
    "from": 28,
    "label": "has",
    "to": 38
  }, {
    "from": 28,
    "label": "has",
    "to": 39
  }, {
    "from": 28,
    "label": "has",
    "to": 40
  }, {
    "from": 41,
    "label": "has",
    "to": 29
  }, {
    "from": 41,
    "label": "has",
    "to": 42
  }, {
    "from": 41,
    "label": "has",
    "to": 25
  }, {
    "from": 41,
    "label": "has",
    "to": 43
  }, {
    "from": 43,
    "label": "has",
    "to": 44
  }, {
    "from": 41,
    "label": "has",
    "to": 25
  }, {
    "from": 41,
    "label": "has",
    "to": 45
  }, {
    "from": 41,
    "label": "has",
    "to": 46
  }, {
    "from": 47,
    "label": "has",
    "to": 48
  }, {
    "from": 47,
    "label": "has",
    "to": 49
  }, {
    "from": 47,
    "label": "has",
    "to": 50
  }, {
    "from": 47,
    "label": "has",
    "to": 51
  }, {
    "from": 47,
    "label": "has",
    "to": 52
  }, {
    "from": 47,
    "label": "has",
    "to": 53
  }, {
    "from": 53,
    "label": "has",
    "to": 54
  }, {
    "from": 47,
    "label": "has",
    "to": 55
  }, {
    "from": 56,
    "label": "has",
    "to": 57
  }, {
    "from": 57,
    "label": "has",
    "to": 58
  }, {
    "from": 57,
    "label": "has",
    "to": 48
  }, {
    "from": 57,
    "label": "has",
    "to": 59
  }, {
    "from": 57,
    "label": "has",
    "to": 60
  }, {
    "from": 57,
    "label": "has",
    "to": 61
  }, {
    "from": 57,
    "label": "has",
    "to": 51
  }, {
    "from": 57,
    "label": "has",
    "to": 62
  }, {
    "from": 57,
    "label": "has",
    "to": 63
  }, {
    "from": 57,
    "label": "has",
    "to": 64
  }, {
    "from": 57,
    "label": "has",
    "to": 65
  }, {
    "from": 56,
    "label": "has",
    "to": 66
  }, {
    "from": 67,
    "label": "has",
    "to": 68
  }, {
    "from": 67,
    "label": "has",
    "to": 69
  }, {
    "from": 69,
    "label": "has",
    "to": 70
  }, {
    "from": 69,
    "label": "has",
    "to": 71
  }, {
    "from": 67,
    "label": "has",
    "to": 72
  }, {
    "from": 73,
    "label": "has",
    "to": 31
  }, {
    "from": 74,
    "label": "has",
    "to": 33
  }, {
    "from": 75,
    "label": "has",
    "to": 35
  }, {
    "from": 76,
    "label": "has",
    "to": 44
  }, {
    "from": 77,
    "label": "calls",
    "to": 79
  }, {
    "from": 5,
    "label": "calls",
    "to": 80
  }, {
    "from": 56,
    "label": "calls",
    "to": 80
  }, {
    "from": 56,
    "label": "calls",
    "to": 80
  }, {
    "from": 5,
    "label": "calls",
    "to": 84
  }, {
    "from": 5,
    "label": "calls",
    "to": 82
  }, {
    "from": 5,
    "label": "calls",
    "to": 82
  }, {
    "from": 22,
    "label": "calls",
    "to": 82
  }, {
    "from": 28,
    "label": "calls",
    "to": 82
  }, {
    "from": 41,
    "label": "calls",
    "to": 82
  }, {
    "from": 41,
    "label": "calls",
    "to": 82
  }, {
    "from": 47,
    "label": "calls",
    "to": 82
  }, {
    "from": 56,
    "label": "calls",
    "to": 82
  }, {
    "from": 56,
    "label": "calls",
    "to": 82
  }, {
    "from": 77,
    "label": "calls",
    "to": 85
  }, {
    "from": 5,
    "label": "calls",
    "to": 78
  }, {
    "from": 5,
    "label": "calls",
    "to": 87
  }, {
    "from": 5,
    "label": "calls",
    "to": 87
  }, {
    "from": 5,
    "label": "calls",
    "to": 87
  }, {
    "from": 5,
    "label": "calls",
    "to": 87
  }, {
    "from": 5,
    "label": "calls",
    "to": 87
  }, {
    "from": 5,
    "label": "calls",
    "to": 87
  }, {
    "from": 5,
    "label": "calls",
    "to": 87
  }, {
    "from": 5,
    "label": "calls",
    "to": 87
  }, {
    "from": 5,
    "label": "calls",
    "to": 87
  }, {
    "from": 5,
    "label": "calls",
    "to": 87
  }, {
    "from": 5,
    "label": "calls",
    "to": 87
  }, {
    "from": 5,
    "label": "calls",
    "to": 87
  }, {
    "from": 5,
    "label": "calls",
    "to": 87
  }, {
    "from": 5,
    "label": "calls",
    "to": 87
  }, {
    "from": 22,
    "label": "calls",
    "to": 87
  }, {
    "from": 22,
    "label": "calls",
    "to": 87
  }, {
    "from": 22,
    "label": "calls",
    "to": 87
  }, {
    "from": 28,
    "label": "calls",
    "to": 87
  }, {
    "from": 28,
    "label": "calls",
    "to": 87
  }, {
    "from": 28,
    "label": "calls",
    "to": 87
  }, {
    "from": 28,
    "label": "calls",
    "to": 87
  }, {
    "from": 41,
    "label": "calls",
    "to": 87
  }, {
    "from": 41,
    "label": "calls",
    "to": 87
  }, {
    "from": 41,
    "label": "calls",
    "to": 87
  }, {
    "from": 41,
    "label": "calls",
    "to": 87
  }, {
    "from": 47,
    "label": "calls",
    "to": 87
  }, {
    "from": 47,
    "label": "calls",
    "to": 87
  }, {
    "from": 47,
    "label": "calls",
    "to": 87
  }, {
    "from": 47,
    "label": "calls",
    "to": 87
  }, {
    "from": 56,
    "label": "calls",
    "to": 87
  }, {
    "from": 56,
    "label": "calls",
    "to": 87
  }, {
    "from": 56,
    "label": "calls",
    "to": 87
  }, {
    "from": 56,
    "label": "calls",
    "to": 87
  }, {
    "from": 22,
    "label": "calls",
    "to": 81
  }, {
    "from": 28,
    "label": "calls",
    "to": 81
  }, {
    "from": 41,
    "label": "calls",
    "to": 81
  }, {
    "from": 47,
    "label": "calls",
    "to": 81
  }, {
    "from": 56,
    "label": "calls",
    "to": 81
  }, {
    "from": 67,
    "label": "calls",
    "to": 86
  }, {
    "from": 67,
    "label": "calls",
    "to": 86
  }, {
    "from": 67,
    "label": "calls",
    "to": 86
  }, {
    "from": 28,
    "label": "calls",
    "to": 83
  }, {
    "from": 28,
    "label": "calls",
    "to": 83
  }, {
    "from": 28,
    "label": "calls",
    "to": 83
  }, {
    "from": 41,
    "label": "calls",
    "to": 83
  }, {
    "from": 77,
    "label": "calls",
    "to": 88
  }, {
    "from": 77,
    "label": "calls",
    "to": 88
  }, {
    "from": 77,
    "label": "calls",
    "to": 88
  }, {
    "from": 56,
    "label": "calls",
    "to": 88
  }, {
    "from": 77,
    "label": "calls",
    "to": 89
  }, {
    "from": 1,
    "label": "contains",
    "to": 77
  }, {
    "from": 77,
    "label": "declares",
    "to": 5
  }, {
    "from": 77,
    "label": "declares",
    "to": 22
  }, {
    "from": 77,
    "label": "declares",
    "to": 28
  }, {
    "from": 77,
    "label": "declares",
    "to": 41
  }, {
    "from": 77,
    "label": "declares",
    "to": 47
  }, {
    "from": 77,
    "label": "declares",
    "to": 56
  }, {
    "from": 77,
    "label": "declares",
    "to": 67
  }, {
    "from": 77,
    "label": "declares",
    "to": 73
  }, {
    "from": 77,
    "label": "declares",
    "to": 74
  }, {
    "from": 77,
    "label": "declares",
    "to": 75
  }, {
    "from": 77,
    "label": "declares",
    "to": 76
  }, {
    "from": 1,
    "label": "contains",
    "to": 91
  }, {
    "from": 1,
    "label": "contains",
    "to": 92
  }, {
    "from": 91,
    "label": "initializes",
    "to": 93
  }, {
    "from": 93,
    "label": "assigns",
    "to": 94
  }, {
    "from": 91,
    "label": "initializes",
    "to": 95
  }, {
    "from": 95,
    "label": "assigns",
    "to": 96
  }, {
    "from": 92,
    "label": "initializes",
    "to": 97
  }, {
    "from": 97,
    "label": "requires",
    "to": 4
  }, {
    "from": 92,
    "label": "initializes",
    "to": 98
  }, {
    "from": 98,
    "label": "requires",
    "to": 3
  }, {
    "from": 92,
    "label": "initializes",
    "to": 99
  }, {
    "from": 99,
    "label": "requires",
    "to": 2
  }, {
    "from": 92,
    "label": "initializes",
    "to": 90
  }, {
    "from": 30,
    "label": "hasArgument",
    "to": 73
  }, {
    "from": 32,
    "label": "hasArgument",
    "to": 74
  }, {
    "from": 34,
    "label": "hasArgument",
    "to": 75
  }, {
    "from": 43,
    "label": "hasArgument",
    "to": 76
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "urn-isbn",
    "type": "module"
  }, {
    "id": 2,
    "text": "isbn",
    "type": "module"
  }, {
    "id": 3,
    "text": "_util",
    "type": "module"
  }, {
    "id": 4,
    "text": "uri",
    "type": "module"
  }, {
    "id": 5,
    "text": "function testcase:test_isbn ()\r\n    -- Example from RFC 2288\r\n    local u = URI:new(\"URN:ISBN:0-395-36341-1\")\r\n    is(have_isbn_module and \"urn:isbn:0-395-36341-1\" or \"urn:isbn:0395363411\",\r\n       u:uri())\r\n    is(\"urn\", u:scheme())\r\n    is(\"isbn\", u:nid())\r\n    is(have_isbn_module and \"0-395-36341-1\" or \"0395363411\", u:nss())\r\n    is(\"0395363411\", u:isbn_digits())\r\n\r\n    u = URI:new(\"URN:ISBN:0395363411\")\r\n    is(have_isbn_module and \"urn:isbn:0-395-36341-1\" or \"urn:isbn:0395363411\",\r\n       u:uri())\r\n    is(\"urn\", u:scheme())\r\n    is(\"isbn\", u:nid())\r\n    is(have_isbn_module and \"0-395-36341-1\" or \"0395363411\", u:nss())\r\n    is(\"0395363411\", u:isbn_digits())\r\n\r\n    if have_isbn_module then\r\n        local isbn = u:isbn()\r\n        assert_table(isbn)\r\n        is(\"0-395-36341-1\", tostring(isbn))\r\n        is(\"0\", isbn:group_code())\r\n        is(\"395\", isbn:publisher_code())\r\n        is(\"978-0-395-36341-6\", tostring(isbn:as_isbn13()))\r\n    end\r\n\r\n    assert_true(URI.eq(\"urn:isbn:088730866x\", \"URN:ISBN:0-88-73-08-66-X\"))\r\nend",
    "type": "function"
  }, {
    "id": 6,
    "text": "local u = URI:new(\"URN:ISBN:0-395-36341-1\")",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "is(have_isbn_module and \"urn:isbn:0-395-36341-1\" or \"urn:isbn:0395363411\",\r\n       u:uri())",
    "type": "statement:functioncall"
  }, {
    "id": 8,
    "text": "is(\"urn\", u:scheme())",
    "type": "statement:functioncall"
  }, {
    "id": 9,
    "text": "is(\"isbn\", u:nid())",
    "type": "statement:functioncall"
  }, {
    "id": 10,
    "text": "is(have_isbn_module and \"0-395-36341-1\" or \"0395363411\", u:nss())",
    "type": "statement:functioncall"
  }, {
    "id": 11,
    "text": "is(\"0395363411\", u:isbn_digits())",
    "type": "statement:functioncall"
  }, {
    "id": 12,
    "text": "u = URI:new(\"URN:ISBN:0395363411\")",
    "type": "statement:assign"
  }, {
    "id": 13,
    "text": "if have_isbn_module then\r\n        local isbn = u:isbn()\r\n        assert_table(isbn)\r\n        is(\"0-395-36341-1\", tostring(isbn))\r\n        is(\"0\", isbn:group_code())\r\n        is(\"395\", isbn:publisher_code())\r\n        is(\"978-0-395-36341-6\", tostring(isbn:as_isbn13()))\r\n    end",
    "type": "statement:if"
  }, {
    "id": 14,
    "text": "local isbn = u:isbn()",
    "type": "statement:localassign"
  }, {
    "id": 15,
    "text": "assert_table(isbn)",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "is(\"0-395-36341-1\", tostring(isbn))",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "is(\"0\", isbn:group_code())",
    "type": "statement:functioncall"
  }, {
    "id": 18,
    "text": "is(\"395\", isbn:publisher_code())",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "is(\"978-0-395-36341-6\", tostring(isbn:as_isbn13()))",
    "type": "statement:functioncall"
  }, {
    "id": 20,
    "text": "assert_true(URI.eq(\"urn:isbn:088730866x\", \"URN:ISBN:0-88-73-08-66-X\"))",
    "type": "statement:functioncall"
  }, {
    "id": 21,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 22,
    "text": "function testcase:test_set_nss ()\r\n    local uri = assert(URI:new(\"urn:isbn:039-53-63411\"))\r\n    is(have_isbn_module and \"0-395-36341-1\" or \"0395363411\",\r\n       uri:nss(\"088-7308-66x\"))\r\n    is(have_isbn_module and \"urn:isbn:0-88730-866-X\" or \"urn:isbn:088730866X\",\r\n       tostring(uri))\r\n    is(have_isbn_module and \"0-88730-866-X\" or \"088730866X\", uri:nss())\r\nend",
    "type": "function"
  }, {
    "id": 23,
    "text": "local uri = assert(URI:new(\"urn:isbn:039-53-63411\"))",
    "type": "statement:localassign"
  }, {
    "id": 24,
    "text": "is(have_isbn_module and \"0-395-36341-1\" or \"0395363411\",\r\n       uri:nss(\"088-7308-66x\"))",
    "type": "statement:functioncall"
  }, {
    "id": 25,
    "text": "is(have_isbn_module and \"urn:isbn:0-88730-866-X\" or \"urn:isbn:088730866X\",\r\n       tostring(uri))",
    "type": "statement:functioncall"
  }, {
    "id": 26,
    "text": "is(have_isbn_module and \"0-88730-866-X\" or \"088730866X\", uri:nss())",
    "type": "statement:functioncall"
  }, {
    "id": 27,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 28,
    "text": "function testcase:test_set_bad_nss ()\r\n    local uri = assert(URI:new(\"urn:ISBN:039-53-63411\"))\r\n    assert_error(\"set NSS to non-string value\", function () uri:nss({}) end)\r\n    assert_error(\"set NSS to empty\", function () uri:nss(\"\") end)\r\n    assert_error(\"set NSS to wrong length\", function () uri:nss(\"123\") end)\r\n\r\n    -- None of that should have had any affect\r\n    is(have_isbn_module and \"urn:isbn:0-395-36341-1\" or \"urn:isbn:0395363411\",\r\n       tostring(uri))\r\n    is(have_isbn_module and \"0-395-36341-1\" or \"0395363411\", uri:nss())\r\n    is(\"0395363411\", uri:isbn_digits())\r\n    is(\"uri.urn.isbn\", uri._NAME)\r\nend",
    "type": "function"
  }, {
    "id": 29,
    "text": "local uri = assert(URI:new(\"urn:ISBN:039-53-63411\"))",
    "type": "statement:localassign"
  }, {
    "id": 30,
    "text": "assert_error(\"set NSS to non-string value\", function () uri:nss({}) end)",
    "type": "statement:functioncall"
  }, {
    "id": 31,
    "text": "uri:nss({})",
    "type": "statement:functioncall"
  }, {
    "id": 32,
    "text": "assert_error(\"set NSS to empty\", function () uri:nss(\"\") end)",
    "type": "statement:functioncall"
  }, {
    "id": 33,
    "text": "uri:nss(\"\")",
    "type": "statement:functioncall"
  }, {
    "id": 34,
    "text": "assert_error(\"set NSS to wrong length\", function () uri:nss(\"123\") end)",
    "type": "statement:functioncall"
  }, {
    "id": 35,
    "text": "uri:nss(\"123\")",
    "type": "statement:functioncall"
  }, {
    "id": 36,
    "text": "is(have_isbn_module and \"urn:isbn:0-395-36341-1\" or \"urn:isbn:0395363411\",\r\n       tostring(uri))",
    "type": "statement:functioncall"
  }, {
    "id": 37,
    "text": "is(have_isbn_module and \"0-395-36341-1\" or \"0395363411\", uri:nss())",
    "type": "statement:functioncall"
  }, {
    "id": 38,
    "text": "is(\"0395363411\", uri:isbn_digits())",
    "type": "statement:functioncall"
  }, {
    "id": 39,
    "text": "is(\"uri.urn.isbn\", uri._NAME)",
    "type": "statement:functioncall"
  }, {
    "id": 40,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 41,
    "text": "function testcase:test_set_path ()\r\n    local uri = assert(URI:new(\"urn:ISBN:039-53-63411\"))\r\n    is(have_isbn_module and \"isbn:0-395-36341-1\" or \"isbn:0395363411\",\r\n       uri:path(\"ISbn:088-73-0866x\"))\r\n    is(have_isbn_module and \"urn:isbn:0-88730-866-X\" or \"urn:isbn:088730866X\",\r\n       tostring(uri))\r\n\r\n    assert_error(\"bad path\", function () uri:path(\"isbn:1234567\") end)\r\n    is(have_isbn_module and \"urn:isbn:0-88730-866-X\" or \"urn:isbn:088730866X\",\r\n       tostring(uri))\r\n    is(have_isbn_module and \"isbn:0-88730-866-X\" or \"isbn:088730866X\",\r\n       uri:path())\r\nend",
    "type": "function"
  }, {
    "id": 42,
    "text": "is(have_isbn_module and \"isbn:0-395-36341-1\" or \"isbn:0395363411\",\r\n       uri:path(\"ISbn:088-73-0866x\"))",
    "type": "statement:functioncall"
  }, {
    "id": 43,
    "text": "assert_error(\"bad path\", function () uri:path(\"isbn:1234567\") end)",
    "type": "statement:functioncall"
  }, {
    "id": 44,
    "text": "uri:path(\"isbn:1234567\")",
    "type": "statement:functioncall"
  }, {
    "id": 45,
    "text": "is(have_isbn_module and \"isbn:0-88730-866-X\" or \"isbn:088730866X\",\r\n       uri:path())",
    "type": "statement:functioncall"
  }, {
    "id": 46,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 47,
    "text": "function testcase:test_isbn_setting_digits ()\r\n    local u = assert(URI:new(\"URN:ISBN:0395363411\"))\r\n    local old = u:isbn_digits(\"0-88730-866-x\")\r\n    is(\"0395363411\", old)\r\n    is(\"088730866X\", u:isbn_digits())\r\n    is(have_isbn_module and \"0-88730-866-X\" or \"088730866X\", u:nss())\r\n    if have_isbn_module then\r\n        is(\"0-88730-866-X\", tostring(u:isbn()))\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 48,
    "text": "local u = assert(URI:new(\"URN:ISBN:0395363411\"))",
    "type": "statement:localassign"
  }, {
    "id": 49,
    "text": "local old = u:isbn_digits(\"0-88730-866-x\")",
    "type": "statement:localassign"
  }, {
    "id": 50,
    "text": "is(\"0395363411\", old)",
    "type": "statement:functioncall"
  }, {
    "id": 51,
    "text": "is(\"088730866X\", u:isbn_digits())",
    "type": "statement:functioncall"
  }, {
    "id": 52,
    "text": "is(have_isbn_module and \"0-88730-866-X\" or \"088730866X\", u:nss())",
    "type": "statement:functioncall"
  }, {
    "id": 53,
    "text": "if have_isbn_module then\r\n        is(\"0-88730-866-X\", tostring(u:isbn()))\r\n    end",
    "type": "statement:if"
  }, {
    "id": 54,
    "text": "is(\"0-88730-866-X\", tostring(u:isbn()))",
    "type": "statement:functioncall"
  }, {
    "id": 55,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 56,
    "text": "function testcase:test_isbn_setting_object ()\r\n    if have_isbn_module then\r\n        local ISBN = require \"isbn\"\r\n        local u = assert(URI:new(\"URN:ISBN:0395363411\"))\r\n        local old = u:isbn(ISBN:new(\"0-88730-866-x\"))\r\n        assert_table(old)\r\n        is(\"0-395-36341-1\", tostring(old))\r\n        is(\"088730866X\", u:isbn_digits())\r\n        is(\"0-88730-866-X\", u:nss())\r\n        local new = u:isbn()\r\n        assert_table(new)\r\n        is(\"0-88730-866-X\", tostring(new))\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 57,
    "text": "if have_isbn_module then\r\n        local ISBN = require \"isbn\"\r\n        local u = assert(URI:new(\"URN:ISBN:0395363411\"))\r\n        local old = u:isbn(ISBN:new(\"0-88730-866-x\"))\r\n        assert_table(old)\r\n        is(\"0-395-36341-1\", tostring(old))\r\n        is(\"088730866X\", u:isbn_digits())\r\n        is(\"0-88730-866-X\", u:nss())\r\n        local new = u:isbn()\r\n        assert_table(new)\r\n        is(\"0-88730-866-X\", tostring(new))\r\n    end",
    "type": "statement:if"
  }, {
    "id": 58,
    "text": "local ISBN = require \"isbn\"",
    "type": "statement:localassign"
  }, {
    "id": 59,
    "text": "local old = u:isbn(ISBN:new(\"0-88730-866-x\"))",
    "type": "statement:localassign"
  }, {
    "id": 60,
    "text": "assert_table(old)",
    "type": "statement:functioncall"
  }, {
    "id": 61,
    "text": "is(\"0-395-36341-1\", tostring(old))",
    "type": "statement:functioncall"
  }, {
    "id": 62,
    "text": "is(\"0-88730-866-X\", u:nss())",
    "type": "statement:functioncall"
  }, {
    "id": 63,
    "text": "local new = u:isbn()",
    "type": "statement:localassign"
  }, {
    "id": 64,
    "text": "assert_table(new)",
    "type": "statement:functioncall"
  }, {
    "id": 65,
    "text": "is(\"0-88730-866-X\", tostring(new))",
    "type": "statement:functioncall"
  }, {
    "id": 66,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 67,
    "text": "function testcase:test_illegal_isbn ()\r\n    is_bad_uri(\"invalid characters\", \"urn:ISBN:abc\")\r\n    if have_isbn_module then\r\n        is_bad_uri(\"bad checksum\", \"urn:isbn:0395363412\")\r\n        is_bad_uri(\"wrong length\", \"urn:isbn:03953634101\")\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 68,
    "text": "is_bad_uri(\"invalid characters\", \"urn:ISBN:abc\")",
    "type": "statement:functioncall"
  }, {
    "id": 69,
    "text": "if have_isbn_module then\r\n        is_bad_uri(\"bad checksum\", \"urn:isbn:0395363412\")\r\n        is_bad_uri(\"wrong length\", \"urn:isbn:03953634101\")\r\n    end",
    "type": "statement:if"
  }, {
    "id": 70,
    "text": "is_bad_uri(\"bad checksum\", \"urn:isbn:0395363412\")",
    "type": "statement:functioncall"
  }, {
    "id": 71,
    "text": "is_bad_uri(\"wrong length\", \"urn:isbn:03953634101\")",
    "type": "statement:functioncall"
  }, {
    "id": 72,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 73,
    "text": "function () uri:nss({}) end",
    "type": "function"
  }, {
    "id": 74,
    "text": "function () uri:nss(\"\") end",
    "type": "function"
  }, {
    "id": 75,
    "text": "function () uri:nss(\"123\") end",
    "type": "function"
  }, {
    "id": 76,
    "text": "function () uri:path(\"isbn:1234567\") end",
    "type": "function"
  }, {
    "id": 77,
    "text": "",
    "type": "function container"
  }, {
    "id": 78,
    "text": "eq",
    "type": "global function"
  }, {
    "id": 79,
    "text": "attempt_require",
    "type": "global function"
  }, {
    "id": 80,
    "text": "assert_table",
    "type": "global function"
  }, {
    "id": 81,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 82,
    "text": "tostring",
    "type": "global function"
  }, {
    "id": 83,
    "text": "assert_error",
    "type": "global function"
  }, {
    "id": 84,
    "text": "assert_true",
    "type": "global function"
  }, {
    "id": 85,
    "text": "TestCase",
    "type": "global function"
  }, {
    "id": 86,
    "text": "is_bad_uri",
    "type": "global function"
  }, {
    "id": 87,
    "text": "is",
    "type": "global function"
  }, {
    "id": 88,
    "text": "require",
    "type": "global function"
  }, {
    "id": 89,
    "text": "run",
    "type": "global function"
  }, {
    "id": 90,
    "text": "",
    "type": "global variable"
  }, {
    "id": 91,
    "text": "",
    "type": "variable container"
  }, {
    "id": 92,
    "text": "",
    "type": "require container"
  }, {
    "id": 93,
    "text": "",
    "type": "local variable"
  }, {
    "id": 94,
    "text": "",
    "type": "n/a"
  }, {
    "id": 95,
    "text": "",
    "type": "local variable"
  }, {
    "id": 96,
    "text": "",
    "type": "n/a"
  }, {
    "id": 97,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 98,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 99,
    "text": "",
    "type": "require local variable"
  } ]
}