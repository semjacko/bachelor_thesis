{
  "_filename": "auidemo.wx.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/wxlua/samples/auidemo.wx.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 4,
    "label": "has",
    "to": 3
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 6,
    "label": "has",
    "to": 7
  }, {
    "from": 5,
    "label": "has",
    "to": 8
  }, {
    "from": 5,
    "label": "has",
    "to": 3
  }, {
    "from": 5,
    "label": "has",
    "to": 9
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 10,
    "label": "has",
    "to": 12
  }, {
    "from": 10,
    "label": "has",
    "to": 13
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 10,
    "label": "has",
    "to": 15
  }, {
    "from": 10,
    "label": "has",
    "to": 16
  }, {
    "from": 16,
    "label": "has",
    "to": 17
  }, {
    "from": 16,
    "label": "has",
    "to": 18
  }, {
    "from": 16,
    "label": "has",
    "to": 19
  }, {
    "from": 16,
    "label": "has",
    "to": 20
  }, {
    "from": 16,
    "label": "has",
    "to": 21
  }, {
    "from": 16,
    "label": "has",
    "to": 22
  }, {
    "from": 16,
    "label": "has",
    "to": 23
  }, {
    "from": 16,
    "label": "has",
    "to": 24
  }, {
    "from": 16,
    "label": "has",
    "to": 25
  }, {
    "from": 16,
    "label": "has",
    "to": 26
  }, {
    "from": 16,
    "label": "has",
    "to": 27
  }, {
    "from": 16,
    "label": "has",
    "to": 28
  }, {
    "from": 16,
    "label": "has",
    "to": 29
  }, {
    "from": 16,
    "label": "has",
    "to": 30
  }, {
    "from": 16,
    "label": "has",
    "to": 31
  }, {
    "from": 16,
    "label": "has",
    "to": 32
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 32,
    "label": "has",
    "to": 34
  }, {
    "from": 32,
    "label": "has",
    "to": 35
  }, {
    "from": 32,
    "label": "has",
    "to": 36
  }, {
    "from": 32,
    "label": "has",
    "to": 37
  }, {
    "from": 32,
    "label": "has",
    "to": 35
  }, {
    "from": 32,
    "label": "has",
    "to": 38
  }, {
    "from": 32,
    "label": "has",
    "to": 39
  }, {
    "from": 32,
    "label": "has",
    "to": 35
  }, {
    "from": 32,
    "label": "has",
    "to": 40
  }, {
    "from": 32,
    "label": "has",
    "to": 41
  }, {
    "from": 32,
    "label": "has",
    "to": 35
  }, {
    "from": 32,
    "label": "has",
    "to": 42
  }, {
    "from": 16,
    "label": "has",
    "to": 43
  }, {
    "from": 10,
    "label": "has",
    "to": 3
  }, {
    "from": 10,
    "label": "has",
    "to": 44
  }, {
    "from": 45,
    "label": "has",
    "to": 46
  }, {
    "from": 45,
    "label": "has",
    "to": 47
  }, {
    "from": 45,
    "label": "has",
    "to": 48
  }, {
    "from": 45,
    "label": "has",
    "to": 49
  }, {
    "from": 45,
    "label": "has",
    "to": 50
  }, {
    "from": 45,
    "label": "has",
    "to": 51
  }, {
    "from": 45,
    "label": "has",
    "to": 52
  }, {
    "from": 45,
    "label": "has",
    "to": 53
  }, {
    "from": 45,
    "label": "has",
    "to": 51
  }, {
    "from": 45,
    "label": "has",
    "to": 54
  }, {
    "from": 45,
    "label": "has",
    "to": 55
  }, {
    "from": 45,
    "label": "has",
    "to": 56
  }, {
    "from": 45,
    "label": "has",
    "to": 57
  }, {
    "from": 45,
    "label": "has",
    "to": 58
  }, {
    "from": 45,
    "label": "has",
    "to": 59
  }, {
    "from": 45,
    "label": "has",
    "to": 57
  }, {
    "from": 45,
    "label": "has",
    "to": 60
  }, {
    "from": 45,
    "label": "has",
    "to": 61
  }, {
    "from": 45,
    "label": "has",
    "to": 62
  }, {
    "from": 45,
    "label": "has",
    "to": 63
  }, {
    "from": 45,
    "label": "has",
    "to": 64
  }, {
    "from": 45,
    "label": "has",
    "to": 65
  }, {
    "from": 45,
    "label": "has",
    "to": 63
  }, {
    "from": 45,
    "label": "has",
    "to": 66
  }, {
    "from": 45,
    "label": "has",
    "to": 67
  }, {
    "from": 45,
    "label": "has",
    "to": 68
  }, {
    "from": 45,
    "label": "has",
    "to": 69
  }, {
    "from": 45,
    "label": "has",
    "to": 70
  }, {
    "from": 45,
    "label": "has",
    "to": 71
  }, {
    "from": 45,
    "label": "has",
    "to": 72
  }, {
    "from": 45,
    "label": "has",
    "to": 70
  }, {
    "from": 45,
    "label": "has",
    "to": 73
  }, {
    "from": 45,
    "label": "has",
    "to": 74
  }, {
    "from": 45,
    "label": "has",
    "to": 75
  }, {
    "from": 45,
    "label": "has",
    "to": 76
  }, {
    "from": 45,
    "label": "has",
    "to": 77
  }, {
    "from": 45,
    "label": "has",
    "to": 78
  }, {
    "from": 45,
    "label": "has",
    "to": 76
  }, {
    "from": 45,
    "label": "has",
    "to": 79
  }, {
    "from": 45,
    "label": "has",
    "to": 80
  }, {
    "from": 45,
    "label": "has",
    "to": 81
  }, {
    "from": 45,
    "label": "has",
    "to": 82
  }, {
    "from": 45,
    "label": "has",
    "to": 83
  }, {
    "from": 45,
    "label": "has",
    "to": 84
  }, {
    "from": 45,
    "label": "has",
    "to": 82
  }, {
    "from": 45,
    "label": "has",
    "to": 85
  }, {
    "from": 45,
    "label": "has",
    "to": 86
  }, {
    "from": 45,
    "label": "has",
    "to": 87
  }, {
    "from": 45,
    "label": "has",
    "to": 88
  }, {
    "from": 45,
    "label": "has",
    "to": 89
  }, {
    "from": 45,
    "label": "has",
    "to": 90
  }, {
    "from": 45,
    "label": "has",
    "to": 88
  }, {
    "from": 45,
    "label": "has",
    "to": 91
  }, {
    "from": 45,
    "label": "has",
    "to": 92
  }, {
    "from": 45,
    "label": "has",
    "to": 93
  }, {
    "from": 45,
    "label": "has",
    "to": 94
  }, {
    "from": 45,
    "label": "has",
    "to": 95
  }, {
    "from": 45,
    "label": "has",
    "to": 96
  }, {
    "from": 45,
    "label": "has",
    "to": 94
  }, {
    "from": 45,
    "label": "has",
    "to": 97
  }, {
    "from": 45,
    "label": "has",
    "to": 98
  }, {
    "from": 45,
    "label": "has",
    "to": 99
  }, {
    "from": 45,
    "label": "has",
    "to": 100
  }, {
    "from": 45,
    "label": "has",
    "to": 101
  }, {
    "from": 45,
    "label": "has",
    "to": 102
  }, {
    "from": 45,
    "label": "has",
    "to": 100
  }, {
    "from": 45,
    "label": "has",
    "to": 103
  }, {
    "from": 45,
    "label": "has",
    "to": 104
  }, {
    "from": 45,
    "label": "has",
    "to": 105
  }, {
    "from": 45,
    "label": "has",
    "to": 106
  }, {
    "from": 45,
    "label": "has",
    "to": 107
  }, {
    "from": 45,
    "label": "has",
    "to": 108
  }, {
    "from": 45,
    "label": "has",
    "to": 106
  }, {
    "from": 45,
    "label": "has",
    "to": 109
  }, {
    "from": 45,
    "label": "has",
    "to": 110
  }, {
    "from": 45,
    "label": "has",
    "to": 111
  }, {
    "from": 45,
    "label": "has",
    "to": 112
  }, {
    "from": 45,
    "label": "has",
    "to": 113
  }, {
    "from": 45,
    "label": "has",
    "to": 114
  }, {
    "from": 45,
    "label": "has",
    "to": 112
  }, {
    "from": 45,
    "label": "has",
    "to": 115
  }, {
    "from": 45,
    "label": "has",
    "to": 116
  }, {
    "from": 45,
    "label": "has",
    "to": 117
  }, {
    "from": 45,
    "label": "has",
    "to": 118
  }, {
    "from": 45,
    "label": "has",
    "to": 119
  }, {
    "from": 45,
    "label": "has",
    "to": 120
  }, {
    "from": 45,
    "label": "has",
    "to": 118
  }, {
    "from": 45,
    "label": "has",
    "to": 121
  }, {
    "from": 45,
    "label": "has",
    "to": 122
  }, {
    "from": 45,
    "label": "has",
    "to": 123
  }, {
    "from": 45,
    "label": "has",
    "to": 124
  }, {
    "from": 45,
    "label": "has",
    "to": 125
  }, {
    "from": 45,
    "label": "has",
    "to": 126
  }, {
    "from": 45,
    "label": "has",
    "to": 124
  }, {
    "from": 45,
    "label": "has",
    "to": 127
  }, {
    "from": 45,
    "label": "has",
    "to": 128
  }, {
    "from": 45,
    "label": "has",
    "to": 129
  }, {
    "from": 45,
    "label": "has",
    "to": 130
  }, {
    "from": 45,
    "label": "has",
    "to": 131
  }, {
    "from": 45,
    "label": "has",
    "to": 132
  }, {
    "from": 45,
    "label": "has",
    "to": 133
  }, {
    "from": 45,
    "label": "has",
    "to": 134
  }, {
    "from": 45,
    "label": "has",
    "to": 135
  }, {
    "from": 45,
    "label": "has",
    "to": 136
  }, {
    "from": 45,
    "label": "has",
    "to": 137
  }, {
    "from": 45,
    "label": "has",
    "to": 138
  }, {
    "from": 45,
    "label": "has",
    "to": 139
  }, {
    "from": 45,
    "label": "has",
    "to": 140
  }, {
    "from": 45,
    "label": "has",
    "to": 141
  }, {
    "from": 45,
    "label": "has",
    "to": 142
  }, {
    "from": 45,
    "label": "has",
    "to": 143
  }, {
    "from": 45,
    "label": "has",
    "to": 144
  }, {
    "from": 45,
    "label": "has",
    "to": 145
  }, {
    "from": 45,
    "label": "has",
    "to": 146
  }, {
    "from": 45,
    "label": "has",
    "to": 147
  }, {
    "from": 45,
    "label": "has",
    "to": 148
  }, {
    "from": 45,
    "label": "has",
    "to": 149
  }, {
    "from": 149,
    "label": "has",
    "to": 150
  }, {
    "from": 45,
    "label": "has",
    "to": 151
  }, {
    "from": 151,
    "label": "has",
    "to": 152
  }, {
    "from": 45,
    "label": "has",
    "to": 153
  }, {
    "from": 153,
    "label": "has",
    "to": 154
  }, {
    "from": 45,
    "label": "has",
    "to": 155
  }, {
    "from": 155,
    "label": "has",
    "to": 156
  }, {
    "from": 45,
    "label": "has",
    "to": 157
  }, {
    "from": 157,
    "label": "has",
    "to": 156
  }, {
    "from": 45,
    "label": "has",
    "to": 158
  }, {
    "from": 158,
    "label": "has",
    "to": 156
  }, {
    "from": 45,
    "label": "has",
    "to": 159
  }, {
    "from": 159,
    "label": "has",
    "to": 156
  }, {
    "from": 45,
    "label": "has",
    "to": 160
  }, {
    "from": 160,
    "label": "has",
    "to": 156
  }, {
    "from": 45,
    "label": "has",
    "to": 161
  }, {
    "from": 161,
    "label": "has",
    "to": 156
  }, {
    "from": 45,
    "label": "has",
    "to": 162
  }, {
    "from": 162,
    "label": "has",
    "to": 156
  }, {
    "from": 45,
    "label": "has",
    "to": 163
  }, {
    "from": 163,
    "label": "has",
    "to": 156
  }, {
    "from": 45,
    "label": "has",
    "to": 164
  }, {
    "from": 164,
    "label": "has",
    "to": 156
  }, {
    "from": 45,
    "label": "has",
    "to": 165
  }, {
    "from": 165,
    "label": "has",
    "to": 156
  }, {
    "from": 45,
    "label": "has",
    "to": 3
  }, {
    "from": 45,
    "label": "has",
    "to": 166
  }, {
    "from": 167,
    "label": "has",
    "to": 168
  }, {
    "from": 167,
    "label": "has",
    "to": 169
  }, {
    "from": 167,
    "label": "has",
    "to": 170
  }, {
    "from": 170,
    "label": "has",
    "to": 171
  }, {
    "from": 171,
    "label": "has",
    "to": 172
  }, {
    "from": 171,
    "label": "has",
    "to": 173
  }, {
    "from": 173,
    "label": "has",
    "to": 174
  }, {
    "from": 171,
    "label": "has",
    "to": 175
  }, {
    "from": 167,
    "label": "has",
    "to": 3
  }, {
    "from": 167,
    "label": "has",
    "to": 176
  }, {
    "from": 177,
    "label": "has",
    "to": 178
  }, {
    "from": 177,
    "label": "has",
    "to": 179
  }, {
    "from": 177,
    "label": "has",
    "to": 180
  }, {
    "from": 177,
    "label": "has",
    "to": 181
  }, {
    "from": 177,
    "label": "has",
    "to": 182
  }, {
    "from": 177,
    "label": "has",
    "to": 183
  }, {
    "from": 177,
    "label": "has",
    "to": 184
  }, {
    "from": 177,
    "label": "has",
    "to": 185
  }, {
    "from": 177,
    "label": "has",
    "to": 186
  }, {
    "from": 177,
    "label": "has",
    "to": 187
  }, {
    "from": 177,
    "label": "has",
    "to": 188
  }, {
    "from": 177,
    "label": "has",
    "to": 189
  }, {
    "from": 177,
    "label": "has",
    "to": 190
  }, {
    "from": 177,
    "label": "has",
    "to": 191
  }, {
    "from": 177,
    "label": "has",
    "to": 192
  }, {
    "from": 177,
    "label": "has",
    "to": 193
  }, {
    "from": 177,
    "label": "has",
    "to": 194
  }, {
    "from": 177,
    "label": "has",
    "to": 195
  }, {
    "from": 177,
    "label": "has",
    "to": 196
  }, {
    "from": 177,
    "label": "has",
    "to": 197
  }, {
    "from": 177,
    "label": "has",
    "to": 198
  }, {
    "from": 199,
    "label": "has",
    "to": 200
  }, {
    "from": 199,
    "label": "has",
    "to": 201
  }, {
    "from": 199,
    "label": "has",
    "to": 202
  }, {
    "from": 203,
    "label": "has",
    "to": 204
  }, {
    "from": 203,
    "label": "has",
    "to": 201
  }, {
    "from": 203,
    "label": "has",
    "to": 205
  }, {
    "from": 206,
    "label": "has",
    "to": 207
  }, {
    "from": 206,
    "label": "has",
    "to": 201
  }, {
    "from": 206,
    "label": "has",
    "to": 208
  }, {
    "from": 209,
    "label": "has",
    "to": 210
  }, {
    "from": 209,
    "label": "has",
    "to": 211
  }, {
    "from": 209,
    "label": "has",
    "to": 212
  }, {
    "from": 209,
    "label": "has",
    "to": 3
  }, {
    "from": 209,
    "label": "has",
    "to": 213
  }, {
    "from": 209,
    "label": "has",
    "to": 214
  }, {
    "from": 209,
    "label": "has",
    "to": 215
  }, {
    "from": 215,
    "label": "has",
    "to": 216
  }, {
    "from": 215,
    "label": "has",
    "to": 217
  }, {
    "from": 215,
    "label": "has",
    "to": 218
  }, {
    "from": 215,
    "label": "has",
    "to": 219
  }, {
    "from": 215,
    "label": "has",
    "to": 220
  }, {
    "from": 215,
    "label": "has",
    "to": 221
  }, {
    "from": 215,
    "label": "has",
    "to": 222
  }, {
    "from": 215,
    "label": "has",
    "to": 223
  }, {
    "from": 215,
    "label": "has",
    "to": 224
  }, {
    "from": 215,
    "label": "has",
    "to": 225
  }, {
    "from": 209,
    "label": "has",
    "to": 3
  }, {
    "from": 209,
    "label": "has",
    "to": 226
  }, {
    "from": 209,
    "label": "has",
    "to": 201
  }, {
    "from": 209,
    "label": "has",
    "to": 148
  }, {
    "from": 209,
    "label": "has",
    "to": 227
  }, {
    "from": 228,
    "label": "has",
    "to": 229
  }, {
    "from": 228,
    "label": "has",
    "to": 48
  }, {
    "from": 228,
    "label": "has",
    "to": 230
  }, {
    "from": 228,
    "label": "has",
    "to": 231
  }, {
    "from": 228,
    "label": "has",
    "to": 232
  }, {
    "from": 228,
    "label": "has",
    "to": 233
  }, {
    "from": 228,
    "label": "has",
    "to": 234
  }, {
    "from": 228,
    "label": "has",
    "to": 235
  }, {
    "from": 228,
    "label": "has",
    "to": 236
  }, {
    "from": 228,
    "label": "has",
    "to": 237
  }, {
    "from": 228,
    "label": "has",
    "to": 238
  }, {
    "from": 228,
    "label": "has",
    "to": 239
  }, {
    "from": 228,
    "label": "has",
    "to": 240
  }, {
    "from": 228,
    "label": "has",
    "to": 241
  }, {
    "from": 228,
    "label": "has",
    "to": 242
  }, {
    "from": 228,
    "label": "has",
    "to": 243
  }, {
    "from": 228,
    "label": "has",
    "to": 244
  }, {
    "from": 228,
    "label": "has",
    "to": 245
  }, {
    "from": 228,
    "label": "has",
    "to": 246
  }, {
    "from": 228,
    "label": "has",
    "to": 247
  }, {
    "from": 228,
    "label": "has",
    "to": 248
  }, {
    "from": 228,
    "label": "has",
    "to": 249
  }, {
    "from": 228,
    "label": "has",
    "to": 250
  }, {
    "from": 228,
    "label": "has",
    "to": 251
  }, {
    "from": 228,
    "label": "has",
    "to": 252
  }, {
    "from": 228,
    "label": "has",
    "to": 253
  }, {
    "from": 228,
    "label": "has",
    "to": 254
  }, {
    "from": 228,
    "label": "has",
    "to": 255
  }, {
    "from": 228,
    "label": "has",
    "to": 256
  }, {
    "from": 228,
    "label": "has",
    "to": 257
  }, {
    "from": 228,
    "label": "has",
    "to": 258
  }, {
    "from": 228,
    "label": "has",
    "to": 259
  }, {
    "from": 228,
    "label": "has",
    "to": 260
  }, {
    "from": 228,
    "label": "has",
    "to": 261
  }, {
    "from": 228,
    "label": "has",
    "to": 262
  }, {
    "from": 228,
    "label": "has",
    "to": 263
  }, {
    "from": 228,
    "label": "has",
    "to": 264
  }, {
    "from": 228,
    "label": "has",
    "to": 265
  }, {
    "from": 228,
    "label": "has",
    "to": 266
  }, {
    "from": 228,
    "label": "has",
    "to": 267
  }, {
    "from": 228,
    "label": "has",
    "to": 262
  }, {
    "from": 228,
    "label": "has",
    "to": 268
  }, {
    "from": 228,
    "label": "has",
    "to": 269
  }, {
    "from": 228,
    "label": "has",
    "to": 270
  }, {
    "from": 228,
    "label": "has",
    "to": 262
  }, {
    "from": 228,
    "label": "has",
    "to": 271
  }, {
    "from": 228,
    "label": "has",
    "to": 272
  }, {
    "from": 228,
    "label": "has",
    "to": 273
  }, {
    "from": 228,
    "label": "has",
    "to": 274
  }, {
    "from": 228,
    "label": "has",
    "to": 275
  }, {
    "from": 228,
    "label": "has",
    "to": 276
  }, {
    "from": 228,
    "label": "has",
    "to": 277
  }, {
    "from": 228,
    "label": "has",
    "to": 278
  }, {
    "from": 228,
    "label": "has",
    "to": 279
  }, {
    "from": 228,
    "label": "has",
    "to": 275
  }, {
    "from": 228,
    "label": "has",
    "to": 280
  }, {
    "from": 228,
    "label": "has",
    "to": 281
  }, {
    "from": 228,
    "label": "has",
    "to": 275
  }, {
    "from": 228,
    "label": "has",
    "to": 282
  }, {
    "from": 228,
    "label": "has",
    "to": 283
  }, {
    "from": 228,
    "label": "has",
    "to": 284
  }, {
    "from": 228,
    "label": "has",
    "to": 285
  }, {
    "from": 228,
    "label": "has",
    "to": 286
  }, {
    "from": 228,
    "label": "has",
    "to": 287
  }, {
    "from": 228,
    "label": "has",
    "to": 288
  }, {
    "from": 228,
    "label": "has",
    "to": 289
  }, {
    "from": 228,
    "label": "has",
    "to": 290
  }, {
    "from": 228,
    "label": "has",
    "to": 291
  }, {
    "from": 228,
    "label": "has",
    "to": 292
  }, {
    "from": 228,
    "label": "has",
    "to": 293
  }, {
    "from": 228,
    "label": "has",
    "to": 294
  }, {
    "from": 228,
    "label": "has",
    "to": 295
  }, {
    "from": 228,
    "label": "has",
    "to": 296
  }, {
    "from": 228,
    "label": "has",
    "to": 297
  }, {
    "from": 228,
    "label": "has",
    "to": 298
  }, {
    "from": 228,
    "label": "has",
    "to": 299
  }, {
    "from": 228,
    "label": "has",
    "to": 300
  }, {
    "from": 228,
    "label": "has",
    "to": 301
  }, {
    "from": 228,
    "label": "has",
    "to": 302
  }, {
    "from": 228,
    "label": "has",
    "to": 303
  }, {
    "from": 228,
    "label": "has",
    "to": 304
  }, {
    "from": 228,
    "label": "has",
    "to": 305
  }, {
    "from": 228,
    "label": "has",
    "to": 306
  }, {
    "from": 228,
    "label": "has",
    "to": 307
  }, {
    "from": 228,
    "label": "has",
    "to": 308
  }, {
    "from": 228,
    "label": "has",
    "to": 309
  }, {
    "from": 228,
    "label": "has",
    "to": 310
  }, {
    "from": 228,
    "label": "has",
    "to": 311
  }, {
    "from": 228,
    "label": "has",
    "to": 312
  }, {
    "from": 228,
    "label": "has",
    "to": 313
  }, {
    "from": 228,
    "label": "has",
    "to": 314
  }, {
    "from": 228,
    "label": "has",
    "to": 315
  }, {
    "from": 228,
    "label": "has",
    "to": 316
  }, {
    "from": 228,
    "label": "has",
    "to": 317
  }, {
    "from": 228,
    "label": "has",
    "to": 318
  }, {
    "from": 228,
    "label": "has",
    "to": 318
  }, {
    "from": 228,
    "label": "has",
    "to": 318
  }, {
    "from": 228,
    "label": "has",
    "to": 318
  }, {
    "from": 228,
    "label": "has",
    "to": 319
  }, {
    "from": 228,
    "label": "has",
    "to": 318
  }, {
    "from": 228,
    "label": "has",
    "to": 318
  }, {
    "from": 228,
    "label": "has",
    "to": 319
  }, {
    "from": 228,
    "label": "has",
    "to": 318
  }, {
    "from": 228,
    "label": "has",
    "to": 318
  }, {
    "from": 228,
    "label": "has",
    "to": 318
  }, {
    "from": 228,
    "label": "has",
    "to": 318
  }, {
    "from": 228,
    "label": "has",
    "to": 320
  }, {
    "from": 228,
    "label": "has",
    "to": 321
  }, {
    "from": 228,
    "label": "has",
    "to": 322
  }, {
    "from": 228,
    "label": "has",
    "to": 323
  }, {
    "from": 228,
    "label": "has",
    "to": 324
  }, {
    "from": 228,
    "label": "has",
    "to": 324
  }, {
    "from": 228,
    "label": "has",
    "to": 324
  }, {
    "from": 228,
    "label": "has",
    "to": 324
  }, {
    "from": 228,
    "label": "has",
    "to": 325
  }, {
    "from": 228,
    "label": "has",
    "to": 324
  }, {
    "from": 228,
    "label": "has",
    "to": 324
  }, {
    "from": 228,
    "label": "has",
    "to": 326
  }, {
    "from": 228,
    "label": "has",
    "to": 327
  }, {
    "from": 228,
    "label": "has",
    "to": 328
  }, {
    "from": 228,
    "label": "has",
    "to": 329
  }, {
    "from": 228,
    "label": "has",
    "to": 330
  }, {
    "from": 228,
    "label": "has",
    "to": 331
  }, {
    "from": 228,
    "label": "has",
    "to": 332
  }, {
    "from": 228,
    "label": "has",
    "to": 333
  }, {
    "from": 228,
    "label": "has",
    "to": 334
  }, {
    "from": 228,
    "label": "has",
    "to": 335
  }, {
    "from": 228,
    "label": "has",
    "to": 336
  }, {
    "from": 228,
    "label": "has",
    "to": 337
  }, {
    "from": 228,
    "label": "has",
    "to": 338
  }, {
    "from": 228,
    "label": "has",
    "to": 339
  }, {
    "from": 228,
    "label": "has",
    "to": 340
  }, {
    "from": 228,
    "label": "has",
    "to": 341
  }, {
    "from": 228,
    "label": "has",
    "to": 342
  }, {
    "from": 228,
    "label": "has",
    "to": 343
  }, {
    "from": 228,
    "label": "has",
    "to": 344
  }, {
    "from": 228,
    "label": "has",
    "to": 345
  }, {
    "from": 228,
    "label": "has",
    "to": 346
  }, {
    "from": 228,
    "label": "has",
    "to": 347
  }, {
    "from": 228,
    "label": "has",
    "to": 348
  }, {
    "from": 228,
    "label": "has",
    "to": 349
  }, {
    "from": 228,
    "label": "has",
    "to": 350
  }, {
    "from": 228,
    "label": "has",
    "to": 351
  }, {
    "from": 228,
    "label": "has",
    "to": 352
  }, {
    "from": 228,
    "label": "has",
    "to": 353
  }, {
    "from": 228,
    "label": "has",
    "to": 354
  }, {
    "from": 228,
    "label": "has",
    "to": 355
  }, {
    "from": 228,
    "label": "has",
    "to": 356
  }, {
    "from": 228,
    "label": "has",
    "to": 357
  }, {
    "from": 228,
    "label": "has",
    "to": 358
  }, {
    "from": 228,
    "label": "has",
    "to": 359
  }, {
    "from": 228,
    "label": "has",
    "to": 360
  }, {
    "from": 228,
    "label": "has",
    "to": 361
  }, {
    "from": 228,
    "label": "has",
    "to": 362
  }, {
    "from": 228,
    "label": "has",
    "to": 363
  }, {
    "from": 228,
    "label": "has",
    "to": 364
  }, {
    "from": 228,
    "label": "has",
    "to": 365
  }, {
    "from": 228,
    "label": "has",
    "to": 366
  }, {
    "from": 228,
    "label": "has",
    "to": 367
  }, {
    "from": 228,
    "label": "has",
    "to": 368
  }, {
    "from": 228,
    "label": "has",
    "to": 369
  }, {
    "from": 228,
    "label": "has",
    "to": 370
  }, {
    "from": 228,
    "label": "has",
    "to": 371
  }, {
    "from": 228,
    "label": "has",
    "to": 372
  }, {
    "from": 228,
    "label": "has",
    "to": 373
  }, {
    "from": 228,
    "label": "has",
    "to": 374
  }, {
    "from": 228,
    "label": "has",
    "to": 375
  }, {
    "from": 228,
    "label": "has",
    "to": 376
  }, {
    "from": 228,
    "label": "has",
    "to": 377
  }, {
    "from": 228,
    "label": "has",
    "to": 378
  }, {
    "from": 378,
    "label": "has",
    "to": 379
  }, {
    "from": 379,
    "label": "has",
    "to": 380
  }, {
    "from": 228,
    "label": "has",
    "to": 381
  }, {
    "from": 228,
    "label": "has",
    "to": 382
  }, {
    "from": 228,
    "label": "has",
    "to": 383
  }, {
    "from": 228,
    "label": "has",
    "to": 384
  }, {
    "from": 228,
    "label": "has",
    "to": 385
  }, {
    "from": 228,
    "label": "has",
    "to": 386
  }, {
    "from": 228,
    "label": "has",
    "to": 387
  }, {
    "from": 228,
    "label": "has",
    "to": 388
  }, {
    "from": 228,
    "label": "has",
    "to": 389
  }, {
    "from": 228,
    "label": "has",
    "to": 390
  }, {
    "from": 228,
    "label": "has",
    "to": 391
  }, {
    "from": 391,
    "label": "has",
    "to": 392
  }, {
    "from": 228,
    "label": "has",
    "to": 393
  }, {
    "from": 393,
    "label": "has",
    "to": 394
  }, {
    "from": 228,
    "label": "has",
    "to": 395
  }, {
    "from": 395,
    "label": "has",
    "to": 396
  }, {
    "from": 228,
    "label": "has",
    "to": 397
  }, {
    "from": 397,
    "label": "has",
    "to": 398
  }, {
    "from": 228,
    "label": "has",
    "to": 399
  }, {
    "from": 399,
    "label": "has",
    "to": 400
  }, {
    "from": 228,
    "label": "has",
    "to": 401
  }, {
    "from": 401,
    "label": "has",
    "to": 402
  }, {
    "from": 228,
    "label": "has",
    "to": 403
  }, {
    "from": 403,
    "label": "has",
    "to": 404
  }, {
    "from": 228,
    "label": "has",
    "to": 405
  }, {
    "from": 405,
    "label": "has",
    "to": 406
  }, {
    "from": 228,
    "label": "has",
    "to": 407
  }, {
    "from": 407,
    "label": "has",
    "to": 408
  }, {
    "from": 228,
    "label": "has",
    "to": 409
  }, {
    "from": 409,
    "label": "has",
    "to": 410
  }, {
    "from": 228,
    "label": "has",
    "to": 411
  }, {
    "from": 411,
    "label": "has",
    "to": 412
  }, {
    "from": 228,
    "label": "has",
    "to": 413
  }, {
    "from": 413,
    "label": "has",
    "to": 412
  }, {
    "from": 228,
    "label": "has",
    "to": 414
  }, {
    "from": 414,
    "label": "has",
    "to": 412
  }, {
    "from": 228,
    "label": "has",
    "to": 415
  }, {
    "from": 415,
    "label": "has",
    "to": 412
  }, {
    "from": 228,
    "label": "has",
    "to": 416
  }, {
    "from": 416,
    "label": "has",
    "to": 412
  }, {
    "from": 228,
    "label": "has",
    "to": 417
  }, {
    "from": 417,
    "label": "has",
    "to": 412
  }, {
    "from": 228,
    "label": "has",
    "to": 418
  }, {
    "from": 418,
    "label": "has",
    "to": 412
  }, {
    "from": 228,
    "label": "has",
    "to": 419
  }, {
    "from": 419,
    "label": "has",
    "to": 412
  }, {
    "from": 228,
    "label": "has",
    "to": 420
  }, {
    "from": 420,
    "label": "has",
    "to": 412
  }, {
    "from": 228,
    "label": "has",
    "to": 421
  }, {
    "from": 421,
    "label": "has",
    "to": 422
  }, {
    "from": 228,
    "label": "has",
    "to": 423
  }, {
    "from": 423,
    "label": "has",
    "to": 422
  }, {
    "from": 228,
    "label": "has",
    "to": 424
  }, {
    "from": 424,
    "label": "has",
    "to": 422
  }, {
    "from": 228,
    "label": "has",
    "to": 425
  }, {
    "from": 425,
    "label": "has",
    "to": 422
  }, {
    "from": 228,
    "label": "has",
    "to": 426
  }, {
    "from": 426,
    "label": "has",
    "to": 422
  }, {
    "from": 228,
    "label": "has",
    "to": 427
  }, {
    "from": 427,
    "label": "has",
    "to": 422
  }, {
    "from": 228,
    "label": "has",
    "to": 428
  }, {
    "from": 428,
    "label": "has",
    "to": 422
  }, {
    "from": 228,
    "label": "has",
    "to": 429
  }, {
    "from": 429,
    "label": "has",
    "to": 422
  }, {
    "from": 228,
    "label": "has",
    "to": 430
  }, {
    "from": 430,
    "label": "has",
    "to": 422
  }, {
    "from": 228,
    "label": "has",
    "to": 431
  }, {
    "from": 431,
    "label": "has",
    "to": 422
  }, {
    "from": 228,
    "label": "has",
    "to": 432
  }, {
    "from": 432,
    "label": "has",
    "to": 422
  }, {
    "from": 228,
    "label": "has",
    "to": 433
  }, {
    "from": 433,
    "label": "has",
    "to": 422
  }, {
    "from": 228,
    "label": "has",
    "to": 434
  }, {
    "from": 434,
    "label": "has",
    "to": 435
  }, {
    "from": 228,
    "label": "has",
    "to": 436
  }, {
    "from": 436,
    "label": "has",
    "to": 435
  }, {
    "from": 228,
    "label": "has",
    "to": 437
  }, {
    "from": 437,
    "label": "has",
    "to": 438
  }, {
    "from": 228,
    "label": "has",
    "to": 439
  }, {
    "from": 439,
    "label": "has",
    "to": 438
  }, {
    "from": 228,
    "label": "has",
    "to": 440
  }, {
    "from": 440,
    "label": "has",
    "to": 438
  }, {
    "from": 228,
    "label": "has",
    "to": 441
  }, {
    "from": 441,
    "label": "has",
    "to": 442
  }, {
    "from": 228,
    "label": "has",
    "to": 443
  }, {
    "from": 443,
    "label": "has",
    "to": 444
  }, {
    "from": 228,
    "label": "has",
    "to": 445
  }, {
    "from": 445,
    "label": "has",
    "to": 444
  }, {
    "from": 228,
    "label": "has",
    "to": 446
  }, {
    "from": 446,
    "label": "has",
    "to": 444
  }, {
    "from": 228,
    "label": "has",
    "to": 447
  }, {
    "from": 447,
    "label": "has",
    "to": 444
  }, {
    "from": 228,
    "label": "has",
    "to": 448
  }, {
    "from": 448,
    "label": "has",
    "to": 444
  }, {
    "from": 228,
    "label": "has",
    "to": 449
  }, {
    "from": 449,
    "label": "has",
    "to": 444
  }, {
    "from": 228,
    "label": "has",
    "to": 450
  }, {
    "from": 450,
    "label": "has",
    "to": 451
  }, {
    "from": 228,
    "label": "has",
    "to": 452
  }, {
    "from": 452,
    "label": "has",
    "to": 453
  }, {
    "from": 228,
    "label": "has",
    "to": 454
  }, {
    "from": 454,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 456
  }, {
    "from": 456,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 457
  }, {
    "from": 457,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 458
  }, {
    "from": 458,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 459
  }, {
    "from": 459,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 460
  }, {
    "from": 460,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 461
  }, {
    "from": 461,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 462
  }, {
    "from": 462,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 463
  }, {
    "from": 463,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 464
  }, {
    "from": 464,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 465
  }, {
    "from": 465,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 466
  }, {
    "from": 466,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 467
  }, {
    "from": 467,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 468
  }, {
    "from": 468,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 469
  }, {
    "from": 469,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 470
  }, {
    "from": 470,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 471
  }, {
    "from": 471,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 472
  }, {
    "from": 472,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 473
  }, {
    "from": 473,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 474
  }, {
    "from": 474,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 475
  }, {
    "from": 475,
    "label": "has",
    "to": 455
  }, {
    "from": 228,
    "label": "has",
    "to": 476
  }, {
    "from": 476,
    "label": "has",
    "to": 477
  }, {
    "from": 228,
    "label": "has",
    "to": 478
  }, {
    "from": 478,
    "label": "has",
    "to": 477
  }, {
    "from": 228,
    "label": "has",
    "to": 479
  }, {
    "from": 479,
    "label": "has",
    "to": 477
  }, {
    "from": 228,
    "label": "has",
    "to": 480
  }, {
    "from": 480,
    "label": "has",
    "to": 477
  }, {
    "from": 228,
    "label": "has",
    "to": 481
  }, {
    "from": 481,
    "label": "has",
    "to": 477
  }, {
    "from": 228,
    "label": "has",
    "to": 482
  }, {
    "from": 482,
    "label": "has",
    "to": 477
  }, {
    "from": 228,
    "label": "has",
    "to": 483
  }, {
    "from": 483,
    "label": "has",
    "to": 477
  }, {
    "from": 228,
    "label": "has",
    "to": 484
  }, {
    "from": 484,
    "label": "has",
    "to": 477
  }, {
    "from": 228,
    "label": "has",
    "to": 485
  }, {
    "from": 485,
    "label": "has",
    "to": 477
  }, {
    "from": 228,
    "label": "has",
    "to": 486
  }, {
    "from": 486,
    "label": "has",
    "to": 477
  }, {
    "from": 228,
    "label": "has",
    "to": 487
  }, {
    "from": 487,
    "label": "has",
    "to": 488
  }, {
    "from": 228,
    "label": "has",
    "to": 489
  }, {
    "from": 489,
    "label": "has",
    "to": 490
  }, {
    "from": 228,
    "label": "has",
    "to": 491
  }, {
    "from": 491,
    "label": "has",
    "to": 492
  }, {
    "from": 228,
    "label": "has",
    "to": 3
  }, {
    "from": 228,
    "label": "has",
    "to": 493
  }, {
    "from": 494,
    "label": "has",
    "to": 495
  }, {
    "from": 494,
    "label": "has",
    "to": 496
  }, {
    "from": 497,
    "label": "has",
    "to": 3
  }, {
    "from": 497,
    "label": "has",
    "to": 498
  }, {
    "from": 499,
    "label": "has",
    "to": 390
  }, {
    "from": 499,
    "label": "has",
    "to": 500
  }, {
    "from": 501,
    "label": "has",
    "to": 502
  }, {
    "from": 501,
    "label": "has",
    "to": 503
  }, {
    "from": 504,
    "label": "has",
    "to": 502
  }, {
    "from": 504,
    "label": "has",
    "to": 505
  }, {
    "from": 506,
    "label": "has",
    "to": 507
  }, {
    "from": 506,
    "label": "has",
    "to": 508
  }, {
    "from": 508,
    "label": "has",
    "to": 509
  }, {
    "from": 506,
    "label": "has",
    "to": 390
  }, {
    "from": 506,
    "label": "has",
    "to": 510
  }, {
    "from": 511,
    "label": "has",
    "to": 512
  }, {
    "from": 511,
    "label": "has",
    "to": 214
  }, {
    "from": 511,
    "label": "has",
    "to": 513
  }, {
    "from": 513,
    "label": "has",
    "to": 514
  }, {
    "from": 513,
    "label": "has",
    "to": 515
  }, {
    "from": 513,
    "label": "has",
    "to": 516
  }, {
    "from": 511,
    "label": "has",
    "to": 517
  }, {
    "from": 511,
    "label": "has",
    "to": 390
  }, {
    "from": 511,
    "label": "has",
    "to": 518
  }, {
    "from": 519,
    "label": "has",
    "to": 520
  }, {
    "from": 519,
    "label": "has",
    "to": 214
  }, {
    "from": 519,
    "label": "has",
    "to": 521
  }, {
    "from": 521,
    "label": "has",
    "to": 522
  }, {
    "from": 522,
    "label": "has",
    "to": 523
  }, {
    "from": 519,
    "label": "has",
    "to": 3
  }, {
    "from": 519,
    "label": "has",
    "to": 524
  }, {
    "from": 524,
    "label": "has",
    "to": 525
  }, {
    "from": 524,
    "label": "has",
    "to": 526
  }, {
    "from": 524,
    "label": "has",
    "to": 527
  }, {
    "from": 524,
    "label": "has",
    "to": 528
  }, {
    "from": 524,
    "label": "has",
    "to": 529
  }, {
    "from": 519,
    "label": "has",
    "to": 530
  }, {
    "from": 530,
    "label": "has",
    "to": 531
  }, {
    "from": 530,
    "label": "has",
    "to": 532
  }, {
    "from": 530,
    "label": "has",
    "to": 533
  }, {
    "from": 530,
    "label": "has",
    "to": 534
  }, {
    "from": 530,
    "label": "has",
    "to": 535
  }, {
    "from": 530,
    "label": "has",
    "to": 536
  }, {
    "from": 530,
    "label": "has",
    "to": 537
  }, {
    "from": 530,
    "label": "has",
    "to": 538
  }, {
    "from": 519,
    "label": "has",
    "to": 539
  }, {
    "from": 539,
    "label": "has",
    "to": 540
  }, {
    "from": 519,
    "label": "has",
    "to": 390
  }, {
    "from": 519,
    "label": "has",
    "to": 541
  }, {
    "from": 542,
    "label": "has",
    "to": 214
  }, {
    "from": 542,
    "label": "has",
    "to": 543
  }, {
    "from": 543,
    "label": "has",
    "to": 544
  }, {
    "from": 542,
    "label": "has",
    "to": 545
  }, {
    "from": 545,
    "label": "has",
    "to": 546
  }, {
    "from": 545,
    "label": "has",
    "to": 547
  }, {
    "from": 545,
    "label": "has",
    "to": 548
  }, {
    "from": 542,
    "label": "has",
    "to": 549
  }, {
    "from": 549,
    "label": "has",
    "to": 550
  }, {
    "from": 542,
    "label": "has",
    "to": 551
  }, {
    "from": 551,
    "label": "has",
    "to": 552
  }, {
    "from": 551,
    "label": "has",
    "to": 553
  }, {
    "from": 551,
    "label": "has",
    "to": 554
  }, {
    "from": 551,
    "label": "has",
    "to": 555
  }, {
    "from": 551,
    "label": "has",
    "to": 556
  }, {
    "from": 542,
    "label": "has",
    "to": 375
  }, {
    "from": 542,
    "label": "has",
    "to": 376
  }, {
    "from": 542,
    "label": "has",
    "to": 377
  }, {
    "from": 542,
    "label": "has",
    "to": 557
  }, {
    "from": 557,
    "label": "has",
    "to": 558
  }, {
    "from": 557,
    "label": "has",
    "to": 559
  }, {
    "from": 559,
    "label": "has",
    "to": 560
  }, {
    "from": 559,
    "label": "has",
    "to": 561
  }, {
    "from": 561,
    "label": "has",
    "to": 562
  }, {
    "from": 561,
    "label": "has",
    "to": 239
  }, {
    "from": 561,
    "label": "has",
    "to": 563
  }, {
    "from": 561,
    "label": "has",
    "to": 564
  }, {
    "from": 559,
    "label": "has",
    "to": 565
  }, {
    "from": 559,
    "label": "has",
    "to": 566
  }, {
    "from": 542,
    "label": "has",
    "to": 567
  }, {
    "from": 568,
    "label": "has",
    "to": 525
  }, {
    "from": 568,
    "label": "has",
    "to": 214
  }, {
    "from": 568,
    "label": "has",
    "to": 569
  }, {
    "from": 569,
    "label": "has",
    "to": 570
  }, {
    "from": 569,
    "label": "has",
    "to": 571
  }, {
    "from": 569,
    "label": "has",
    "to": 572
  }, {
    "from": 569,
    "label": "has",
    "to": 573
  }, {
    "from": 569,
    "label": "has",
    "to": 574
  }, {
    "from": 569,
    "label": "has",
    "to": 575
  }, {
    "from": 569,
    "label": "has",
    "to": 576
  }, {
    "from": 569,
    "label": "has",
    "to": 577
  }, {
    "from": 569,
    "label": "has",
    "to": 578
  }, {
    "from": 569,
    "label": "has",
    "to": 579
  }, {
    "from": 569,
    "label": "has",
    "to": 580
  }, {
    "from": 569,
    "label": "has",
    "to": 581
  }, {
    "from": 569,
    "label": "has",
    "to": 582
  }, {
    "from": 569,
    "label": "has",
    "to": 583
  }, {
    "from": 569,
    "label": "has",
    "to": 584
  }, {
    "from": 569,
    "label": "has",
    "to": 585
  }, {
    "from": 569,
    "label": "has",
    "to": 586
  }, {
    "from": 569,
    "label": "has",
    "to": 587
  }, {
    "from": 569,
    "label": "has",
    "to": 588
  }, {
    "from": 569,
    "label": "has",
    "to": 589
  }, {
    "from": 569,
    "label": "has",
    "to": 590
  }, {
    "from": 569,
    "label": "has",
    "to": 591
  }, {
    "from": 569,
    "label": "has",
    "to": 592
  }, {
    "from": 568,
    "label": "has",
    "to": 593
  }, {
    "from": 594,
    "label": "has",
    "to": 48
  }, {
    "from": 594,
    "label": "has",
    "to": 595
  }, {
    "from": 595,
    "label": "has",
    "to": 596
  }, {
    "from": 595,
    "label": "has",
    "to": 597
  }, {
    "from": 597,
    "label": "has",
    "to": 598
  }, {
    "from": 594,
    "label": "has",
    "to": 599
  }, {
    "from": 600,
    "label": "has",
    "to": 48
  }, {
    "from": 600,
    "label": "has",
    "to": 601
  }, {
    "from": 600,
    "label": "has",
    "to": 602
  }, {
    "from": 600,
    "label": "has",
    "to": 603
  }, {
    "from": 600,
    "label": "has",
    "to": 3
  }, {
    "from": 600,
    "label": "has",
    "to": 604
  }, {
    "from": 604,
    "label": "has",
    "to": 291
  }, {
    "from": 600,
    "label": "has",
    "to": 605
  }, {
    "from": 600,
    "label": "has",
    "to": 606
  }, {
    "from": 600,
    "label": "has",
    "to": 607
  }, {
    "from": 608,
    "label": "has",
    "to": 609
  }, {
    "from": 608,
    "label": "has",
    "to": 610
  }, {
    "from": 608,
    "label": "has",
    "to": 611
  }, {
    "from": 611,
    "label": "has",
    "to": 612
  }, {
    "from": 611,
    "label": "has",
    "to": 613
  }, {
    "from": 608,
    "label": "has",
    "to": 614
  }, {
    "from": 615,
    "label": "has",
    "to": 616
  }, {
    "from": 615,
    "label": "has",
    "to": 617
  }, {
    "from": 618,
    "label": "has",
    "to": 48
  }, {
    "from": 618,
    "label": "has",
    "to": 619
  }, {
    "from": 618,
    "label": "has",
    "to": 620
  }, {
    "from": 620,
    "label": "has",
    "to": 621
  }, {
    "from": 620,
    "label": "has",
    "to": 597
  }, {
    "from": 597,
    "label": "has",
    "to": 598
  }, {
    "from": 618,
    "label": "has",
    "to": 622
  }, {
    "from": 623,
    "label": "has",
    "to": 624
  }, {
    "from": 623,
    "label": "has",
    "to": 625
  }, {
    "from": 626,
    "label": "has",
    "to": 627
  }, {
    "from": 626,
    "label": "has",
    "to": 628
  }, {
    "from": 626,
    "label": "has",
    "to": 3
  }, {
    "from": 626,
    "label": "has",
    "to": 629
  }, {
    "from": 630,
    "label": "has",
    "to": 631
  }, {
    "from": 630,
    "label": "has",
    "to": 390
  }, {
    "from": 630,
    "label": "has",
    "to": 632
  }, {
    "from": 633,
    "label": "has",
    "to": 634
  }, {
    "from": 633,
    "label": "has",
    "to": 390
  }, {
    "from": 633,
    "label": "has",
    "to": 635
  }, {
    "from": 636,
    "label": "has",
    "to": 637
  }, {
    "from": 636,
    "label": "has",
    "to": 390
  }, {
    "from": 636,
    "label": "has",
    "to": 638
  }, {
    "from": 639,
    "label": "has",
    "to": 640
  }, {
    "from": 639,
    "label": "has",
    "to": 390
  }, {
    "from": 639,
    "label": "has",
    "to": 641
  }, {
    "from": 642,
    "label": "has",
    "to": 643
  }, {
    "from": 642,
    "label": "has",
    "to": 390
  }, {
    "from": 642,
    "label": "has",
    "to": 644
  }, {
    "from": 645,
    "label": "has",
    "to": 646
  }, {
    "from": 645,
    "label": "has",
    "to": 390
  }, {
    "from": 645,
    "label": "has",
    "to": 647
  }, {
    "from": 648,
    "label": "has",
    "to": 649
  }, {
    "from": 648,
    "label": "has",
    "to": 650
  }, {
    "from": 648,
    "label": "has",
    "to": 651
  }, {
    "from": 648,
    "label": "has",
    "to": 652
  }, {
    "from": 648,
    "label": "has",
    "to": 653
  }, {
    "from": 648,
    "label": "has",
    "to": 654
  }, {
    "from": 648,
    "label": "has",
    "to": 390
  }, {
    "from": 648,
    "label": "has",
    "to": 655
  }, {
    "from": 656,
    "label": "has",
    "to": 375
  }, {
    "from": 656,
    "label": "has",
    "to": 376
  }, {
    "from": 656,
    "label": "has",
    "to": 377
  }, {
    "from": 656,
    "label": "has",
    "to": 657
  }, {
    "from": 657,
    "label": "has",
    "to": 558
  }, {
    "from": 657,
    "label": "has",
    "to": 658
  }, {
    "from": 658,
    "label": "has",
    "to": 560
  }, {
    "from": 658,
    "label": "has",
    "to": 659
  }, {
    "from": 659,
    "label": "has",
    "to": 660
  }, {
    "from": 659,
    "label": "has",
    "to": 661
  }, {
    "from": 658,
    "label": "has",
    "to": 566
  }, {
    "from": 656,
    "label": "has",
    "to": 662
  }, {
    "from": 663,
    "label": "has",
    "to": 48
  }, {
    "from": 663,
    "label": "has",
    "to": 664
  }, {
    "from": 663,
    "label": "has",
    "to": 665
  }, {
    "from": 663,
    "label": "has",
    "to": 666
  }, {
    "from": 667,
    "label": "has",
    "to": 48
  }, {
    "from": 667,
    "label": "has",
    "to": 668
  }, {
    "from": 667,
    "label": "has",
    "to": 669
  }, {
    "from": 670,
    "label": "has",
    "to": 48
  }, {
    "from": 670,
    "label": "has",
    "to": 671
  }, {
    "from": 670,
    "label": "has",
    "to": 672
  }, {
    "from": 672,
    "label": "has",
    "to": 673
  }, {
    "from": 672,
    "label": "has",
    "to": 674
  }, {
    "from": 672,
    "label": "has",
    "to": 675
  }, {
    "from": 670,
    "label": "has",
    "to": 3
  }, {
    "from": 670,
    "label": "has",
    "to": 676
  }, {
    "from": 677,
    "label": "has",
    "to": 48
  }, {
    "from": 677,
    "label": "has",
    "to": 678
  }, {
    "from": 677,
    "label": "has",
    "to": 679
  }, {
    "from": 677,
    "label": "has",
    "to": 3
  }, {
    "from": 677,
    "label": "has",
    "to": 680
  }, {
    "from": 681,
    "label": "has",
    "to": 48
  }, {
    "from": 681,
    "label": "has",
    "to": 682
  }, {
    "from": 681,
    "label": "has",
    "to": 683
  }, {
    "from": 681,
    "label": "has",
    "to": 684
  }, {
    "from": 681,
    "label": "has",
    "to": 685
  }, {
    "from": 681,
    "label": "has",
    "to": 686
  }, {
    "from": 681,
    "label": "has",
    "to": 687
  }, {
    "from": 681,
    "label": "has",
    "to": 688
  }, {
    "from": 681,
    "label": "has",
    "to": 689
  }, {
    "from": 681,
    "label": "has",
    "to": 690
  }, {
    "from": 681,
    "label": "has",
    "to": 691
  }, {
    "from": 681,
    "label": "has",
    "to": 692
  }, {
    "from": 681,
    "label": "has",
    "to": 693
  }, {
    "from": 681,
    "label": "has",
    "to": 375
  }, {
    "from": 681,
    "label": "has",
    "to": 694
  }, {
    "from": 681,
    "label": "has",
    "to": 695
  }, {
    "from": 695,
    "label": "has",
    "to": 696
  }, {
    "from": 695,
    "label": "has",
    "to": 697
  }, {
    "from": 695,
    "label": "has",
    "to": 698
  }, {
    "from": 695,
    "label": "has",
    "to": 699
  }, {
    "from": 695,
    "label": "has",
    "to": 700
  }, {
    "from": 695,
    "label": "has",
    "to": 701
  }, {
    "from": 681,
    "label": "has",
    "to": 702
  }, {
    "from": 681,
    "label": "has",
    "to": 3
  }, {
    "from": 681,
    "label": "has",
    "to": 703
  }, {
    "from": 704,
    "label": "has",
    "to": 48
  }, {
    "from": 704,
    "label": "has",
    "to": 705
  }, {
    "from": 704,
    "label": "has",
    "to": 706
  }, {
    "from": 704,
    "label": "has",
    "to": 707
  }, {
    "from": 704,
    "label": "has",
    "to": 3
  }, {
    "from": 704,
    "label": "has",
    "to": 708
  }, {
    "from": 709,
    "label": "has",
    "to": 48
  }, {
    "from": 709,
    "label": "has",
    "to": 710
  }, {
    "from": 710,
    "label": "has",
    "to": 711
  }, {
    "from": 709,
    "label": "has",
    "to": 712
  }, {
    "from": 709,
    "label": "has",
    "to": 713
  }, {
    "from": 709,
    "label": "has",
    "to": 3
  }, {
    "from": 709,
    "label": "has",
    "to": 714
  }, {
    "from": 715,
    "label": "has",
    "to": 48
  }, {
    "from": 715,
    "label": "has",
    "to": 716
  }, {
    "from": 715,
    "label": "has",
    "to": 717
  }, {
    "from": 715,
    "label": "has",
    "to": 718
  }, {
    "from": 715,
    "label": "has",
    "to": 719
  }, {
    "from": 715,
    "label": "has",
    "to": 720
  }, {
    "from": 715,
    "label": "has",
    "to": 721
  }, {
    "from": 715,
    "label": "has",
    "to": 722
  }, {
    "from": 715,
    "label": "has",
    "to": 723
  }, {
    "from": 715,
    "label": "has",
    "to": 724
  }, {
    "from": 715,
    "label": "has",
    "to": 725
  }, {
    "from": 715,
    "label": "has",
    "to": 725
  }, {
    "from": 715,
    "label": "has",
    "to": 726
  }, {
    "from": 715,
    "label": "has",
    "to": 727
  }, {
    "from": 715,
    "label": "has",
    "to": 728
  }, {
    "from": 715,
    "label": "has",
    "to": 729
  }, {
    "from": 715,
    "label": "has",
    "to": 725
  }, {
    "from": 715,
    "label": "has",
    "to": 725
  }, {
    "from": 715,
    "label": "has",
    "to": 730
  }, {
    "from": 715,
    "label": "has",
    "to": 731
  }, {
    "from": 715,
    "label": "has",
    "to": 732
  }, {
    "from": 715,
    "label": "has",
    "to": 733
  }, {
    "from": 715,
    "label": "has",
    "to": 734
  }, {
    "from": 715,
    "label": "has",
    "to": 735
  }, {
    "from": 715,
    "label": "has",
    "to": 736
  }, {
    "from": 715,
    "label": "has",
    "to": 737
  }, {
    "from": 715,
    "label": "has",
    "to": 738
  }, {
    "from": 715,
    "label": "has",
    "to": 739
  }, {
    "from": 715,
    "label": "has",
    "to": 3
  }, {
    "from": 715,
    "label": "has",
    "to": 740
  }, {
    "from": 741,
    "label": "has",
    "to": 742
  }, {
    "from": 741,
    "label": "has",
    "to": 3
  }, {
    "from": 741,
    "label": "has",
    "to": 743
  }, {
    "from": 744,
    "label": "has",
    "to": 745
  }, {
    "from": 744,
    "label": "has",
    "to": 746
  }, {
    "from": 744,
    "label": "has",
    "to": 747
  }, {
    "from": 744,
    "label": "has",
    "to": 748
  }, {
    "from": 744,
    "label": "has",
    "to": 3
  }, {
    "from": 744,
    "label": "has",
    "to": 749
  }, {
    "from": 750,
    "label": "has",
    "to": 14
  }, {
    "from": 750,
    "label": "has",
    "to": 751
  }, {
    "from": 752,
    "label": "has",
    "to": 753
  }, {
    "from": 754,
    "label": "has",
    "to": 17
  }, {
    "from": 754,
    "label": "has",
    "to": 18
  }, {
    "from": 754,
    "label": "has",
    "to": 19
  }, {
    "from": 754,
    "label": "has",
    "to": 20
  }, {
    "from": 754,
    "label": "has",
    "to": 21
  }, {
    "from": 754,
    "label": "has",
    "to": 22
  }, {
    "from": 754,
    "label": "has",
    "to": 23
  }, {
    "from": 754,
    "label": "has",
    "to": 24
  }, {
    "from": 754,
    "label": "has",
    "to": 25
  }, {
    "from": 754,
    "label": "has",
    "to": 26
  }, {
    "from": 754,
    "label": "has",
    "to": 27
  }, {
    "from": 754,
    "label": "has",
    "to": 28
  }, {
    "from": 754,
    "label": "has",
    "to": 29
  }, {
    "from": 754,
    "label": "has",
    "to": 30
  }, {
    "from": 754,
    "label": "has",
    "to": 31
  }, {
    "from": 754,
    "label": "has",
    "to": 32
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 32,
    "label": "has",
    "to": 34
  }, {
    "from": 32,
    "label": "has",
    "to": 35
  }, {
    "from": 32,
    "label": "has",
    "to": 36
  }, {
    "from": 32,
    "label": "has",
    "to": 37
  }, {
    "from": 32,
    "label": "has",
    "to": 35
  }, {
    "from": 32,
    "label": "has",
    "to": 38
  }, {
    "from": 32,
    "label": "has",
    "to": 39
  }, {
    "from": 32,
    "label": "has",
    "to": 35
  }, {
    "from": 32,
    "label": "has",
    "to": 40
  }, {
    "from": 32,
    "label": "has",
    "to": 41
  }, {
    "from": 32,
    "label": "has",
    "to": 35
  }, {
    "from": 32,
    "label": "has",
    "to": 42
  }, {
    "from": 754,
    "label": "has",
    "to": 43
  }, {
    "from": 754,
    "label": "has",
    "to": 755
  }, {
    "from": 756,
    "label": "has",
    "to": 150
  }, {
    "from": 757,
    "label": "has",
    "to": 152
  }, {
    "from": 758,
    "label": "has",
    "to": 154
  }, {
    "from": 759,
    "label": "has",
    "to": 156
  }, {
    "from": 760,
    "label": "has",
    "to": 156
  }, {
    "from": 761,
    "label": "has",
    "to": 156
  }, {
    "from": 762,
    "label": "has",
    "to": 156
  }, {
    "from": 763,
    "label": "has",
    "to": 156
  }, {
    "from": 764,
    "label": "has",
    "to": 156
  }, {
    "from": 765,
    "label": "has",
    "to": 156
  }, {
    "from": 766,
    "label": "has",
    "to": 156
  }, {
    "from": 767,
    "label": "has",
    "to": 156
  }, {
    "from": 768,
    "label": "has",
    "to": 156
  }, {
    "from": 769,
    "label": "has",
    "to": 392
  }, {
    "from": 770,
    "label": "has",
    "to": 394
  }, {
    "from": 771,
    "label": "has",
    "to": 396
  }, {
    "from": 772,
    "label": "has",
    "to": 398
  }, {
    "from": 773,
    "label": "has",
    "to": 400
  }, {
    "from": 774,
    "label": "has",
    "to": 402
  }, {
    "from": 775,
    "label": "has",
    "to": 404
  }, {
    "from": 776,
    "label": "has",
    "to": 406
  }, {
    "from": 777,
    "label": "has",
    "to": 408
  }, {
    "from": 778,
    "label": "has",
    "to": 410
  }, {
    "from": 779,
    "label": "has",
    "to": 412
  }, {
    "from": 780,
    "label": "has",
    "to": 412
  }, {
    "from": 781,
    "label": "has",
    "to": 412
  }, {
    "from": 782,
    "label": "has",
    "to": 412
  }, {
    "from": 783,
    "label": "has",
    "to": 412
  }, {
    "from": 784,
    "label": "has",
    "to": 412
  }, {
    "from": 785,
    "label": "has",
    "to": 412
  }, {
    "from": 786,
    "label": "has",
    "to": 412
  }, {
    "from": 787,
    "label": "has",
    "to": 412
  }, {
    "from": 788,
    "label": "has",
    "to": 422
  }, {
    "from": 789,
    "label": "has",
    "to": 422
  }, {
    "from": 790,
    "label": "has",
    "to": 422
  }, {
    "from": 791,
    "label": "has",
    "to": 422
  }, {
    "from": 792,
    "label": "has",
    "to": 422
  }, {
    "from": 793,
    "label": "has",
    "to": 422
  }, {
    "from": 794,
    "label": "has",
    "to": 422
  }, {
    "from": 795,
    "label": "has",
    "to": 422
  }, {
    "from": 796,
    "label": "has",
    "to": 422
  }, {
    "from": 797,
    "label": "has",
    "to": 422
  }, {
    "from": 798,
    "label": "has",
    "to": 422
  }, {
    "from": 799,
    "label": "has",
    "to": 422
  }, {
    "from": 800,
    "label": "has",
    "to": 435
  }, {
    "from": 801,
    "label": "has",
    "to": 435
  }, {
    "from": 802,
    "label": "has",
    "to": 438
  }, {
    "from": 803,
    "label": "has",
    "to": 438
  }, {
    "from": 804,
    "label": "has",
    "to": 438
  }, {
    "from": 805,
    "label": "has",
    "to": 442
  }, {
    "from": 806,
    "label": "has",
    "to": 444
  }, {
    "from": 807,
    "label": "has",
    "to": 444
  }, {
    "from": 808,
    "label": "has",
    "to": 444
  }, {
    "from": 809,
    "label": "has",
    "to": 444
  }, {
    "from": 810,
    "label": "has",
    "to": 444
  }, {
    "from": 811,
    "label": "has",
    "to": 444
  }, {
    "from": 812,
    "label": "has",
    "to": 451
  }, {
    "from": 813,
    "label": "has",
    "to": 453
  }, {
    "from": 814,
    "label": "has",
    "to": 455
  }, {
    "from": 815,
    "label": "has",
    "to": 455
  }, {
    "from": 816,
    "label": "has",
    "to": 455
  }, {
    "from": 817,
    "label": "has",
    "to": 455
  }, {
    "from": 818,
    "label": "has",
    "to": 455
  }, {
    "from": 819,
    "label": "has",
    "to": 455
  }, {
    "from": 820,
    "label": "has",
    "to": 455
  }, {
    "from": 821,
    "label": "has",
    "to": 455
  }, {
    "from": 822,
    "label": "has",
    "to": 455
  }, {
    "from": 823,
    "label": "has",
    "to": 455
  }, {
    "from": 824,
    "label": "has",
    "to": 455
  }, {
    "from": 825,
    "label": "has",
    "to": 455
  }, {
    "from": 826,
    "label": "has",
    "to": 455
  }, {
    "from": 827,
    "label": "has",
    "to": 455
  }, {
    "from": 828,
    "label": "has",
    "to": 455
  }, {
    "from": 829,
    "label": "has",
    "to": 455
  }, {
    "from": 830,
    "label": "has",
    "to": 455
  }, {
    "from": 831,
    "label": "has",
    "to": 455
  }, {
    "from": 832,
    "label": "has",
    "to": 455
  }, {
    "from": 833,
    "label": "has",
    "to": 455
  }, {
    "from": 834,
    "label": "has",
    "to": 455
  }, {
    "from": 835,
    "label": "has",
    "to": 477
  }, {
    "from": 836,
    "label": "has",
    "to": 477
  }, {
    "from": 837,
    "label": "has",
    "to": 477
  }, {
    "from": 838,
    "label": "has",
    "to": 477
  }, {
    "from": 839,
    "label": "has",
    "to": 477
  }, {
    "from": 840,
    "label": "has",
    "to": 477
  }, {
    "from": 841,
    "label": "has",
    "to": 477
  }, {
    "from": 842,
    "label": "has",
    "to": 477
  }, {
    "from": 843,
    "label": "has",
    "to": 477
  }, {
    "from": 844,
    "label": "has",
    "to": 477
  }, {
    "from": 845,
    "label": "has",
    "to": 488
  }, {
    "from": 846,
    "label": "has",
    "to": 490
  }, {
    "from": 847,
    "label": "has",
    "to": 492
  }, {
    "from": 10,
    "label": "calls",
    "to": 888
  }, {
    "from": 10,
    "label": "calls",
    "to": 888
  }, {
    "from": 10,
    "label": "calls",
    "to": 888
  }, {
    "from": 10,
    "label": "calls",
    "to": 888
  }, {
    "from": 10,
    "label": "calls",
    "to": 888
  }, {
    "from": 45,
    "label": "calls",
    "to": 888
  }, {
    "from": 45,
    "label": "calls",
    "to": 888
  }, {
    "from": 45,
    "label": "calls",
    "to": 888
  }, {
    "from": 600,
    "label": "calls",
    "to": 888
  }, {
    "from": 670,
    "label": "calls",
    "to": 888
  }, {
    "from": 600,
    "label": "calls",
    "to": 853
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 848,
    "label": "calls",
    "to": 5
  }, {
    "from": 670,
    "label": "calls",
    "to": 865
  }, {
    "from": 715,
    "label": "calls",
    "to": 865
  }, {
    "from": 715,
    "label": "calls",
    "to": 865
  }, {
    "from": 715,
    "label": "calls",
    "to": 865
  }, {
    "from": 715,
    "label": "calls",
    "to": 865
  }, {
    "from": 715,
    "label": "calls",
    "to": 865
  }, {
    "from": 715,
    "label": "calls",
    "to": 865
  }, {
    "from": 715,
    "label": "calls",
    "to": 865
  }, {
    "from": 715,
    "label": "calls",
    "to": 865
  }, {
    "from": 715,
    "label": "calls",
    "to": 865
  }, {
    "from": 519,
    "label": "calls",
    "to": 887
  }, {
    "from": 519,
    "label": "calls",
    "to": 887
  }, {
    "from": 519,
    "label": "calls",
    "to": 887
  }, {
    "from": 542,
    "label": "calls",
    "to": 887
  }, {
    "from": 542,
    "label": "calls",
    "to": 882
  }, {
    "from": 45,
    "label": "calls",
    "to": 854
  }, {
    "from": 45,
    "label": "calls",
    "to": 854
  }, {
    "from": 45,
    "label": "calls",
    "to": 854
  }, {
    "from": 715,
    "label": "calls",
    "to": 854
  }, {
    "from": 228,
    "label": "calls",
    "to": 851
  }, {
    "from": 704,
    "label": "calls",
    "to": 10
  }, {
    "from": 45,
    "label": "calls",
    "to": 878
  }, {
    "from": 45,
    "label": "calls",
    "to": 872
  }, {
    "from": 715,
    "label": "calls",
    "to": 872
  }, {
    "from": 228,
    "label": "calls",
    "to": 876
  }, {
    "from": 228,
    "label": "calls",
    "to": 876
  }, {
    "from": 228,
    "label": "calls",
    "to": 876
  }, {
    "from": 228,
    "label": "calls",
    "to": 876
  }, {
    "from": 228,
    "label": "calls",
    "to": 876
  }, {
    "from": 228,
    "label": "calls",
    "to": 876
  }, {
    "from": 228,
    "label": "calls",
    "to": 876
  }, {
    "from": 228,
    "label": "calls",
    "to": 876
  }, {
    "from": 228,
    "label": "calls",
    "to": 876
  }, {
    "from": 228,
    "label": "calls",
    "to": 876
  }, {
    "from": 228,
    "label": "calls",
    "to": 876
  }, {
    "from": 228,
    "label": "calls",
    "to": 876
  }, {
    "from": 228,
    "label": "calls",
    "to": 876
  }, {
    "from": 681,
    "label": "calls",
    "to": 876
  }, {
    "from": 681,
    "label": "calls",
    "to": 876
  }, {
    "from": 715,
    "label": "calls",
    "to": 876
  }, {
    "from": 228,
    "label": "calls",
    "to": 850
  }, {
    "from": 228,
    "label": "calls",
    "to": 850
  }, {
    "from": 228,
    "label": "calls",
    "to": 850
  }, {
    "from": 228,
    "label": "calls",
    "to": 850
  }, {
    "from": 228,
    "label": "calls",
    "to": 850
  }, {
    "from": 709,
    "label": "calls",
    "to": 870
  }, {
    "from": 10,
    "label": "calls",
    "to": 877
  }, {
    "from": 744,
    "label": "calls",
    "to": 861
  }, {
    "from": 848,
    "label": "calls",
    "to": 861
  }, {
    "from": 715,
    "label": "calls",
    "to": 883
  }, {
    "from": 677,
    "label": "calls",
    "to": 868
  }, {
    "from": 45,
    "label": "calls",
    "to": 858
  }, {
    "from": 45,
    "label": "calls",
    "to": 858
  }, {
    "from": 45,
    "label": "calls",
    "to": 858
  }, {
    "from": 45,
    "label": "calls",
    "to": 858
  }, {
    "from": 45,
    "label": "calls",
    "to": 858
  }, {
    "from": 45,
    "label": "calls",
    "to": 858
  }, {
    "from": 45,
    "label": "calls",
    "to": 858
  }, {
    "from": 45,
    "label": "calls",
    "to": 858
  }, {
    "from": 45,
    "label": "calls",
    "to": 858
  }, {
    "from": 45,
    "label": "calls",
    "to": 858
  }, {
    "from": 45,
    "label": "calls",
    "to": 858
  }, {
    "from": 45,
    "label": "calls",
    "to": 858
  }, {
    "from": 45,
    "label": "calls",
    "to": 858
  }, {
    "from": 228,
    "label": "calls",
    "to": 858
  }, {
    "from": 228,
    "label": "calls",
    "to": 858
  }, {
    "from": 228,
    "label": "calls",
    "to": 858
  }, {
    "from": 228,
    "label": "calls",
    "to": 858
  }, {
    "from": 228,
    "label": "calls",
    "to": 858
  }, {
    "from": 228,
    "label": "calls",
    "to": 858
  }, {
    "from": 228,
    "label": "calls",
    "to": 858
  }, {
    "from": 228,
    "label": "calls",
    "to": 858
  }, {
    "from": 228,
    "label": "calls",
    "to": 858
  }, {
    "from": 228,
    "label": "calls",
    "to": 858
  }, {
    "from": 228,
    "label": "calls",
    "to": 858
  }, {
    "from": 228,
    "label": "calls",
    "to": 858
  }, {
    "from": 630,
    "label": "calls",
    "to": 858
  }, {
    "from": 633,
    "label": "calls",
    "to": 858
  }, {
    "from": 636,
    "label": "calls",
    "to": 858
  }, {
    "from": 670,
    "label": "calls",
    "to": 858
  }, {
    "from": 677,
    "label": "calls",
    "to": 858
  }, {
    "from": 681,
    "label": "calls",
    "to": 858
  }, {
    "from": 681,
    "label": "calls",
    "to": 858
  }, {
    "from": 681,
    "label": "calls",
    "to": 858
  }, {
    "from": 704,
    "label": "calls",
    "to": 858
  }, {
    "from": 709,
    "label": "calls",
    "to": 858
  }, {
    "from": 715,
    "label": "calls",
    "to": 858
  }, {
    "from": 715,
    "label": "calls",
    "to": 858
  }, {
    "from": 715,
    "label": "calls",
    "to": 858
  }, {
    "from": 715,
    "label": "calls",
    "to": 858
  }, {
    "from": 45,
    "label": "calls",
    "to": 867
  }, {
    "from": 45,
    "label": "calls",
    "to": 867
  }, {
    "from": 45,
    "label": "calls",
    "to": 867
  }, {
    "from": 45,
    "label": "calls",
    "to": 867
  }, {
    "from": 45,
    "label": "calls",
    "to": 867
  }, {
    "from": 45,
    "label": "calls",
    "to": 867
  }, {
    "from": 45,
    "label": "calls",
    "to": 867
  }, {
    "from": 45,
    "label": "calls",
    "to": 867
  }, {
    "from": 45,
    "label": "calls",
    "to": 867
  }, {
    "from": 45,
    "label": "calls",
    "to": 867
  }, {
    "from": 45,
    "label": "calls",
    "to": 867
  }, {
    "from": 45,
    "label": "calls",
    "to": 867
  }, {
    "from": 45,
    "label": "calls",
    "to": 867
  }, {
    "from": 45,
    "label": "calls",
    "to": 867
  }, {
    "from": 45,
    "label": "calls",
    "to": 859
  }, {
    "from": 45,
    "label": "calls",
    "to": 859
  }, {
    "from": 45,
    "label": "calls",
    "to": 859
  }, {
    "from": 45,
    "label": "calls",
    "to": 859
  }, {
    "from": 45,
    "label": "calls",
    "to": 859
  }, {
    "from": 45,
    "label": "calls",
    "to": 859
  }, {
    "from": 45,
    "label": "calls",
    "to": 859
  }, {
    "from": 45,
    "label": "calls",
    "to": 859
  }, {
    "from": 45,
    "label": "calls",
    "to": 859
  }, {
    "from": 45,
    "label": "calls",
    "to": 859
  }, {
    "from": 45,
    "label": "calls",
    "to": 859
  }, {
    "from": 45,
    "label": "calls",
    "to": 859
  }, {
    "from": 45,
    "label": "calls",
    "to": 859
  }, {
    "from": 715,
    "label": "calls",
    "to": 859
  }, {
    "from": 715,
    "label": "calls",
    "to": 859
  }, {
    "from": 228,
    "label": "calls",
    "to": 862
  }, {
    "from": 228,
    "label": "calls",
    "to": 862
  }, {
    "from": 228,
    "label": "calls",
    "to": 862
  }, {
    "from": 228,
    "label": "calls",
    "to": 862
  }, {
    "from": 228,
    "label": "calls",
    "to": 862
  }, {
    "from": 228,
    "label": "calls",
    "to": 862
  }, {
    "from": 681,
    "label": "calls",
    "to": 874
  }, {
    "from": 167,
    "label": "calls",
    "to": 863
  }, {
    "from": 228,
    "label": "calls",
    "to": 863
  }, {
    "from": 209,
    "label": "calls",
    "to": 873
  }, {
    "from": 715,
    "label": "calls",
    "to": 881
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 889
  }, {
    "from": 630,
    "label": "calls",
    "to": 889
  }, {
    "from": 633,
    "label": "calls",
    "to": 889
  }, {
    "from": 636,
    "label": "calls",
    "to": 889
  }, {
    "from": 639,
    "label": "calls",
    "to": 889
  }, {
    "from": 642,
    "label": "calls",
    "to": 889
  }, {
    "from": 645,
    "label": "calls",
    "to": 889
  }, {
    "from": 228,
    "label": "calls",
    "to": 875
  }, {
    "from": 542,
    "label": "calls",
    "to": 886
  }, {
    "from": 542,
    "label": "calls",
    "to": 886
  }, {
    "from": 542,
    "label": "calls",
    "to": 886
  }, {
    "from": 10,
    "label": "calls",
    "to": 2
  }, {
    "from": 10,
    "label": "calls",
    "to": 2
  }, {
    "from": 10,
    "label": "calls",
    "to": 2
  }, {
    "from": 10,
    "label": "calls",
    "to": 2
  }, {
    "from": 10,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 45,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 228,
    "label": "calls",
    "to": 2
  }, {
    "from": 506,
    "label": "calls",
    "to": 2
  }, {
    "from": 519,
    "label": "calls",
    "to": 2
  }, {
    "from": 594,
    "label": "calls",
    "to": 2
  }, {
    "from": 594,
    "label": "calls",
    "to": 2
  }, {
    "from": 594,
    "label": "calls",
    "to": 2
  }, {
    "from": 600,
    "label": "calls",
    "to": 2
  }, {
    "from": 600,
    "label": "calls",
    "to": 2
  }, {
    "from": 600,
    "label": "calls",
    "to": 2
  }, {
    "from": 618,
    "label": "calls",
    "to": 2
  }, {
    "from": 618,
    "label": "calls",
    "to": 2
  }, {
    "from": 630,
    "label": "calls",
    "to": 2
  }, {
    "from": 633,
    "label": "calls",
    "to": 2
  }, {
    "from": 636,
    "label": "calls",
    "to": 2
  }, {
    "from": 639,
    "label": "calls",
    "to": 2
  }, {
    "from": 642,
    "label": "calls",
    "to": 2
  }, {
    "from": 645,
    "label": "calls",
    "to": 2
  }, {
    "from": 648,
    "label": "calls",
    "to": 2
  }, {
    "from": 648,
    "label": "calls",
    "to": 2
  }, {
    "from": 648,
    "label": "calls",
    "to": 2
  }, {
    "from": 648,
    "label": "calls",
    "to": 2
  }, {
    "from": 648,
    "label": "calls",
    "to": 2
  }, {
    "from": 648,
    "label": "calls",
    "to": 2
  }, {
    "from": 670,
    "label": "calls",
    "to": 2
  }, {
    "from": 681,
    "label": "calls",
    "to": 2
  }, {
    "from": 681,
    "label": "calls",
    "to": 2
  }, {
    "from": 681,
    "label": "calls",
    "to": 2
  }, {
    "from": 681,
    "label": "calls",
    "to": 2
  }, {
    "from": 681,
    "label": "calls",
    "to": 2
  }, {
    "from": 681,
    "label": "calls",
    "to": 2
  }, {
    "from": 681,
    "label": "calls",
    "to": 2
  }, {
    "from": 681,
    "label": "calls",
    "to": 2
  }, {
    "from": 681,
    "label": "calls",
    "to": 2
  }, {
    "from": 681,
    "label": "calls",
    "to": 2
  }, {
    "from": 681,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 715,
    "label": "calls",
    "to": 2
  }, {
    "from": 167,
    "label": "calls",
    "to": 852
  }, {
    "from": 10,
    "label": "calls",
    "to": 860
  }, {
    "from": 45,
    "label": "calls",
    "to": 864
  }, {
    "from": 45,
    "label": "calls",
    "to": 864
  }, {
    "from": 45,
    "label": "calls",
    "to": 864
  }, {
    "from": 45,
    "label": "calls",
    "to": 864
  }, {
    "from": 45,
    "label": "calls",
    "to": 864
  }, {
    "from": 45,
    "label": "calls",
    "to": 864
  }, {
    "from": 45,
    "label": "calls",
    "to": 864
  }, {
    "from": 45,
    "label": "calls",
    "to": 864
  }, {
    "from": 45,
    "label": "calls",
    "to": 864
  }, {
    "from": 45,
    "label": "calls",
    "to": 864
  }, {
    "from": 519,
    "label": "calls",
    "to": 856
  }, {
    "from": 594,
    "label": "calls",
    "to": 856
  }, {
    "from": 618,
    "label": "calls",
    "to": 856
  }, {
    "from": 667,
    "label": "calls",
    "to": 856
  }, {
    "from": 681,
    "label": "calls",
    "to": 855
  }, {
    "from": 519,
    "label": "calls",
    "to": 891
  }, {
    "from": 519,
    "label": "calls",
    "to": 891
  }, {
    "from": 519,
    "label": "calls",
    "to": 891
  }, {
    "from": 542,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 568,
    "label": "calls",
    "to": 891
  }, {
    "from": 626,
    "label": "calls",
    "to": 871
  }, {
    "from": 626,
    "label": "calls",
    "to": 871
  }, {
    "from": 670,
    "label": "calls",
    "to": 871
  }, {
    "from": 677,
    "label": "calls",
    "to": 871
  }, {
    "from": 681,
    "label": "calls",
    "to": 871
  }, {
    "from": 715,
    "label": "calls",
    "to": 871
  }, {
    "from": 209,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 4
  }, {
    "from": 667,
    "label": "calls",
    "to": 4
  }, {
    "from": 667,
    "label": "calls",
    "to": 4
  }, {
    "from": 228,
    "label": "calls",
    "to": 869
  }, {
    "from": 542,
    "label": "calls",
    "to": 890
  }, {
    "from": 228,
    "label": "calls",
    "to": 885
  }, {
    "from": 228,
    "label": "calls",
    "to": 880
  }, {
    "from": 228,
    "label": "calls",
    "to": 857
  }, {
    "from": 608,
    "label": "calls",
    "to": 849
  }, {
    "from": 519,
    "label": "calls",
    "to": 884
  }, {
    "from": 542,
    "label": "calls",
    "to": 884
  }, {
    "from": 542,
    "label": "calls",
    "to": 884
  }, {
    "from": 542,
    "label": "calls",
    "to": 884
  }, {
    "from": 542,
    "label": "calls",
    "to": 884
  }, {
    "from": 542,
    "label": "calls",
    "to": 884
  }, {
    "from": 542,
    "label": "calls",
    "to": 884
  }, {
    "from": 656,
    "label": "calls",
    "to": 884
  }, {
    "from": 656,
    "label": "calls",
    "to": 884
  }, {
    "from": 848,
    "label": "calls",
    "to": 892
  }, {
    "from": 608,
    "label": "calls",
    "to": 879
  }, {
    "from": 542,
    "label": "calls",
    "to": 866
  }, {
    "from": 618,
    "label": "calls",
    "to": 866
  }, {
    "from": 656,
    "label": "calls",
    "to": 866
  }, {
    "from": 1,
    "label": "contains",
    "to": 848
  }, {
    "from": 848,
    "label": "declares",
    "to": 2
  }, {
    "from": 848,
    "label": "declares",
    "to": 4
  }, {
    "from": 848,
    "label": "declares",
    "to": 5
  }, {
    "from": 848,
    "label": "declares",
    "to": 10
  }, {
    "from": 848,
    "label": "declares",
    "to": 45
  }, {
    "from": 848,
    "label": "declares",
    "to": 167
  }, {
    "from": 848,
    "label": "declares",
    "to": 177
  }, {
    "from": 848,
    "label": "declares",
    "to": 199
  }, {
    "from": 848,
    "label": "declares",
    "to": 203
  }, {
    "from": 848,
    "label": "declares",
    "to": 206
  }, {
    "from": 848,
    "label": "declares",
    "to": 209
  }, {
    "from": 848,
    "label": "declares",
    "to": 228
  }, {
    "from": 848,
    "label": "declares",
    "to": 494
  }, {
    "from": 848,
    "label": "declares",
    "to": 497
  }, {
    "from": 848,
    "label": "declares",
    "to": 499
  }, {
    "from": 848,
    "label": "declares",
    "to": 501
  }, {
    "from": 848,
    "label": "declares",
    "to": 504
  }, {
    "from": 848,
    "label": "declares",
    "to": 506
  }, {
    "from": 848,
    "label": "declares",
    "to": 511
  }, {
    "from": 848,
    "label": "declares",
    "to": 519
  }, {
    "from": 848,
    "label": "declares",
    "to": 542
  }, {
    "from": 848,
    "label": "declares",
    "to": 568
  }, {
    "from": 848,
    "label": "declares",
    "to": 594
  }, {
    "from": 848,
    "label": "declares",
    "to": 600
  }, {
    "from": 848,
    "label": "declares",
    "to": 608
  }, {
    "from": 848,
    "label": "declares",
    "to": 615
  }, {
    "from": 848,
    "label": "declares",
    "to": 618
  }, {
    "from": 848,
    "label": "declares",
    "to": 623
  }, {
    "from": 848,
    "label": "declares",
    "to": 626
  }, {
    "from": 848,
    "label": "declares",
    "to": 630
  }, {
    "from": 848,
    "label": "declares",
    "to": 633
  }, {
    "from": 848,
    "label": "declares",
    "to": 636
  }, {
    "from": 848,
    "label": "declares",
    "to": 639
  }, {
    "from": 848,
    "label": "declares",
    "to": 642
  }, {
    "from": 848,
    "label": "declares",
    "to": 645
  }, {
    "from": 848,
    "label": "declares",
    "to": 648
  }, {
    "from": 848,
    "label": "declares",
    "to": 656
  }, {
    "from": 848,
    "label": "declares",
    "to": 663
  }, {
    "from": 848,
    "label": "declares",
    "to": 667
  }, {
    "from": 848,
    "label": "declares",
    "to": 670
  }, {
    "from": 848,
    "label": "declares",
    "to": 677
  }, {
    "from": 848,
    "label": "declares",
    "to": 681
  }, {
    "from": 848,
    "label": "declares",
    "to": 704
  }, {
    "from": 848,
    "label": "declares",
    "to": 709
  }, {
    "from": 848,
    "label": "declares",
    "to": 715
  }, {
    "from": 848,
    "label": "declares",
    "to": 741
  }, {
    "from": 848,
    "label": "declares",
    "to": 744
  }, {
    "from": 848,
    "label": "declares",
    "to": 750
  }, {
    "from": 848,
    "label": "declares",
    "to": 752
  }, {
    "from": 848,
    "label": "declares",
    "to": 754
  }, {
    "from": 848,
    "label": "declares",
    "to": 756
  }, {
    "from": 848,
    "label": "declares",
    "to": 757
  }, {
    "from": 848,
    "label": "declares",
    "to": 758
  }, {
    "from": 848,
    "label": "declares",
    "to": 759
  }, {
    "from": 848,
    "label": "declares",
    "to": 760
  }, {
    "from": 848,
    "label": "declares",
    "to": 761
  }, {
    "from": 848,
    "label": "declares",
    "to": 762
  }, {
    "from": 848,
    "label": "declares",
    "to": 763
  }, {
    "from": 848,
    "label": "declares",
    "to": 764
  }, {
    "from": 848,
    "label": "declares",
    "to": 765
  }, {
    "from": 848,
    "label": "declares",
    "to": 766
  }, {
    "from": 848,
    "label": "declares",
    "to": 767
  }, {
    "from": 848,
    "label": "declares",
    "to": 768
  }, {
    "from": 848,
    "label": "declares",
    "to": 769
  }, {
    "from": 848,
    "label": "declares",
    "to": 770
  }, {
    "from": 848,
    "label": "declares",
    "to": 771
  }, {
    "from": 848,
    "label": "declares",
    "to": 772
  }, {
    "from": 848,
    "label": "declares",
    "to": 773
  }, {
    "from": 848,
    "label": "declares",
    "to": 774
  }, {
    "from": 848,
    "label": "declares",
    "to": 775
  }, {
    "from": 848,
    "label": "declares",
    "to": 776
  }, {
    "from": 848,
    "label": "declares",
    "to": 777
  }, {
    "from": 848,
    "label": "declares",
    "to": 778
  }, {
    "from": 848,
    "label": "declares",
    "to": 779
  }, {
    "from": 848,
    "label": "declares",
    "to": 780
  }, {
    "from": 848,
    "label": "declares",
    "to": 781
  }, {
    "from": 848,
    "label": "declares",
    "to": 782
  }, {
    "from": 848,
    "label": "declares",
    "to": 783
  }, {
    "from": 848,
    "label": "declares",
    "to": 784
  }, {
    "from": 848,
    "label": "declares",
    "to": 785
  }, {
    "from": 848,
    "label": "declares",
    "to": 786
  }, {
    "from": 848,
    "label": "declares",
    "to": 787
  }, {
    "from": 848,
    "label": "declares",
    "to": 788
  }, {
    "from": 848,
    "label": "declares",
    "to": 789
  }, {
    "from": 848,
    "label": "declares",
    "to": 790
  }, {
    "from": 848,
    "label": "declares",
    "to": 791
  }, {
    "from": 848,
    "label": "declares",
    "to": 792
  }, {
    "from": 848,
    "label": "declares",
    "to": 793
  }, {
    "from": 848,
    "label": "declares",
    "to": 794
  }, {
    "from": 848,
    "label": "declares",
    "to": 795
  }, {
    "from": 848,
    "label": "declares",
    "to": 796
  }, {
    "from": 848,
    "label": "declares",
    "to": 797
  }, {
    "from": 848,
    "label": "declares",
    "to": 798
  }, {
    "from": 848,
    "label": "declares",
    "to": 799
  }, {
    "from": 848,
    "label": "declares",
    "to": 800
  }, {
    "from": 848,
    "label": "declares",
    "to": 801
  }, {
    "from": 848,
    "label": "declares",
    "to": 802
  }, {
    "from": 848,
    "label": "declares",
    "to": 803
  }, {
    "from": 848,
    "label": "declares",
    "to": 804
  }, {
    "from": 848,
    "label": "declares",
    "to": 805
  }, {
    "from": 848,
    "label": "declares",
    "to": 806
  }, {
    "from": 848,
    "label": "declares",
    "to": 807
  }, {
    "from": 848,
    "label": "declares",
    "to": 808
  }, {
    "from": 848,
    "label": "declares",
    "to": 809
  }, {
    "from": 848,
    "label": "declares",
    "to": 810
  }, {
    "from": 848,
    "label": "declares",
    "to": 811
  }, {
    "from": 848,
    "label": "declares",
    "to": 812
  }, {
    "from": 848,
    "label": "declares",
    "to": 813
  }, {
    "from": 848,
    "label": "declares",
    "to": 814
  }, {
    "from": 848,
    "label": "declares",
    "to": 815
  }, {
    "from": 848,
    "label": "declares",
    "to": 816
  }, {
    "from": 848,
    "label": "declares",
    "to": 817
  }, {
    "from": 848,
    "label": "declares",
    "to": 818
  }, {
    "from": 848,
    "label": "declares",
    "to": 819
  }, {
    "from": 848,
    "label": "declares",
    "to": 820
  }, {
    "from": 848,
    "label": "declares",
    "to": 821
  }, {
    "from": 848,
    "label": "declares",
    "to": 822
  }, {
    "from": 848,
    "label": "declares",
    "to": 823
  }, {
    "from": 848,
    "label": "declares",
    "to": 824
  }, {
    "from": 848,
    "label": "declares",
    "to": 825
  }, {
    "from": 848,
    "label": "declares",
    "to": 826
  }, {
    "from": 848,
    "label": "declares",
    "to": 827
  }, {
    "from": 848,
    "label": "declares",
    "to": 828
  }, {
    "from": 848,
    "label": "declares",
    "to": 829
  }, {
    "from": 848,
    "label": "declares",
    "to": 830
  }, {
    "from": 848,
    "label": "declares",
    "to": 831
  }, {
    "from": 848,
    "label": "declares",
    "to": 832
  }, {
    "from": 848,
    "label": "declares",
    "to": 833
  }, {
    "from": 848,
    "label": "declares",
    "to": 834
  }, {
    "from": 848,
    "label": "declares",
    "to": 835
  }, {
    "from": 848,
    "label": "declares",
    "to": 836
  }, {
    "from": 848,
    "label": "declares",
    "to": 837
  }, {
    "from": 848,
    "label": "declares",
    "to": 838
  }, {
    "from": 848,
    "label": "declares",
    "to": 839
  }, {
    "from": 848,
    "label": "declares",
    "to": 840
  }, {
    "from": 848,
    "label": "declares",
    "to": 841
  }, {
    "from": 848,
    "label": "declares",
    "to": 842
  }, {
    "from": 848,
    "label": "declares",
    "to": 843
  }, {
    "from": 848,
    "label": "declares",
    "to": 844
  }, {
    "from": 848,
    "label": "declares",
    "to": 845
  }, {
    "from": 848,
    "label": "declares",
    "to": 846
  }, {
    "from": 848,
    "label": "declares",
    "to": 847
  }, {
    "from": 1,
    "label": "contains",
    "to": 893
  }, {
    "from": 1,
    "label": "contains",
    "to": 894
  }, {
    "from": 893,
    "label": "initializes",
    "to": 895
  }, {
    "from": 895,
    "label": "assigns",
    "to": 896
  }, {
    "from": 896,
    "label": "assigns",
    "to": 897
  }, {
    "from": 896,
    "label": "assigns",
    "to": 898
  }, {
    "from": 896,
    "label": "assigns",
    "to": 899
  }, {
    "from": 896,
    "label": "assigns",
    "to": 900
  }, {
    "from": 896,
    "label": "assigns",
    "to": 901
  }, {
    "from": 896,
    "label": "assigns",
    "to": 902
  }, {
    "from": 896,
    "label": "assigns",
    "to": 903
  }, {
    "from": 896,
    "label": "assigns",
    "to": 904
  }, {
    "from": 896,
    "label": "assigns",
    "to": 905
  }, {
    "from": 896,
    "label": "assigns",
    "to": 906
  }, {
    "from": 896,
    "label": "assigns",
    "to": 907
  }, {
    "from": 896,
    "label": "assigns",
    "to": 908
  }, {
    "from": 896,
    "label": "assigns",
    "to": 909
  }, {
    "from": 896,
    "label": "assigns",
    "to": 910
  }, {
    "from": 896,
    "label": "assigns",
    "to": 911
  }, {
    "from": 896,
    "label": "assigns",
    "to": 912
  }, {
    "from": 896,
    "label": "assigns",
    "to": 913
  }, {
    "from": 896,
    "label": "assigns",
    "to": 914
  }, {
    "from": 896,
    "label": "assigns",
    "to": 915
  }, {
    "from": 896,
    "label": "assigns",
    "to": 916
  }, {
    "from": 896,
    "label": "assigns",
    "to": 917
  }, {
    "from": 896,
    "label": "assigns",
    "to": 918
  }, {
    "from": 896,
    "label": "assigns",
    "to": 919
  }, {
    "from": 896,
    "label": "assigns",
    "to": 920
  }, {
    "from": 896,
    "label": "assigns",
    "to": 921
  }, {
    "from": 896,
    "label": "assigns",
    "to": 922
  }, {
    "from": 896,
    "label": "assigns",
    "to": 923
  }, {
    "from": 896,
    "label": "assigns",
    "to": 924
  }, {
    "from": 896,
    "label": "assigns",
    "to": 925
  }, {
    "from": 896,
    "label": "assigns",
    "to": 926
  }, {
    "from": 896,
    "label": "assigns",
    "to": 927
  }, {
    "from": 896,
    "label": "assigns",
    "to": 928
  }, {
    "from": 896,
    "label": "assigns",
    "to": 929
  }, {
    "from": 896,
    "label": "assigns",
    "to": 930
  }, {
    "from": 896,
    "label": "assigns",
    "to": 931
  }, {
    "from": 896,
    "label": "assigns",
    "to": 932
  }, {
    "from": 896,
    "label": "assigns",
    "to": 933
  }, {
    "from": 896,
    "label": "assigns",
    "to": 934
  }, {
    "from": 896,
    "label": "assigns",
    "to": 935
  }, {
    "from": 893,
    "label": "initializes",
    "to": 936
  }, {
    "from": 936,
    "label": "assigns",
    "to": 937
  }, {
    "from": 893,
    "label": "initializes",
    "to": 938
  }, {
    "from": 938,
    "label": "assigns",
    "to": 939
  }, {
    "from": 893,
    "label": "initializes",
    "to": 940
  }, {
    "from": 940,
    "label": "assigns",
    "to": 941
  }, {
    "from": 893,
    "label": "initializes",
    "to": 942
  }, {
    "from": 942,
    "label": "assigns",
    "to": 943
  }, {
    "from": 893,
    "label": "initializes",
    "to": 944
  }, {
    "from": 944,
    "label": "assigns",
    "to": 945
  }, {
    "from": 945,
    "label": "assigns",
    "to": 946
  }, {
    "from": 946,
    "label": "assigns",
    "to": 947
  }, {
    "from": 945,
    "label": "assigns",
    "to": 948
  }, {
    "from": 948,
    "label": "assigns",
    "to": 949
  }, {
    "from": 945,
    "label": "assigns",
    "to": 950
  }, {
    "from": 950,
    "label": "assigns",
    "to": 951
  }, {
    "from": 945,
    "label": "assigns",
    "to": 952
  }, {
    "from": 952,
    "label": "assigns",
    "to": 953
  }, {
    "from": 945,
    "label": "assigns",
    "to": 954
  }, {
    "from": 954,
    "label": "assigns",
    "to": 955
  }, {
    "from": 945,
    "label": "assigns",
    "to": 956
  }, {
    "from": 956,
    "label": "assigns",
    "to": 957
  }, {
    "from": 945,
    "label": "assigns",
    "to": 958
  }, {
    "from": 958,
    "label": "assigns",
    "to": 959
  }, {
    "from": 945,
    "label": "assigns",
    "to": 960
  }, {
    "from": 960,
    "label": "assigns",
    "to": 961
  }, {
    "from": 945,
    "label": "assigns",
    "to": 962
  }, {
    "from": 962,
    "label": "assigns",
    "to": 963
  }, {
    "from": 945,
    "label": "assigns",
    "to": 964
  }, {
    "from": 964,
    "label": "assigns",
    "to": 965
  }, {
    "from": 945,
    "label": "assigns",
    "to": 966
  }, {
    "from": 966,
    "label": "assigns",
    "to": 967
  }, {
    "from": 945,
    "label": "assigns",
    "to": 968
  }, {
    "from": 968,
    "label": "assigns",
    "to": 969
  }, {
    "from": 945,
    "label": "assigns",
    "to": 970
  }, {
    "from": 970,
    "label": "assigns",
    "to": 971
  }, {
    "from": 945,
    "label": "assigns",
    "to": 972
  }, {
    "from": 972,
    "label": "assigns",
    "to": 973
  }, {
    "from": 945,
    "label": "assigns",
    "to": 974
  }, {
    "from": 974,
    "label": "assigns",
    "to": 975
  }, {
    "from": 945,
    "label": "assigns",
    "to": 976
  }, {
    "from": 976,
    "label": "assigns",
    "to": 977
  }, {
    "from": 945,
    "label": "assigns",
    "to": 978
  }, {
    "from": 978,
    "label": "assigns",
    "to": 979
  }, {
    "from": 945,
    "label": "assigns",
    "to": 980
  }, {
    "from": 980,
    "label": "assigns",
    "to": 981
  }, {
    "from": 945,
    "label": "assigns",
    "to": 982
  }, {
    "from": 982,
    "label": "assigns",
    "to": 983
  }, {
    "from": 945,
    "label": "assigns",
    "to": 984
  }, {
    "from": 984,
    "label": "assigns",
    "to": 985
  }, {
    "from": 945,
    "label": "assigns",
    "to": 986
  }, {
    "from": 986,
    "label": "assigns",
    "to": 987
  }, {
    "from": 945,
    "label": "assigns",
    "to": 988
  }, {
    "from": 988,
    "label": "assigns",
    "to": 989
  }, {
    "from": 945,
    "label": "assigns",
    "to": 990
  }, {
    "from": 990,
    "label": "assigns",
    "to": 991
  }, {
    "from": 945,
    "label": "assigns",
    "to": 992
  }, {
    "from": 992,
    "label": "assigns",
    "to": 993
  }, {
    "from": 945,
    "label": "assigns",
    "to": 994
  }, {
    "from": 994,
    "label": "assigns",
    "to": 995
  }, {
    "from": 945,
    "label": "assigns",
    "to": 996
  }, {
    "from": 996,
    "label": "assigns",
    "to": 997
  }, {
    "from": 945,
    "label": "assigns",
    "to": 998
  }, {
    "from": 998,
    "label": "assigns",
    "to": 999
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1000
  }, {
    "from": 1000,
    "label": "assigns",
    "to": 1001
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1002
  }, {
    "from": 1002,
    "label": "assigns",
    "to": 1003
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1004
  }, {
    "from": 1004,
    "label": "assigns",
    "to": 1005
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1006
  }, {
    "from": 1006,
    "label": "assigns",
    "to": 1007
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1008
  }, {
    "from": 1008,
    "label": "assigns",
    "to": 1009
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1010
  }, {
    "from": 1010,
    "label": "assigns",
    "to": 1011
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1012
  }, {
    "from": 1012,
    "label": "assigns",
    "to": 1013
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1014
  }, {
    "from": 1014,
    "label": "assigns",
    "to": 1015
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1016
  }, {
    "from": 1016,
    "label": "assigns",
    "to": 1017
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1018
  }, {
    "from": 1018,
    "label": "assigns",
    "to": 1019
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1020
  }, {
    "from": 1020,
    "label": "assigns",
    "to": 1021
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1022
  }, {
    "from": 1022,
    "label": "assigns",
    "to": 1023
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1024
  }, {
    "from": 1024,
    "label": "assigns",
    "to": 1025
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1026
  }, {
    "from": 1026,
    "label": "assigns",
    "to": 1027
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1028
  }, {
    "from": 1028,
    "label": "assigns",
    "to": 1029
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1030
  }, {
    "from": 1030,
    "label": "assigns",
    "to": 1031
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1032
  }, {
    "from": 1032,
    "label": "assigns",
    "to": 1033
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1034
  }, {
    "from": 1034,
    "label": "assigns",
    "to": 1035
  }, {
    "from": 945,
    "label": "assigns",
    "to": 1036
  }, {
    "from": 1036,
    "label": "assigns",
    "to": 1037
  }, {
    "from": 893,
    "label": "initializes",
    "to": 1038
  }, {
    "from": 1038,
    "label": "assigns",
    "to": 1039
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1040
  }, {
    "from": 1040,
    "label": "assigns",
    "to": 1041
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1042
  }, {
    "from": 1042,
    "label": "assigns",
    "to": 1043
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1044
  }, {
    "from": 1044,
    "label": "assigns",
    "to": 1045
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1046
  }, {
    "from": 1046,
    "label": "assigns",
    "to": 1047
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1048
  }, {
    "from": 1048,
    "label": "assigns",
    "to": 1049
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1050
  }, {
    "from": 1050,
    "label": "assigns",
    "to": 1051
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1052
  }, {
    "from": 1052,
    "label": "assigns",
    "to": 1053
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1054
  }, {
    "from": 1054,
    "label": "assigns",
    "to": 1055
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1056
  }, {
    "from": 1056,
    "label": "assigns",
    "to": 1057
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1058
  }, {
    "from": 1058,
    "label": "assigns",
    "to": 1059
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1060
  }, {
    "from": 1060,
    "label": "assigns",
    "to": 1061
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1062
  }, {
    "from": 1062,
    "label": "assigns",
    "to": 1063
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1064
  }, {
    "from": 1064,
    "label": "assigns",
    "to": 1065
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1066
  }, {
    "from": 1066,
    "label": "assigns",
    "to": 1067
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1068
  }, {
    "from": 1068,
    "label": "assigns",
    "to": 1069
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1070
  }, {
    "from": 1070,
    "label": "assigns",
    "to": 1071
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1072
  }, {
    "from": 1072,
    "label": "assigns",
    "to": 1073
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1074
  }, {
    "from": 1074,
    "label": "assigns",
    "to": 1075
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1076
  }, {
    "from": 1076,
    "label": "assigns",
    "to": 1077
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1078
  }, {
    "from": 1078,
    "label": "assigns",
    "to": 1079
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1080
  }, {
    "from": 1080,
    "label": "assigns",
    "to": 1081
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1082
  }, {
    "from": 1082,
    "label": "assigns",
    "to": 1083
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1084
  }, {
    "from": 1084,
    "label": "assigns",
    "to": 1085
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1086
  }, {
    "from": 1086,
    "label": "assigns",
    "to": 1087
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1088
  }, {
    "from": 1088,
    "label": "assigns",
    "to": 1089
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1090
  }, {
    "from": 1090,
    "label": "assigns",
    "to": 1091
  }, {
    "from": 1039,
    "label": "assigns",
    "to": 1092
  }, {
    "from": 1092,
    "label": "assigns",
    "to": 1093
  }, {
    "from": 893,
    "label": "initializes",
    "to": 1094
  }, {
    "from": 1094,
    "label": "assigns",
    "to": 1095
  }, {
    "from": 893,
    "label": "initializes",
    "to": 1096
  }, {
    "from": 1096,
    "label": "assigns",
    "to": 1097
  }, {
    "from": 893,
    "label": "initializes",
    "to": 1098
  }, {
    "from": 1098,
    "label": "assigns",
    "to": 1099
  }, {
    "from": 893,
    "label": "initializes",
    "to": 1100
  }, {
    "from": 1100,
    "label": "assigns",
    "to": 1101
  }, {
    "from": 894,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1104,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1105,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1106,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1107,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1108,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1109,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1110,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1111,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1112,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1113,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1114,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1115,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1116,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1117,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1118,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1119,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1120,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1121,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1122,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1123,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1124,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1125,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1126,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1127,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 1128,
    "label": "initializes",
    "to": 1102
  }, {
    "from": 1102,
    "label": "requires",
    "to": 1103
  }, {
    "from": 13,
    "label": "hasArgument",
    "to": 750
  }, {
    "from": 15,
    "label": "hasArgument",
    "to": 752
  }, {
    "from": 16,
    "label": "hasArgument",
    "to": 754
  }, {
    "from": 149,
    "label": "hasArgument",
    "to": 756
  }, {
    "from": 151,
    "label": "hasArgument",
    "to": 757
  }, {
    "from": 153,
    "label": "hasArgument",
    "to": 758
  }, {
    "from": 155,
    "label": "hasArgument",
    "to": 759
  }, {
    "from": 155,
    "label": "hasArgument",
    "to": 760
  }, {
    "from": 155,
    "label": "hasArgument",
    "to": 761
  }, {
    "from": 155,
    "label": "hasArgument",
    "to": 762
  }, {
    "from": 155,
    "label": "hasArgument",
    "to": 763
  }, {
    "from": 155,
    "label": "hasArgument",
    "to": 764
  }, {
    "from": 155,
    "label": "hasArgument",
    "to": 765
  }, {
    "from": 155,
    "label": "hasArgument",
    "to": 766
  }, {
    "from": 155,
    "label": "hasArgument",
    "to": 767
  }, {
    "from": 155,
    "label": "hasArgument",
    "to": 768
  }, {
    "from": 157,
    "label": "hasArgument",
    "to": 759
  }, {
    "from": 157,
    "label": "hasArgument",
    "to": 760
  }, {
    "from": 157,
    "label": "hasArgument",
    "to": 761
  }, {
    "from": 157,
    "label": "hasArgument",
    "to": 762
  }, {
    "from": 157,
    "label": "hasArgument",
    "to": 763
  }, {
    "from": 157,
    "label": "hasArgument",
    "to": 764
  }, {
    "from": 157,
    "label": "hasArgument",
    "to": 765
  }, {
    "from": 157,
    "label": "hasArgument",
    "to": 766
  }, {
    "from": 157,
    "label": "hasArgument",
    "to": 767
  }, {
    "from": 157,
    "label": "hasArgument",
    "to": 768
  }, {
    "from": 158,
    "label": "hasArgument",
    "to": 759
  }, {
    "from": 158,
    "label": "hasArgument",
    "to": 760
  }, {
    "from": 158,
    "label": "hasArgument",
    "to": 761
  }, {
    "from": 158,
    "label": "hasArgument",
    "to": 762
  }, {
    "from": 158,
    "label": "hasArgument",
    "to": 763
  }, {
    "from": 158,
    "label": "hasArgument",
    "to": 764
  }, {
    "from": 158,
    "label": "hasArgument",
    "to": 765
  }, {
    "from": 158,
    "label": "hasArgument",
    "to": 766
  }, {
    "from": 158,
    "label": "hasArgument",
    "to": 767
  }, {
    "from": 158,
    "label": "hasArgument",
    "to": 768
  }, {
    "from": 159,
    "label": "hasArgument",
    "to": 759
  }, {
    "from": 159,
    "label": "hasArgument",
    "to": 760
  }, {
    "from": 159,
    "label": "hasArgument",
    "to": 761
  }, {
    "from": 159,
    "label": "hasArgument",
    "to": 762
  }, {
    "from": 159,
    "label": "hasArgument",
    "to": 763
  }, {
    "from": 159,
    "label": "hasArgument",
    "to": 764
  }, {
    "from": 159,
    "label": "hasArgument",
    "to": 765
  }, {
    "from": 159,
    "label": "hasArgument",
    "to": 766
  }, {
    "from": 159,
    "label": "hasArgument",
    "to": 767
  }, {
    "from": 159,
    "label": "hasArgument",
    "to": 768
  }, {
    "from": 160,
    "label": "hasArgument",
    "to": 759
  }, {
    "from": 160,
    "label": "hasArgument",
    "to": 760
  }, {
    "from": 160,
    "label": "hasArgument",
    "to": 761
  }, {
    "from": 160,
    "label": "hasArgument",
    "to": 762
  }, {
    "from": 160,
    "label": "hasArgument",
    "to": 763
  }, {
    "from": 160,
    "label": "hasArgument",
    "to": 764
  }, {
    "from": 160,
    "label": "hasArgument",
    "to": 765
  }, {
    "from": 160,
    "label": "hasArgument",
    "to": 766
  }, {
    "from": 160,
    "label": "hasArgument",
    "to": 767
  }, {
    "from": 160,
    "label": "hasArgument",
    "to": 768
  }, {
    "from": 161,
    "label": "hasArgument",
    "to": 759
  }, {
    "from": 161,
    "label": "hasArgument",
    "to": 760
  }, {
    "from": 161,
    "label": "hasArgument",
    "to": 761
  }, {
    "from": 161,
    "label": "hasArgument",
    "to": 762
  }, {
    "from": 161,
    "label": "hasArgument",
    "to": 763
  }, {
    "from": 161,
    "label": "hasArgument",
    "to": 764
  }, {
    "from": 161,
    "label": "hasArgument",
    "to": 765
  }, {
    "from": 161,
    "label": "hasArgument",
    "to": 766
  }, {
    "from": 161,
    "label": "hasArgument",
    "to": 767
  }, {
    "from": 161,
    "label": "hasArgument",
    "to": 768
  }, {
    "from": 162,
    "label": "hasArgument",
    "to": 759
  }, {
    "from": 162,
    "label": "hasArgument",
    "to": 760
  }, {
    "from": 162,
    "label": "hasArgument",
    "to": 761
  }, {
    "from": 162,
    "label": "hasArgument",
    "to": 762
  }, {
    "from": 162,
    "label": "hasArgument",
    "to": 763
  }, {
    "from": 162,
    "label": "hasArgument",
    "to": 764
  }, {
    "from": 162,
    "label": "hasArgument",
    "to": 765
  }, {
    "from": 162,
    "label": "hasArgument",
    "to": 766
  }, {
    "from": 162,
    "label": "hasArgument",
    "to": 767
  }, {
    "from": 162,
    "label": "hasArgument",
    "to": 768
  }, {
    "from": 163,
    "label": "hasArgument",
    "to": 759
  }, {
    "from": 163,
    "label": "hasArgument",
    "to": 760
  }, {
    "from": 163,
    "label": "hasArgument",
    "to": 761
  }, {
    "from": 163,
    "label": "hasArgument",
    "to": 762
  }, {
    "from": 163,
    "label": "hasArgument",
    "to": 763
  }, {
    "from": 163,
    "label": "hasArgument",
    "to": 764
  }, {
    "from": 163,
    "label": "hasArgument",
    "to": 765
  }, {
    "from": 163,
    "label": "hasArgument",
    "to": 766
  }, {
    "from": 163,
    "label": "hasArgument",
    "to": 767
  }, {
    "from": 163,
    "label": "hasArgument",
    "to": 768
  }, {
    "from": 164,
    "label": "hasArgument",
    "to": 759
  }, {
    "from": 164,
    "label": "hasArgument",
    "to": 760
  }, {
    "from": 164,
    "label": "hasArgument",
    "to": 761
  }, {
    "from": 164,
    "label": "hasArgument",
    "to": 762
  }, {
    "from": 164,
    "label": "hasArgument",
    "to": 763
  }, {
    "from": 164,
    "label": "hasArgument",
    "to": 764
  }, {
    "from": 164,
    "label": "hasArgument",
    "to": 765
  }, {
    "from": 164,
    "label": "hasArgument",
    "to": 766
  }, {
    "from": 164,
    "label": "hasArgument",
    "to": 767
  }, {
    "from": 164,
    "label": "hasArgument",
    "to": 768
  }, {
    "from": 165,
    "label": "hasArgument",
    "to": 759
  }, {
    "from": 165,
    "label": "hasArgument",
    "to": 760
  }, {
    "from": 165,
    "label": "hasArgument",
    "to": 761
  }, {
    "from": 165,
    "label": "hasArgument",
    "to": 762
  }, {
    "from": 165,
    "label": "hasArgument",
    "to": 763
  }, {
    "from": 165,
    "label": "hasArgument",
    "to": 764
  }, {
    "from": 165,
    "label": "hasArgument",
    "to": 765
  }, {
    "from": 165,
    "label": "hasArgument",
    "to": 766
  }, {
    "from": 165,
    "label": "hasArgument",
    "to": 767
  }, {
    "from": 165,
    "label": "hasArgument",
    "to": 768
  }, {
    "from": 391,
    "label": "hasArgument",
    "to": 769
  }, {
    "from": 393,
    "label": "hasArgument",
    "to": 770
  }, {
    "from": 395,
    "label": "hasArgument",
    "to": 771
  }, {
    "from": 397,
    "label": "hasArgument",
    "to": 772
  }, {
    "from": 399,
    "label": "hasArgument",
    "to": 773
  }, {
    "from": 401,
    "label": "hasArgument",
    "to": 774
  }, {
    "from": 403,
    "label": "hasArgument",
    "to": 775
  }, {
    "from": 405,
    "label": "hasArgument",
    "to": 776
  }, {
    "from": 407,
    "label": "hasArgument",
    "to": 777
  }, {
    "from": 409,
    "label": "hasArgument",
    "to": 778
  }, {
    "from": 411,
    "label": "hasArgument",
    "to": 779
  }, {
    "from": 411,
    "label": "hasArgument",
    "to": 780
  }, {
    "from": 411,
    "label": "hasArgument",
    "to": 781
  }, {
    "from": 411,
    "label": "hasArgument",
    "to": 782
  }, {
    "from": 411,
    "label": "hasArgument",
    "to": 783
  }, {
    "from": 411,
    "label": "hasArgument",
    "to": 784
  }, {
    "from": 411,
    "label": "hasArgument",
    "to": 785
  }, {
    "from": 411,
    "label": "hasArgument",
    "to": 786
  }, {
    "from": 411,
    "label": "hasArgument",
    "to": 787
  }, {
    "from": 413,
    "label": "hasArgument",
    "to": 779
  }, {
    "from": 413,
    "label": "hasArgument",
    "to": 780
  }, {
    "from": 413,
    "label": "hasArgument",
    "to": 781
  }, {
    "from": 413,
    "label": "hasArgument",
    "to": 782
  }, {
    "from": 413,
    "label": "hasArgument",
    "to": 783
  }, {
    "from": 413,
    "label": "hasArgument",
    "to": 784
  }, {
    "from": 413,
    "label": "hasArgument",
    "to": 785
  }, {
    "from": 413,
    "label": "hasArgument",
    "to": 786
  }, {
    "from": 413,
    "label": "hasArgument",
    "to": 787
  }, {
    "from": 414,
    "label": "hasArgument",
    "to": 779
  }, {
    "from": 414,
    "label": "hasArgument",
    "to": 780
  }, {
    "from": 414,
    "label": "hasArgument",
    "to": 781
  }, {
    "from": 414,
    "label": "hasArgument",
    "to": 782
  }, {
    "from": 414,
    "label": "hasArgument",
    "to": 783
  }, {
    "from": 414,
    "label": "hasArgument",
    "to": 784
  }, {
    "from": 414,
    "label": "hasArgument",
    "to": 785
  }, {
    "from": 414,
    "label": "hasArgument",
    "to": 786
  }, {
    "from": 414,
    "label": "hasArgument",
    "to": 787
  }, {
    "from": 415,
    "label": "hasArgument",
    "to": 779
  }, {
    "from": 415,
    "label": "hasArgument",
    "to": 780
  }, {
    "from": 415,
    "label": "hasArgument",
    "to": 781
  }, {
    "from": 415,
    "label": "hasArgument",
    "to": 782
  }, {
    "from": 415,
    "label": "hasArgument",
    "to": 783
  }, {
    "from": 415,
    "label": "hasArgument",
    "to": 784
  }, {
    "from": 415,
    "label": "hasArgument",
    "to": 785
  }, {
    "from": 415,
    "label": "hasArgument",
    "to": 786
  }, {
    "from": 415,
    "label": "hasArgument",
    "to": 787
  }, {
    "from": 416,
    "label": "hasArgument",
    "to": 779
  }, {
    "from": 416,
    "label": "hasArgument",
    "to": 780
  }, {
    "from": 416,
    "label": "hasArgument",
    "to": 781
  }, {
    "from": 416,
    "label": "hasArgument",
    "to": 782
  }, {
    "from": 416,
    "label": "hasArgument",
    "to": 783
  }, {
    "from": 416,
    "label": "hasArgument",
    "to": 784
  }, {
    "from": 416,
    "label": "hasArgument",
    "to": 785
  }, {
    "from": 416,
    "label": "hasArgument",
    "to": 786
  }, {
    "from": 416,
    "label": "hasArgument",
    "to": 787
  }, {
    "from": 417,
    "label": "hasArgument",
    "to": 779
  }, {
    "from": 417,
    "label": "hasArgument",
    "to": 780
  }, {
    "from": 417,
    "label": "hasArgument",
    "to": 781
  }, {
    "from": 417,
    "label": "hasArgument",
    "to": 782
  }, {
    "from": 417,
    "label": "hasArgument",
    "to": 783
  }, {
    "from": 417,
    "label": "hasArgument",
    "to": 784
  }, {
    "from": 417,
    "label": "hasArgument",
    "to": 785
  }, {
    "from": 417,
    "label": "hasArgument",
    "to": 786
  }, {
    "from": 417,
    "label": "hasArgument",
    "to": 787
  }, {
    "from": 418,
    "label": "hasArgument",
    "to": 779
  }, {
    "from": 418,
    "label": "hasArgument",
    "to": 780
  }, {
    "from": 418,
    "label": "hasArgument",
    "to": 781
  }, {
    "from": 418,
    "label": "hasArgument",
    "to": 782
  }, {
    "from": 418,
    "label": "hasArgument",
    "to": 783
  }, {
    "from": 418,
    "label": "hasArgument",
    "to": 784
  }, {
    "from": 418,
    "label": "hasArgument",
    "to": 785
  }, {
    "from": 418,
    "label": "hasArgument",
    "to": 786
  }, {
    "from": 418,
    "label": "hasArgument",
    "to": 787
  }, {
    "from": 419,
    "label": "hasArgument",
    "to": 779
  }, {
    "from": 419,
    "label": "hasArgument",
    "to": 780
  }, {
    "from": 419,
    "label": "hasArgument",
    "to": 781
  }, {
    "from": 419,
    "label": "hasArgument",
    "to": 782
  }, {
    "from": 419,
    "label": "hasArgument",
    "to": 783
  }, {
    "from": 419,
    "label": "hasArgument",
    "to": 784
  }, {
    "from": 419,
    "label": "hasArgument",
    "to": 785
  }, {
    "from": 419,
    "label": "hasArgument",
    "to": 786
  }, {
    "from": 419,
    "label": "hasArgument",
    "to": 787
  }, {
    "from": 420,
    "label": "hasArgument",
    "to": 779
  }, {
    "from": 420,
    "label": "hasArgument",
    "to": 780
  }, {
    "from": 420,
    "label": "hasArgument",
    "to": 781
  }, {
    "from": 420,
    "label": "hasArgument",
    "to": 782
  }, {
    "from": 420,
    "label": "hasArgument",
    "to": 783
  }, {
    "from": 420,
    "label": "hasArgument",
    "to": 784
  }, {
    "from": 420,
    "label": "hasArgument",
    "to": 785
  }, {
    "from": 420,
    "label": "hasArgument",
    "to": 786
  }, {
    "from": 420,
    "label": "hasArgument",
    "to": 787
  }, {
    "from": 421,
    "label": "hasArgument",
    "to": 788
  }, {
    "from": 421,
    "label": "hasArgument",
    "to": 789
  }, {
    "from": 421,
    "label": "hasArgument",
    "to": 790
  }, {
    "from": 421,
    "label": "hasArgument",
    "to": 791
  }, {
    "from": 421,
    "label": "hasArgument",
    "to": 792
  }, {
    "from": 421,
    "label": "hasArgument",
    "to": 793
  }, {
    "from": 421,
    "label": "hasArgument",
    "to": 794
  }, {
    "from": 421,
    "label": "hasArgument",
    "to": 795
  }, {
    "from": 421,
    "label": "hasArgument",
    "to": 796
  }, {
    "from": 421,
    "label": "hasArgument",
    "to": 797
  }, {
    "from": 421,
    "label": "hasArgument",
    "to": 798
  }, {
    "from": 421,
    "label": "hasArgument",
    "to": 799
  }, {
    "from": 423,
    "label": "hasArgument",
    "to": 788
  }, {
    "from": 423,
    "label": "hasArgument",
    "to": 789
  }, {
    "from": 423,
    "label": "hasArgument",
    "to": 790
  }, {
    "from": 423,
    "label": "hasArgument",
    "to": 791
  }, {
    "from": 423,
    "label": "hasArgument",
    "to": 792
  }, {
    "from": 423,
    "label": "hasArgument",
    "to": 793
  }, {
    "from": 423,
    "label": "hasArgument",
    "to": 794
  }, {
    "from": 423,
    "label": "hasArgument",
    "to": 795
  }, {
    "from": 423,
    "label": "hasArgument",
    "to": 796
  }, {
    "from": 423,
    "label": "hasArgument",
    "to": 797
  }, {
    "from": 423,
    "label": "hasArgument",
    "to": 798
  }, {
    "from": 423,
    "label": "hasArgument",
    "to": 799
  }, {
    "from": 424,
    "label": "hasArgument",
    "to": 788
  }, {
    "from": 424,
    "label": "hasArgument",
    "to": 789
  }, {
    "from": 424,
    "label": "hasArgument",
    "to": 790
  }, {
    "from": 424,
    "label": "hasArgument",
    "to": 791
  }, {
    "from": 424,
    "label": "hasArgument",
    "to": 792
  }, {
    "from": 424,
    "label": "hasArgument",
    "to": 793
  }, {
    "from": 424,
    "label": "hasArgument",
    "to": 794
  }, {
    "from": 424,
    "label": "hasArgument",
    "to": 795
  }, {
    "from": 424,
    "label": "hasArgument",
    "to": 796
  }, {
    "from": 424,
    "label": "hasArgument",
    "to": 797
  }, {
    "from": 424,
    "label": "hasArgument",
    "to": 798
  }, {
    "from": 424,
    "label": "hasArgument",
    "to": 799
  }, {
    "from": 425,
    "label": "hasArgument",
    "to": 788
  }, {
    "from": 425,
    "label": "hasArgument",
    "to": 789
  }, {
    "from": 425,
    "label": "hasArgument",
    "to": 790
  }, {
    "from": 425,
    "label": "hasArgument",
    "to": 791
  }, {
    "from": 425,
    "label": "hasArgument",
    "to": 792
  }, {
    "from": 425,
    "label": "hasArgument",
    "to": 793
  }, {
    "from": 425,
    "label": "hasArgument",
    "to": 794
  }, {
    "from": 425,
    "label": "hasArgument",
    "to": 795
  }, {
    "from": 425,
    "label": "hasArgument",
    "to": 796
  }, {
    "from": 425,
    "label": "hasArgument",
    "to": 797
  }, {
    "from": 425,
    "label": "hasArgument",
    "to": 798
  }, {
    "from": 425,
    "label": "hasArgument",
    "to": 799
  }, {
    "from": 426,
    "label": "hasArgument",
    "to": 788
  }, {
    "from": 426,
    "label": "hasArgument",
    "to": 789
  }, {
    "from": 426,
    "label": "hasArgument",
    "to": 790
  }, {
    "from": 426,
    "label": "hasArgument",
    "to": 791
  }, {
    "from": 426,
    "label": "hasArgument",
    "to": 792
  }, {
    "from": 426,
    "label": "hasArgument",
    "to": 793
  }, {
    "from": 426,
    "label": "hasArgument",
    "to": 794
  }, {
    "from": 426,
    "label": "hasArgument",
    "to": 795
  }, {
    "from": 426,
    "label": "hasArgument",
    "to": 796
  }, {
    "from": 426,
    "label": "hasArgument",
    "to": 797
  }, {
    "from": 426,
    "label": "hasArgument",
    "to": 798
  }, {
    "from": 426,
    "label": "hasArgument",
    "to": 799
  }, {
    "from": 427,
    "label": "hasArgument",
    "to": 788
  }, {
    "from": 427,
    "label": "hasArgument",
    "to": 789
  }, {
    "from": 427,
    "label": "hasArgument",
    "to": 790
  }, {
    "from": 427,
    "label": "hasArgument",
    "to": 791
  }, {
    "from": 427,
    "label": "hasArgument",
    "to": 792
  }, {
    "from": 427,
    "label": "hasArgument",
    "to": 793
  }, {
    "from": 427,
    "label": "hasArgument",
    "to": 794
  }, {
    "from": 427,
    "label": "hasArgument",
    "to": 795
  }, {
    "from": 427,
    "label": "hasArgument",
    "to": 796
  }, {
    "from": 427,
    "label": "hasArgument",
    "to": 797
  }, {
    "from": 427,
    "label": "hasArgument",
    "to": 798
  }, {
    "from": 427,
    "label": "hasArgument",
    "to": 799
  }, {
    "from": 428,
    "label": "hasArgument",
    "to": 788
  }, {
    "from": 428,
    "label": "hasArgument",
    "to": 789
  }, {
    "from": 428,
    "label": "hasArgument",
    "to": 790
  }, {
    "from": 428,
    "label": "hasArgument",
    "to": 791
  }, {
    "from": 428,
    "label": "hasArgument",
    "to": 792
  }, {
    "from": 428,
    "label": "hasArgument",
    "to": 793
  }, {
    "from": 428,
    "label": "hasArgument",
    "to": 794
  }, {
    "from": 428,
    "label": "hasArgument",
    "to": 795
  }, {
    "from": 428,
    "label": "hasArgument",
    "to": 796
  }, {
    "from": 428,
    "label": "hasArgument",
    "to": 797
  }, {
    "from": 428,
    "label": "hasArgument",
    "to": 798
  }, {
    "from": 428,
    "label": "hasArgument",
    "to": 799
  }, {
    "from": 429,
    "label": "hasArgument",
    "to": 788
  }, {
    "from": 429,
    "label": "hasArgument",
    "to": 789
  }, {
    "from": 429,
    "label": "hasArgument",
    "to": 790
  }, {
    "from": 429,
    "label": "hasArgument",
    "to": 791
  }, {
    "from": 429,
    "label": "hasArgument",
    "to": 792
  }, {
    "from": 429,
    "label": "hasArgument",
    "to": 793
  }, {
    "from": 429,
    "label": "hasArgument",
    "to": 794
  }, {
    "from": 429,
    "label": "hasArgument",
    "to": 795
  }, {
    "from": 429,
    "label": "hasArgument",
    "to": 796
  }, {
    "from": 429,
    "label": "hasArgument",
    "to": 797
  }, {
    "from": 429,
    "label": "hasArgument",
    "to": 798
  }, {
    "from": 429,
    "label": "hasArgument",
    "to": 799
  }, {
    "from": 430,
    "label": "hasArgument",
    "to": 788
  }, {
    "from": 430,
    "label": "hasArgument",
    "to": 789
  }, {
    "from": 430,
    "label": "hasArgument",
    "to": 790
  }, {
    "from": 430,
    "label": "hasArgument",
    "to": 791
  }, {
    "from": 430,
    "label": "hasArgument",
    "to": 792
  }, {
    "from": 430,
    "label": "hasArgument",
    "to": 793
  }, {
    "from": 430,
    "label": "hasArgument",
    "to": 794
  }, {
    "from": 430,
    "label": "hasArgument",
    "to": 795
  }, {
    "from": 430,
    "label": "hasArgument",
    "to": 796
  }, {
    "from": 430,
    "label": "hasArgument",
    "to": 797
  }, {
    "from": 430,
    "label": "hasArgument",
    "to": 798
  }, {
    "from": 430,
    "label": "hasArgument",
    "to": 799
  }, {
    "from": 431,
    "label": "hasArgument",
    "to": 788
  }, {
    "from": 431,
    "label": "hasArgument",
    "to": 789
  }, {
    "from": 431,
    "label": "hasArgument",
    "to": 790
  }, {
    "from": 431,
    "label": "hasArgument",
    "to": 791
  }, {
    "from": 431,
    "label": "hasArgument",
    "to": 792
  }, {
    "from": 431,
    "label": "hasArgument",
    "to": 793
  }, {
    "from": 431,
    "label": "hasArgument",
    "to": 794
  }, {
    "from": 431,
    "label": "hasArgument",
    "to": 795
  }, {
    "from": 431,
    "label": "hasArgument",
    "to": 796
  }, {
    "from": 431,
    "label": "hasArgument",
    "to": 797
  }, {
    "from": 431,
    "label": "hasArgument",
    "to": 798
  }, {
    "from": 431,
    "label": "hasArgument",
    "to": 799
  }, {
    "from": 432,
    "label": "hasArgument",
    "to": 788
  }, {
    "from": 432,
    "label": "hasArgument",
    "to": 789
  }, {
    "from": 432,
    "label": "hasArgument",
    "to": 790
  }, {
    "from": 432,
    "label": "hasArgument",
    "to": 791
  }, {
    "from": 432,
    "label": "hasArgument",
    "to": 792
  }, {
    "from": 432,
    "label": "hasArgument",
    "to": 793
  }, {
    "from": 432,
    "label": "hasArgument",
    "to": 794
  }, {
    "from": 432,
    "label": "hasArgument",
    "to": 795
  }, {
    "from": 432,
    "label": "hasArgument",
    "to": 796
  }, {
    "from": 432,
    "label": "hasArgument",
    "to": 797
  }, {
    "from": 432,
    "label": "hasArgument",
    "to": 798
  }, {
    "from": 432,
    "label": "hasArgument",
    "to": 799
  }, {
    "from": 433,
    "label": "hasArgument",
    "to": 788
  }, {
    "from": 433,
    "label": "hasArgument",
    "to": 789
  }, {
    "from": 433,
    "label": "hasArgument",
    "to": 790
  }, {
    "from": 433,
    "label": "hasArgument",
    "to": 791
  }, {
    "from": 433,
    "label": "hasArgument",
    "to": 792
  }, {
    "from": 433,
    "label": "hasArgument",
    "to": 793
  }, {
    "from": 433,
    "label": "hasArgument",
    "to": 794
  }, {
    "from": 433,
    "label": "hasArgument",
    "to": 795
  }, {
    "from": 433,
    "label": "hasArgument",
    "to": 796
  }, {
    "from": 433,
    "label": "hasArgument",
    "to": 797
  }, {
    "from": 433,
    "label": "hasArgument",
    "to": 798
  }, {
    "from": 433,
    "label": "hasArgument",
    "to": 799
  }, {
    "from": 434,
    "label": "hasArgument",
    "to": 800
  }, {
    "from": 434,
    "label": "hasArgument",
    "to": 801
  }, {
    "from": 436,
    "label": "hasArgument",
    "to": 800
  }, {
    "from": 436,
    "label": "hasArgument",
    "to": 801
  }, {
    "from": 437,
    "label": "hasArgument",
    "to": 802
  }, {
    "from": 437,
    "label": "hasArgument",
    "to": 803
  }, {
    "from": 437,
    "label": "hasArgument",
    "to": 804
  }, {
    "from": 439,
    "label": "hasArgument",
    "to": 802
  }, {
    "from": 439,
    "label": "hasArgument",
    "to": 803
  }, {
    "from": 439,
    "label": "hasArgument",
    "to": 804
  }, {
    "from": 440,
    "label": "hasArgument",
    "to": 802
  }, {
    "from": 440,
    "label": "hasArgument",
    "to": 803
  }, {
    "from": 440,
    "label": "hasArgument",
    "to": 804
  }, {
    "from": 441,
    "label": "hasArgument",
    "to": 805
  }, {
    "from": 443,
    "label": "hasArgument",
    "to": 806
  }, {
    "from": 443,
    "label": "hasArgument",
    "to": 807
  }, {
    "from": 443,
    "label": "hasArgument",
    "to": 808
  }, {
    "from": 443,
    "label": "hasArgument",
    "to": 809
  }, {
    "from": 443,
    "label": "hasArgument",
    "to": 810
  }, {
    "from": 443,
    "label": "hasArgument",
    "to": 811
  }, {
    "from": 445,
    "label": "hasArgument",
    "to": 806
  }, {
    "from": 445,
    "label": "hasArgument",
    "to": 807
  }, {
    "from": 445,
    "label": "hasArgument",
    "to": 808
  }, {
    "from": 445,
    "label": "hasArgument",
    "to": 809
  }, {
    "from": 445,
    "label": "hasArgument",
    "to": 810
  }, {
    "from": 445,
    "label": "hasArgument",
    "to": 811
  }, {
    "from": 446,
    "label": "hasArgument",
    "to": 806
  }, {
    "from": 446,
    "label": "hasArgument",
    "to": 807
  }, {
    "from": 446,
    "label": "hasArgument",
    "to": 808
  }, {
    "from": 446,
    "label": "hasArgument",
    "to": 809
  }, {
    "from": 446,
    "label": "hasArgument",
    "to": 810
  }, {
    "from": 446,
    "label": "hasArgument",
    "to": 811
  }, {
    "from": 447,
    "label": "hasArgument",
    "to": 806
  }, {
    "from": 447,
    "label": "hasArgument",
    "to": 807
  }, {
    "from": 447,
    "label": "hasArgument",
    "to": 808
  }, {
    "from": 447,
    "label": "hasArgument",
    "to": 809
  }, {
    "from": 447,
    "label": "hasArgument",
    "to": 810
  }, {
    "from": 447,
    "label": "hasArgument",
    "to": 811
  }, {
    "from": 448,
    "label": "hasArgument",
    "to": 806
  }, {
    "from": 448,
    "label": "hasArgument",
    "to": 807
  }, {
    "from": 448,
    "label": "hasArgument",
    "to": 808
  }, {
    "from": 448,
    "label": "hasArgument",
    "to": 809
  }, {
    "from": 448,
    "label": "hasArgument",
    "to": 810
  }, {
    "from": 448,
    "label": "hasArgument",
    "to": 811
  }, {
    "from": 449,
    "label": "hasArgument",
    "to": 806
  }, {
    "from": 449,
    "label": "hasArgument",
    "to": 807
  }, {
    "from": 449,
    "label": "hasArgument",
    "to": 808
  }, {
    "from": 449,
    "label": "hasArgument",
    "to": 809
  }, {
    "from": 449,
    "label": "hasArgument",
    "to": 810
  }, {
    "from": 449,
    "label": "hasArgument",
    "to": 811
  }, {
    "from": 450,
    "label": "hasArgument",
    "to": 812
  }, {
    "from": 452,
    "label": "hasArgument",
    "to": 813
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 454,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 456,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 457,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 458,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 459,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 460,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 461,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 462,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 463,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 464,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 465,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 466,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 467,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 468,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 469,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 470,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 471,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 472,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 473,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 474,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 814
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 815
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 816
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 817
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 818
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 819
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 820
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 821
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 822
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 823
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 824
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 825
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 826
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 827
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 828
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 829
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 830
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 831
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 832
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 833
  }, {
    "from": 475,
    "label": "hasArgument",
    "to": 834
  }, {
    "from": 476,
    "label": "hasArgument",
    "to": 835
  }, {
    "from": 476,
    "label": "hasArgument",
    "to": 836
  }, {
    "from": 476,
    "label": "hasArgument",
    "to": 837
  }, {
    "from": 476,
    "label": "hasArgument",
    "to": 838
  }, {
    "from": 476,
    "label": "hasArgument",
    "to": 839
  }, {
    "from": 476,
    "label": "hasArgument",
    "to": 840
  }, {
    "from": 476,
    "label": "hasArgument",
    "to": 841
  }, {
    "from": 476,
    "label": "hasArgument",
    "to": 842
  }, {
    "from": 476,
    "label": "hasArgument",
    "to": 843
  }, {
    "from": 476,
    "label": "hasArgument",
    "to": 844
  }, {
    "from": 478,
    "label": "hasArgument",
    "to": 835
  }, {
    "from": 478,
    "label": "hasArgument",
    "to": 836
  }, {
    "from": 478,
    "label": "hasArgument",
    "to": 837
  }, {
    "from": 478,
    "label": "hasArgument",
    "to": 838
  }, {
    "from": 478,
    "label": "hasArgument",
    "to": 839
  }, {
    "from": 478,
    "label": "hasArgument",
    "to": 840
  }, {
    "from": 478,
    "label": "hasArgument",
    "to": 841
  }, {
    "from": 478,
    "label": "hasArgument",
    "to": 842
  }, {
    "from": 478,
    "label": "hasArgument",
    "to": 843
  }, {
    "from": 478,
    "label": "hasArgument",
    "to": 844
  }, {
    "from": 479,
    "label": "hasArgument",
    "to": 835
  }, {
    "from": 479,
    "label": "hasArgument",
    "to": 836
  }, {
    "from": 479,
    "label": "hasArgument",
    "to": 837
  }, {
    "from": 479,
    "label": "hasArgument",
    "to": 838
  }, {
    "from": 479,
    "label": "hasArgument",
    "to": 839
  }, {
    "from": 479,
    "label": "hasArgument",
    "to": 840
  }, {
    "from": 479,
    "label": "hasArgument",
    "to": 841
  }, {
    "from": 479,
    "label": "hasArgument",
    "to": 842
  }, {
    "from": 479,
    "label": "hasArgument",
    "to": 843
  }, {
    "from": 479,
    "label": "hasArgument",
    "to": 844
  }, {
    "from": 480,
    "label": "hasArgument",
    "to": 835
  }, {
    "from": 480,
    "label": "hasArgument",
    "to": 836
  }, {
    "from": 480,
    "label": "hasArgument",
    "to": 837
  }, {
    "from": 480,
    "label": "hasArgument",
    "to": 838
  }, {
    "from": 480,
    "label": "hasArgument",
    "to": 839
  }, {
    "from": 480,
    "label": "hasArgument",
    "to": 840
  }, {
    "from": 480,
    "label": "hasArgument",
    "to": 841
  }, {
    "from": 480,
    "label": "hasArgument",
    "to": 842
  }, {
    "from": 480,
    "label": "hasArgument",
    "to": 843
  }, {
    "from": 480,
    "label": "hasArgument",
    "to": 844
  }, {
    "from": 481,
    "label": "hasArgument",
    "to": 835
  }, {
    "from": 481,
    "label": "hasArgument",
    "to": 836
  }, {
    "from": 481,
    "label": "hasArgument",
    "to": 837
  }, {
    "from": 481,
    "label": "hasArgument",
    "to": 838
  }, {
    "from": 481,
    "label": "hasArgument",
    "to": 839
  }, {
    "from": 481,
    "label": "hasArgument",
    "to": 840
  }, {
    "from": 481,
    "label": "hasArgument",
    "to": 841
  }, {
    "from": 481,
    "label": "hasArgument",
    "to": 842
  }, {
    "from": 481,
    "label": "hasArgument",
    "to": 843
  }, {
    "from": 481,
    "label": "hasArgument",
    "to": 844
  }, {
    "from": 482,
    "label": "hasArgument",
    "to": 835
  }, {
    "from": 482,
    "label": "hasArgument",
    "to": 836
  }, {
    "from": 482,
    "label": "hasArgument",
    "to": 837
  }, {
    "from": 482,
    "label": "hasArgument",
    "to": 838
  }, {
    "from": 482,
    "label": "hasArgument",
    "to": 839
  }, {
    "from": 482,
    "label": "hasArgument",
    "to": 840
  }, {
    "from": 482,
    "label": "hasArgument",
    "to": 841
  }, {
    "from": 482,
    "label": "hasArgument",
    "to": 842
  }, {
    "from": 482,
    "label": "hasArgument",
    "to": 843
  }, {
    "from": 482,
    "label": "hasArgument",
    "to": 844
  }, {
    "from": 483,
    "label": "hasArgument",
    "to": 835
  }, {
    "from": 483,
    "label": "hasArgument",
    "to": 836
  }, {
    "from": 483,
    "label": "hasArgument",
    "to": 837
  }, {
    "from": 483,
    "label": "hasArgument",
    "to": 838
  }, {
    "from": 483,
    "label": "hasArgument",
    "to": 839
  }, {
    "from": 483,
    "label": "hasArgument",
    "to": 840
  }, {
    "from": 483,
    "label": "hasArgument",
    "to": 841
  }, {
    "from": 483,
    "label": "hasArgument",
    "to": 842
  }, {
    "from": 483,
    "label": "hasArgument",
    "to": 843
  }, {
    "from": 483,
    "label": "hasArgument",
    "to": 844
  }, {
    "from": 484,
    "label": "hasArgument",
    "to": 835
  }, {
    "from": 484,
    "label": "hasArgument",
    "to": 836
  }, {
    "from": 484,
    "label": "hasArgument",
    "to": 837
  }, {
    "from": 484,
    "label": "hasArgument",
    "to": 838
  }, {
    "from": 484,
    "label": "hasArgument",
    "to": 839
  }, {
    "from": 484,
    "label": "hasArgument",
    "to": 840
  }, {
    "from": 484,
    "label": "hasArgument",
    "to": 841
  }, {
    "from": 484,
    "label": "hasArgument",
    "to": 842
  }, {
    "from": 484,
    "label": "hasArgument",
    "to": 843
  }, {
    "from": 484,
    "label": "hasArgument",
    "to": 844
  }, {
    "from": 485,
    "label": "hasArgument",
    "to": 835
  }, {
    "from": 485,
    "label": "hasArgument",
    "to": 836
  }, {
    "from": 485,
    "label": "hasArgument",
    "to": 837
  }, {
    "from": 485,
    "label": "hasArgument",
    "to": 838
  }, {
    "from": 485,
    "label": "hasArgument",
    "to": 839
  }, {
    "from": 485,
    "label": "hasArgument",
    "to": 840
  }, {
    "from": 485,
    "label": "hasArgument",
    "to": 841
  }, {
    "from": 485,
    "label": "hasArgument",
    "to": 842
  }, {
    "from": 485,
    "label": "hasArgument",
    "to": 843
  }, {
    "from": 485,
    "label": "hasArgument",
    "to": 844
  }, {
    "from": 486,
    "label": "hasArgument",
    "to": 835
  }, {
    "from": 486,
    "label": "hasArgument",
    "to": 836
  }, {
    "from": 486,
    "label": "hasArgument",
    "to": 837
  }, {
    "from": 486,
    "label": "hasArgument",
    "to": 838
  }, {
    "from": 486,
    "label": "hasArgument",
    "to": 839
  }, {
    "from": 486,
    "label": "hasArgument",
    "to": 840
  }, {
    "from": 486,
    "label": "hasArgument",
    "to": 841
  }, {
    "from": 486,
    "label": "hasArgument",
    "to": 842
  }, {
    "from": 486,
    "label": "hasArgument",
    "to": 843
  }, {
    "from": 486,
    "label": "hasArgument",
    "to": 844
  }, {
    "from": 487,
    "label": "hasArgument",
    "to": 845
  }, {
    "from": 489,
    "label": "hasArgument",
    "to": 846
  }, {
    "from": 491,
    "label": "hasArgument",
    "to": 847
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "auidemo",
    "type": "module"
  }, {
    "id": 2,
    "text": "function(s) return s end",
    "type": "function"
  }, {
    "id": 3,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 4,
    "text": "function(s) return s end",
    "type": "function"
  }, {
    "id": 5,
    "text": "local function NewID()\r\n    if not IDCounter then IDCounter = wx.wxID_HIGHEST end\r\n    IDCounter = IDCounter + 1\r\n    return IDCounter\r\nend",
    "type": "function"
  }, {
    "id": 6,
    "text": "if not IDCounter then IDCounter = wx.wxID_HIGHEST end",
    "type": "statement:if"
  }, {
    "id": 7,
    "text": "IDCounter = wx.wxID_HIGHEST",
    "type": "statement:assign"
  }, {
    "id": 8,
    "text": "IDCounter = IDCounter + 1",
    "type": "statement:assign"
  }, {
    "id": 9,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 10,
    "text": "function wxSizeReportCtrl(parent, id, pos, size, mgr)\r\n    local this = wx.wxControl(parent, id, pos, size, wx.wxNO_BORDER)\r\n    local m_mgr = mgr;\r\n\r\n    this:Connect(wx.wxEVT_SIZE, function(event)\r\n            this:Refresh();\r\n        end)\r\n\r\n    this:Connect(wx.wxEVT_ERASE_BACKGROUND, function(event)\r\n            --// intentionally empty\r\n        end)\r\n\r\n    this:Connect(wx.wxEVT_PAINT, function(event)\r\n            local dc = wx.wxPaintDC(this)\r\n            local sizex,sizey = this:GetClientSizeWH();\r\n            local s;\r\n            local h, w, height;\r\n\r\n            s = string.format(wxT(\"Size: %d x %d\"), sizex, sizey);\r\n\r\n            dc:SetFont(wx.wxNORMAL_FONT);\r\n            w,height=dc:GetTextExtent(s);\r\n            height = height + 3;\r\n            dc:SetBrush(wx.wxWHITE_BRUSH);\r\n            dc:SetPen(wx.wxWHITE_PEN);\r\n            dc:DrawRectangle(0, 0, sizex, sizey);\r\n            dc:SetPen(wx.wxLIGHT_GREY_PEN);\r\n            dc:DrawLine(0, 0, sizex, sizey);\r\n            dc:DrawLine(0, sizey, sizex, 0);\r\n            dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2));\r\n\r\n            if (m_mgr) then\r\n                local pi = m_mgr:GetPane(this);\r\n\r\n                s = string.format(wxT(\"Layer: %d\"), pi.dock_layer);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*1));\r\n\r\n                s = string.format(wxT(\"Dock: %d Row: %d\"), pi.dock_direction, pi.dock_row);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*2));\r\n\r\n                s = string.format(wxT(\"Position: %d\"), pi.dock_pos);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*3));\r\n\r\n                s = string.format(wxT(\"Proportion: %d\"), pi.dock_proportion);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*4));\r\n            end\r\n\r\n            dc:delete()\r\n        end)\r\n\r\n    return this\r\nend",
    "type": "function"
  }, {
    "id": 11,
    "text": "local this = wx.wxControl(parent, id, pos, size, wx.wxNO_BORDER)",
    "type": "statement:localassign"
  }, {
    "id": 12,
    "text": "local m_mgr = mgr",
    "type": "statement:localassign"
  }, {
    "id": 13,
    "text": "this:Connect(wx.wxEVT_SIZE, function(event)\r\n            this:Refresh();\r\n        end)",
    "type": "statement:functioncall"
  }, {
    "id": 14,
    "text": "this:Refresh()",
    "type": "statement:functioncall"
  }, {
    "id": 15,
    "text": "this:Connect(wx.wxEVT_ERASE_BACKGROUND, function(event)\r\n            --// intentionally empty\r\n        end)",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "this:Connect(wx.wxEVT_PAINT, function(event)\r\n            local dc = wx.wxPaintDC(this)\r\n            local sizex,sizey = this:GetClientSizeWH();\r\n            local s;\r\n            local h, w, height;\r\n\r\n            s = string.format(wxT(\"Size: %d x %d\"), sizex, sizey);\r\n\r\n            dc:SetFont(wx.wxNORMAL_FONT);\r\n            w,height=dc:GetTextExtent(s);\r\n            height = height + 3;\r\n            dc:SetBrush(wx.wxWHITE_BRUSH);\r\n            dc:SetPen(wx.wxWHITE_PEN);\r\n            dc:DrawRectangle(0, 0, sizex, sizey);\r\n            dc:SetPen(wx.wxLIGHT_GREY_PEN);\r\n            dc:DrawLine(0, 0, sizex, sizey);\r\n            dc:DrawLine(0, sizey, sizex, 0);\r\n            dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2));\r\n\r\n            if (m_mgr) then\r\n                local pi = m_mgr:GetPane(this);\r\n\r\n                s = string.format(wxT(\"Layer: %d\"), pi.dock_layer);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*1));\r\n\r\n                s = string.format(wxT(\"Dock: %d Row: %d\"), pi.dock_direction, pi.dock_row);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*2));\r\n\r\n                s = string.format(wxT(\"Position: %d\"), pi.dock_pos);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*3));\r\n\r\n                s = string.format(wxT(\"Proportion: %d\"), pi.dock_proportion);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*4));\r\n            end\r\n\r\n            dc:delete()\r\n        end)",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "local dc = wx.wxPaintDC(this)",
    "type": "statement:localassign"
  }, {
    "id": 18,
    "text": "local sizex,sizey = this:GetClientSizeWH()",
    "type": "statement:localassign"
  }, {
    "id": 19,
    "text": "local s",
    "type": "statement:localassign"
  }, {
    "id": 20,
    "text": "local h, w, height",
    "type": "statement:localassign"
  }, {
    "id": 21,
    "text": "s = string.format(wxT(\"Size: %d x %d\"), sizex, sizey)",
    "type": "statement:assign"
  }, {
    "id": 22,
    "text": "dc:SetFont(wx.wxNORMAL_FONT)",
    "type": "statement:functioncall"
  }, {
    "id": 23,
    "text": "w,height=dc:GetTextExtent(s)",
    "type": "statement:assign"
  }, {
    "id": 24,
    "text": "height = height + 3",
    "type": "statement:assign"
  }, {
    "id": 25,
    "text": "dc:SetBrush(wx.wxWHITE_BRUSH)",
    "type": "statement:functioncall"
  }, {
    "id": 26,
    "text": "dc:SetPen(wx.wxWHITE_PEN)",
    "type": "statement:functioncall"
  }, {
    "id": 27,
    "text": "dc:DrawRectangle(0, 0, sizex, sizey)",
    "type": "statement:functioncall"
  }, {
    "id": 28,
    "text": "dc:SetPen(wx.wxLIGHT_GREY_PEN)",
    "type": "statement:functioncall"
  }, {
    "id": 29,
    "text": "dc:DrawLine(0, 0, sizex, sizey)",
    "type": "statement:functioncall"
  }, {
    "id": 30,
    "text": "dc:DrawLine(0, sizey, sizex, 0)",
    "type": "statement:functioncall"
  }, {
    "id": 31,
    "text": "dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2))",
    "type": "statement:functioncall"
  }, {
    "id": 32,
    "text": "if (m_mgr) then\r\n                local pi = m_mgr:GetPane(this);\r\n\r\n                s = string.format(wxT(\"Layer: %d\"), pi.dock_layer);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*1));\r\n\r\n                s = string.format(wxT(\"Dock: %d Row: %d\"), pi.dock_direction, pi.dock_row);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*2));\r\n\r\n                s = string.format(wxT(\"Position: %d\"), pi.dock_pos);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*3));\r\n\r\n                s = string.format(wxT(\"Proportion: %d\"), pi.dock_proportion);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*4));\r\n            end",
    "type": "statement:if"
  }, {
    "id": 33,
    "text": "local pi = m_mgr:GetPane(this)",
    "type": "statement:localassign"
  }, {
    "id": 34,
    "text": "s = string.format(wxT(\"Layer: %d\"), pi.dock_layer)",
    "type": "statement:assign"
  }, {
    "id": 35,
    "text": "w,h = dc:GetTextExtent(s)",
    "type": "statement:assign"
  }, {
    "id": 36,
    "text": "dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*1))",
    "type": "statement:functioncall"
  }, {
    "id": 37,
    "text": "s = string.format(wxT(\"Dock: %d Row: %d\"), pi.dock_direction, pi.dock_row)",
    "type": "statement:assign"
  }, {
    "id": 38,
    "text": "dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*2))",
    "type": "statement:functioncall"
  }, {
    "id": 39,
    "text": "s = string.format(wxT(\"Position: %d\"), pi.dock_pos)",
    "type": "statement:assign"
  }, {
    "id": 40,
    "text": "dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*3))",
    "type": "statement:functioncall"
  }, {
    "id": 41,
    "text": "s = string.format(wxT(\"Proportion: %d\"), pi.dock_proportion)",
    "type": "statement:assign"
  }, {
    "id": 42,
    "text": "dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*4))",
    "type": "statement:functioncall"
  }, {
    "id": 43,
    "text": "dc:delete()",
    "type": "statement:functioncall"
  }, {
    "id": 44,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 45,
    "text": "function SettingsPanel:create(parent, frame)\r\n    self.this = wx.wxPanel(parent.this, wx.wxID_ANY, wx.wxDefaultPosition, wx.wxDefaultSize)\r\n    self.m_frame = frame\r\n    local this = self.this\r\n\r\n        --//wxBoxSizer* vert = new wxBoxSizer(wxVERTICAL);\r\n\r\n        --//vert:Add(1, 1, 1, wxEXPAND);\r\n\r\n        local s1 = wx.wxBoxSizer(wx.wxHORIZONTAL);\r\n        self.m_border_size = wx.wxSpinCtrl(this, self.ID_PaneBorderSize, string.format(wxT(\"%d\"),\r\n            frame:GetDockArt():GetMetric(wxaui.wxAUI_DOCKART_PANE_BORDER_SIZE)),\r\n            wx.wxDefaultPosition, wx.wxSize(50,20), wx.wxSP_ARROW_KEYS, 0, 100,\r\n            frame:GetDockArt():GetMetric(wxaui.wxAUI_DOCKART_PANE_BORDER_SIZE));\r\n        s1:Add(1, 1, 1, wx.wxEXPAND);\r\n        s1:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Pane Border Size:\")));\r\n        s1:Add(self.m_border_size);\r\n        s1:Add(1, 1, 1, wx.wxEXPAND);\r\n        s1:SetItemMinSize(1, 180, 20);\r\n        --//vert:Add(s1, 0, wxEXPAND | wxLEFT | wxBOTTOM, 5);\r\n\r\n        local s2 = wx.wxBoxSizer(wx.wxHORIZONTAL);\r\n        self.m_sash_size = wx.wxSpinCtrl(this, self.ID_SashSize, string.format(wxT(\"%d\"),\r\n            frame:GetDockArt():GetMetric(wxaui.wxAUI_DOCKART_SASH_SIZE)),\r\n            wx.wxDefaultPosition, wx.wxSize(50,20), wx.wxSP_ARROW_KEYS, 0, 100,\r\n            frame:GetDockArt():GetMetric(wxaui.wxAUI_DOCKART_SASH_SIZE));\r\n        s2:Add(1, 1, 1, wx.wxEXPAND);\r\n        s2:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Sash Size:\")));\r\n        s2:Add(self.m_sash_size);\r\n        s2:Add(1, 1, 1, wx.wxEXPAND);\r\n        s2:SetItemMinSize(1, 180, 20);\r\n        --//vert:Add(s2, 0, wxEXPAND | wxLEFT | wxBOTTOM, 5);\r\n\r\n        local s3 = wx.wxBoxSizer(wx.wxHORIZONTAL);\r\n        self.m_caption_size = wx.wxSpinCtrl(this, self.ID_CaptionSize, string.format(wxT(\"%d\"),\r\n            frame:GetDockArt():GetMetric(wxaui.wxAUI_DOCKART_CAPTION_SIZE)),\r\n            wx.wxDefaultPosition, wx.wxSize(50,20), wx.wxSP_ARROW_KEYS, 0, 100,\r\n            frame:GetDockArt():GetMetric(wxaui.wxAUI_DOCKART_CAPTION_SIZE));\r\n        s3:Add(1, 1, 1, wx.wxEXPAND);\r\n        s3:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Caption Size:\")));\r\n        s3:Add(self.m_caption_size);\r\n        s3:Add(1, 1, 1, wx.wxEXPAND);\r\n        s3:SetItemMinSize(1, 180, 20);\r\n        --//vert:Add(s3, 0, wxEXPAND | wxLEFT | wxBOTTOM, 5);\r\n\r\n        --//vert:Add(1, 1, 1, wxEXPAND);\r\n\r\n\r\n        local b = self:CreateColorBitmap(wx.wxBLACK);\r\n\r\n        local s4 = wx.wxBoxSizer(wx.wxHORIZONTAL);\r\n        self.m_background_color = wx.wxBitmapButton(this, self.ID_BackgroundColor, b, wx.wxDefaultPosition, wx.wxSize(50,25));\r\n        s4:Add(1, 1, 1, wx.wxEXPAND);\r\n        s4:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Background Color:\")));\r\n        s4:Add(self.m_background_color);\r\n        s4:Add(1, 1, 1, wx.wxEXPAND);\r\n        s4:SetItemMinSize(1, 180, 20);\r\n\r\n        local s5 = wx.wxBoxSizer(wx.wxHORIZONTAL);\r\n        self.m_sash_color = wx.wxBitmapButton(this, self.ID_SashColor, b, wx.wxDefaultPosition, wx.wxSize(50,25));\r\n        s5:Add(1, 1, 1, wx.wxEXPAND);\r\n        s5:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Sash Color:\")));\r\n        s5:Add(self.m_sash_color);\r\n        s5:Add(1, 1, 1, wx.wxEXPAND);\r\n        s5:SetItemMinSize(1, 180, 20);\r\n\r\n        local s6 = wx.wxBoxSizer(wx.wxHORIZONTAL);\r\n        self.m_inactive_caption_color = wx.wxBitmapButton(this, self.ID_InactiveCaptionColor, b, wx.wxDefaultPosition, wx.wxSize(50,25));\r\n        s6:Add(1, 1, 1, wx.wxEXPAND);\r\n        s6:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Normal Caption:\")));\r\n        s6:Add(self.m_inactive_caption_color);\r\n        s6:Add(1, 1, 1, wx.wxEXPAND);\r\n        s6:SetItemMinSize(1, 180, 20);\r\n\r\n        local s7 = wx.wxBoxSizer(wx.wxHORIZONTAL);\r\n        self.m_inactive_caption_gradient_color = wx.wxBitmapButton(this, self.ID_InactiveCaptionGradientColor, b, wx.wxDefaultPosition, wx.wxSize(50,25));\r\n        s7:Add(1, 1, 1, wx.wxEXPAND);\r\n        s7:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Normal Caption Gradient:\")));\r\n        s7:Add(self.m_inactive_caption_gradient_color);\r\n        s7:Add(1, 1, 1, wx.wxEXPAND);\r\n        s7:SetItemMinSize(1, 180, 20);\r\n\r\n        local s8 = wx.wxBoxSizer(wx.wxHORIZONTAL);\r\n        self.m_inactive_caption_text_color = wx.wxBitmapButton(this, self.ID_InactiveCaptionTextColor, b, wx.wxDefaultPosition, wx.wxSize(50,25));\r\n        s8:Add(1, 1, 1, wx.wxEXPAND);\r\n        s8:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Normal Caption Text:\")));\r\n        s8:Add(self.m_inactive_caption_text_color);\r\n        s8:Add(1, 1, 1, wx.wxEXPAND);\r\n        s8:SetItemMinSize(1, 180, 20);\r\n\r\n        local s9 = wx.wxBoxSizer(wx.wxHORIZONTAL);\r\n        self.m_active_caption_color = wx.wxBitmapButton(this, self.ID_ActiveCaptionColor, b, wx.wxDefaultPosition, wx.wxSize(50,25));\r\n        s9:Add(1, 1, 1, wx.wxEXPAND);\r\n        s9:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Active Caption:\")));\r\n        s9:Add(self.m_active_caption_color);\r\n        s9:Add(1, 1, 1, wx.wxEXPAND);\r\n        s9:SetItemMinSize(1, 180, 20);\r\n\r\n        local s10 = wx.wxBoxSizer(wx.wxHORIZONTAL);\r\n        self.m_active_caption_gradient_color = wx.wxBitmapButton(this, self.ID_ActiveCaptionGradientColor, b, wx.wxDefaultPosition, wx.wxSize(50,25));\r\n        s10:Add(1, 1, 1, wx.wxEXPAND);\r\n        s10:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Active Caption Gradient:\")));\r\n        s10:Add(self.m_active_caption_gradient_color);\r\n        s10:Add(1, 1, 1, wx.wxEXPAND);\r\n        s10:SetItemMinSize(1, 180, 20);\r\n\r\n        local s11 = wx.wxBoxSizer(wx.wxHORIZONTAL);\r\n        self.m_active_caption_text_color = wx.wxBitmapButton(this, self.ID_ActiveCaptionTextColor, b, wx.wxDefaultPosition, wx.wxSize(50,25));\r\n        s11:Add(1, 1, 1, wx.wxEXPAND);\r\n        s11:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Active Caption Text:\")));\r\n        s11:Add(self.m_active_caption_text_color);\r\n        s11:Add(1, 1, 1, wx.wxEXPAND);\r\n        s11:SetItemMinSize(1, 180, 20);\r\n\r\n        local s12 = wx.wxBoxSizer(wx.wxHORIZONTAL);\r\n        self.m_border_color = wx.wxBitmapButton(this, self.ID_BorderColor, b, wx.wxDefaultPosition, wx.wxSize(50,25));\r\n        s12:Add(1, 1, 1, wx.wxEXPAND);\r\n        s12:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Border Color:\")));\r\n        s12:Add(self.m_border_color);\r\n        s12:Add(1, 1, 1, wx.wxEXPAND);\r\n        s12:SetItemMinSize(1, 180, 20);\r\n\r\n        local s13 = wx.wxBoxSizer(wx.wxHORIZONTAL);\r\n        self.m_gripper_color = wx.wxBitmapButton(this, self.ID_GripperColor, b, wx.wxDefaultPosition, wx.wxSize(50,25));\r\n        s13:Add(1, 1, 1, wx.wxEXPAND);\r\n        s13:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Gripper Color:\")));\r\n        s13:Add(self.m_gripper_color);\r\n        s13:Add(1, 1, 1, wx.wxEXPAND);\r\n        s13:SetItemMinSize(1, 180, 20);\r\n\r\n        local grid_sizer = wx.wxGridSizer(2,2,2,2);\r\n        grid_sizer:SetHGap(5);\r\n        grid_sizer:Add(s1);  grid_sizer:Add(s4);\r\n        grid_sizer:Add(s2);  grid_sizer:Add(s5);\r\n        grid_sizer:Add(s3);  grid_sizer:Add(s13);\r\n        grid_sizer:Add(1,1); grid_sizer:Add(s12);\r\n        grid_sizer:Add(s6);  grid_sizer:Add(s9);\r\n        grid_sizer:Add(s7);  grid_sizer:Add(s10);\r\n        grid_sizer:Add(s8);  grid_sizer:Add(s11);\r\n\r\n        local cont_sizer = wx.wxBoxSizer(wx.wxVERTICAL);\r\n        cont_sizer:Add(grid_sizer, 1, wx.wxEXPAND + wx.wxALL, 5);\r\n        this:SetSizer(cont_sizer);\r\n        this:GetSizer():SetSizeHints(this);\r\n--#if 0\r\n--        m_border_size:SetValue(frame:GetDockArt():GetMetric(wxAUI_DOCKART_PANE_BORDER_SIZE));\r\n--        m_sash_size:SetValue(frame:GetDockArt():GetMetric(wxAUI_DOCKART_SASH_SIZE));\r\n--        m_caption_size:SetValue(frame:GetDockArt():GetMetric(wxAUI_DOCKART_CAPTION_SIZE));\r\n--#endif\r\n        self:UpdateColors();\r\n\r\n    this:Connect(self.ID_PaneBorderSize, wx.wxEVT_COMMAND_SPINCTRL_UPDATED, function(event) self:OnPaneBorderSize(event) end)\r\n    this:Connect(self.ID_SashSize, wx.wxEVT_COMMAND_SPINCTRL_UPDATED, function(event) self:OnSashSize(event) end)\r\n    this:Connect(self.ID_CaptionSize, wx.wxEVT_COMMAND_SPINCTRL_UPDATED, function(event) self:OnCaptionSize(event) end)\r\n    this:Connect(self.ID_BackgroundColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)\r\n    this:Connect(self.ID_SashColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)\r\n    this:Connect(self.ID_InactiveCaptionColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)\r\n    this:Connect(self.ID_InactiveCaptionGradientColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)\r\n    this:Connect(self.ID_InactiveCaptionTextColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)\r\n    this:Connect(self.ID_ActiveCaptionColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)\r\n    this:Connect(self.ID_ActiveCaptionGradientColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)\r\n    this:Connect(self.ID_ActiveCaptionTextColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)\r\n    this:Connect(self.ID_BorderColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)\r\n    this:Connect(self.ID_GripperColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)\r\n\r\n    return self\r\nend",
    "type": "function"
  }, {
    "id": 46,
    "text": "self.this = wx.wxPanel(parent.this, wx.wxID_ANY, wx.wxDefaultPosition, wx.wxDefaultSize)",
    "type": "statement:assign"
  }, {
    "id": 47,
    "text": "self.m_frame = frame",
    "type": "statement:assign"
  }, {
    "id": 48,
    "text": "local this = self.this",
    "type": "statement:localassign"
  }, {
    "id": 49,
    "text": "local s1 = wx.wxBoxSizer(wx.wxHORIZONTAL)",
    "type": "statement:localassign"
  }, {
    "id": 50,
    "text": "self.m_border_size = wx.wxSpinCtrl(this, self.ID_PaneBorderSize, string.format(wxT(\"%d\"),\r\n            frame:GetDockArt():GetMetric(wxaui.wxAUI_DOCKART_PANE_BORDER_SIZE)),\r\n            wx.wxDefaultPosition, wx.wxSize(50,20), wx.wxSP_ARROW_KEYS, 0, 100,\r\n            frame:GetDockArt():GetMetric(wxaui.wxAUI_DOCKART_PANE_BORDER_SIZE))",
    "type": "statement:assign"
  }, {
    "id": 51,
    "text": "s1:Add(1, 1, 1, wx.wxEXPAND)",
    "type": "statement:functioncall"
  }, {
    "id": 52,
    "text": "s1:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Pane Border Size:\")))",
    "type": "statement:functioncall"
  }, {
    "id": 53,
    "text": "s1:Add(self.m_border_size)",
    "type": "statement:functioncall"
  }, {
    "id": 54,
    "text": "s1:SetItemMinSize(1, 180, 20)",
    "type": "statement:functioncall"
  }, {
    "id": 55,
    "text": "local s2 = wx.wxBoxSizer(wx.wxHORIZONTAL)",
    "type": "statement:localassign"
  }, {
    "id": 56,
    "text": "self.m_sash_size = wx.wxSpinCtrl(this, self.ID_SashSize, string.format(wxT(\"%d\"),\r\n            frame:GetDockArt():GetMetric(wxaui.wxAUI_DOCKART_SASH_SIZE)),\r\n            wx.wxDefaultPosition, wx.wxSize(50,20), wx.wxSP_ARROW_KEYS, 0, 100,\r\n            frame:GetDockArt():GetMetric(wxaui.wxAUI_DOCKART_SASH_SIZE))",
    "type": "statement:assign"
  }, {
    "id": 57,
    "text": "s2:Add(1, 1, 1, wx.wxEXPAND)",
    "type": "statement:functioncall"
  }, {
    "id": 58,
    "text": "s2:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Sash Size:\")))",
    "type": "statement:functioncall"
  }, {
    "id": 59,
    "text": "s2:Add(self.m_sash_size)",
    "type": "statement:functioncall"
  }, {
    "id": 60,
    "text": "s2:SetItemMinSize(1, 180, 20)",
    "type": "statement:functioncall"
  }, {
    "id": 61,
    "text": "local s3 = wx.wxBoxSizer(wx.wxHORIZONTAL)",
    "type": "statement:localassign"
  }, {
    "id": 62,
    "text": "self.m_caption_size = wx.wxSpinCtrl(this, self.ID_CaptionSize, string.format(wxT(\"%d\"),\r\n            frame:GetDockArt():GetMetric(wxaui.wxAUI_DOCKART_CAPTION_SIZE)),\r\n            wx.wxDefaultPosition, wx.wxSize(50,20), wx.wxSP_ARROW_KEYS, 0, 100,\r\n            frame:GetDockArt():GetMetric(wxaui.wxAUI_DOCKART_CAPTION_SIZE))",
    "type": "statement:assign"
  }, {
    "id": 63,
    "text": "s3:Add(1, 1, 1, wx.wxEXPAND)",
    "type": "statement:functioncall"
  }, {
    "id": 64,
    "text": "s3:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Caption Size:\")))",
    "type": "statement:functioncall"
  }, {
    "id": 65,
    "text": "s3:Add(self.m_caption_size)",
    "type": "statement:functioncall"
  }, {
    "id": 66,
    "text": "s3:SetItemMinSize(1, 180, 20)",
    "type": "statement:functioncall"
  }, {
    "id": 67,
    "text": "local b = self:CreateColorBitmap(wx.wxBLACK)",
    "type": "statement:localassign"
  }, {
    "id": 68,
    "text": "local s4 = wx.wxBoxSizer(wx.wxHORIZONTAL)",
    "type": "statement:localassign"
  }, {
    "id": 69,
    "text": "self.m_background_color = wx.wxBitmapButton(this, self.ID_BackgroundColor, b, wx.wxDefaultPosition, wx.wxSize(50,25))",
    "type": "statement:assign"
  }, {
    "id": 70,
    "text": "s4:Add(1, 1, 1, wx.wxEXPAND)",
    "type": "statement:functioncall"
  }, {
    "id": 71,
    "text": "s4:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Background Color:\")))",
    "type": "statement:functioncall"
  }, {
    "id": 72,
    "text": "s4:Add(self.m_background_color)",
    "type": "statement:functioncall"
  }, {
    "id": 73,
    "text": "s4:SetItemMinSize(1, 180, 20)",
    "type": "statement:functioncall"
  }, {
    "id": 74,
    "text": "local s5 = wx.wxBoxSizer(wx.wxHORIZONTAL)",
    "type": "statement:localassign"
  }, {
    "id": 75,
    "text": "self.m_sash_color = wx.wxBitmapButton(this, self.ID_SashColor, b, wx.wxDefaultPosition, wx.wxSize(50,25))",
    "type": "statement:assign"
  }, {
    "id": 76,
    "text": "s5:Add(1, 1, 1, wx.wxEXPAND)",
    "type": "statement:functioncall"
  }, {
    "id": 77,
    "text": "s5:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Sash Color:\")))",
    "type": "statement:functioncall"
  }, {
    "id": 78,
    "text": "s5:Add(self.m_sash_color)",
    "type": "statement:functioncall"
  }, {
    "id": 79,
    "text": "s5:SetItemMinSize(1, 180, 20)",
    "type": "statement:functioncall"
  }, {
    "id": 80,
    "text": "local s6 = wx.wxBoxSizer(wx.wxHORIZONTAL)",
    "type": "statement:localassign"
  }, {
    "id": 81,
    "text": "self.m_inactive_caption_color = wx.wxBitmapButton(this, self.ID_InactiveCaptionColor, b, wx.wxDefaultPosition, wx.wxSize(50,25))",
    "type": "statement:assign"
  }, {
    "id": 82,
    "text": "s6:Add(1, 1, 1, wx.wxEXPAND)",
    "type": "statement:functioncall"
  }, {
    "id": 83,
    "text": "s6:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Normal Caption:\")))",
    "type": "statement:functioncall"
  }, {
    "id": 84,
    "text": "s6:Add(self.m_inactive_caption_color)",
    "type": "statement:functioncall"
  }, {
    "id": 85,
    "text": "s6:SetItemMinSize(1, 180, 20)",
    "type": "statement:functioncall"
  }, {
    "id": 86,
    "text": "local s7 = wx.wxBoxSizer(wx.wxHORIZONTAL)",
    "type": "statement:localassign"
  }, {
    "id": 87,
    "text": "self.m_inactive_caption_gradient_color = wx.wxBitmapButton(this, self.ID_InactiveCaptionGradientColor, b, wx.wxDefaultPosition, wx.wxSize(50,25))",
    "type": "statement:assign"
  }, {
    "id": 88,
    "text": "s7:Add(1, 1, 1, wx.wxEXPAND)",
    "type": "statement:functioncall"
  }, {
    "id": 89,
    "text": "s7:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Normal Caption Gradient:\")))",
    "type": "statement:functioncall"
  }, {
    "id": 90,
    "text": "s7:Add(self.m_inactive_caption_gradient_color)",
    "type": "statement:functioncall"
  }, {
    "id": 91,
    "text": "s7:SetItemMinSize(1, 180, 20)",
    "type": "statement:functioncall"
  }, {
    "id": 92,
    "text": "local s8 = wx.wxBoxSizer(wx.wxHORIZONTAL)",
    "type": "statement:localassign"
  }, {
    "id": 93,
    "text": "self.m_inactive_caption_text_color = wx.wxBitmapButton(this, self.ID_InactiveCaptionTextColor, b, wx.wxDefaultPosition, wx.wxSize(50,25))",
    "type": "statement:assign"
  }, {
    "id": 94,
    "text": "s8:Add(1, 1, 1, wx.wxEXPAND)",
    "type": "statement:functioncall"
  }, {
    "id": 95,
    "text": "s8:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Normal Caption Text:\")))",
    "type": "statement:functioncall"
  }, {
    "id": 96,
    "text": "s8:Add(self.m_inactive_caption_text_color)",
    "type": "statement:functioncall"
  }, {
    "id": 97,
    "text": "s8:SetItemMinSize(1, 180, 20)",
    "type": "statement:functioncall"
  }, {
    "id": 98,
    "text": "local s9 = wx.wxBoxSizer(wx.wxHORIZONTAL)",
    "type": "statement:localassign"
  }, {
    "id": 99,
    "text": "self.m_active_caption_color = wx.wxBitmapButton(this, self.ID_ActiveCaptionColor, b, wx.wxDefaultPosition, wx.wxSize(50,25))",
    "type": "statement:assign"
  }, {
    "id": 100,
    "text": "s9:Add(1, 1, 1, wx.wxEXPAND)",
    "type": "statement:functioncall"
  }, {
    "id": 101,
    "text": "s9:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Active Caption:\")))",
    "type": "statement:functioncall"
  }, {
    "id": 102,
    "text": "s9:Add(self.m_active_caption_color)",
    "type": "statement:functioncall"
  }, {
    "id": 103,
    "text": "s9:SetItemMinSize(1, 180, 20)",
    "type": "statement:functioncall"
  }, {
    "id": 104,
    "text": "local s10 = wx.wxBoxSizer(wx.wxHORIZONTAL)",
    "type": "statement:localassign"
  }, {
    "id": 105,
    "text": "self.m_active_caption_gradient_color = wx.wxBitmapButton(this, self.ID_ActiveCaptionGradientColor, b, wx.wxDefaultPosition, wx.wxSize(50,25))",
    "type": "statement:assign"
  }, {
    "id": 106,
    "text": "s10:Add(1, 1, 1, wx.wxEXPAND)",
    "type": "statement:functioncall"
  }, {
    "id": 107,
    "text": "s10:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Active Caption Gradient:\")))",
    "type": "statement:functioncall"
  }, {
    "id": 108,
    "text": "s10:Add(self.m_active_caption_gradient_color)",
    "type": "statement:functioncall"
  }, {
    "id": 109,
    "text": "s10:SetItemMinSize(1, 180, 20)",
    "type": "statement:functioncall"
  }, {
    "id": 110,
    "text": "local s11 = wx.wxBoxSizer(wx.wxHORIZONTAL)",
    "type": "statement:localassign"
  }, {
    "id": 111,
    "text": "self.m_active_caption_text_color = wx.wxBitmapButton(this, self.ID_ActiveCaptionTextColor, b, wx.wxDefaultPosition, wx.wxSize(50,25))",
    "type": "statement:assign"
  }, {
    "id": 112,
    "text": "s11:Add(1, 1, 1, wx.wxEXPAND)",
    "type": "statement:functioncall"
  }, {
    "id": 113,
    "text": "s11:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Active Caption Text:\")))",
    "type": "statement:functioncall"
  }, {
    "id": 114,
    "text": "s11:Add(self.m_active_caption_text_color)",
    "type": "statement:functioncall"
  }, {
    "id": 115,
    "text": "s11:SetItemMinSize(1, 180, 20)",
    "type": "statement:functioncall"
  }, {
    "id": 116,
    "text": "local s12 = wx.wxBoxSizer(wx.wxHORIZONTAL)",
    "type": "statement:localassign"
  }, {
    "id": 117,
    "text": "self.m_border_color = wx.wxBitmapButton(this, self.ID_BorderColor, b, wx.wxDefaultPosition, wx.wxSize(50,25))",
    "type": "statement:assign"
  }, {
    "id": 118,
    "text": "s12:Add(1, 1, 1, wx.wxEXPAND)",
    "type": "statement:functioncall"
  }, {
    "id": 119,
    "text": "s12:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Border Color:\")))",
    "type": "statement:functioncall"
  }, {
    "id": 120,
    "text": "s12:Add(self.m_border_color)",
    "type": "statement:functioncall"
  }, {
    "id": 121,
    "text": "s12:SetItemMinSize(1, 180, 20)",
    "type": "statement:functioncall"
  }, {
    "id": 122,
    "text": "local s13 = wx.wxBoxSizer(wx.wxHORIZONTAL)",
    "type": "statement:localassign"
  }, {
    "id": 123,
    "text": "self.m_gripper_color = wx.wxBitmapButton(this, self.ID_GripperColor, b, wx.wxDefaultPosition, wx.wxSize(50,25))",
    "type": "statement:assign"
  }, {
    "id": 124,
    "text": "s13:Add(1, 1, 1, wx.wxEXPAND)",
    "type": "statement:functioncall"
  }, {
    "id": 125,
    "text": "s13:Add(wx.wxStaticText(this, wx.wxID_ANY, wxT(\"Gripper Color:\")))",
    "type": "statement:functioncall"
  }, {
    "id": 126,
    "text": "s13:Add(self.m_gripper_color)",
    "type": "statement:functioncall"
  }, {
    "id": 127,
    "text": "s13:SetItemMinSize(1, 180, 20)",
    "type": "statement:functioncall"
  }, {
    "id": 128,
    "text": "local grid_sizer = wx.wxGridSizer(2,2,2,2)",
    "type": "statement:localassign"
  }, {
    "id": 129,
    "text": "grid_sizer:SetHGap(5)",
    "type": "statement:functioncall"
  }, {
    "id": 130,
    "text": "grid_sizer:Add(s1)",
    "type": "statement:functioncall"
  }, {
    "id": 131,
    "text": "grid_sizer:Add(s4)",
    "type": "statement:functioncall"
  }, {
    "id": 132,
    "text": "grid_sizer:Add(s2)",
    "type": "statement:functioncall"
  }, {
    "id": 133,
    "text": "grid_sizer:Add(s5)",
    "type": "statement:functioncall"
  }, {
    "id": 134,
    "text": "grid_sizer:Add(s3)",
    "type": "statement:functioncall"
  }, {
    "id": 135,
    "text": "grid_sizer:Add(s13)",
    "type": "statement:functioncall"
  }, {
    "id": 136,
    "text": "grid_sizer:Add(1,1)",
    "type": "statement:functioncall"
  }, {
    "id": 137,
    "text": "grid_sizer:Add(s12)",
    "type": "statement:functioncall"
  }, {
    "id": 138,
    "text": "grid_sizer:Add(s6)",
    "type": "statement:functioncall"
  }, {
    "id": 139,
    "text": "grid_sizer:Add(s9)",
    "type": "statement:functioncall"
  }, {
    "id": 140,
    "text": "grid_sizer:Add(s7)",
    "type": "statement:functioncall"
  }, {
    "id": 141,
    "text": "grid_sizer:Add(s10)",
    "type": "statement:functioncall"
  }, {
    "id": 142,
    "text": "grid_sizer:Add(s8)",
    "type": "statement:functioncall"
  }, {
    "id": 143,
    "text": "grid_sizer:Add(s11)",
    "type": "statement:functioncall"
  }, {
    "id": 144,
    "text": "local cont_sizer = wx.wxBoxSizer(wx.wxVERTICAL)",
    "type": "statement:localassign"
  }, {
    "id": 145,
    "text": "cont_sizer:Add(grid_sizer, 1, wx.wxEXPAND + wx.wxALL, 5)",
    "type": "statement:functioncall"
  }, {
    "id": 146,
    "text": "this:SetSizer(cont_sizer)",
    "type": "statement:functioncall"
  }, {
    "id": 147,
    "text": "this:GetSizer():SetSizeHints(this)",
    "type": "statement:functioncall"
  }, {
    "id": 148,
    "text": "self:UpdateColors()",
    "type": "statement:functioncall"
  }, {
    "id": 149,
    "text": "this:Connect(self.ID_PaneBorderSize, wx.wxEVT_COMMAND_SPINCTRL_UPDATED, function(event) self:OnPaneBorderSize(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 150,
    "text": "self:OnPaneBorderSize(event)",
    "type": "statement:functioncall"
  }, {
    "id": 151,
    "text": "this:Connect(self.ID_SashSize, wx.wxEVT_COMMAND_SPINCTRL_UPDATED, function(event) self:OnSashSize(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 152,
    "text": "self:OnSashSize(event)",
    "type": "statement:functioncall"
  }, {
    "id": 153,
    "text": "this:Connect(self.ID_CaptionSize, wx.wxEVT_COMMAND_SPINCTRL_UPDATED, function(event) self:OnCaptionSize(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 154,
    "text": "self:OnCaptionSize(event)",
    "type": "statement:functioncall"
  }, {
    "id": 155,
    "text": "this:Connect(self.ID_BackgroundColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 156,
    "text": "self:OnSetColor(event)",
    "type": "statement:functioncall"
  }, {
    "id": 157,
    "text": "this:Connect(self.ID_SashColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 158,
    "text": "this:Connect(self.ID_InactiveCaptionColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 159,
    "text": "this:Connect(self.ID_InactiveCaptionGradientColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 160,
    "text": "this:Connect(self.ID_InactiveCaptionTextColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 161,
    "text": "this:Connect(self.ID_ActiveCaptionColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 162,
    "text": "this:Connect(self.ID_ActiveCaptionGradientColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 163,
    "text": "this:Connect(self.ID_ActiveCaptionTextColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 164,
    "text": "this:Connect(self.ID_BorderColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 165,
    "text": "this:Connect(self.ID_GripperColor, wx.wxEVT_COMMAND_BUTTON_CLICKED, function(event) self:OnSetColor(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 166,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 167,
    "text": "function SettingsPanel:CreateColorBitmap(c)\r\n        local image = wx.wxImage()\r\n        image:Create(25,14);\r\n        for x = 0, 25-1 do\r\n            for y = 0, 14-1 do\r\n                local pixcol = c;\r\n                if (x == 0 or x == 24 or y == 0 or y == 13) then\r\n                    pixcol = wx.wxBLACK;\r\n                end\r\n                image:SetRGB(x, y, pixcol:Red(), pixcol:Green(), pixcol:Blue());\r\n            end\r\n        end\r\n        return wx.wxBitmap(image);\r\nend",
    "type": "function"
  }, {
    "id": 168,
    "text": "local image = wx.wxImage()",
    "type": "statement:localassign"
  }, {
    "id": 169,
    "text": "image:Create(25,14)",
    "type": "statement:functioncall"
  }, {
    "id": 170,
    "text": "for x = 0, 25-1 do\r\n            for y = 0, 14-1 do\r\n                local pixcol = c;\r\n                if (x == 0 or x == 24 or y == 0 or y == 13) then\r\n                    pixcol = wx.wxBLACK;\r\n                end\r\n                image:SetRGB(x, y, pixcol:Red(), pixcol:Green(), pixcol:Blue());\r\n            end\r\n        end",
    "type": "statement:numericfor"
  }, {
    "id": 171,
    "text": "for y = 0, 14-1 do\r\n                local pixcol = c;\r\n                if (x == 0 or x == 24 or y == 0 or y == 13) then\r\n                    pixcol = wx.wxBLACK;\r\n                end\r\n                image:SetRGB(x, y, pixcol:Red(), pixcol:Green(), pixcol:Blue());\r\n            end",
    "type": "statement:numericfor"
  }, {
    "id": 172,
    "text": "local pixcol = c",
    "type": "statement:localassign"
  }, {
    "id": 173,
    "text": "if (x == 0 or x == 24 or y == 0 or y == 13) then\r\n                    pixcol = wx.wxBLACK;\r\n                end",
    "type": "statement:if"
  }, {
    "id": 174,
    "text": "pixcol = wx.wxBLACK",
    "type": "statement:assign"
  }, {
    "id": 175,
    "text": "image:SetRGB(x, y, pixcol:Red(), pixcol:Green(), pixcol:Blue())",
    "type": "statement:functioncall"
  }, {
    "id": 176,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 177,
    "text": "function SettingsPanel:UpdateColors()\r\n        local bk = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_BACKGROUND_COLOUR);\r\n        self.m_background_color:SetBitmapLabel(self:CreateColorBitmap(bk));\r\n\r\n        local cap = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_COLOUR);\r\n        self.m_inactive_caption_color:SetBitmapLabel(self:CreateColorBitmap(cap));\r\n\r\n        local capgrad = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_GRADIENT_COLOUR);\r\n        self.m_inactive_caption_gradient_color:SetBitmapLabel(self:CreateColorBitmap(capgrad));\r\n\r\n        local captxt = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_TEXT_COLOUR);\r\n        self.m_inactive_caption_text_color:SetBitmapLabel(self:CreateColorBitmap(captxt));\r\n\r\n        local acap = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_COLOUR);\r\n        self.m_active_caption_color:SetBitmapLabel(self:CreateColorBitmap(acap));\r\n\r\n        local acapgrad = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_GRADIENT_COLOUR);\r\n        self.m_active_caption_gradient_color:SetBitmapLabel(self:CreateColorBitmap(acapgrad));\r\n\r\n        local acaptxt = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_TEXT_COLOUR);\r\n        self.m_active_caption_text_color:SetBitmapLabel(self:CreateColorBitmap(acaptxt));\r\n\r\n        local sash = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_SASH_COLOUR);\r\n        self.m_sash_color:SetBitmapLabel(self:CreateColorBitmap(sash));\r\n\r\n        local border = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_BORDER_COLOUR);\r\n        self.m_border_color:SetBitmapLabel(self:CreateColorBitmap(border));\r\n\r\n        local gripper = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_GRIPPER_COLOUR);\r\n        self.m_gripper_color:SetBitmapLabel(self:CreateColorBitmap(gripper));\r\nend",
    "type": "function"
  }, {
    "id": 178,
    "text": "local bk = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_BACKGROUND_COLOUR)",
    "type": "statement:localassign"
  }, {
    "id": 179,
    "text": "self.m_background_color:SetBitmapLabel(self:CreateColorBitmap(bk))",
    "type": "statement:functioncall"
  }, {
    "id": 180,
    "text": "local cap = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_COLOUR)",
    "type": "statement:localassign"
  }, {
    "id": 181,
    "text": "self.m_inactive_caption_color:SetBitmapLabel(self:CreateColorBitmap(cap))",
    "type": "statement:functioncall"
  }, {
    "id": 182,
    "text": "local capgrad = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_GRADIENT_COLOUR)",
    "type": "statement:localassign"
  }, {
    "id": 183,
    "text": "self.m_inactive_caption_gradient_color:SetBitmapLabel(self:CreateColorBitmap(capgrad))",
    "type": "statement:functioncall"
  }, {
    "id": 184,
    "text": "local captxt = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_TEXT_COLOUR)",
    "type": "statement:localassign"
  }, {
    "id": 185,
    "text": "self.m_inactive_caption_text_color:SetBitmapLabel(self:CreateColorBitmap(captxt))",
    "type": "statement:functioncall"
  }, {
    "id": 186,
    "text": "local acap = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_COLOUR)",
    "type": "statement:localassign"
  }, {
    "id": 187,
    "text": "self.m_active_caption_color:SetBitmapLabel(self:CreateColorBitmap(acap))",
    "type": "statement:functioncall"
  }, {
    "id": 188,
    "text": "local acapgrad = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_GRADIENT_COLOUR)",
    "type": "statement:localassign"
  }, {
    "id": 189,
    "text": "self.m_active_caption_gradient_color:SetBitmapLabel(self:CreateColorBitmap(acapgrad))",
    "type": "statement:functioncall"
  }, {
    "id": 190,
    "text": "local acaptxt = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_TEXT_COLOUR)",
    "type": "statement:localassign"
  }, {
    "id": 191,
    "text": "self.m_active_caption_text_color:SetBitmapLabel(self:CreateColorBitmap(acaptxt))",
    "type": "statement:functioncall"
  }, {
    "id": 192,
    "text": "local sash = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_SASH_COLOUR)",
    "type": "statement:localassign"
  }, {
    "id": 193,
    "text": "self.m_sash_color:SetBitmapLabel(self:CreateColorBitmap(sash))",
    "type": "statement:functioncall"
  }, {
    "id": 194,
    "text": "local border = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_BORDER_COLOUR)",
    "type": "statement:localassign"
  }, {
    "id": 195,
    "text": "self.m_border_color:SetBitmapLabel(self:CreateColorBitmap(border))",
    "type": "statement:functioncall"
  }, {
    "id": 196,
    "text": "local gripper = self.m_frame:GetDockArt():GetColor(wxaui.wxAUI_DOCKART_GRIPPER_COLOUR)",
    "type": "statement:localassign"
  }, {
    "id": 197,
    "text": "self.m_gripper_color:SetBitmapLabel(self:CreateColorBitmap(gripper))",
    "type": "statement:functioncall"
  }, {
    "id": 198,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 199,
    "text": "function SettingsPanel:OnPaneBorderSize(event)\r\n        self.m_frame:GetDockArt():SetMetric(wxaui.wxAUI_DOCKART_PANE_BORDER_SIZE,\r\n                                         event:GetInt()); --event:GetPosition());\r\n        self.m_frame:DoUpdate();\r\nend",
    "type": "function"
  }, {
    "id": 200,
    "text": "self.m_frame:GetDockArt():SetMetric(wxaui.wxAUI_DOCKART_PANE_BORDER_SIZE,\r\n                                         event:GetInt())",
    "type": "statement:functioncall"
  }, {
    "id": 201,
    "text": "self.m_frame:DoUpdate()",
    "type": "statement:functioncall"
  }, {
    "id": 202,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 203,
    "text": "function SettingsPanel:OnSashSize(event)\r\n        self.m_frame:GetDockArt():SetMetric(wxaui.wxAUI_DOCKART_SASH_SIZE,\r\n                                         event:GetInt()); --event:GetPosition());\r\n        self.m_frame:DoUpdate();\r\nend",
    "type": "function"
  }, {
    "id": 204,
    "text": "self.m_frame:GetDockArt():SetMetric(wxaui.wxAUI_DOCKART_SASH_SIZE,\r\n                                         event:GetInt())",
    "type": "statement:functioncall"
  }, {
    "id": 205,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 206,
    "text": "function SettingsPanel:OnCaptionSize(event)\r\n        self.m_frame:GetDockArt():SetMetric(wxaui.wxAUI_DOCKART_CAPTION_SIZE,\r\n                                         event:GetInt()); --event:GetPosition());\r\n        self.m_frame:DoUpdate();\r\nend",
    "type": "function"
  }, {
    "id": 207,
    "text": "self.m_frame:GetDockArt():SetMetric(wxaui.wxAUI_DOCKART_CAPTION_SIZE,\r\n                                         event:GetInt())",
    "type": "statement:functioncall"
  }, {
    "id": 208,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 209,
    "text": "function SettingsPanel:OnSetColor(event)\r\n        local dlg = wx.wxColourDialog(self.m_frame.this);\r\n        dlg:SetTitle(_(\"Color Picker\"));\r\n        if (dlg:ShowModal() ~= wx.wxID_OK) then\r\n            return;\r\n        end\r\n\r\n        local var = 0;\r\n        local id = event:GetId()\r\n\r\n        if     id == self.ID_BackgroundColor then              var = wxaui.wxAUI_DOCKART_BACKGROUND_COLOUR;\r\n        elseif id == self.ID_SashColor then                    var = wxaui.wxAUI_DOCKART_SASH_COLOUR;\r\n        elseif id == self.ID_InactiveCaptionColor then         var = wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_COLOUR;\r\n        elseif id == self.ID_InactiveCaptionGradientColor then var = wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_GRADIENT_COLOUR;\r\n        elseif id == self.ID_InactiveCaptionTextColor then     var = wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_TEXT_COLOUR;\r\n        elseif id == self.ID_ActiveCaptionColor then           var = wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_COLOUR;\r\n        elseif id == self.ID_ActiveCaptionGradientColor then   var = wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_GRADIENT_COLOUR;\r\n        elseif id == self.ID_ActiveCaptionTextColor then       var = wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_TEXT_COLOUR;\r\n        elseif id == self.ID_BorderColor then                  var = wxaui.wxAUI_DOCKART_BORDER_COLOUR;\r\n        elseif id == self.ID_GripperColor then                 var = wxaui.wxAUI_DOCKART_GRIPPER_COLOUR;\r\n        else return;\r\n        end\r\n\r\n        self.m_frame:GetDockArt():SetColor(var, dlg:GetColourData():GetColour());\r\n        self.m_frame:DoUpdate();\r\n        self:UpdateColors();\r\nend",
    "type": "function"
  }, {
    "id": 210,
    "text": "local dlg = wx.wxColourDialog(self.m_frame.this)",
    "type": "statement:localassign"
  }, {
    "id": 211,
    "text": "dlg:SetTitle(_(\"Color Picker\"))",
    "type": "statement:functioncall"
  }, {
    "id": 212,
    "text": "if (dlg:ShowModal() ~= wx.wxID_OK) then\r\n            return;\r\n        end",
    "type": "statement:if"
  }, {
    "id": 213,
    "text": "local var = 0",
    "type": "statement:localassign"
  }, {
    "id": 214,
    "text": "local id = event:GetId()",
    "type": "statement:localassign"
  }, {
    "id": 215,
    "text": "if     id == self.ID_BackgroundColor then              var = wxaui.wxAUI_DOCKART_BACKGROUND_COLOUR;\r\n        elseif id == self.ID_SashColor then                    var = wxaui.wxAUI_DOCKART_SASH_COLOUR;\r\n        elseif id == self.ID_InactiveCaptionColor then         var = wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_COLOUR;\r\n        elseif id == self.ID_InactiveCaptionGradientColor then var = wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_GRADIENT_COLOUR;\r\n        elseif id == self.ID_InactiveCaptionTextColor then     var = wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_TEXT_COLOUR;\r\n        elseif id == self.ID_ActiveCaptionColor then           var = wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_COLOUR;\r\n        elseif id == self.ID_ActiveCaptionGradientColor then   var = wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_GRADIENT_COLOUR;\r\n        elseif id == self.ID_ActiveCaptionTextColor then       var = wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_TEXT_COLOUR;\r\n        elseif id == self.ID_BorderColor then                  var = wxaui.wxAUI_DOCKART_BORDER_COLOUR;\r\n        elseif id == self.ID_GripperColor then                 var = wxaui.wxAUI_DOCKART_GRIPPER_COLOUR;\r\n        else return;\r\n        end",
    "type": "statement:if"
  }, {
    "id": 216,
    "text": "var = wxaui.wxAUI_DOCKART_BACKGROUND_COLOUR",
    "type": "statement:assign"
  }, {
    "id": 217,
    "text": "var = wxaui.wxAUI_DOCKART_SASH_COLOUR",
    "type": "statement:assign"
  }, {
    "id": 218,
    "text": "var = wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_COLOUR",
    "type": "statement:assign"
  }, {
    "id": 219,
    "text": "var = wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_GRADIENT_COLOUR",
    "type": "statement:assign"
  }, {
    "id": 220,
    "text": "var = wxaui.wxAUI_DOCKART_INACTIVE_CAPTION_TEXT_COLOUR",
    "type": "statement:assign"
  }, {
    "id": 221,
    "text": "var = wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_COLOUR",
    "type": "statement:assign"
  }, {
    "id": 222,
    "text": "var = wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_GRADIENT_COLOUR",
    "type": "statement:assign"
  }, {
    "id": 223,
    "text": "var = wxaui.wxAUI_DOCKART_ACTIVE_CAPTION_TEXT_COLOUR",
    "type": "statement:assign"
  }, {
    "id": 224,
    "text": "var = wxaui.wxAUI_DOCKART_BORDER_COLOUR",
    "type": "statement:assign"
  }, {
    "id": 225,
    "text": "var = wxaui.wxAUI_DOCKART_GRIPPER_COLOUR",
    "type": "statement:assign"
  }, {
    "id": 226,
    "text": "self.m_frame:GetDockArt():SetColor(var, dlg:GetColourData():GetColour())",
    "type": "statement:functioncall"
  }, {
    "id": 227,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 228,
    "text": "function MyFrame:create(parent, id, title, pos, size, style)\r\n    self.this = wx.wxFrame(wx.NULL,\r\n                        wx.wxID_ANY,\r\n                        wxT(\"wxAUI Sample Application\"),\r\n                        wx.wxDefaultPosition,\r\n                        wx.wxSize(800, 600));\r\n    local this = self.this\r\n\r\n    --// tell wxAuiManager to manage this frame\r\n    self.m_mgr = wxaui.wxAuiManager()\r\n    self.m_mgr:SetManagedWindow(this);\r\n\r\n    --// set frame icon\r\n    --this:SetIcon(wx.wxIcon(sample_xpm));\r\n    local bitmap = wx.wxBitmap(sample_xpm)\r\n    local icon = wx.wxIcon()\r\n    icon:CopyFromBitmap(bitmap)\r\n    this:SetIcon(icon)\r\n    bitmap:delete()\r\n    icon:delete()\r\n\r\n    --// set up default notebook style\r\n    self.m_notebook_style = wxaui.wxAUI_NB_DEFAULT_STYLE + wxaui.wxAUI_NB_TAB_EXTERNAL_MOVE + wx.wxNO_BORDER;\r\n    self.m_notebook_theme = 0;\r\n\r\n    --// create menu\r\n    local mb = wx.wxMenuBar();\r\n\r\n    local file_menu = wx.wxMenu();\r\n    file_menu:Append(wx.wxID_EXIT, _(\"Exit\"));\r\n\r\n    local view_menu = wx.wxMenu();\r\n    view_menu:Append(self.ID_CreateText, _(\"Create Text Control\"));\r\n    view_menu:Append(self.ID_CreateHTML, _(\"Create HTML Control\"));\r\n    view_menu:Append(self.ID_CreateTree, _(\"Create Tree\"));\r\n    view_menu:Append(self.ID_CreateGrid, _(\"Create Grid\"));\r\n    view_menu:Append(self.ID_CreateNotebook, _(\"Create Notebook\"));\r\n    view_menu:Append(self.ID_CreateSizeReport, _(\"Create Size Reporter\"));\r\n    view_menu:AppendSeparator();\r\n    view_menu:Append(self.ID_GridContent, _(\"Use a Grid for the Content Pane\"));\r\n    view_menu:Append(self.ID_TextContent, _(\"Use a Text Control for the Content Pane\"));\r\n    view_menu:Append(self.ID_HTMLContent, _(\"Use an HTML Control for the Content Pane\"));\r\n    view_menu:Append(self.ID_TreeContent, _(\"Use a Tree Control for the Content Pane\"));\r\n    view_menu:Append(self.ID_NotebookContent, _(\"Use a wxAuiNotebook control for the Content Pane\"));\r\n    view_menu:Append(self.ID_SizeReportContent, _(\"Use a Size Reporter for the Content Pane\"));\r\n\r\n    local options_menu = wx.wxMenu();\r\n    options_menu:AppendRadioItem(self.ID_TransparentHint, _(\"Transparent Hint\"));\r\n    options_menu:AppendRadioItem(self.ID_VenetianBlindsHint, _(\"Venetian Blinds Hint\"));\r\n    options_menu:AppendRadioItem(self.ID_RectangleHint, _(\"Rectangle Hint\"));\r\n    options_menu:AppendRadioItem(self.ID_NoHint, _(\"No Hint\"));\r\n    options_menu:AppendSeparator();\r\n    options_menu:AppendCheckItem(self.ID_HintFade, _(\"Hint Fade-in\"));\r\n    options_menu:AppendCheckItem(self.ID_AllowFloating, _(\"Allow Floating\"));\r\n    options_menu:AppendCheckItem(self.ID_NoVenetianFade, _(\"Disable Venetian Blinds Hint Fade-in\"));\r\n    options_menu:AppendCheckItem(self.ID_TransparentDrag, _(\"Transparent Drag\"));\r\n    options_menu:AppendCheckItem(self.ID_AllowActivePane, _(\"Allow Active Pane\"));\r\n    options_menu:AppendSeparator();\r\n    options_menu:AppendRadioItem(self.ID_NoGradient, _(\"No Caption Gradient\"));\r\n    options_menu:AppendRadioItem(self.ID_VerticalGradient, _(\"Vertical Caption Gradient\"));\r\n    options_menu:AppendRadioItem(self.ID_HorizontalGradient, _(\"Horizontal Caption Gradient\"));\r\n    options_menu:AppendSeparator();\r\n    options_menu:Append(self.ID_Settings, _(\"Settings Pane\"));\r\n\r\n    local notebook_menu = wx.wxMenu();\r\n    notebook_menu:AppendRadioItem(self.ID_NotebookArtGloss, _(\"Glossy Theme (Default)\"));\r\n    notebook_menu:AppendRadioItem(self.ID_NotebookArtSimple, _(\"Simple Theme\"));\r\n    notebook_menu:AppendSeparator();\r\n    notebook_menu:AppendRadioItem(self.ID_NotebookNoCloseButton, _(\"No Close Button\"));\r\n    notebook_menu:AppendRadioItem(self.ID_NotebookCloseButton, _(\"Close Button at Right\"));\r\n    notebook_menu:AppendRadioItem(self.ID_NotebookCloseButtonAll, _(\"Close Button on All Tabs\"));\r\n    notebook_menu:AppendRadioItem(self.ID_NotebookCloseButtonActive, _(\"Close Button on Active Tab\"));\r\n    notebook_menu:AppendSeparator();\r\n    notebook_menu:AppendRadioItem(self.ID_NotebookAlignTop, _(\"Tab Top Alignment\"));\r\n    notebook_menu:AppendRadioItem(self.ID_NotebookAlignBottom, _(\"Tab Bottom Alignment\"));\r\n    notebook_menu:AppendSeparator();\r\n    notebook_menu:AppendCheckItem(self.ID_NotebookAllowTabMove, _(\"Allow Tab Move\"));\r\n    notebook_menu:AppendCheckItem(self.ID_NotebookAllowTabExternalMove, _(\"Allow External Tab Move\"));\r\n    notebook_menu:AppendCheckItem(self.ID_NotebookAllowTabSplit, _(\"Allow Notebook Split\"));\r\n    notebook_menu:AppendCheckItem(self.ID_NotebookScrollButtons, _(\"Scroll Buttons Visible\"));\r\n    notebook_menu:AppendCheckItem(self.ID_NotebookWindowList, _(\"Window List Button Visible\"));\r\n    notebook_menu:AppendCheckItem(self.ID_NotebookTabFixedWidth, _(\"Fixed-width Tabs\"));\r\n\r\n    self.m_perspectives_menu = wx.wxMenu();\r\n    self.m_perspectives_menu:Append(self.ID_CreatePerspective, _(\"Create Perspective\"));\r\n    self.m_perspectives_menu:Append(self.ID_CopyPerspectiveCode, _(\"Copy Perspective Data To Clipboard\"));\r\n    self.m_perspectives_menu:AppendSeparator();\r\n    self.m_perspectives_menu:Append(self.ID_FirstPerspective+0, _(\"Default Startup\"));\r\n    self.m_perspectives_menu:Append(self.ID_FirstPerspective+1, _(\"All Panes\"));\r\n\r\n    local help_menu = wx.wxMenu();\r\n    help_menu:Append(wx.wxID_ABOUT, _(\"About...\"));\r\n\r\n    mb:Append(file_menu, _(\"File\"));\r\n    mb:Append(view_menu, _(\"View\"));\r\n    mb:Append(self.m_perspectives_menu, _(\"Perspectives\"));\r\n    mb:Append(options_menu, _(\"Options\"));\r\n    mb:Append(notebook_menu, _(\"Notebook\"));\r\n    mb:Append(help_menu, _(\"Help\"));\r\n\r\n    this:SetMenuBar(mb);\r\n\r\n    this:CreateStatusBar();\r\n    this:GetStatusBar():SetStatusText(_(\"Ready\"));\r\n\r\n\r\n    --// min size for the frame itself isn't completely done.\r\n    --// see the end up wxAuiManager::Update() for the test\r\n    --// code. For now, just hard code a frame minimum size\r\n    this:SetMinSize(wx.wxSize(400,300));\r\n\r\n    --// create some toolbars\r\n    local tb1 = wx.wxToolBar(this, wx.wxID_ANY, wx.wxDefaultPosition, wx.wxDefaultSize,\r\n                                   wx.wxTB_FLAT + wx.wxTB_NODIVIDER);\r\n    tb1:SetToolBitmapSize(wx.wxSize(48,48));\r\n    tb1:AddTool(101, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_ERROR));\r\n    tb1:AddSeparator();\r\n    tb1:AddTool(102, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_QUESTION));\r\n    tb1:AddTool(103, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_INFORMATION));\r\n    tb1:AddTool(103, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_WARNING));\r\n    tb1:AddTool(103, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_MISSING_IMAGE));\r\n    tb1:Realize();\r\n\r\n\r\n    local tb2 = wx.wxToolBar(this, wx.wxID_ANY, wx.wxDefaultPosition, wx.wxDefaultSize,\r\n                                   wx.wxTB_FLAT + wx.wxTB_NODIVIDER);\r\n    tb2:SetToolBitmapSize(wx.wxSize(16,16));\r\n\r\n    local tb2_bmp1 = wx.wxArtProvider.GetBitmap(wx.wxART_QUESTION, wx.wxART_OTHER, wx.wxSize(16,16));\r\n    tb2:AddTool(101, wxT(\"Test\"), tb2_bmp1);\r\n    tb2:AddTool(101, wxT(\"Test\"), tb2_bmp1);\r\n    tb2:AddTool(101, wxT(\"Test\"), tb2_bmp1);\r\n    tb2:AddTool(101, wxT(\"Test\"), tb2_bmp1);\r\n    tb2:AddSeparator();\r\n    tb2:AddTool(101, wxT(\"Test\"), tb2_bmp1);\r\n    tb2:AddTool(101, wxT(\"Test\"), tb2_bmp1);\r\n    tb2:AddSeparator();\r\n    tb2:AddTool(101, wxT(\"Test\"), tb2_bmp1);\r\n    tb2:AddTool(101, wxT(\"Test\"), tb2_bmp1);\r\n    tb2:AddTool(101, wxT(\"Test\"), tb2_bmp1);\r\n    tb2:AddTool(101, wxT(\"Test\"), tb2_bmp1);\r\n    tb2:Realize();\r\n\r\n\r\n    local tb3 = wx.wxToolBar(this, wx.wxID_ANY, wx.wxDefaultPosition, wx.wxDefaultSize,\r\n                                   wx.wxTB_FLAT + wx.wxTB_NODIVIDER);\r\n    tb3:SetToolBitmapSize(wx.wxSize(16,16));\r\n    local tb3_bmp1 = wx.wxArtProvider.GetBitmap(wx.wxART_FOLDER, wx.wxART_OTHER, wx.wxSize(16,16));\r\n    tb3:AddTool(101, wxT(\"Test\"), tb3_bmp1);\r\n    tb3:AddTool(101, wxT(\"Test\"), tb3_bmp1);\r\n    tb3:AddTool(101, wxT(\"Test\"), tb3_bmp1);\r\n    tb3:AddTool(101, wxT(\"Test\"), tb3_bmp1);\r\n    tb3:AddSeparator();\r\n    tb3:AddTool(101, wxT(\"Test\"), tb3_bmp1);\r\n    tb3:AddTool(101, wxT(\"Test\"), tb3_bmp1);\r\n    tb3:Realize();\r\n\r\n\r\n    local tb4 = wx.wxToolBar(this, wx.wxID_ANY, wx.wxDefaultPosition, wx.wxDefaultSize,\r\n                                   wx.wxTB_FLAT + wx.wxTB_NODIVIDER + wx.wxTB_HORZ_TEXT);\r\n    tb4:SetToolBitmapSize(wx.wxSize(16,16));\r\n    local tb4_bmp1 = wx.wxArtProvider.GetBitmap(wx.wxART_NORMAL_FILE, wx.wxART_OTHER, wx.wxSize(16,16));\r\n    tb4:AddTool(101, wxT(\"Item 1\"), tb4_bmp1);\r\n    tb4:AddTool(101, wxT(\"Item 2\"), tb4_bmp1);\r\n    tb4:AddTool(101, wxT(\"Item 3\"), tb4_bmp1);\r\n    tb4:AddTool(101, wxT(\"Item 4\"), tb4_bmp1);\r\n    tb4:AddSeparator();\r\n    tb4:AddTool(101, wxT(\"Item 5\"), tb4_bmp1);\r\n    tb4:AddTool(101, wxT(\"Item 6\"), tb4_bmp1);\r\n    tb4:AddTool(101, wxT(\"Item 7\"), tb4_bmp1);\r\n    tb4:AddTool(101, wxT(\"Item 8\"), tb4_bmp1);\r\n    tb4:Realize();\r\n\r\n    --// create some toolbars\r\n    local tb5 = wx.wxToolBar(this, wx.wxID_ANY, wx.wxDefaultPosition, wx.wxDefaultSize,\r\n                                   wx.wxTB_FLAT + wx.wxTB_NODIVIDER + wx.wxTB_VERTICAL);\r\n    tb5:SetToolBitmapSize(wx.wxSize(48,48));\r\n    tb5:AddTool(101, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_ERROR));\r\n    tb5:AddSeparator();\r\n    tb5:AddTool(102, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_QUESTION));\r\n    tb5:AddTool(103, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_INFORMATION));\r\n    tb5:AddTool(103, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_WARNING));\r\n    tb5:AddTool(103, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_MISSING_IMAGE));\r\n    tb5:Realize();\r\n\r\n    --// add a bunch of panes\r\n    self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test1\")):Caption(wxT(\"Pane Caption\")):\r\n                  Top());\r\n\r\n    self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test2\")):Caption(wxT(\"Client Size Reporter\")):\r\n                  Bottom():Position(1):\r\n                  CloseButton(true):MaximizeButton(true));\r\n\r\n    self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test3\")):Caption(wxT(\"Client Size Reporter\")):\r\n                  Bottom():\r\n                  CloseButton(true):MaximizeButton(true));\r\n\r\n    self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test4\")):Caption(wxT(\"Pane Caption\")):\r\n                  Left());\r\n\r\n    self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test5\")):Caption(wxT(\"No Close Button\")):\r\n                  Right():CloseButton(false));\r\n\r\n    self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test6\")):Caption(wxT(\"Client Size Reporter\")):\r\n                  Right():Row(1):\r\n                  CloseButton(true):MaximizeButton(true));\r\n\r\n    self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test7\")):Caption(wxT(\"Client Size Reporter\")):\r\n                  Left():Layer(1):\r\n                  CloseButton(true):MaximizeButton(true));\r\n\r\n    self.m_mgr:AddPane(self:CreateTreeCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test8\")):Caption(wxT(\"Tree Pane\")):\r\n                  Left():Layer(1):Position(1):\r\n                  CloseButton(true):MaximizeButton(true));\r\n\r\n    self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test9\")):Caption(wxT(\"Min Size 200x100\")):\r\n                  BestSize(wx.wxSize(200,100)):MinSize(wx.wxSize(200,100)):\r\n                  Bottom():Layer(1):\r\n                  CloseButton(true):MaximizeButton(true));\r\n\r\n    local wnd10 = self:CreateTextCtrl(wxT(\"This pane will prompt the user before hiding.\"));\r\n    self.m_mgr:AddPane(wnd10, wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test10\")):Caption(wxT(\"Text Pane with Hide Prompt\")):\r\n                  Bottom():Layer(1):Position(1));\r\n\r\n    self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test11\")):Caption(wxT(\"Fixed Pane\")):\r\n                  Bottom():Layer(1):Position(2):Fixed());\r\n\r\n\r\n    self.m_mgr:AddPane(SettingsPanel:create(self,self).this, wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"settings\")):Caption(wxT(\"Dock Manager Settings\")):\r\n                  Dockable(false):Float():Hide());\r\n\r\n    --// create some center panes\r\n\r\n    self.m_mgr:AddPane(self:CreateGrid(), wxaui.wxAuiPaneInfo():Name(wxT(\"grid_content\")):\r\n                  CenterPane():Hide());\r\n\r\n    self.m_mgr:AddPane(self:CreateTreeCtrl(), wxaui.wxAuiPaneInfo():Name(wxT(\"tree_content\")):\r\n                  CenterPane():Hide());\r\n\r\n    self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():Name(wxT(\"sizereport_content\")):\r\n                  CenterPane():Hide());\r\n\r\n    self.m_mgr:AddPane(self:CreateTextCtrl(), wxaui.wxAuiPaneInfo():Name(wxT(\"text_content\")):\r\n                  CenterPane():Hide());\r\n\r\n    self.m_mgr:AddPane(self:CreateHTMLCtrl(), wxaui.wxAuiPaneInfo():Name(wxT(\"html_content\")):\r\n                  CenterPane():Hide());\r\n\r\n    self.m_mgr:AddPane(self:CreateNotebook(), wxaui.wxAuiPaneInfo():Name(wxT(\"notebook_content\")):\r\n                  CenterPane():PaneBorder(false));\r\n\r\n    --// add the toolbars to the manager\r\n    self.m_mgr:AddPane(tb1, wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"tb1\")):Caption(wxT(\"Big Toolbar\")):\r\n                  ToolbarPane():Top():\r\n                  LeftDockable(false):RightDockable(false));\r\n\r\n    self.m_mgr:AddPane(tb2, wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"tb2\")):Caption(wxT(\"Toolbar 2\")):\r\n                  ToolbarPane():Top():Row(1):\r\n                  LeftDockable(false):RightDockable(false));\r\n\r\n    self.m_mgr:AddPane(tb3, wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"tb3\")):Caption(wxT(\"Toolbar 3\")):\r\n                  ToolbarPane():Top():Row(1):Position(1):\r\n                  LeftDockable(false):RightDockable(false));\r\n\r\n    self.m_mgr:AddPane(tb4, wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"tb4\")):Caption(wxT(\"Sample Bookmark Toolbar\")):\r\n                  ToolbarPane():Top():Row(2):\r\n                  LeftDockable(false):RightDockable(false));\r\n\r\n    self.m_mgr:AddPane(tb5, wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"tb5\")):Caption(wxT(\"Sample Vertical Toolbar\")):\r\n                  ToolbarPane():Left():\r\n                  GripperTop():\r\n                  TopDockable(false):BottomDockable(false));\r\n\r\n    self.m_mgr:AddPane(wx.wxButton(this, wx.wxID_ANY, _(\"Test Button\")),\r\n                  wxaui.wxAuiPaneInfo():Name(wxT(\"tb6\")):\r\n                  ToolbarPane():Top():Row(2):Position(1):\r\n                  LeftDockable(false):RightDockable(false));\r\n\r\n    --// make some default perspectives\r\n\r\n    local perspective_all = self.m_mgr:SavePerspective();\r\n\r\n    local i, count;\r\n    local all_panes = self.m_mgr:GetAllPanes();\r\n    count = all_panes:GetCount()\r\n    for i = 0, count-1 do\r\n        if ( all_panes:Item(i):IsToolbar() == false) then\r\n            all_panes:Item(i):Hide();\r\n        end\r\n    end\r\n    self.m_mgr:GetPane(wxT(\"tb1\")):Hide();\r\n    self.m_mgr:GetPane(wxT(\"tb6\")):Hide();\r\n    self.m_mgr:GetPane(wxT(\"test8\")):Show():Left():Layer(0):Row(0):Position(0);\r\n    self.m_mgr:GetPane(wxT(\"test10\")):Show():Bottom():Layer(0):Row(0):Position(0);\r\n    self.m_mgr:GetPane(wxT(\"notebook_content\")):Show();\r\n    local perspective_default = self.m_mgr:SavePerspective();\r\n\r\n    self.m_perspectives = wx.wxArrayString()\r\n    self.m_perspectives:Add(perspective_default);\r\n    self.m_perspectives:Add(perspective_all);\r\n\r\n    --// \"commit\" all changes made to wxAuiManager\r\n    self.m_mgr:Update();\r\n\r\n    this:Connect(wx.wxEVT_ERASE_BACKGROUND, function(event) self:OnEraseBackground(event) end)\r\n    this:Connect(wx.wxEVT_SIZE, function(event) self:OnSize(event) end)\r\n    this:Connect(self.ID_CreateTree, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCreateTree(event) end)\r\n    this:Connect(self.ID_CreateGrid, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCreateGrid(event) end)\r\n    this:Connect(self.ID_CreateText, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCreateText(event) end)\r\n    this:Connect(self.ID_CreateHTML, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCreateHTML(event) end)\r\n    this:Connect(self.ID_CreateSizeReport, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCreateSizeReport(event) end)\r\n    this:Connect(self.ID_CreateNotebook, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCreateNotebook(event) end)\r\n    this:Connect(self.ID_CreatePerspective, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCreatePerspective(event) end)\r\n    this:Connect(self.ID_CopyPerspectiveCode, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCopyPerspectiveCode(event) end)\r\n    this:Connect(self.ID_AllowFloating, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)\r\n    this:Connect(self.ID_TransparentHint, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)\r\n    this:Connect(self.ID_VenetianBlindsHint, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)\r\n    this:Connect(self.ID_RectangleHint, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)\r\n    this:Connect(self.ID_NoHint, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)\r\n    this:Connect(self.ID_HintFade, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)\r\n    this:Connect(self.ID_NoVenetianFade, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)\r\n    this:Connect(self.ID_TransparentDrag, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)\r\n    this:Connect(self.ID_AllowActivePane, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)\r\n    this:Connect(self.ID_NotebookTabFixedWidth, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)\r\n    this:Connect(self.ID_NotebookNoCloseButton, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)\r\n    this:Connect(self.ID_NotebookCloseButton, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)\r\n    this:Connect(self.ID_NotebookCloseButtonAll, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)\r\n    this:Connect(self.ID_NotebookCloseButtonActive, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)\r\n    this:Connect(self.ID_NotebookAllowTabMove, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)\r\n    this:Connect(self.ID_NotebookAllowTabExternalMove, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)\r\n    this:Connect(self.ID_NotebookAllowTabSplit, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)\r\n    this:Connect(self.ID_NotebookScrollButtons, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)\r\n    this:Connect(self.ID_NotebookWindowList, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)\r\n    this:Connect(self.ID_NotebookArtGloss, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)\r\n    this:Connect(self.ID_NotebookArtSimple, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)\r\n    this:Connect(self.ID_NotebookAlignTop,  wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnTabAlignment(event) end)\r\n    this:Connect(self.ID_NotebookAlignBottom,  wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnTabAlignment(event) end)\r\n    this:Connect(self.ID_NoGradient, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnGradient(event) end)\r\n    this:Connect(self.ID_VerticalGradient, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnGradient(event) end)\r\n    this:Connect(self.ID_HorizontalGradient, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnGradient(event) end)\r\n    this:Connect(self.ID_Settings, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnSettings(event) end)\r\n    this:Connect(self.ID_GridContent, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnChangeContentPane(event) end)\r\n    this:Connect(self.ID_TreeContent, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnChangeContentPane(event) end)\r\n    this:Connect(self.ID_TextContent, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnChangeContentPane(event) end)\r\n    this:Connect(self.ID_SizeReportContent, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnChangeContentPane(event) end)\r\n    this:Connect(self.ID_HTMLContent, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnChangeContentPane(event) end)\r\n    this:Connect(self.ID_NotebookContent, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnChangeContentPane(event) end)\r\n    this:Connect(wx.wxID_EXIT, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnExit(event) end)\r\n    this:Connect(wx.wxID_ABOUT, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnAbout(event) end)\r\n    this:Connect(self.ID_NotebookTabFixedWidth, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_NotebookNoCloseButton, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_NotebookCloseButton, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_NotebookCloseButtonAll, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_NotebookCloseButtonActive, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_NotebookAllowTabMove, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_NotebookAllowTabExternalMove, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_NotebookAllowTabSplit, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_NotebookScrollButtons, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_NotebookWindowList, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_AllowFloating, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_TransparentHint, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_VenetianBlindsHint, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_RectangleHint, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_NoHint, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_HintFade, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_NoVenetianFade, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_TransparentDrag, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_NoGradient, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_VerticalGradient, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    this:Connect(self.ID_HorizontalGradient, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)\r\n    --hd.FIXME this:Connect(self.ID_FirstPerspective, self.ID_FirstPerspective+1000, wx.wxEVT_COMMAND_MENU_SELECTED_RANGE, function(event) self:OnRestorePerspective(event) end)\r\n    this:Connect(self.ID_FirstPerspective+0, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)\r\n    this:Connect(self.ID_FirstPerspective+1, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)\r\n    this:Connect(self.ID_FirstPerspective+2, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)\r\n    this:Connect(self.ID_FirstPerspective+3, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)\r\n    this:Connect(self.ID_FirstPerspective+4, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)\r\n    this:Connect(self.ID_FirstPerspective+5, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)\r\n    this:Connect(self.ID_FirstPerspective+6, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)\r\n    this:Connect(self.ID_FirstPerspective+7, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)\r\n    this:Connect(self.ID_FirstPerspective+8, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)\r\n    this:Connect(self.ID_FirstPerspective+9, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)\r\n    this:Connect(wxaui.wxEVT_AUI_PANE_CLOSE, function(event) self:OnPaneClose(event) end)\r\n    this:Connect(wx.wxID_ANY, wxaui.wxEVT_COMMAND_AUINOTEBOOK_ALLOW_DND, function(event) self:OnAllowNotebookDnD(event) end)\r\n    this:Connect(wx.wxID_ANY, wxaui.wxEVT_COMMAND_AUINOTEBOOK_PAGE_CLOSE, function(event) self:OnNotebookPageClose(event) end)\r\n\r\n    return self\r\nend",
    "type": "function"
  }, {
    "id": 229,
    "text": "self.this = wx.wxFrame(wx.NULL,\r\n                        wx.wxID_ANY,\r\n                        wxT(\"wxAUI Sample Application\"),\r\n                        wx.wxDefaultPosition,\r\n                        wx.wxSize(800, 600))",
    "type": "statement:assign"
  }, {
    "id": 230,
    "text": "self.m_mgr = wxaui.wxAuiManager()",
    "type": "statement:assign"
  }, {
    "id": 231,
    "text": "self.m_mgr:SetManagedWindow(this)",
    "type": "statement:functioncall"
  }, {
    "id": 232,
    "text": "local bitmap = wx.wxBitmap(sample_xpm)",
    "type": "statement:localassign"
  }, {
    "id": 233,
    "text": "local icon = wx.wxIcon()",
    "type": "statement:localassign"
  }, {
    "id": 234,
    "text": "icon:CopyFromBitmap(bitmap)",
    "type": "statement:functioncall"
  }, {
    "id": 235,
    "text": "this:SetIcon(icon)",
    "type": "statement:functioncall"
  }, {
    "id": 236,
    "text": "bitmap:delete()",
    "type": "statement:functioncall"
  }, {
    "id": 237,
    "text": "icon:delete()",
    "type": "statement:functioncall"
  }, {
    "id": 238,
    "text": "self.m_notebook_style = wxaui.wxAUI_NB_DEFAULT_STYLE + wxaui.wxAUI_NB_TAB_EXTERNAL_MOVE + wx.wxNO_BORDER",
    "type": "statement:assign"
  }, {
    "id": 239,
    "text": "self.m_notebook_theme = 0",
    "type": "statement:assign"
  }, {
    "id": 240,
    "text": "local mb = wx.wxMenuBar()",
    "type": "statement:localassign"
  }, {
    "id": 241,
    "text": "local file_menu = wx.wxMenu()",
    "type": "statement:localassign"
  }, {
    "id": 242,
    "text": "file_menu:Append(wx.wxID_EXIT, _(\"Exit\"))",
    "type": "statement:functioncall"
  }, {
    "id": 243,
    "text": "local view_menu = wx.wxMenu()",
    "type": "statement:localassign"
  }, {
    "id": 244,
    "text": "view_menu:Append(self.ID_CreateText, _(\"Create Text Control\"))",
    "type": "statement:functioncall"
  }, {
    "id": 245,
    "text": "view_menu:Append(self.ID_CreateHTML, _(\"Create HTML Control\"))",
    "type": "statement:functioncall"
  }, {
    "id": 246,
    "text": "view_menu:Append(self.ID_CreateTree, _(\"Create Tree\"))",
    "type": "statement:functioncall"
  }, {
    "id": 247,
    "text": "view_menu:Append(self.ID_CreateGrid, _(\"Create Grid\"))",
    "type": "statement:functioncall"
  }, {
    "id": 248,
    "text": "view_menu:Append(self.ID_CreateNotebook, _(\"Create Notebook\"))",
    "type": "statement:functioncall"
  }, {
    "id": 249,
    "text": "view_menu:Append(self.ID_CreateSizeReport, _(\"Create Size Reporter\"))",
    "type": "statement:functioncall"
  }, {
    "id": 250,
    "text": "view_menu:AppendSeparator()",
    "type": "statement:functioncall"
  }, {
    "id": 251,
    "text": "view_menu:Append(self.ID_GridContent, _(\"Use a Grid for the Content Pane\"))",
    "type": "statement:functioncall"
  }, {
    "id": 252,
    "text": "view_menu:Append(self.ID_TextContent, _(\"Use a Text Control for the Content Pane\"))",
    "type": "statement:functioncall"
  }, {
    "id": 253,
    "text": "view_menu:Append(self.ID_HTMLContent, _(\"Use an HTML Control for the Content Pane\"))",
    "type": "statement:functioncall"
  }, {
    "id": 254,
    "text": "view_menu:Append(self.ID_TreeContent, _(\"Use a Tree Control for the Content Pane\"))",
    "type": "statement:functioncall"
  }, {
    "id": 255,
    "text": "view_menu:Append(self.ID_NotebookContent, _(\"Use a wxAuiNotebook control for the Content Pane\"))",
    "type": "statement:functioncall"
  }, {
    "id": 256,
    "text": "view_menu:Append(self.ID_SizeReportContent, _(\"Use a Size Reporter for the Content Pane\"))",
    "type": "statement:functioncall"
  }, {
    "id": 257,
    "text": "local options_menu = wx.wxMenu()",
    "type": "statement:localassign"
  }, {
    "id": 258,
    "text": "options_menu:AppendRadioItem(self.ID_TransparentHint, _(\"Transparent Hint\"))",
    "type": "statement:functioncall"
  }, {
    "id": 259,
    "text": "options_menu:AppendRadioItem(self.ID_VenetianBlindsHint, _(\"Venetian Blinds Hint\"))",
    "type": "statement:functioncall"
  }, {
    "id": 260,
    "text": "options_menu:AppendRadioItem(self.ID_RectangleHint, _(\"Rectangle Hint\"))",
    "type": "statement:functioncall"
  }, {
    "id": 261,
    "text": "options_menu:AppendRadioItem(self.ID_NoHint, _(\"No Hint\"))",
    "type": "statement:functioncall"
  }, {
    "id": 262,
    "text": "options_menu:AppendSeparator()",
    "type": "statement:functioncall"
  }, {
    "id": 263,
    "text": "options_menu:AppendCheckItem(self.ID_HintFade, _(\"Hint Fade-in\"))",
    "type": "statement:functioncall"
  }, {
    "id": 264,
    "text": "options_menu:AppendCheckItem(self.ID_AllowFloating, _(\"Allow Floating\"))",
    "type": "statement:functioncall"
  }, {
    "id": 265,
    "text": "options_menu:AppendCheckItem(self.ID_NoVenetianFade, _(\"Disable Venetian Blinds Hint Fade-in\"))",
    "type": "statement:functioncall"
  }, {
    "id": 266,
    "text": "options_menu:AppendCheckItem(self.ID_TransparentDrag, _(\"Transparent Drag\"))",
    "type": "statement:functioncall"
  }, {
    "id": 267,
    "text": "options_menu:AppendCheckItem(self.ID_AllowActivePane, _(\"Allow Active Pane\"))",
    "type": "statement:functioncall"
  }, {
    "id": 268,
    "text": "options_menu:AppendRadioItem(self.ID_NoGradient, _(\"No Caption Gradient\"))",
    "type": "statement:functioncall"
  }, {
    "id": 269,
    "text": "options_menu:AppendRadioItem(self.ID_VerticalGradient, _(\"Vertical Caption Gradient\"))",
    "type": "statement:functioncall"
  }, {
    "id": 270,
    "text": "options_menu:AppendRadioItem(self.ID_HorizontalGradient, _(\"Horizontal Caption Gradient\"))",
    "type": "statement:functioncall"
  }, {
    "id": 271,
    "text": "options_menu:Append(self.ID_Settings, _(\"Settings Pane\"))",
    "type": "statement:functioncall"
  }, {
    "id": 272,
    "text": "local notebook_menu = wx.wxMenu()",
    "type": "statement:localassign"
  }, {
    "id": 273,
    "text": "notebook_menu:AppendRadioItem(self.ID_NotebookArtGloss, _(\"Glossy Theme (Default)\"))",
    "type": "statement:functioncall"
  }, {
    "id": 274,
    "text": "notebook_menu:AppendRadioItem(self.ID_NotebookArtSimple, _(\"Simple Theme\"))",
    "type": "statement:functioncall"
  }, {
    "id": 275,
    "text": "notebook_menu:AppendSeparator()",
    "type": "statement:functioncall"
  }, {
    "id": 276,
    "text": "notebook_menu:AppendRadioItem(self.ID_NotebookNoCloseButton, _(\"No Close Button\"))",
    "type": "statement:functioncall"
  }, {
    "id": 277,
    "text": "notebook_menu:AppendRadioItem(self.ID_NotebookCloseButton, _(\"Close Button at Right\"))",
    "type": "statement:functioncall"
  }, {
    "id": 278,
    "text": "notebook_menu:AppendRadioItem(self.ID_NotebookCloseButtonAll, _(\"Close Button on All Tabs\"))",
    "type": "statement:functioncall"
  }, {
    "id": 279,
    "text": "notebook_menu:AppendRadioItem(self.ID_NotebookCloseButtonActive, _(\"Close Button on Active Tab\"))",
    "type": "statement:functioncall"
  }, {
    "id": 280,
    "text": "notebook_menu:AppendRadioItem(self.ID_NotebookAlignTop, _(\"Tab Top Alignment\"))",
    "type": "statement:functioncall"
  }, {
    "id": 281,
    "text": "notebook_menu:AppendRadioItem(self.ID_NotebookAlignBottom, _(\"Tab Bottom Alignment\"))",
    "type": "statement:functioncall"
  }, {
    "id": 282,
    "text": "notebook_menu:AppendCheckItem(self.ID_NotebookAllowTabMove, _(\"Allow Tab Move\"))",
    "type": "statement:functioncall"
  }, {
    "id": 283,
    "text": "notebook_menu:AppendCheckItem(self.ID_NotebookAllowTabExternalMove, _(\"Allow External Tab Move\"))",
    "type": "statement:functioncall"
  }, {
    "id": 284,
    "text": "notebook_menu:AppendCheckItem(self.ID_NotebookAllowTabSplit, _(\"Allow Notebook Split\"))",
    "type": "statement:functioncall"
  }, {
    "id": 285,
    "text": "notebook_menu:AppendCheckItem(self.ID_NotebookScrollButtons, _(\"Scroll Buttons Visible\"))",
    "type": "statement:functioncall"
  }, {
    "id": 286,
    "text": "notebook_menu:AppendCheckItem(self.ID_NotebookWindowList, _(\"Window List Button Visible\"))",
    "type": "statement:functioncall"
  }, {
    "id": 287,
    "text": "notebook_menu:AppendCheckItem(self.ID_NotebookTabFixedWidth, _(\"Fixed-width Tabs\"))",
    "type": "statement:functioncall"
  }, {
    "id": 288,
    "text": "self.m_perspectives_menu = wx.wxMenu()",
    "type": "statement:assign"
  }, {
    "id": 289,
    "text": "self.m_perspectives_menu:Append(self.ID_CreatePerspective, _(\"Create Perspective\"))",
    "type": "statement:functioncall"
  }, {
    "id": 290,
    "text": "self.m_perspectives_menu:Append(self.ID_CopyPerspectiveCode, _(\"Copy Perspective Data To Clipboard\"))",
    "type": "statement:functioncall"
  }, {
    "id": 291,
    "text": "self.m_perspectives_menu:AppendSeparator()",
    "type": "statement:functioncall"
  }, {
    "id": 292,
    "text": "self.m_perspectives_menu:Append(self.ID_FirstPerspective+0, _(\"Default Startup\"))",
    "type": "statement:functioncall"
  }, {
    "id": 293,
    "text": "self.m_perspectives_menu:Append(self.ID_FirstPerspective+1, _(\"All Panes\"))",
    "type": "statement:functioncall"
  }, {
    "id": 294,
    "text": "local help_menu = wx.wxMenu()",
    "type": "statement:localassign"
  }, {
    "id": 295,
    "text": "help_menu:Append(wx.wxID_ABOUT, _(\"About...\"))",
    "type": "statement:functioncall"
  }, {
    "id": 296,
    "text": "mb:Append(file_menu, _(\"File\"))",
    "type": "statement:functioncall"
  }, {
    "id": 297,
    "text": "mb:Append(view_menu, _(\"View\"))",
    "type": "statement:functioncall"
  }, {
    "id": 298,
    "text": "mb:Append(self.m_perspectives_menu, _(\"Perspectives\"))",
    "type": "statement:functioncall"
  }, {
    "id": 299,
    "text": "mb:Append(options_menu, _(\"Options\"))",
    "type": "statement:functioncall"
  }, {
    "id": 300,
    "text": "mb:Append(notebook_menu, _(\"Notebook\"))",
    "type": "statement:functioncall"
  }, {
    "id": 301,
    "text": "mb:Append(help_menu, _(\"Help\"))",
    "type": "statement:functioncall"
  }, {
    "id": 302,
    "text": "this:SetMenuBar(mb)",
    "type": "statement:functioncall"
  }, {
    "id": 303,
    "text": "this:CreateStatusBar()",
    "type": "statement:functioncall"
  }, {
    "id": 304,
    "text": "this:GetStatusBar():SetStatusText(_(\"Ready\"))",
    "type": "statement:functioncall"
  }, {
    "id": 305,
    "text": "this:SetMinSize(wx.wxSize(400,300))",
    "type": "statement:functioncall"
  }, {
    "id": 306,
    "text": "local tb1 = wx.wxToolBar(this, wx.wxID_ANY, wx.wxDefaultPosition, wx.wxDefaultSize,\r\n                                   wx.wxTB_FLAT + wx.wxTB_NODIVIDER)",
    "type": "statement:localassign"
  }, {
    "id": 307,
    "text": "tb1:SetToolBitmapSize(wx.wxSize(48,48))",
    "type": "statement:functioncall"
  }, {
    "id": 308,
    "text": "tb1:AddTool(101, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_ERROR))",
    "type": "statement:functioncall"
  }, {
    "id": 309,
    "text": "tb1:AddSeparator()",
    "type": "statement:functioncall"
  }, {
    "id": 310,
    "text": "tb1:AddTool(102, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_QUESTION))",
    "type": "statement:functioncall"
  }, {
    "id": 311,
    "text": "tb1:AddTool(103, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_INFORMATION))",
    "type": "statement:functioncall"
  }, {
    "id": 312,
    "text": "tb1:AddTool(103, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_WARNING))",
    "type": "statement:functioncall"
  }, {
    "id": 313,
    "text": "tb1:AddTool(103, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_MISSING_IMAGE))",
    "type": "statement:functioncall"
  }, {
    "id": 314,
    "text": "tb1:Realize()",
    "type": "statement:functioncall"
  }, {
    "id": 315,
    "text": "local tb2 = wx.wxToolBar(this, wx.wxID_ANY, wx.wxDefaultPosition, wx.wxDefaultSize,\r\n                                   wx.wxTB_FLAT + wx.wxTB_NODIVIDER)",
    "type": "statement:localassign"
  }, {
    "id": 316,
    "text": "tb2:SetToolBitmapSize(wx.wxSize(16,16))",
    "type": "statement:functioncall"
  }, {
    "id": 317,
    "text": "local tb2_bmp1 = wx.wxArtProvider.GetBitmap(wx.wxART_QUESTION, wx.wxART_OTHER, wx.wxSize(16,16))",
    "type": "statement:localassign"
  }, {
    "id": 318,
    "text": "tb2:AddTool(101, wxT(\"Test\"), tb2_bmp1)",
    "type": "statement:functioncall"
  }, {
    "id": 319,
    "text": "tb2:AddSeparator()",
    "type": "statement:functioncall"
  }, {
    "id": 320,
    "text": "tb2:Realize()",
    "type": "statement:functioncall"
  }, {
    "id": 321,
    "text": "local tb3 = wx.wxToolBar(this, wx.wxID_ANY, wx.wxDefaultPosition, wx.wxDefaultSize,\r\n                                   wx.wxTB_FLAT + wx.wxTB_NODIVIDER)",
    "type": "statement:localassign"
  }, {
    "id": 322,
    "text": "tb3:SetToolBitmapSize(wx.wxSize(16,16))",
    "type": "statement:functioncall"
  }, {
    "id": 323,
    "text": "local tb3_bmp1 = wx.wxArtProvider.GetBitmap(wx.wxART_FOLDER, wx.wxART_OTHER, wx.wxSize(16,16))",
    "type": "statement:localassign"
  }, {
    "id": 324,
    "text": "tb3:AddTool(101, wxT(\"Test\"), tb3_bmp1)",
    "type": "statement:functioncall"
  }, {
    "id": 325,
    "text": "tb3:AddSeparator()",
    "type": "statement:functioncall"
  }, {
    "id": 326,
    "text": "tb3:Realize()",
    "type": "statement:functioncall"
  }, {
    "id": 327,
    "text": "local tb4 = wx.wxToolBar(this, wx.wxID_ANY, wx.wxDefaultPosition, wx.wxDefaultSize,\r\n                                   wx.wxTB_FLAT + wx.wxTB_NODIVIDER + wx.wxTB_HORZ_TEXT)",
    "type": "statement:localassign"
  }, {
    "id": 328,
    "text": "tb4:SetToolBitmapSize(wx.wxSize(16,16))",
    "type": "statement:functioncall"
  }, {
    "id": 329,
    "text": "local tb4_bmp1 = wx.wxArtProvider.GetBitmap(wx.wxART_NORMAL_FILE, wx.wxART_OTHER, wx.wxSize(16,16))",
    "type": "statement:localassign"
  }, {
    "id": 330,
    "text": "tb4:AddTool(101, wxT(\"Item 1\"), tb4_bmp1)",
    "type": "statement:functioncall"
  }, {
    "id": 331,
    "text": "tb4:AddTool(101, wxT(\"Item 2\"), tb4_bmp1)",
    "type": "statement:functioncall"
  }, {
    "id": 332,
    "text": "tb4:AddTool(101, wxT(\"Item 3\"), tb4_bmp1)",
    "type": "statement:functioncall"
  }, {
    "id": 333,
    "text": "tb4:AddTool(101, wxT(\"Item 4\"), tb4_bmp1)",
    "type": "statement:functioncall"
  }, {
    "id": 334,
    "text": "tb4:AddSeparator()",
    "type": "statement:functioncall"
  }, {
    "id": 335,
    "text": "tb4:AddTool(101, wxT(\"Item 5\"), tb4_bmp1)",
    "type": "statement:functioncall"
  }, {
    "id": 336,
    "text": "tb4:AddTool(101, wxT(\"Item 6\"), tb4_bmp1)",
    "type": "statement:functioncall"
  }, {
    "id": 337,
    "text": "tb4:AddTool(101, wxT(\"Item 7\"), tb4_bmp1)",
    "type": "statement:functioncall"
  }, {
    "id": 338,
    "text": "tb4:AddTool(101, wxT(\"Item 8\"), tb4_bmp1)",
    "type": "statement:functioncall"
  }, {
    "id": 339,
    "text": "tb4:Realize()",
    "type": "statement:functioncall"
  }, {
    "id": 340,
    "text": "local tb5 = wx.wxToolBar(this, wx.wxID_ANY, wx.wxDefaultPosition, wx.wxDefaultSize,\r\n                                   wx.wxTB_FLAT + wx.wxTB_NODIVIDER + wx.wxTB_VERTICAL)",
    "type": "statement:localassign"
  }, {
    "id": 341,
    "text": "tb5:SetToolBitmapSize(wx.wxSize(48,48))",
    "type": "statement:functioncall"
  }, {
    "id": 342,
    "text": "tb5:AddTool(101, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_ERROR))",
    "type": "statement:functioncall"
  }, {
    "id": 343,
    "text": "tb5:AddSeparator()",
    "type": "statement:functioncall"
  }, {
    "id": 344,
    "text": "tb5:AddTool(102, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_QUESTION))",
    "type": "statement:functioncall"
  }, {
    "id": 345,
    "text": "tb5:AddTool(103, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_INFORMATION))",
    "type": "statement:functioncall"
  }, {
    "id": 346,
    "text": "tb5:AddTool(103, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_WARNING))",
    "type": "statement:functioncall"
  }, {
    "id": 347,
    "text": "tb5:AddTool(103, wxT(\"Test\"), wx.wxArtProvider.GetBitmap(wx.wxART_MISSING_IMAGE))",
    "type": "statement:functioncall"
  }, {
    "id": 348,
    "text": "tb5:Realize()",
    "type": "statement:functioncall"
  }, {
    "id": 349,
    "text": "self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test1\")):Caption(wxT(\"Pane Caption\")):\r\n                  Top())",
    "type": "statement:functioncall"
  }, {
    "id": 350,
    "text": "self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test2\")):Caption(wxT(\"Client Size Reporter\")):\r\n                  Bottom():Position(1):\r\n                  CloseButton(true):MaximizeButton(true))",
    "type": "statement:functioncall"
  }, {
    "id": 351,
    "text": "self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test3\")):Caption(wxT(\"Client Size Reporter\")):\r\n                  Bottom():\r\n                  CloseButton(true):MaximizeButton(true))",
    "type": "statement:functioncall"
  }, {
    "id": 352,
    "text": "self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test4\")):Caption(wxT(\"Pane Caption\")):\r\n                  Left())",
    "type": "statement:functioncall"
  }, {
    "id": 353,
    "text": "self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test5\")):Caption(wxT(\"No Close Button\")):\r\n                  Right():CloseButton(false))",
    "type": "statement:functioncall"
  }, {
    "id": 354,
    "text": "self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test6\")):Caption(wxT(\"Client Size Reporter\")):\r\n                  Right():Row(1):\r\n                  CloseButton(true):MaximizeButton(true))",
    "type": "statement:functioncall"
  }, {
    "id": 355,
    "text": "self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test7\")):Caption(wxT(\"Client Size Reporter\")):\r\n                  Left():Layer(1):\r\n                  CloseButton(true):MaximizeButton(true))",
    "type": "statement:functioncall"
  }, {
    "id": 356,
    "text": "self.m_mgr:AddPane(self:CreateTreeCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test8\")):Caption(wxT(\"Tree Pane\")):\r\n                  Left():Layer(1):Position(1):\r\n                  CloseButton(true):MaximizeButton(true))",
    "type": "statement:functioncall"
  }, {
    "id": 357,
    "text": "self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test9\")):Caption(wxT(\"Min Size 200x100\")):\r\n                  BestSize(wx.wxSize(200,100)):MinSize(wx.wxSize(200,100)):\r\n                  Bottom():Layer(1):\r\n                  CloseButton(true):MaximizeButton(true))",
    "type": "statement:functioncall"
  }, {
    "id": 358,
    "text": "local wnd10 = self:CreateTextCtrl(wxT(\"This pane will prompt the user before hiding.\"))",
    "type": "statement:localassign"
  }, {
    "id": 359,
    "text": "self.m_mgr:AddPane(wnd10, wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test10\")):Caption(wxT(\"Text Pane with Hide Prompt\")):\r\n                  Bottom():Layer(1):Position(1))",
    "type": "statement:functioncall"
  }, {
    "id": 360,
    "text": "self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"test11\")):Caption(wxT(\"Fixed Pane\")):\r\n                  Bottom():Layer(1):Position(2):Fixed())",
    "type": "statement:functioncall"
  }, {
    "id": 361,
    "text": "self.m_mgr:AddPane(SettingsPanel:create(self,self).this, wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"settings\")):Caption(wxT(\"Dock Manager Settings\")):\r\n                  Dockable(false):Float():Hide())",
    "type": "statement:functioncall"
  }, {
    "id": 362,
    "text": "self.m_mgr:AddPane(self:CreateGrid(), wxaui.wxAuiPaneInfo():Name(wxT(\"grid_content\")):\r\n                  CenterPane():Hide())",
    "type": "statement:functioncall"
  }, {
    "id": 363,
    "text": "self.m_mgr:AddPane(self:CreateTreeCtrl(), wxaui.wxAuiPaneInfo():Name(wxT(\"tree_content\")):\r\n                  CenterPane():Hide())",
    "type": "statement:functioncall"
  }, {
    "id": 364,
    "text": "self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():Name(wxT(\"sizereport_content\")):\r\n                  CenterPane():Hide())",
    "type": "statement:functioncall"
  }, {
    "id": 365,
    "text": "self.m_mgr:AddPane(self:CreateTextCtrl(), wxaui.wxAuiPaneInfo():Name(wxT(\"text_content\")):\r\n                  CenterPane():Hide())",
    "type": "statement:functioncall"
  }, {
    "id": 366,
    "text": "self.m_mgr:AddPane(self:CreateHTMLCtrl(), wxaui.wxAuiPaneInfo():Name(wxT(\"html_content\")):\r\n                  CenterPane():Hide())",
    "type": "statement:functioncall"
  }, {
    "id": 367,
    "text": "self.m_mgr:AddPane(self:CreateNotebook(), wxaui.wxAuiPaneInfo():Name(wxT(\"notebook_content\")):\r\n                  CenterPane():PaneBorder(false))",
    "type": "statement:functioncall"
  }, {
    "id": 368,
    "text": "self.m_mgr:AddPane(tb1, wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"tb1\")):Caption(wxT(\"Big Toolbar\")):\r\n                  ToolbarPane():Top():\r\n                  LeftDockable(false):RightDockable(false))",
    "type": "statement:functioncall"
  }, {
    "id": 369,
    "text": "self.m_mgr:AddPane(tb2, wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"tb2\")):Caption(wxT(\"Toolbar 2\")):\r\n                  ToolbarPane():Top():Row(1):\r\n                  LeftDockable(false):RightDockable(false))",
    "type": "statement:functioncall"
  }, {
    "id": 370,
    "text": "self.m_mgr:AddPane(tb3, wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"tb3\")):Caption(wxT(\"Toolbar 3\")):\r\n                  ToolbarPane():Top():Row(1):Position(1):\r\n                  LeftDockable(false):RightDockable(false))",
    "type": "statement:functioncall"
  }, {
    "id": 371,
    "text": "self.m_mgr:AddPane(tb4, wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"tb4\")):Caption(wxT(\"Sample Bookmark Toolbar\")):\r\n                  ToolbarPane():Top():Row(2):\r\n                  LeftDockable(false):RightDockable(false))",
    "type": "statement:functioncall"
  }, {
    "id": 372,
    "text": "self.m_mgr:AddPane(tb5, wxaui.wxAuiPaneInfo():\r\n                  Name(wxT(\"tb5\")):Caption(wxT(\"Sample Vertical Toolbar\")):\r\n                  ToolbarPane():Left():\r\n                  GripperTop():\r\n                  TopDockable(false):BottomDockable(false))",
    "type": "statement:functioncall"
  }, {
    "id": 373,
    "text": "self.m_mgr:AddPane(wx.wxButton(this, wx.wxID_ANY, _(\"Test Button\")),\r\n                  wxaui.wxAuiPaneInfo():Name(wxT(\"tb6\")):\r\n                  ToolbarPane():Top():Row(2):Position(1):\r\n                  LeftDockable(false):RightDockable(false))",
    "type": "statement:functioncall"
  }, {
    "id": 374,
    "text": "local perspective_all = self.m_mgr:SavePerspective()",
    "type": "statement:localassign"
  }, {
    "id": 375,
    "text": "local i, count",
    "type": "statement:localassign"
  }, {
    "id": 376,
    "text": "local all_panes = self.m_mgr:GetAllPanes()",
    "type": "statement:localassign"
  }, {
    "id": 377,
    "text": "count = all_panes:GetCount()",
    "type": "statement:assign"
  }, {
    "id": 378,
    "text": "for i = 0, count-1 do\r\n        if ( all_panes:Item(i):IsToolbar() == false) then\r\n            all_panes:Item(i):Hide();\r\n        end\r\n    end",
    "type": "statement:numericfor"
  }, {
    "id": 379,
    "text": "if ( all_panes:Item(i):IsToolbar() == false) then\r\n            all_panes:Item(i):Hide();\r\n        end",
    "type": "statement:if"
  }, {
    "id": 380,
    "text": "all_panes:Item(i):Hide()",
    "type": "statement:functioncall"
  }, {
    "id": 381,
    "text": "self.m_mgr:GetPane(wxT(\"tb1\")):Hide()",
    "type": "statement:functioncall"
  }, {
    "id": 382,
    "text": "self.m_mgr:GetPane(wxT(\"tb6\")):Hide()",
    "type": "statement:functioncall"
  }, {
    "id": 383,
    "text": "self.m_mgr:GetPane(wxT(\"test8\")):Show():Left():Layer(0):Row(0):Position(0)",
    "type": "statement:functioncall"
  }, {
    "id": 384,
    "text": "self.m_mgr:GetPane(wxT(\"test10\")):Show():Bottom():Layer(0):Row(0):Position(0)",
    "type": "statement:functioncall"
  }, {
    "id": 385,
    "text": "self.m_mgr:GetPane(wxT(\"notebook_content\")):Show()",
    "type": "statement:functioncall"
  }, {
    "id": 386,
    "text": "local perspective_default = self.m_mgr:SavePerspective()",
    "type": "statement:localassign"
  }, {
    "id": 387,
    "text": "self.m_perspectives = wx.wxArrayString()",
    "type": "statement:assign"
  }, {
    "id": 388,
    "text": "self.m_perspectives:Add(perspective_default)",
    "type": "statement:functioncall"
  }, {
    "id": 389,
    "text": "self.m_perspectives:Add(perspective_all)",
    "type": "statement:functioncall"
  }, {
    "id": 390,
    "text": "self.m_mgr:Update()",
    "type": "statement:functioncall"
  }, {
    "id": 391,
    "text": "this:Connect(wx.wxEVT_ERASE_BACKGROUND, function(event) self:OnEraseBackground(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 392,
    "text": "self:OnEraseBackground(event)",
    "type": "statement:functioncall"
  }, {
    "id": 393,
    "text": "this:Connect(wx.wxEVT_SIZE, function(event) self:OnSize(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 394,
    "text": "self:OnSize(event)",
    "type": "statement:functioncall"
  }, {
    "id": 395,
    "text": "this:Connect(self.ID_CreateTree, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCreateTree(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 396,
    "text": "self:OnCreateTree(event)",
    "type": "statement:functioncall"
  }, {
    "id": 397,
    "text": "this:Connect(self.ID_CreateGrid, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCreateGrid(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 398,
    "text": "self:OnCreateGrid(event)",
    "type": "statement:functioncall"
  }, {
    "id": 399,
    "text": "this:Connect(self.ID_CreateText, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCreateText(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 400,
    "text": "self:OnCreateText(event)",
    "type": "statement:functioncall"
  }, {
    "id": 401,
    "text": "this:Connect(self.ID_CreateHTML, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCreateHTML(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 402,
    "text": "self:OnCreateHTML(event)",
    "type": "statement:functioncall"
  }, {
    "id": 403,
    "text": "this:Connect(self.ID_CreateSizeReport, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCreateSizeReport(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 404,
    "text": "self:OnCreateSizeReport(event)",
    "type": "statement:functioncall"
  }, {
    "id": 405,
    "text": "this:Connect(self.ID_CreateNotebook, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCreateNotebook(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 406,
    "text": "self:OnCreateNotebook(event)",
    "type": "statement:functioncall"
  }, {
    "id": 407,
    "text": "this:Connect(self.ID_CreatePerspective, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCreatePerspective(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 408,
    "text": "self:OnCreatePerspective(event)",
    "type": "statement:functioncall"
  }, {
    "id": 409,
    "text": "this:Connect(self.ID_CopyPerspectiveCode, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnCopyPerspectiveCode(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 410,
    "text": "self:OnCopyPerspectiveCode(event)",
    "type": "statement:functioncall"
  }, {
    "id": 411,
    "text": "this:Connect(self.ID_AllowFloating, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 412,
    "text": "self:OnManagerFlag(event)",
    "type": "statement:functioncall"
  }, {
    "id": 413,
    "text": "this:Connect(self.ID_TransparentHint, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 414,
    "text": "this:Connect(self.ID_VenetianBlindsHint, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 415,
    "text": "this:Connect(self.ID_RectangleHint, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 416,
    "text": "this:Connect(self.ID_NoHint, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 417,
    "text": "this:Connect(self.ID_HintFade, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 418,
    "text": "this:Connect(self.ID_NoVenetianFade, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 419,
    "text": "this:Connect(self.ID_TransparentDrag, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 420,
    "text": "this:Connect(self.ID_AllowActivePane, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnManagerFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 421,
    "text": "this:Connect(self.ID_NotebookTabFixedWidth, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 422,
    "text": "self:OnNotebookFlag(event)",
    "type": "statement:functioncall"
  }, {
    "id": 423,
    "text": "this:Connect(self.ID_NotebookNoCloseButton, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 424,
    "text": "this:Connect(self.ID_NotebookCloseButton, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 425,
    "text": "this:Connect(self.ID_NotebookCloseButtonAll, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 426,
    "text": "this:Connect(self.ID_NotebookCloseButtonActive, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 427,
    "text": "this:Connect(self.ID_NotebookAllowTabMove, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 428,
    "text": "this:Connect(self.ID_NotebookAllowTabExternalMove, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 429,
    "text": "this:Connect(self.ID_NotebookAllowTabSplit, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 430,
    "text": "this:Connect(self.ID_NotebookScrollButtons, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 431,
    "text": "this:Connect(self.ID_NotebookWindowList, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 432,
    "text": "this:Connect(self.ID_NotebookArtGloss, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 433,
    "text": "this:Connect(self.ID_NotebookArtSimple, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnNotebookFlag(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 434,
    "text": "this:Connect(self.ID_NotebookAlignTop,  wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnTabAlignment(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 435,
    "text": "self:OnTabAlignment(event)",
    "type": "statement:functioncall"
  }, {
    "id": 436,
    "text": "this:Connect(self.ID_NotebookAlignBottom,  wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnTabAlignment(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 437,
    "text": "this:Connect(self.ID_NoGradient, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnGradient(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 438,
    "text": "self:OnGradient(event)",
    "type": "statement:functioncall"
  }, {
    "id": 439,
    "text": "this:Connect(self.ID_VerticalGradient, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnGradient(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 440,
    "text": "this:Connect(self.ID_HorizontalGradient, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnGradient(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 441,
    "text": "this:Connect(self.ID_Settings, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnSettings(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 442,
    "text": "self:OnSettings(event)",
    "type": "statement:functioncall"
  }, {
    "id": 443,
    "text": "this:Connect(self.ID_GridContent, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnChangeContentPane(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 444,
    "text": "self:OnChangeContentPane(event)",
    "type": "statement:functioncall"
  }, {
    "id": 445,
    "text": "this:Connect(self.ID_TreeContent, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnChangeContentPane(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 446,
    "text": "this:Connect(self.ID_TextContent, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnChangeContentPane(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 447,
    "text": "this:Connect(self.ID_SizeReportContent, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnChangeContentPane(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 448,
    "text": "this:Connect(self.ID_HTMLContent, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnChangeContentPane(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 449,
    "text": "this:Connect(self.ID_NotebookContent, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnChangeContentPane(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 450,
    "text": "this:Connect(wx.wxID_EXIT, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnExit(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 451,
    "text": "self:OnExit(event)",
    "type": "statement:functioncall"
  }, {
    "id": 452,
    "text": "this:Connect(wx.wxID_ABOUT, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnAbout(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 453,
    "text": "self:OnAbout(event)",
    "type": "statement:functioncall"
  }, {
    "id": 454,
    "text": "this:Connect(self.ID_NotebookTabFixedWidth, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 455,
    "text": "self:OnUpdateUI(event)",
    "type": "statement:functioncall"
  }, {
    "id": 456,
    "text": "this:Connect(self.ID_NotebookNoCloseButton, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 457,
    "text": "this:Connect(self.ID_NotebookCloseButton, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 458,
    "text": "this:Connect(self.ID_NotebookCloseButtonAll, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 459,
    "text": "this:Connect(self.ID_NotebookCloseButtonActive, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 460,
    "text": "this:Connect(self.ID_NotebookAllowTabMove, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 461,
    "text": "this:Connect(self.ID_NotebookAllowTabExternalMove, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 462,
    "text": "this:Connect(self.ID_NotebookAllowTabSplit, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 463,
    "text": "this:Connect(self.ID_NotebookScrollButtons, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 464,
    "text": "this:Connect(self.ID_NotebookWindowList, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 465,
    "text": "this:Connect(self.ID_AllowFloating, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 466,
    "text": "this:Connect(self.ID_TransparentHint, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 467,
    "text": "this:Connect(self.ID_VenetianBlindsHint, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 468,
    "text": "this:Connect(self.ID_RectangleHint, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 469,
    "text": "this:Connect(self.ID_NoHint, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 470,
    "text": "this:Connect(self.ID_HintFade, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 471,
    "text": "this:Connect(self.ID_NoVenetianFade, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 472,
    "text": "this:Connect(self.ID_TransparentDrag, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 473,
    "text": "this:Connect(self.ID_NoGradient, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 474,
    "text": "this:Connect(self.ID_VerticalGradient, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 475,
    "text": "this:Connect(self.ID_HorizontalGradient, wx.wxEVT_UPDATE_UI, function(event) self:OnUpdateUI(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 476,
    "text": "this:Connect(self.ID_FirstPerspective+0, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 477,
    "text": "self:OnRestorePerspective(event)",
    "type": "statement:functioncall"
  }, {
    "id": 478,
    "text": "this:Connect(self.ID_FirstPerspective+1, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 479,
    "text": "this:Connect(self.ID_FirstPerspective+2, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 480,
    "text": "this:Connect(self.ID_FirstPerspective+3, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 481,
    "text": "this:Connect(self.ID_FirstPerspective+4, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 482,
    "text": "this:Connect(self.ID_FirstPerspective+5, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 483,
    "text": "this:Connect(self.ID_FirstPerspective+6, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 484,
    "text": "this:Connect(self.ID_FirstPerspective+7, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 485,
    "text": "this:Connect(self.ID_FirstPerspective+8, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 486,
    "text": "this:Connect(self.ID_FirstPerspective+9, wx.wxEVT_COMMAND_MENU_SELECTED, function(event) self:OnRestorePerspective(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 487,
    "text": "this:Connect(wxaui.wxEVT_AUI_PANE_CLOSE, function(event) self:OnPaneClose(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 488,
    "text": "self:OnPaneClose(event)",
    "type": "statement:functioncall"
  }, {
    "id": 489,
    "text": "this:Connect(wx.wxID_ANY, wxaui.wxEVT_COMMAND_AUINOTEBOOK_ALLOW_DND, function(event) self:OnAllowNotebookDnD(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 490,
    "text": "self:OnAllowNotebookDnD(event)",
    "type": "statement:functioncall"
  }, {
    "id": 491,
    "text": "this:Connect(wx.wxID_ANY, wxaui.wxEVT_COMMAND_AUINOTEBOOK_PAGE_CLOSE, function(event) self:OnNotebookPageClose(event) end)",
    "type": "statement:functioncall"
  }, {
    "id": 492,
    "text": "self:OnNotebookPageClose(event)",
    "type": "statement:functioncall"
  }, {
    "id": 493,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 494,
    "text": "function MyFrame:dtor()\r\n    self.m_mgr:UnInit();\r\nend",
    "type": "function"
  }, {
    "id": 495,
    "text": "self.m_mgr:UnInit()",
    "type": "statement:functioncall"
  }, {
    "id": 496,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 497,
    "text": "function MyFrame:GetDockArt()\r\n    return self.m_mgr:GetArtProvider();\r\nend",
    "type": "function"
  }, {
    "id": 498,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 499,
    "text": "function MyFrame:DoUpdate()\r\n    self.m_mgr:Update();\r\nend",
    "type": "function"
  }, {
    "id": 500,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 501,
    "text": "function MyFrame:OnEraseBackground(event)\r\n    event:Skip();\r\nend",
    "type": "function"
  }, {
    "id": 502,
    "text": "event:Skip()",
    "type": "statement:functioncall"
  }, {
    "id": 503,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 504,
    "text": "function MyFrame:OnSize(event)\r\n    event:Skip();\r\nend",
    "type": "function"
  }, {
    "id": 505,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 506,
    "text": "function MyFrame:OnSettings(event)\r\n    --// show the settings pane, and float it\r\n    local floating_pane = self.m_mgr:GetPane(wxT(\"settings\")):Float():Show();\r\n\r\n    if (floating_pane.floating_pos == wx.wxDefaultPosition) then\r\n        floating_pane:FloatingPosition(self:GetStartPosition());\r\n    end\r\n\r\n    self.m_mgr:Update();\r\nend",
    "type": "function"
  }, {
    "id": 507,
    "text": "local floating_pane = self.m_mgr:GetPane(wxT(\"settings\")):Float():Show()",
    "type": "statement:localassign"
  }, {
    "id": 508,
    "text": "if (floating_pane.floating_pos == wx.wxDefaultPosition) then\r\n        floating_pane:FloatingPosition(self:GetStartPosition());\r\n    end",
    "type": "statement:if"
  }, {
    "id": 509,
    "text": "floating_pane:FloatingPosition(self:GetStartPosition())",
    "type": "statement:functioncall"
  }, {
    "id": 510,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 511,
    "text": "function MyFrame:OnGradient(event)\r\n    local gradient = 0;\r\n\r\n    local id = event:GetId()\r\n\r\n    if      id == self.ID_NoGradient         then gradient = wxaui.wxAUI_GRADIENT_NONE;\r\n    elseif  id == self.ID_VerticalGradient   then gradient = wxaui.wxAUI_GRADIENT_VERTICAL;\r\n    elseif  id == self.ID_HorizontalGradient then gradient = wxaui.wxAUI_GRADIENT_HORIZONTAL;\r\n    end\r\n\r\n    self.m_mgr:GetArtProvider():SetMetric(wxaui.wxAUI_DOCKART_GRADIENT_TYPE, gradient);\r\n    self.m_mgr:Update();\r\nend",
    "type": "function"
  }, {
    "id": 512,
    "text": "local gradient = 0",
    "type": "statement:localassign"
  }, {
    "id": 513,
    "text": "if      id == self.ID_NoGradient         then gradient = wxaui.wxAUI_GRADIENT_NONE;\r\n    elseif  id == self.ID_VerticalGradient   then gradient = wxaui.wxAUI_GRADIENT_VERTICAL;\r\n    elseif  id == self.ID_HorizontalGradient then gradient = wxaui.wxAUI_GRADIENT_HORIZONTAL;\r\n    end",
    "type": "statement:if"
  }, {
    "id": 514,
    "text": "gradient = wxaui.wxAUI_GRADIENT_NONE",
    "type": "statement:assign"
  }, {
    "id": 515,
    "text": "gradient = wxaui.wxAUI_GRADIENT_VERTICAL",
    "type": "statement:assign"
  }, {
    "id": 516,
    "text": "gradient = wxaui.wxAUI_GRADIENT_HORIZONTAL",
    "type": "statement:assign"
  }, {
    "id": 517,
    "text": "self.m_mgr:GetArtProvider():SetMetric(wxaui.wxAUI_DOCKART_GRADIENT_TYPE, gradient)",
    "type": "statement:functioncall"
  }, {
    "id": 518,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 519,
    "text": "function MyFrame:OnManagerFlag(event)\r\n    local flag = 0;\r\n    local id = event:GetId()\r\n\r\n--#if !defined(__WXMSW__) && !defined(__WXMAC__) && !defined(__WXGTK__)\r\nif false then\r\n    if (id == self.ID_TransparentDrag or\r\n        id == self.ID_TransparentHint or\r\n        id == self.ID_HintFade) then\r\n        wx.wxMessageBox(wxT(\"This option is presently only available on wxGTK, wxMSW and wxMac\"));\r\n        return;\r\n    end\r\nend\r\n--#endif\r\n\r\n    if (id == self.ID_TransparentHint or\r\n        id == self.ID_VenetianBlindsHint or\r\n        id == self.ID_RectangleHint or\r\n        id == self.ID_NoHint) then\r\n        local flags = self.m_mgr:GetFlags();\r\n\r\n        --[[hd.FIXME\r\n        --flags &= ~wxAUI_MGR_TRANSPARENT_HINT;\r\n        --flags &= ~wxAUI_MGR_VENETIAN_BLINDS_HINT;\r\n        --flags &= ~wxAUI_MGR_RECTANGLE_HINT;\r\n        --]]\r\n        flags = bit.band(flags, bit.bnot(wxaui.wxAUI_MGR_TRANSPARENT_HINT));\r\n        flags = bit.band(flags, bit.bnot(wxaui.wxAUI_MGR_VENETIAN_BLINDS_HINT));\r\n        flags = bit.band(flags, bit.bnot(wxaui.wxAUI_MGR_RECTANGLE_HINT));\r\n\r\n        self.m_mgr:SetFlags(flags);\r\n    end\r\n\r\n    if      id == self.ID_AllowFloating      then flag = wxaui.wxAUI_MGR_ALLOW_FLOATING;\r\n    elseif  id == self.ID_TransparentDrag    then flag = wxaui.wxAUI_MGR_TRANSPARENT_DRAG;\r\n    elseif  id == self.ID_HintFade           then flag = wxaui.wxAUI_MGR_HINT_FADE;\r\n    elseif  id == self.ID_NoVenetianFade     then flag = wxaui.wxAUI_MGR_NO_VENETIAN_BLINDS_FADE;\r\n    elseif  id == self.ID_AllowActivePane    then flag = wxaui.wxAUI_MGR_ALLOW_ACTIVE_PANE;\r\n    elseif  id == self.ID_TransparentHint    then flag = wxaui.wxAUI_MGR_TRANSPARENT_HINT;\r\n    elseif  id == self.ID_VenetianBlindsHint then flag = wxaui.wxAUI_MGR_VENETIAN_BLINDS_HINT;\r\n    elseif  id == self.ID_RectangleHint      then flag = wxaui.wxAUI_MGR_RECTANGLE_HINT;\r\n    end\r\n\r\n    if (flag) then\r\n        --[[hd.FIXME\r\n        m_mgr.SetFlags(m_mgr.GetFlags() ^ flag);\r\n        --]]\r\n        self.m_mgr:SetFlags(bit.bxor(self.m_mgr:GetFlags(), flag));\r\n    end\r\n\r\n    self.m_mgr:Update();\r\nend",
    "type": "function"
  }, {
    "id": 520,
    "text": "local flag = 0",
    "type": "statement:localassign"
  }, {
    "id": 521,
    "text": "if false then\r\n    if (id == self.ID_TransparentDrag or\r\n        id == self.ID_TransparentHint or\r\n        id == self.ID_HintFade) then\r\n        wx.wxMessageBox(wxT(\"This option is presently only available on wxGTK, wxMSW and wxMac\"));\r\n        return;\r\n    end\r\nend",
    "type": "statement:if"
  }, {
    "id": 522,
    "text": "if (id == self.ID_TransparentDrag or\r\n        id == self.ID_TransparentHint or\r\n        id == self.ID_HintFade) then\r\n        wx.wxMessageBox(wxT(\"This option is presently only available on wxGTK, wxMSW and wxMac\"));\r\n        return;\r\n    end",
    "type": "statement:if"
  }, {
    "id": 523,
    "text": "wx.wxMessageBox(wxT(\"This option is presently only available on wxGTK, wxMSW and wxMac\"))",
    "type": "statement:functioncall"
  }, {
    "id": 524,
    "text": "if (id == self.ID_TransparentHint or\r\n        id == self.ID_VenetianBlindsHint or\r\n        id == self.ID_RectangleHint or\r\n        id == self.ID_NoHint) then\r\n        local flags = self.m_mgr:GetFlags();\r\n\r\n        --[[hd.FIXME\r\n        --flags &= ~wxAUI_MGR_TRANSPARENT_HINT;\r\n        --flags &= ~wxAUI_MGR_VENETIAN_BLINDS_HINT;\r\n        --flags &= ~wxAUI_MGR_RECTANGLE_HINT;\r\n        --]]\r\n        flags = bit.band(flags, bit.bnot(wxaui.wxAUI_MGR_TRANSPARENT_HINT));\r\n        flags = bit.band(flags, bit.bnot(wxaui.wxAUI_MGR_VENETIAN_BLINDS_HINT));\r\n        flags = bit.band(flags, bit.bnot(wxaui.wxAUI_MGR_RECTANGLE_HINT));\r\n\r\n        self.m_mgr:SetFlags(flags);\r\n    end",
    "type": "statement:if"
  }, {
    "id": 525,
    "text": "local flags = self.m_mgr:GetFlags()",
    "type": "statement:localassign"
  }, {
    "id": 526,
    "text": "flags = bit.band(flags, bit.bnot(wxaui.wxAUI_MGR_TRANSPARENT_HINT))",
    "type": "statement:assign"
  }, {
    "id": 527,
    "text": "flags = bit.band(flags, bit.bnot(wxaui.wxAUI_MGR_VENETIAN_BLINDS_HINT))",
    "type": "statement:assign"
  }, {
    "id": 528,
    "text": "flags = bit.band(flags, bit.bnot(wxaui.wxAUI_MGR_RECTANGLE_HINT))",
    "type": "statement:assign"
  }, {
    "id": 529,
    "text": "self.m_mgr:SetFlags(flags)",
    "type": "statement:functioncall"
  }, {
    "id": 530,
    "text": "if      id == self.ID_AllowFloating      then flag = wxaui.wxAUI_MGR_ALLOW_FLOATING;\r\n    elseif  id == self.ID_TransparentDrag    then flag = wxaui.wxAUI_MGR_TRANSPARENT_DRAG;\r\n    elseif  id == self.ID_HintFade           then flag = wxaui.wxAUI_MGR_HINT_FADE;\r\n    elseif  id == self.ID_NoVenetianFade     then flag = wxaui.wxAUI_MGR_NO_VENETIAN_BLINDS_FADE;\r\n    elseif  id == self.ID_AllowActivePane    then flag = wxaui.wxAUI_MGR_ALLOW_ACTIVE_PANE;\r\n    elseif  id == self.ID_TransparentHint    then flag = wxaui.wxAUI_MGR_TRANSPARENT_HINT;\r\n    elseif  id == self.ID_VenetianBlindsHint then flag = wxaui.wxAUI_MGR_VENETIAN_BLINDS_HINT;\r\n    elseif  id == self.ID_RectangleHint      then flag = wxaui.wxAUI_MGR_RECTANGLE_HINT;\r\n    end",
    "type": "statement:if"
  }, {
    "id": 531,
    "text": "flag = wxaui.wxAUI_MGR_ALLOW_FLOATING",
    "type": "statement:assign"
  }, {
    "id": 532,
    "text": "flag = wxaui.wxAUI_MGR_TRANSPARENT_DRAG",
    "type": "statement:assign"
  }, {
    "id": 533,
    "text": "flag = wxaui.wxAUI_MGR_HINT_FADE",
    "type": "statement:assign"
  }, {
    "id": 534,
    "text": "flag = wxaui.wxAUI_MGR_NO_VENETIAN_BLINDS_FADE",
    "type": "statement:assign"
  }, {
    "id": 535,
    "text": "flag = wxaui.wxAUI_MGR_ALLOW_ACTIVE_PANE",
    "type": "statement:assign"
  }, {
    "id": 536,
    "text": "flag = wxaui.wxAUI_MGR_TRANSPARENT_HINT",
    "type": "statement:assign"
  }, {
    "id": 537,
    "text": "flag = wxaui.wxAUI_MGR_VENETIAN_BLINDS_HINT",
    "type": "statement:assign"
  }, {
    "id": 538,
    "text": "flag = wxaui.wxAUI_MGR_RECTANGLE_HINT",
    "type": "statement:assign"
  }, {
    "id": 539,
    "text": "if (flag) then\r\n        --[[hd.FIXME\r\n        m_mgr.SetFlags(m_mgr.GetFlags() ^ flag);\r\n        --]]\r\n        self.m_mgr:SetFlags(bit.bxor(self.m_mgr:GetFlags(), flag));\r\n    end",
    "type": "statement:if"
  }, {
    "id": 540,
    "text": "self.m_mgr:SetFlags(bit.bxor(self.m_mgr:GetFlags(), flag))",
    "type": "statement:functioncall"
  }, {
    "id": 541,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 542,
    "text": "function MyFrame:OnNotebookFlag(event)\r\n    local id = event:GetId();\r\n\r\n    if (id == self.ID_NotebookNoCloseButton or\r\n        id == self.ID_NotebookCloseButton or\r\n        id == self.ID_NotebookCloseButtonAll or\r\n        id == self.ID_NotebookCloseButtonActive) then\r\n        --[[hd.FIXME\r\n        m_notebook_style &= ~(wxAUI_NB_CLOSE_BUTTON |\r\n                              wxAUI_NB_CLOSE_ON_ACTIVE_TAB |\r\n                              wxAUI_NB_CLOSE_ON_ALL_TABS);\r\n        --]]\r\n        self.m_notebook_style = bit.band(self.m_notebook_style, bit.bnot(wxaui.wxAUI_NB_CLOSE_BUTTON +\r\n                              wxaui.wxAUI_NB_CLOSE_ON_ACTIVE_TAB +\r\n                              wxaui.wxAUI_NB_CLOSE_ON_ALL_TABS));\r\n    end\r\n\r\n    --[[hd.FIXME\r\n            case ID_NotebookNoCloseButton: break;\r\n            case ID_NotebookCloseButton: m_notebook_style |= wxAUI_NB_CLOSE_BUTTON; break;\r\n            case ID_NotebookCloseButtonAll: m_notebook_style |= wxAUI_NB_CLOSE_ON_ALL_TABS; break;\r\n            case ID_NotebookCloseButtonActive: m_notebook_style |= wxAUI_NB_CLOSE_ON_ACTIVE_TAB; break;\r\n    --]]\r\n    if     id == self.ID_NotebookNoCloseButton     then\r\n    elseif id == self.ID_NotebookCloseButton       then self.m_notebook_style = bit.bor(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_BUTTON);\r\n    elseif id == self.ID_NotebookCloseButtonAll    then self.m_notebook_style = bit.bor(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_ON_ALL_TABS);\r\n    elseif id == self.ID_NotebookCloseButtonActive then self.m_notebook_style = bit.bor(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_ON_ACTIVE_TAB);\r\n    end\r\n\r\n    --[[hd.FIXME\r\n    if (id == ID_NotebookAllowTabMove)\r\n    {\r\n        m_notebook_style ^= wxAUI_NB_TAB_MOVE;\r\n    }\r\n    if (id == ID_NotebookAllowTabExternalMove)\r\n    {\r\n        m_notebook_style ^= wxAUI_NB_TAB_EXTERNAL_MOVE;\r\n    }\r\n     else if (id == ID_NotebookAllowTabSplit)\r\n    {\r\n        m_notebook_style ^= wxAUI_NB_TAB_SPLIT;\r\n    }\r\n     else if (id == ID_NotebookWindowList)\r\n    {\r\n        m_notebook_style ^= wxAUI_NB_WINDOWLIST_BUTTON;\r\n    }\r\n     else if (id == ID_NotebookScrollButtons)\r\n    {\r\n        m_notebook_style ^= wxAUI_NB_SCROLL_BUTTONS;\r\n    }\r\n     else if (id == ID_NotebookTabFixedWidth)\r\n    {\r\n        m_notebook_style ^= wxAUI_NB_TAB_FIXED_WIDTH;\r\n    }\r\n    --]]\r\n    if (id == self.ID_NotebookAllowTabMove) then\r\n        self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_TAB_MOVE);\r\n    end\r\n    if (id == self.ID_NotebookAllowTabExternalMove) then\r\n        self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_TAB_EXTERNAL_MOVE);\r\n    elseif (id == self.ID_NotebookAllowTabSplit) then\r\n        self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_TAB_SPLIT);\r\n     elseif (id == self.ID_NotebookWindowList) then\r\n        self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_WINDOWLIST_BUTTON);\r\n     elseif (id == self.ID_NotebookScrollButtons) then\r\n        self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_SCROLL_BUTTONS);\r\n     elseif (id == self.ID_NotebookTabFixedWidth) then\r\n        self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_TAB_FIXED_WIDTH);\r\n    end\r\n\r\n    local i, count;\r\n    local all_panes = self.m_mgr:GetAllPanes();\r\n    count = all_panes:GetCount()\r\n    for i = 0, count-1 do\r\n        local pane = all_panes:Item(i);\r\n        if (pane.window:IsKindOf(wx.wxClassInfo.FindClass(\"wxAuiNotebook\"))) then\r\n            local nb = pane.window:DynamicCast(\"wxAuiNotebook\");\r\n\r\n            if (id == self.ID_NotebookArtGloss) then\r\n                nb:SetArtProvider(wxaui.wxAuiDefaultTabArt());\r\n                self.m_notebook_theme = 0;\r\n             elseif (id == self.ID_NotebookArtSimple) then\r\n                nb:SetArtProvider(wxaui.wxAuiSimpleTabArt());\r\n                self.m_notebook_theme = 1;\r\n            end\r\n\r\n            nb:SetWindowStyleFlag(self.m_notebook_style);\r\n            nb:Refresh();\r\n        end\r\n    end\r\n\r\nend",
    "type": "function"
  }, {
    "id": 543,
    "text": "if (id == self.ID_NotebookNoCloseButton or\r\n        id == self.ID_NotebookCloseButton or\r\n        id == self.ID_NotebookCloseButtonAll or\r\n        id == self.ID_NotebookCloseButtonActive) then\r\n        --[[hd.FIXME\r\n        m_notebook_style &= ~(wxAUI_NB_CLOSE_BUTTON |\r\n                              wxAUI_NB_CLOSE_ON_ACTIVE_TAB |\r\n                              wxAUI_NB_CLOSE_ON_ALL_TABS);\r\n        --]]\r\n        self.m_notebook_style = bit.band(self.m_notebook_style, bit.bnot(wxaui.wxAUI_NB_CLOSE_BUTTON +\r\n                              wxaui.wxAUI_NB_CLOSE_ON_ACTIVE_TAB +\r\n                              wxaui.wxAUI_NB_CLOSE_ON_ALL_TABS));\r\n    end",
    "type": "statement:if"
  }, {
    "id": 544,
    "text": "self.m_notebook_style = bit.band(self.m_notebook_style, bit.bnot(wxaui.wxAUI_NB_CLOSE_BUTTON +\r\n                              wxaui.wxAUI_NB_CLOSE_ON_ACTIVE_TAB +\r\n                              wxaui.wxAUI_NB_CLOSE_ON_ALL_TABS))",
    "type": "statement:assign"
  }, {
    "id": 545,
    "text": "if     id == self.ID_NotebookNoCloseButton     then\r\n    elseif id == self.ID_NotebookCloseButton       then self.m_notebook_style = bit.bor(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_BUTTON);\r\n    elseif id == self.ID_NotebookCloseButtonAll    then self.m_notebook_style = bit.bor(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_ON_ALL_TABS);\r\n    elseif id == self.ID_NotebookCloseButtonActive then self.m_notebook_style = bit.bor(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_ON_ACTIVE_TAB);\r\n    end",
    "type": "statement:if"
  }, {
    "id": 546,
    "text": "self.m_notebook_style = bit.bor(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_BUTTON)",
    "type": "statement:assign"
  }, {
    "id": 547,
    "text": "self.m_notebook_style = bit.bor(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_ON_ALL_TABS)",
    "type": "statement:assign"
  }, {
    "id": 548,
    "text": "self.m_notebook_style = bit.bor(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_ON_ACTIVE_TAB)",
    "type": "statement:assign"
  }, {
    "id": 549,
    "text": "if (id == self.ID_NotebookAllowTabMove) then\r\n        self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_TAB_MOVE);\r\n    end",
    "type": "statement:if"
  }, {
    "id": 550,
    "text": "self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_TAB_MOVE)",
    "type": "statement:assign"
  }, {
    "id": 551,
    "text": "if (id == self.ID_NotebookAllowTabExternalMove) then\r\n        self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_TAB_EXTERNAL_MOVE);\r\n    elseif (id == self.ID_NotebookAllowTabSplit) then\r\n        self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_TAB_SPLIT);\r\n     elseif (id == self.ID_NotebookWindowList) then\r\n        self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_WINDOWLIST_BUTTON);\r\n     elseif (id == self.ID_NotebookScrollButtons) then\r\n        self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_SCROLL_BUTTONS);\r\n     elseif (id == self.ID_NotebookTabFixedWidth) then\r\n        self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_TAB_FIXED_WIDTH);\r\n    end",
    "type": "statement:if"
  }, {
    "id": 552,
    "text": "self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_TAB_EXTERNAL_MOVE)",
    "type": "statement:assign"
  }, {
    "id": 553,
    "text": "self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_TAB_SPLIT)",
    "type": "statement:assign"
  }, {
    "id": 554,
    "text": "self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_WINDOWLIST_BUTTON)",
    "type": "statement:assign"
  }, {
    "id": 555,
    "text": "self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_SCROLL_BUTTONS)",
    "type": "statement:assign"
  }, {
    "id": 556,
    "text": "self.m_notebook_style = bit.bxor(self.m_notebook_style, wxaui.wxAUI_NB_TAB_FIXED_WIDTH)",
    "type": "statement:assign"
  }, {
    "id": 557,
    "text": "for i = 0, count-1 do\r\n        local pane = all_panes:Item(i);\r\n        if (pane.window:IsKindOf(wx.wxClassInfo.FindClass(\"wxAuiNotebook\"))) then\r\n            local nb = pane.window:DynamicCast(\"wxAuiNotebook\");\r\n\r\n            if (id == self.ID_NotebookArtGloss) then\r\n                nb:SetArtProvider(wxaui.wxAuiDefaultTabArt());\r\n                self.m_notebook_theme = 0;\r\n             elseif (id == self.ID_NotebookArtSimple) then\r\n                nb:SetArtProvider(wxaui.wxAuiSimpleTabArt());\r\n                self.m_notebook_theme = 1;\r\n            end\r\n\r\n            nb:SetWindowStyleFlag(self.m_notebook_style);\r\n            nb:Refresh();\r\n        end\r\n    end",
    "type": "statement:numericfor"
  }, {
    "id": 558,
    "text": "local pane = all_panes:Item(i)",
    "type": "statement:localassign"
  }, {
    "id": 559,
    "text": "if (pane.window:IsKindOf(wx.wxClassInfo.FindClass(\"wxAuiNotebook\"))) then\r\n            local nb = pane.window:DynamicCast(\"wxAuiNotebook\");\r\n\r\n            if (id == self.ID_NotebookArtGloss) then\r\n                nb:SetArtProvider(wxaui.wxAuiDefaultTabArt());\r\n                self.m_notebook_theme = 0;\r\n             elseif (id == self.ID_NotebookArtSimple) then\r\n                nb:SetArtProvider(wxaui.wxAuiSimpleTabArt());\r\n                self.m_notebook_theme = 1;\r\n            end\r\n\r\n            nb:SetWindowStyleFlag(self.m_notebook_style);\r\n            nb:Refresh();\r\n        end",
    "type": "statement:if"
  }, {
    "id": 560,
    "text": "local nb = pane.window:DynamicCast(\"wxAuiNotebook\")",
    "type": "statement:localassign"
  }, {
    "id": 561,
    "text": "if (id == self.ID_NotebookArtGloss) then\r\n                nb:SetArtProvider(wxaui.wxAuiDefaultTabArt());\r\n                self.m_notebook_theme = 0;\r\n             elseif (id == self.ID_NotebookArtSimple) then\r\n                nb:SetArtProvider(wxaui.wxAuiSimpleTabArt());\r\n                self.m_notebook_theme = 1;\r\n            end",
    "type": "statement:if"
  }, {
    "id": 562,
    "text": "nb:SetArtProvider(wxaui.wxAuiDefaultTabArt())",
    "type": "statement:functioncall"
  }, {
    "id": 563,
    "text": "nb:SetArtProvider(wxaui.wxAuiSimpleTabArt())",
    "type": "statement:functioncall"
  }, {
    "id": 564,
    "text": "self.m_notebook_theme = 1",
    "type": "statement:assign"
  }, {
    "id": 565,
    "text": "nb:SetWindowStyleFlag(self.m_notebook_style)",
    "type": "statement:functioncall"
  }, {
    "id": 566,
    "text": "nb:Refresh()",
    "type": "statement:functioncall"
  }, {
    "id": 567,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 568,
    "text": "function MyFrame:OnUpdateUI(event)\r\n    local flags = self.m_mgr:GetFlags();\r\n    local id = event:GetId()\r\n\r\n    if id == self.ID_NoGradient then\r\n        --event.Check(m_mgr.GetArtProvider()->GetMetric(wxAUI_DOCKART_GRADIENT_TYPE) == wxAUI_GRADIENT_NONE);\r\n        event:Check(self.m_mgr:GetArtProvider():GetMetric(wxaui.wxAUI_DOCKART_GRADIENT_TYPE) == wxaui.wxAUI_GRADIENT_NONE);\r\n    elseif id == self.ID_VerticalGradient then\r\n        --event.Check(m_mgr.GetArtProvider()->GetMetric(wxAUI_DOCKART_GRADIENT_TYPE) == wxAUI_GRADIENT_VERTICAL);\r\n        event:Check(self.m_mgr:GetArtProvider():GetMetric(wxaui.wxAUI_DOCKART_GRADIENT_TYPE) == wxaui.wxAUI_GRADIENT_VERTICAL);\r\n    elseif id == self.ID_HorizontalGradient then\r\n        --event.Check(m_mgr.GetArtProvider()->GetMetric(wxAUI_DOCKART_GRADIENT_TYPE) == wxAUI_GRADIENT_HORIZONTAL);\r\n        event:Check(self.m_mgr:GetArtProvider():GetMetric(wxaui.wxAUI_DOCKART_GRADIENT_TYPE) == wxaui.wxAUI_GRADIENT_HORIZONTAL);\r\n    elseif id == self.ID_AllowFloating then\r\n        --event.Check((flags & wxAUI_MGR_ALLOW_FLOATING) != 0);\r\n        event:Check(bit.band(flags, wxaui.wxAUI_MGR_ALLOW_FLOATING) ~= 0);\r\n    elseif id == self.ID_TransparentDrag then\r\n        --event.Check((flags & wxAUI_MGR_TRANSPARENT_DRAG) != 0);\r\n        event:Check(bit.band(flags, wxaui.wxAUI_MGR_TRANSPARENT_DRAG) ~= 0);\r\n    elseif id == self.ID_TransparentHint then\r\n        --event.Check((flags & wxAUI_MGR_TRANSPARENT_HINT) != 0);\r\n        event:Check(bit.band(flags, wxaui.wxAUI_MGR_TRANSPARENT_HINT) ~= 0);\r\n    elseif id == self.ID_VenetianBlindsHint then\r\n        --event.Check((flags & wxAUI_MGR_VENETIAN_BLINDS_HINT) != 0);\r\n        event:Check(bit.band(flags, wxaui.wxAUI_MGR_VENETIAN_BLINDS_HINT) ~= 0);\r\n    elseif id == self.ID_RectangleHint then\r\n        --event.Check((flags & wxAUI_MGR_RECTANGLE_HINT) != 0);\r\n        event:Check(bit.band(flags, wxaui.wxAUI_MGR_RECTANGLE_HINT) ~= 0);\r\n    elseif id == self.ID_NoHint then\r\n        --event.Check(((wxAUI_MGR_TRANSPARENT_HINT |\r\n        --              wxAUI_MGR_VENETIAN_BLINDS_HINT |\r\n        --              wxAUI_MGR_RECTANGLE_HINT) & flags) == 0);\r\n        event:Check(bit.band((wxaui.wxAUI_MGR_TRANSPARENT_HINT +\r\n                          wxaui.wxAUI_MGR_VENETIAN_BLINDS_HINT +\r\n                          wxaui.wxAUI_MGR_RECTANGLE_HINT), flags) == 0);\r\n    elseif id == self.ID_HintFade then\r\n        --event.Check((flags & wxAUI_MGR_HINT_FADE) != 0);\r\n        event:Check(bit.band(flags, wxaui.wxAUI_MGR_HINT_FADE) ~= 0);\r\n    elseif id == self.ID_NoVenetianFade then\r\n        --event.Check((flags & wxAUI_MGR_NO_VENETIAN_BLINDS_FADE) != 0);\r\n        event:Check(bit.band(flags, wxaui.wxAUI_MGR_NO_VENETIAN_BLINDS_FADE) ~= 0);\r\n\r\n    elseif id == self.ID_NotebookNoCloseButton then\r\n        --event.Check((m_notebook_style & (wxAUI_NB_CLOSE_BUTTON|wxAUI_NB_CLOSE_ON_ALL_TABS|wxAUI_NB_CLOSE_ON_ACTIVE_TAB)) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, (wxaui.wxAUI_NB_CLOSE_BUTTON + wxaui.wxAUI_NB_CLOSE_ON_ALL_TABS + wxaui.wxAUI_NB_CLOSE_ON_ACTIVE_TAB)) ~= 0);\r\n    elseif id == self.ID_NotebookCloseButton then\r\n        --event.Check((m_notebook_style & wxAUI_NB_CLOSE_BUTTON) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_BUTTON) ~= 0);\r\n    elseif id == self.ID_NotebookCloseButtonAll then\r\n        --event.Check((m_notebook_style & wxAUI_NB_CLOSE_ON_ALL_TABS) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_ON_ALL_TABS) ~= 0);\r\n    elseif id == self.ID_NotebookCloseButtonActive then\r\n        --event.Check((m_notebook_style & wxAUI_NB_CLOSE_ON_ACTIVE_TAB) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_ON_ACTIVE_TAB) ~= 0);\r\n    elseif id == self.ID_NotebookAllowTabSplit then\r\n        --event.Check((m_notebook_style & wxAUI_NB_TAB_SPLIT) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_TAB_SPLIT) ~= 0);\r\n    elseif id == self.ID_NotebookAllowTabMove then\r\n        --event.Check((m_notebook_style & wxAUI_NB_TAB_MOVE) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_TAB_MOVE) ~= 0);\r\n    elseif id == self.ID_NotebookAllowTabExternalMove then\r\n        --event.Check((m_notebook_style & wxAUI_NB_TAB_EXTERNAL_MOVE) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_TAB_EXTERNAL_MOVE) ~= 0);\r\n    elseif id == self.ID_NotebookScrollButtons then\r\n        --event.Check((m_notebook_style & wxAUI_NB_SCROLL_BUTTONS) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_SCROLL_BUTTONS) ~= 0);\r\n    elseif id == self.ID_NotebookWindowList then\r\n        --event.Check((m_notebook_style & wxAUI_NB_WINDOWLIST_BUTTON) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_WINDOWLIST_BUTTON) ~= 0);\r\n    elseif id == self.ID_NotebookTabFixedWidth then\r\n        --event.Check((m_notebook_style & wxAUI_NB_TAB_FIXED_WIDTH) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_TAB_FIXED_WIDTH) ~= 0);\r\n    elseif id == self.ID_NotebookArtGloss then\r\n        --event.Check(m_notebook_style == 0);\r\n        event:Check(self.m_notebook_style == 0);\r\n    elseif id == self.ID_NotebookArtSimple then\r\n        --event.Check(m_notebook_style == 1);\r\n        event:Check(self.m_notebook_style == 1);\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 569,
    "text": "if id == self.ID_NoGradient then\r\n        --event.Check(m_mgr.GetArtProvider()->GetMetric(wxAUI_DOCKART_GRADIENT_TYPE) == wxAUI_GRADIENT_NONE);\r\n        event:Check(self.m_mgr:GetArtProvider():GetMetric(wxaui.wxAUI_DOCKART_GRADIENT_TYPE) == wxaui.wxAUI_GRADIENT_NONE);\r\n    elseif id == self.ID_VerticalGradient then\r\n        --event.Check(m_mgr.GetArtProvider()->GetMetric(wxAUI_DOCKART_GRADIENT_TYPE) == wxAUI_GRADIENT_VERTICAL);\r\n        event:Check(self.m_mgr:GetArtProvider():GetMetric(wxaui.wxAUI_DOCKART_GRADIENT_TYPE) == wxaui.wxAUI_GRADIENT_VERTICAL);\r\n    elseif id == self.ID_HorizontalGradient then\r\n        --event.Check(m_mgr.GetArtProvider()->GetMetric(wxAUI_DOCKART_GRADIENT_TYPE) == wxAUI_GRADIENT_HORIZONTAL);\r\n        event:Check(self.m_mgr:GetArtProvider():GetMetric(wxaui.wxAUI_DOCKART_GRADIENT_TYPE) == wxaui.wxAUI_GRADIENT_HORIZONTAL);\r\n    elseif id == self.ID_AllowFloating then\r\n        --event.Check((flags & wxAUI_MGR_ALLOW_FLOATING) != 0);\r\n        event:Check(bit.band(flags, wxaui.wxAUI_MGR_ALLOW_FLOATING) ~= 0);\r\n    elseif id == self.ID_TransparentDrag then\r\n        --event.Check((flags & wxAUI_MGR_TRANSPARENT_DRAG) != 0);\r\n        event:Check(bit.band(flags, wxaui.wxAUI_MGR_TRANSPARENT_DRAG) ~= 0);\r\n    elseif id == self.ID_TransparentHint then\r\n        --event.Check((flags & wxAUI_MGR_TRANSPARENT_HINT) != 0);\r\n        event:Check(bit.band(flags, wxaui.wxAUI_MGR_TRANSPARENT_HINT) ~= 0);\r\n    elseif id == self.ID_VenetianBlindsHint then\r\n        --event.Check((flags & wxAUI_MGR_VENETIAN_BLINDS_HINT) != 0);\r\n        event:Check(bit.band(flags, wxaui.wxAUI_MGR_VENETIAN_BLINDS_HINT) ~= 0);\r\n    elseif id == self.ID_RectangleHint then\r\n        --event.Check((flags & wxAUI_MGR_RECTANGLE_HINT) != 0);\r\n        event:Check(bit.band(flags, wxaui.wxAUI_MGR_RECTANGLE_HINT) ~= 0);\r\n    elseif id == self.ID_NoHint then\r\n        --event.Check(((wxAUI_MGR_TRANSPARENT_HINT |\r\n        --              wxAUI_MGR_VENETIAN_BLINDS_HINT |\r\n        --              wxAUI_MGR_RECTANGLE_HINT) & flags) == 0);\r\n        event:Check(bit.band((wxaui.wxAUI_MGR_TRANSPARENT_HINT +\r\n                          wxaui.wxAUI_MGR_VENETIAN_BLINDS_HINT +\r\n                          wxaui.wxAUI_MGR_RECTANGLE_HINT), flags) == 0);\r\n    elseif id == self.ID_HintFade then\r\n        --event.Check((flags & wxAUI_MGR_HINT_FADE) != 0);\r\n        event:Check(bit.band(flags, wxaui.wxAUI_MGR_HINT_FADE) ~= 0);\r\n    elseif id == self.ID_NoVenetianFade then\r\n        --event.Check((flags & wxAUI_MGR_NO_VENETIAN_BLINDS_FADE) != 0);\r\n        event:Check(bit.band(flags, wxaui.wxAUI_MGR_NO_VENETIAN_BLINDS_FADE) ~= 0);\r\n\r\n    elseif id == self.ID_NotebookNoCloseButton then\r\n        --event.Check((m_notebook_style & (wxAUI_NB_CLOSE_BUTTON|wxAUI_NB_CLOSE_ON_ALL_TABS|wxAUI_NB_CLOSE_ON_ACTIVE_TAB)) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, (wxaui.wxAUI_NB_CLOSE_BUTTON + wxaui.wxAUI_NB_CLOSE_ON_ALL_TABS + wxaui.wxAUI_NB_CLOSE_ON_ACTIVE_TAB)) ~= 0);\r\n    elseif id == self.ID_NotebookCloseButton then\r\n        --event.Check((m_notebook_style & wxAUI_NB_CLOSE_BUTTON) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_BUTTON) ~= 0);\r\n    elseif id == self.ID_NotebookCloseButtonAll then\r\n        --event.Check((m_notebook_style & wxAUI_NB_CLOSE_ON_ALL_TABS) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_ON_ALL_TABS) ~= 0);\r\n    elseif id == self.ID_NotebookCloseButtonActive then\r\n        --event.Check((m_notebook_style & wxAUI_NB_CLOSE_ON_ACTIVE_TAB) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_ON_ACTIVE_TAB) ~= 0);\r\n    elseif id == self.ID_NotebookAllowTabSplit then\r\n        --event.Check((m_notebook_style & wxAUI_NB_TAB_SPLIT) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_TAB_SPLIT) ~= 0);\r\n    elseif id == self.ID_NotebookAllowTabMove then\r\n        --event.Check((m_notebook_style & wxAUI_NB_TAB_MOVE) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_TAB_MOVE) ~= 0);\r\n    elseif id == self.ID_NotebookAllowTabExternalMove then\r\n        --event.Check((m_notebook_style & wxAUI_NB_TAB_EXTERNAL_MOVE) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_TAB_EXTERNAL_MOVE) ~= 0);\r\n    elseif id == self.ID_NotebookScrollButtons then\r\n        --event.Check((m_notebook_style & wxAUI_NB_SCROLL_BUTTONS) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_SCROLL_BUTTONS) ~= 0);\r\n    elseif id == self.ID_NotebookWindowList then\r\n        --event.Check((m_notebook_style & wxAUI_NB_WINDOWLIST_BUTTON) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_WINDOWLIST_BUTTON) ~= 0);\r\n    elseif id == self.ID_NotebookTabFixedWidth then\r\n        --event.Check((m_notebook_style & wxAUI_NB_TAB_FIXED_WIDTH) != 0);\r\n        event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_TAB_FIXED_WIDTH) ~= 0);\r\n    elseif id == self.ID_NotebookArtGloss then\r\n        --event.Check(m_notebook_style == 0);\r\n        event:Check(self.m_notebook_style == 0);\r\n    elseif id == self.ID_NotebookArtSimple then\r\n        --event.Check(m_notebook_style == 1);\r\n        event:Check(self.m_notebook_style == 1);\r\n    end",
    "type": "statement:if"
  }, {
    "id": 570,
    "text": "event:Check(self.m_mgr:GetArtProvider():GetMetric(wxaui.wxAUI_DOCKART_GRADIENT_TYPE) == wxaui.wxAUI_GRADIENT_NONE)",
    "type": "statement:functioncall"
  }, {
    "id": 571,
    "text": "event:Check(self.m_mgr:GetArtProvider():GetMetric(wxaui.wxAUI_DOCKART_GRADIENT_TYPE) == wxaui.wxAUI_GRADIENT_VERTICAL)",
    "type": "statement:functioncall"
  }, {
    "id": 572,
    "text": "event:Check(self.m_mgr:GetArtProvider():GetMetric(wxaui.wxAUI_DOCKART_GRADIENT_TYPE) == wxaui.wxAUI_GRADIENT_HORIZONTAL)",
    "type": "statement:functioncall"
  }, {
    "id": 573,
    "text": "event:Check(bit.band(flags, wxaui.wxAUI_MGR_ALLOW_FLOATING) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 574,
    "text": "event:Check(bit.band(flags, wxaui.wxAUI_MGR_TRANSPARENT_DRAG) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 575,
    "text": "event:Check(bit.band(flags, wxaui.wxAUI_MGR_TRANSPARENT_HINT) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 576,
    "text": "event:Check(bit.band(flags, wxaui.wxAUI_MGR_VENETIAN_BLINDS_HINT) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 577,
    "text": "event:Check(bit.band(flags, wxaui.wxAUI_MGR_RECTANGLE_HINT) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 578,
    "text": "event:Check(bit.band((wxaui.wxAUI_MGR_TRANSPARENT_HINT +\r\n                          wxaui.wxAUI_MGR_VENETIAN_BLINDS_HINT +\r\n                          wxaui.wxAUI_MGR_RECTANGLE_HINT), flags) == 0)",
    "type": "statement:functioncall"
  }, {
    "id": 579,
    "text": "event:Check(bit.band(flags, wxaui.wxAUI_MGR_HINT_FADE) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 580,
    "text": "event:Check(bit.band(flags, wxaui.wxAUI_MGR_NO_VENETIAN_BLINDS_FADE) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 581,
    "text": "event:Check(bit.band(self.m_notebook_style, (wxaui.wxAUI_NB_CLOSE_BUTTON + wxaui.wxAUI_NB_CLOSE_ON_ALL_TABS + wxaui.wxAUI_NB_CLOSE_ON_ACTIVE_TAB)) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 582,
    "text": "event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_BUTTON) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 583,
    "text": "event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_ON_ALL_TABS) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 584,
    "text": "event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_CLOSE_ON_ACTIVE_TAB) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 585,
    "text": "event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_TAB_SPLIT) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 586,
    "text": "event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_TAB_MOVE) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 587,
    "text": "event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_TAB_EXTERNAL_MOVE) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 588,
    "text": "event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_SCROLL_BUTTONS) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 589,
    "text": "event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_WINDOWLIST_BUTTON) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 590,
    "text": "event:Check(bit.band(self.m_notebook_style, wxaui.wxAUI_NB_TAB_FIXED_WIDTH) ~= 0)",
    "type": "statement:functioncall"
  }, {
    "id": 591,
    "text": "event:Check(self.m_notebook_style == 0)",
    "type": "statement:functioncall"
  }, {
    "id": 592,
    "text": "event:Check(self.m_notebook_style == 1)",
    "type": "statement:functioncall"
  }, {
    "id": 593,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 594,
    "text": "function MyFrame:OnPaneClose(evt)\r\n    local this = self.this\r\n    ----[[hd.FIXME\r\n    if (evt:GetPane().name == wxT(\"test10\")) then\r\n        local res = wx.wxMessageBox(wxT(\"Are you sure you want to close/hide this pane?\"),\r\n                               wxT(\"wxAUI\"),\r\n                               wx.wxYES_NO,\r\n                               this);\r\n        if (res ~= wx.wxYES) then\r\n            evt:Veto();\r\n        end\r\n    end\r\n    --]]\r\nend",
    "type": "function"
  }, {
    "id": 595,
    "text": "if (evt:GetPane().name == wxT(\"test10\")) then\r\n        local res = wx.wxMessageBox(wxT(\"Are you sure you want to close/hide this pane?\"),\r\n                               wxT(\"wxAUI\"),\r\n                               wx.wxYES_NO,\r\n                               this);\r\n        if (res ~= wx.wxYES) then\r\n            evt:Veto();\r\n        end\r\n    end",
    "type": "statement:if"
  }, {
    "id": 596,
    "text": "local res = wx.wxMessageBox(wxT(\"Are you sure you want to close/hide this pane?\"),\r\n                               wxT(\"wxAUI\"),\r\n                               wx.wxYES_NO,\r\n                               this)",
    "type": "statement:localassign"
  }, {
    "id": 597,
    "text": "if (res ~= wx.wxYES) then\r\n            evt:Veto();\r\n        end",
    "type": "statement:if"
  }, {
    "id": 598,
    "text": "evt:Veto()",
    "type": "statement:functioncall"
  }, {
    "id": 599,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 600,
    "text": "function MyFrame:OnCreatePerspective(event)\r\n    local this = self.this\r\n    local dlg = wx.wxTextEntryDialog(this, wxT(\"Enter a name for the new perspective:\"),\r\n                          wxT(\"wxAUI Test\"));\r\n\r\n    dlg:SetValue(string.format(wxT(\"Perspective %u\"), (self.m_perspectives:GetCount() + 1)));\r\n    if (dlg:ShowModal() ~= wx.wxID_OK) then\r\n        return;\r\n    end\r\n\r\n    if (self.m_perspectives:GetCount() == 0) then\r\n        self.m_perspectives_menu:AppendSeparator();\r\n    end\r\n\r\n    self.m_perspectives_menu:Append(self.ID_FirstPerspective + self.m_perspectives:GetCount(), dlg:GetValue());\r\n    self.m_perspectives:Add(self.m_mgr:SavePerspective());\r\nend",
    "type": "function"
  }, {
    "id": 601,
    "text": "local dlg = wx.wxTextEntryDialog(this, wxT(\"Enter a name for the new perspective:\"),\r\n                          wxT(\"wxAUI Test\"))",
    "type": "statement:localassign"
  }, {
    "id": 602,
    "text": "dlg:SetValue(string.format(wxT(\"Perspective %u\"), (self.m_perspectives:GetCount() + 1)))",
    "type": "statement:functioncall"
  }, {
    "id": 603,
    "text": "if (dlg:ShowModal() ~= wx.wxID_OK) then\r\n        return;\r\n    end",
    "type": "statement:if"
  }, {
    "id": 604,
    "text": "if (self.m_perspectives:GetCount() == 0) then\r\n        self.m_perspectives_menu:AppendSeparator();\r\n    end",
    "type": "statement:if"
  }, {
    "id": 605,
    "text": "self.m_perspectives_menu:Append(self.ID_FirstPerspective + self.m_perspectives:GetCount(), dlg:GetValue())",
    "type": "statement:functioncall"
  }, {
    "id": 606,
    "text": "self.m_perspectives:Add(self.m_mgr:SavePerspective())",
    "type": "statement:functioncall"
  }, {
    "id": 607,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 608,
    "text": "function MyFrame:OnCopyPerspectiveCode(evt)\r\n    local s = self.m_mgr:SavePerspective();\r\n\r\n--[[\r\n#if wxUSE_CLIPBOARD\r\n    if (wx.wxTheClipboard:Open()) then\r\n        wx.wxTheClipboard:SetData(wx.wxTextDataObject(s));\r\n        wx.wxTheClipboard:Close();\r\n    end\r\n--#endif\r\n--]]\r\n    local clipBoard = wx.wxClipboard.Get()\r\n    if clipBoard and clipBoard:Open() then\r\n        clipBoard:SetData(wx.wxTextDataObject(s))\r\n        clipBoard:Close()\r\n    end\r\n\r\nend",
    "type": "function"
  }, {
    "id": 609,
    "text": "local s = self.m_mgr:SavePerspective()",
    "type": "statement:localassign"
  }, {
    "id": 610,
    "text": "local clipBoard = wx.wxClipboard.Get()",
    "type": "statement:localassign"
  }, {
    "id": 611,
    "text": "if clipBoard and clipBoard:Open() then\r\n        clipBoard:SetData(wx.wxTextDataObject(s))\r\n        clipBoard:Close()\r\n    end",
    "type": "statement:if"
  }, {
    "id": 612,
    "text": "clipBoard:SetData(wx.wxTextDataObject(s))",
    "type": "statement:functioncall"
  }, {
    "id": 613,
    "text": "clipBoard:Close()",
    "type": "statement:functioncall"
  }, {
    "id": 614,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 615,
    "text": "function MyFrame:OnRestorePerspective(evt)\r\n    self.m_mgr:LoadPerspective(self.m_perspectives:Item(evt:GetId() - self.ID_FirstPerspective));\r\nend",
    "type": "function"
  }, {
    "id": 616,
    "text": "self.m_mgr:LoadPerspective(self.m_perspectives:Item(evt:GetId() - self.ID_FirstPerspective))",
    "type": "statement:functioncall"
  }, {
    "id": 617,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 618,
    "text": "function MyFrame:OnNotebookPageClose(evt)\r\n    local this = self.this\r\n    local ctrl = evt:GetEventObject():DynamicCast(\"wxAuiNotebook\");\r\n    if (ctrl:GetPage(evt:GetSelection()):IsKindOf(wx.wxClassInfo.FindClass(\"wxHtmlWindow\"))) then\r\n        local res = wx.wxMessageBox(wxT(\"Are you sure you want to close/hide this notebook page?\"),\r\n                       wxT(\"wxAUI\"),\r\n                       wx.wxYES_NO,\r\n                       this);\r\n        if (res ~= wx.wxYES) then\r\n            evt:Veto();\r\n        end\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 619,
    "text": "local ctrl = evt:GetEventObject():DynamicCast(\"wxAuiNotebook\")",
    "type": "statement:localassign"
  }, {
    "id": 620,
    "text": "if (ctrl:GetPage(evt:GetSelection()):IsKindOf(wx.wxClassInfo.FindClass(\"wxHtmlWindow\"))) then\r\n        local res = wx.wxMessageBox(wxT(\"Are you sure you want to close/hide this notebook page?\"),\r\n                       wxT(\"wxAUI\"),\r\n                       wx.wxYES_NO,\r\n                       this);\r\n        if (res ~= wx.wxYES) then\r\n            evt:Veto();\r\n        end\r\n    end",
    "type": "statement:if"
  }, {
    "id": 621,
    "text": "local res = wx.wxMessageBox(wxT(\"Are you sure you want to close/hide this notebook page?\"),\r\n                       wxT(\"wxAUI\"),\r\n                       wx.wxYES_NO,\r\n                       this)",
    "type": "statement:localassign"
  }, {
    "id": 622,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 623,
    "text": "function MyFrame:OnAllowNotebookDnD(evt)\r\n    --// for the purpose of this test application, explicitly\r\n    --// allow all noteboko drag and drop events\r\n    evt:Allow();\r\nend",
    "type": "function"
  }, {
    "id": 624,
    "text": "evt:Allow()",
    "type": "statement:functioncall"
  }, {
    "id": 625,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 626,
    "text": "function MyFrame:GetStartPosition()\r\n    x = x+20;\r\n    local pt = self.this:ClientToScreen(wx.wxPoint(0,0));\r\n    return wx.wxPoint(pt:GetX() + x, pt:GetY() + x);\r\nend",
    "type": "function"
  }, {
    "id": 627,
    "text": "x = x+20",
    "type": "statement:assign"
  }, {
    "id": 628,
    "text": "local pt = self.this:ClientToScreen(wx.wxPoint(0,0))",
    "type": "statement:localassign"
  }, {
    "id": 629,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 630,
    "text": "function MyFrame:OnCreateTree(event)\r\n    self.m_mgr:AddPane(self:CreateTreeCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Caption(wxT(\"Tree Control\")):\r\n                  Float():FloatingPosition(self:GetStartPosition()):\r\n                  FloatingSize(wx.wxSize(150,300)));\r\n    self.m_mgr:Update();\r\nend",
    "type": "function"
  }, {
    "id": 631,
    "text": "self.m_mgr:AddPane(self:CreateTreeCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Caption(wxT(\"Tree Control\")):\r\n                  Float():FloatingPosition(self:GetStartPosition()):\r\n                  FloatingSize(wx.wxSize(150,300)))",
    "type": "statement:functioncall"
  }, {
    "id": 632,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 633,
    "text": "function MyFrame:OnCreateGrid(event)\r\n    self.m_mgr:AddPane(self:CreateGrid(), wxaui.wxAuiPaneInfo():\r\n                  Caption(wxT(\"Grid\")):\r\n                  Float():FloatingPosition(self:GetStartPosition()):\r\n                  FloatingSize(wx.wxSize(300,200)));\r\n    self.m_mgr:Update();\r\nend",
    "type": "function"
  }, {
    "id": 634,
    "text": "self.m_mgr:AddPane(self:CreateGrid(), wxaui.wxAuiPaneInfo():\r\n                  Caption(wxT(\"Grid\")):\r\n                  Float():FloatingPosition(self:GetStartPosition()):\r\n                  FloatingSize(wx.wxSize(300,200)))",
    "type": "statement:functioncall"
  }, {
    "id": 635,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 636,
    "text": "function MyFrame:OnCreateHTML(event)\r\n    self.m_mgr:AddPane(self:CreateHTMLCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Caption(wxT(\"HTML Control\")):\r\n                  Float():FloatingPosition(self:GetStartPosition()):\r\n                  FloatingSize(wx.wxSize(300,200)));\r\n    self.m_mgr:Update();\r\nend",
    "type": "function"
  }, {
    "id": 637,
    "text": "self.m_mgr:AddPane(self:CreateHTMLCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Caption(wxT(\"HTML Control\")):\r\n                  Float():FloatingPosition(self:GetStartPosition()):\r\n                  FloatingSize(wx.wxSize(300,200)))",
    "type": "statement:functioncall"
  }, {
    "id": 638,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 639,
    "text": "function MyFrame:OnCreateNotebook(event)\r\n    self.m_mgr:AddPane(self:CreateNotebook(), wxaui.wxAuiPaneInfo():\r\n                  Caption(wxT(\"Notebook\")):\r\n                  Float():FloatingPosition(self:GetStartPosition()):\r\n                  --//FloatingSize(300,200):\r\n                  CloseButton(true):MaximizeButton(true));\r\n    self.m_mgr:Update();\r\nend",
    "type": "function"
  }, {
    "id": 640,
    "text": "self.m_mgr:AddPane(self:CreateNotebook(), wxaui.wxAuiPaneInfo():\r\n                  Caption(wxT(\"Notebook\")):\r\n                  Float():FloatingPosition(self:GetStartPosition()):\r\n                  --//FloatingSize(300,200):\r\n                  CloseButton(true):MaximizeButton(true))",
    "type": "statement:functioncall"
  }, {
    "id": 641,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 642,
    "text": "function MyFrame:OnCreateText(event)\r\n    self.m_mgr:AddPane(self:CreateTextCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Caption(wxT(\"Text Control\")):\r\n                  Float():FloatingPosition(self:GetStartPosition()));\r\n    self.m_mgr:Update();\r\nend",
    "type": "function"
  }, {
    "id": 643,
    "text": "self.m_mgr:AddPane(self:CreateTextCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Caption(wxT(\"Text Control\")):\r\n                  Float():FloatingPosition(self:GetStartPosition()))",
    "type": "statement:functioncall"
  }, {
    "id": 644,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 645,
    "text": "function MyFrame:OnCreateSizeReport(event)\r\n    self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Caption(wxT(\"Client Size Reporter\")):\r\n                  Float():FloatingPosition(self:GetStartPosition()):\r\n                  CloseButton(true):MaximizeButton(true));\r\n    self.m_mgr:Update();\r\nend",
    "type": "function"
  }, {
    "id": 646,
    "text": "self.m_mgr:AddPane(self:CreateSizeReportCtrl(), wxaui.wxAuiPaneInfo():\r\n                  Caption(wxT(\"Client Size Reporter\")):\r\n                  Float():FloatingPosition(self:GetStartPosition()):\r\n                  CloseButton(true):MaximizeButton(true))",
    "type": "statement:functioncall"
  }, {
    "id": 647,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 648,
    "text": "function MyFrame:OnChangeContentPane(event)\r\n    self.m_mgr:GetPane(wxT(\"grid_content\")):Show(event:GetId() == self.ID_GridContent);\r\n    self.m_mgr:GetPane(wxT(\"text_content\")):Show(event:GetId() == self.ID_TextContent);\r\n    self.m_mgr:GetPane(wxT(\"tree_content\")):Show(event:GetId() == self.ID_TreeContent);\r\n    self.m_mgr:GetPane(wxT(\"sizereport_content\")):Show(event:GetId() == self.ID_SizeReportContent);\r\n    self.m_mgr:GetPane(wxT(\"html_content\")):Show(event:GetId() == self.ID_HTMLContent);\r\n    self.m_mgr:GetPane(wxT(\"notebook_content\")):Show(event:GetId() == self.ID_NotebookContent);\r\n    self.m_mgr:Update();\r\nend",
    "type": "function"
  }, {
    "id": 649,
    "text": "self.m_mgr:GetPane(wxT(\"grid_content\")):Show(event:GetId() == self.ID_GridContent)",
    "type": "statement:functioncall"
  }, {
    "id": 650,
    "text": "self.m_mgr:GetPane(wxT(\"text_content\")):Show(event:GetId() == self.ID_TextContent)",
    "type": "statement:functioncall"
  }, {
    "id": 651,
    "text": "self.m_mgr:GetPane(wxT(\"tree_content\")):Show(event:GetId() == self.ID_TreeContent)",
    "type": "statement:functioncall"
  }, {
    "id": 652,
    "text": "self.m_mgr:GetPane(wxT(\"sizereport_content\")):Show(event:GetId() == self.ID_SizeReportContent)",
    "type": "statement:functioncall"
  }, {
    "id": 653,
    "text": "self.m_mgr:GetPane(wxT(\"html_content\")):Show(event:GetId() == self.ID_HTMLContent)",
    "type": "statement:functioncall"
  }, {
    "id": 654,
    "text": "self.m_mgr:GetPane(wxT(\"notebook_content\")):Show(event:GetId() == self.ID_NotebookContent)",
    "type": "statement:functioncall"
  }, {
    "id": 655,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 656,
    "text": "function MyFrame:OnTabAlignment(evt)\r\n    local i, count;\r\n    local all_panes = self.m_mgr:GetAllPanes();\r\n    count = all_panes:GetCount()\r\n    for i = 0, count-1 do\r\n        local pane = all_panes:Item(i);\r\n        if (pane.window:IsKindOf(wx.wxClassInfo.FindClass(\"wxAuiNotebook\"))) then\r\n            local nb = pane.window:DynamicCast(\"wxAuiNotebook\");\r\n\r\n            if (evt:GetId() == self.ID_NotebookAlignTop) then\r\n                --nb->SetWindowStyleFlag(nb->GetWindowStyleFlag()^wxAUI_NB_BOTTOM|wxAUI_NB_TOP);\r\n                nb:SetWindowStyleFlag(bit.bxor(nb:GetWindowStyleFlag(), wxaui.wxAUI_NB_BOTTOM+wxaui.wxAUI_NB_TOP));\r\n            elseif (evt:GetId() == self.ID_NotebookAlignBottom) then\r\n                --nb->SetWindowStyleFlag(nb->GetWindowStyleFlag()^wxAUI_NB_TOP|wxAUI_NB_BOTTOM);\r\n               nb:SetWindowStyleFlag(bit.bxor(nb:GetWindowStyleFlag(), wxaui.wxAUI_NB_TOP+wxaui.wxAUI_NB_BOTTOM));\r\n            end\r\n            nb:Refresh();\r\n        end\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 657,
    "text": "for i = 0, count-1 do\r\n        local pane = all_panes:Item(i);\r\n        if (pane.window:IsKindOf(wx.wxClassInfo.FindClass(\"wxAuiNotebook\"))) then\r\n            local nb = pane.window:DynamicCast(\"wxAuiNotebook\");\r\n\r\n            if (evt:GetId() == self.ID_NotebookAlignTop) then\r\n                --nb->SetWindowStyleFlag(nb->GetWindowStyleFlag()^wxAUI_NB_BOTTOM|wxAUI_NB_TOP);\r\n                nb:SetWindowStyleFlag(bit.bxor(nb:GetWindowStyleFlag(), wxaui.wxAUI_NB_BOTTOM+wxaui.wxAUI_NB_TOP));\r\n            elseif (evt:GetId() == self.ID_NotebookAlignBottom) then\r\n                --nb->SetWindowStyleFlag(nb->GetWindowStyleFlag()^wxAUI_NB_TOP|wxAUI_NB_BOTTOM);\r\n               nb:SetWindowStyleFlag(bit.bxor(nb:GetWindowStyleFlag(), wxaui.wxAUI_NB_TOP+wxaui.wxAUI_NB_BOTTOM));\r\n            end\r\n            nb:Refresh();\r\n        end\r\n    end",
    "type": "statement:numericfor"
  }, {
    "id": 658,
    "text": "if (pane.window:IsKindOf(wx.wxClassInfo.FindClass(\"wxAuiNotebook\"))) then\r\n            local nb = pane.window:DynamicCast(\"wxAuiNotebook\");\r\n\r\n            if (evt:GetId() == self.ID_NotebookAlignTop) then\r\n                --nb->SetWindowStyleFlag(nb->GetWindowStyleFlag()^wxAUI_NB_BOTTOM|wxAUI_NB_TOP);\r\n                nb:SetWindowStyleFlag(bit.bxor(nb:GetWindowStyleFlag(), wxaui.wxAUI_NB_BOTTOM+wxaui.wxAUI_NB_TOP));\r\n            elseif (evt:GetId() == self.ID_NotebookAlignBottom) then\r\n                --nb->SetWindowStyleFlag(nb->GetWindowStyleFlag()^wxAUI_NB_TOP|wxAUI_NB_BOTTOM);\r\n               nb:SetWindowStyleFlag(bit.bxor(nb:GetWindowStyleFlag(), wxaui.wxAUI_NB_TOP+wxaui.wxAUI_NB_BOTTOM));\r\n            end\r\n            nb:Refresh();\r\n        end",
    "type": "statement:if"
  }, {
    "id": 659,
    "text": "if (evt:GetId() == self.ID_NotebookAlignTop) then\r\n                --nb->SetWindowStyleFlag(nb->GetWindowStyleFlag()^wxAUI_NB_BOTTOM|wxAUI_NB_TOP);\r\n                nb:SetWindowStyleFlag(bit.bxor(nb:GetWindowStyleFlag(), wxaui.wxAUI_NB_BOTTOM+wxaui.wxAUI_NB_TOP));\r\n            elseif (evt:GetId() == self.ID_NotebookAlignBottom) then\r\n                --nb->SetWindowStyleFlag(nb->GetWindowStyleFlag()^wxAUI_NB_TOP|wxAUI_NB_BOTTOM);\r\n               nb:SetWindowStyleFlag(bit.bxor(nb:GetWindowStyleFlag(), wxaui.wxAUI_NB_TOP+wxaui.wxAUI_NB_BOTTOM));\r\n            end",
    "type": "statement:if"
  }, {
    "id": 660,
    "text": "nb:SetWindowStyleFlag(bit.bxor(nb:GetWindowStyleFlag(), wxaui.wxAUI_NB_BOTTOM+wxaui.wxAUI_NB_TOP))",
    "type": "statement:functioncall"
  }, {
    "id": 661,
    "text": "nb:SetWindowStyleFlag(bit.bxor(nb:GetWindowStyleFlag(), wxaui.wxAUI_NB_TOP+wxaui.wxAUI_NB_BOTTOM))",
    "type": "statement:functioncall"
  }, {
    "id": 662,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 663,
    "text": "function MyFrame:OnExit(event)\r\n    local this = self.this\r\n    self:dtor() --hd.\r\n    this:Close(true);\r\nend",
    "type": "function"
  }, {
    "id": 664,
    "text": "self:dtor()",
    "type": "statement:functioncall"
  }, {
    "id": 665,
    "text": "this:Close(true)",
    "type": "statement:functioncall"
  }, {
    "id": 666,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 667,
    "text": "function MyFrame:OnAbout(event)\r\n    local this = self.this\r\n    wx.wxMessageBox(_(\"wxAUI Demo\\nAn advanced window management library for wxWidgets\\n(c) Copyright 2005-2006, Kirix Corporation\"), _(\"About wxAUI Demo\"), wx.wxOK, this);\r\nend",
    "type": "function"
  }, {
    "id": 668,
    "text": "wx.wxMessageBox(_(\"wxAUI Demo\\nAn advanced window management library for wxWidgets\\n(c) Copyright 2005-2006, Kirix Corporation\"), _(\"About wxAUI Demo\"), wx.wxOK, this)",
    "type": "statement:functioncall"
  }, {
    "id": 669,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 670,
    "text": "function MyFrame:CreateTextCtrl(ctrl_text)\r\n    local this = self.this\r\n\r\n    local text=\"\";\r\n    if (ctrl_text and ctrl_text ~= \"\") then\r\n        text = ctrl_text;\r\n    else\r\n        text = string.format(wxT(\"This is text box %d\"), n+1); n=n+1\r\n    end\r\n\r\n    return wx.wxTextCtrl(this,wx.wxID_ANY, text,\r\n                          wx.wxPoint(0,0), wx.wxSize(150,90),\r\n                          wx.wxNO_BORDER + wx.wxTE_MULTILINE);\r\nend",
    "type": "function"
  }, {
    "id": 671,
    "text": "local text=\"\"",
    "type": "statement:localassign"
  }, {
    "id": 672,
    "text": "if (ctrl_text and ctrl_text ~= \"\") then\r\n        text = ctrl_text;\r\n    else\r\n        text = string.format(wxT(\"This is text box %d\"), n+1); n=n+1\r\n    end",
    "type": "statement:if"
  }, {
    "id": 673,
    "text": "text = ctrl_text",
    "type": "statement:assign"
  }, {
    "id": 674,
    "text": "text = string.format(wxT(\"This is text box %d\"), n+1)",
    "type": "statement:assign"
  }, {
    "id": 675,
    "text": "n=n+1",
    "type": "statement:assign"
  }, {
    "id": 676,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 677,
    "text": "function MyFrame:CreateGrid()\r\n    local this = self.this\r\n    local grid = wx.wxGrid(this, wx.wxID_ANY,\r\n                              wx.wxPoint(0,0),\r\n                              wx.wxSize(150,250),\r\n                              wx.wxNO_BORDER + wx.wxWANTS_CHARS);\r\n    grid:CreateGrid(50, 20);\r\n    return grid;\r\nend",
    "type": "function"
  }, {
    "id": 678,
    "text": "local grid = wx.wxGrid(this, wx.wxID_ANY,\r\n                              wx.wxPoint(0,0),\r\n                              wx.wxSize(150,250),\r\n                              wx.wxNO_BORDER + wx.wxWANTS_CHARS)",
    "type": "statement:localassign"
  }, {
    "id": 679,
    "text": "grid:CreateGrid(50, 20)",
    "type": "statement:functioncall"
  }, {
    "id": 680,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 681,
    "text": "function MyFrame:CreateTreeCtrl()\r\n    local this = self.this\r\n    local tree = wx.wxTreeCtrl(this, wx.wxID_ANY,\r\n                                      wx.wxPoint(0,0), wx.wxSize(160,250),\r\n                                      wx.wxTR_DEFAULT_STYLE + wx.wxNO_BORDER);\r\n\r\n    local imglist = wx.wxImageList(16, 16, true, 2);\r\n    imglist:Add(wx.wxArtProvider.GetBitmap(wx.wxART_FOLDER, wx.wxART_OTHER, wx.wxSize(16,16)));\r\n    imglist:Add(wx.wxArtProvider.GetBitmap(wx.wxART_NORMAL_FILE, wx.wxART_OTHER, wx.wxSize(16,16)));\r\n    tree:AssignImageList(imglist);\r\n\r\n    local root = tree:AddRoot(wxT(\"wxAUI Project\"), 0);\r\n    local items = {} --local items = wx.wxArrayTreeItemIds();\r\n\r\n    items[#items+1] = tree:AppendItem(root, wxT(\"Item 1\"), 0); --items:Add(tree:AppendItem(root, wxT(\"Item 1\"), 0));\r\n    items[#items+1] = tree:AppendItem(root, wxT(\"Item 2\"), 0); --items:Add(tree:AppendItem(root, wxT(\"Item 2\"), 0));\r\n    items[#items+1] = tree:AppendItem(root, wxT(\"Item 3\"), 0); --items:Add(tree:AppendItem(root, wxT(\"Item 3\"), 0));\r\n    items[#items+1] = tree:AppendItem(root, wxT(\"Item 4\"), 0); --items:Add(tree:AppendItem(root, wxT(\"Item 4\"), 0));\r\n    items[#items+1] = tree:AppendItem(root, wxT(\"Item 5\"), 0); --items:Add(tree:AppendItem(root, wxT(\"Item 5\"), 0));\r\n\r\n    local i, count;\r\n    count = #items --items:Count()\r\n    for i = 1, count do --for i = 0, count-1 do\r\n        local id = items[i]; --local id = items:Item(i);\r\n        tree:AppendItem(id, wxT(\"Subitem 1\"), 1);\r\n        tree:AppendItem(id, wxT(\"Subitem 2\"), 1);\r\n        tree:AppendItem(id, wxT(\"Subitem 3\"), 1);\r\n        tree:AppendItem(id, wxT(\"Subitem 4\"), 1);\r\n        tree:AppendItem(id, wxT(\"Subitem 5\"), 1);\r\n    end\r\n\r\n    tree:Expand(root);\r\n\r\n    return tree;\r\nend",
    "type": "function"
  }, {
    "id": 682,
    "text": "local tree = wx.wxTreeCtrl(this, wx.wxID_ANY,\r\n                                      wx.wxPoint(0,0), wx.wxSize(160,250),\r\n                                      wx.wxTR_DEFAULT_STYLE + wx.wxNO_BORDER)",
    "type": "statement:localassign"
  }, {
    "id": 683,
    "text": "local imglist = wx.wxImageList(16, 16, true, 2)",
    "type": "statement:localassign"
  }, {
    "id": 684,
    "text": "imglist:Add(wx.wxArtProvider.GetBitmap(wx.wxART_FOLDER, wx.wxART_OTHER, wx.wxSize(16,16)))",
    "type": "statement:functioncall"
  }, {
    "id": 685,
    "text": "imglist:Add(wx.wxArtProvider.GetBitmap(wx.wxART_NORMAL_FILE, wx.wxART_OTHER, wx.wxSize(16,16)))",
    "type": "statement:functioncall"
  }, {
    "id": 686,
    "text": "tree:AssignImageList(imglist)",
    "type": "statement:functioncall"
  }, {
    "id": 687,
    "text": "local root = tree:AddRoot(wxT(\"wxAUI Project\"), 0)",
    "type": "statement:localassign"
  }, {
    "id": 688,
    "text": "local items = {}",
    "type": "statement:localassign"
  }, {
    "id": 689,
    "text": "items[#items+1] = tree:AppendItem(root, wxT(\"Item 1\"), 0)",
    "type": "statement:assign"
  }, {
    "id": 690,
    "text": "items[#items+1] = tree:AppendItem(root, wxT(\"Item 2\"), 0)",
    "type": "statement:assign"
  }, {
    "id": 691,
    "text": "items[#items+1] = tree:AppendItem(root, wxT(\"Item 3\"), 0)",
    "type": "statement:assign"
  }, {
    "id": 692,
    "text": "items[#items+1] = tree:AppendItem(root, wxT(\"Item 4\"), 0)",
    "type": "statement:assign"
  }, {
    "id": 693,
    "text": "items[#items+1] = tree:AppendItem(root, wxT(\"Item 5\"), 0)",
    "type": "statement:assign"
  }, {
    "id": 694,
    "text": "count = #items",
    "type": "statement:assign"
  }, {
    "id": 695,
    "text": "for i = 1, count do --for i = 0, count-1 do\r\n        local id = items[i]; --local id = items:Item(i);\r\n        tree:AppendItem(id, wxT(\"Subitem 1\"), 1);\r\n        tree:AppendItem(id, wxT(\"Subitem 2\"), 1);\r\n        tree:AppendItem(id, wxT(\"Subitem 3\"), 1);\r\n        tree:AppendItem(id, wxT(\"Subitem 4\"), 1);\r\n        tree:AppendItem(id, wxT(\"Subitem 5\"), 1);\r\n    end",
    "type": "statement:numericfor"
  }, {
    "id": 696,
    "text": "local id = items[i]",
    "type": "statement:localassign"
  }, {
    "id": 697,
    "text": "tree:AppendItem(id, wxT(\"Subitem 1\"), 1)",
    "type": "statement:functioncall"
  }, {
    "id": 698,
    "text": "tree:AppendItem(id, wxT(\"Subitem 2\"), 1)",
    "type": "statement:functioncall"
  }, {
    "id": 699,
    "text": "tree:AppendItem(id, wxT(\"Subitem 3\"), 1)",
    "type": "statement:functioncall"
  }, {
    "id": 700,
    "text": "tree:AppendItem(id, wxT(\"Subitem 4\"), 1)",
    "type": "statement:functioncall"
  }, {
    "id": 701,
    "text": "tree:AppendItem(id, wxT(\"Subitem 5\"), 1)",
    "type": "statement:functioncall"
  }, {
    "id": 702,
    "text": "tree:Expand(root)",
    "type": "statement:functioncall"
  }, {
    "id": 703,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 704,
    "text": "function MyFrame:CreateSizeReportCtrl(width, height)\r\n    local this = self.this\r\n    width = width or 0\r\n    height = height or 0\r\n    --local ctrl = wxSizeReportCtrl:create(this, wx.wxID_ANY,\r\n    --                               wx.wxDefaultPosition,\r\n    --                               wx.wxSize(width, height), self.m_mgr);\r\n    --return ctrl.this;\r\n    local ctrl = wxSizeReportCtrl(this, wx.wxID_ANY,\r\n                                   wx.wxDefaultPosition,\r\n                                   wx.wxSize(width, height), self.m_mgr);\r\n    return ctrl;\r\nend",
    "type": "function"
  }, {
    "id": 705,
    "text": "width = width or 0",
    "type": "statement:assign"
  }, {
    "id": 706,
    "text": "height = height or 0",
    "type": "statement:assign"
  }, {
    "id": 707,
    "text": "local ctrl = wxSizeReportCtrl(this, wx.wxID_ANY,\r\n                                   wx.wxDefaultPosition,\r\n                                   wx.wxSize(width, height), self.m_mgr)",
    "type": "statement:localassign"
  }, {
    "id": 708,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 709,
    "text": "function MyFrame:CreateHTMLCtrl(parent)\r\n    local this = self.this\r\n    if (not parent) then\r\n        parent = this;\r\n    end\r\n\r\n    local ctrl = wx.wxHtmlWindow(parent, wx.wxID_ANY,\r\n                                   wx.wxDefaultPosition,\r\n                                   wx.wxSize(400,300));\r\n    ctrl:SetPage(self:GetIntroText());\r\n    return ctrl;\r\nend",
    "type": "function"
  }, {
    "id": 710,
    "text": "if (not parent) then\r\n        parent = this;\r\n    end",
    "type": "statement:if"
  }, {
    "id": 711,
    "text": "parent = this",
    "type": "statement:assign"
  }, {
    "id": 712,
    "text": "local ctrl = wx.wxHtmlWindow(parent, wx.wxID_ANY,\r\n                                   wx.wxDefaultPosition,\r\n                                   wx.wxSize(400,300))",
    "type": "statement:localassign"
  }, {
    "id": 713,
    "text": "ctrl:SetPage(self:GetIntroText())",
    "type": "statement:functioncall"
  }, {
    "id": 714,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 715,
    "text": "function MyFrame:CreateNotebook()\r\n    local this = self.this\r\n   --// create the notebook off-window to avoid flicker\r\n   --local client_size = this:GetClientSize();\r\n   local w,h = this:GetClientSizeWH();\r\n\r\n   local ctrl = wxaui.wxAuiNotebook(this, wx.wxID_ANY,\r\n                                    wx.wxPoint(w, h), --wx.wxPoint(client_size.x, client_size.y),\r\n                                    wx.wxSize(430,200),\r\n                                    self.m_notebook_style);\r\n\r\n   local page_bmp = wx.wxArtProvider.GetBitmap(wx.wxART_NORMAL_FILE, wx.wxART_OTHER, wx.wxSize(16,16));\r\n\r\n   ctrl:AddPage(self:CreateHTMLCtrl(ctrl), wxT(\"Welcome to wxAUI\") , false, page_bmp);\r\n\r\n   local panel = wx.wxPanel( ctrl, wx.wxID_ANY );\r\n   local flex = wx.wxFlexGridSizer( 2,2 );\r\n   flex:AddGrowableRow( 0 );\r\n   flex:AddGrowableRow( 3 );\r\n   flex:AddGrowableCol( 1 );\r\n   flex:Add( 5,5 );   flex:Add( 5,5 );\r\n   flex:Add( wx.wxStaticText( panel, -1, wxT(\"wxTextCtrl:\") ), 0, wx.wxALL+wx.wxALIGN_CENTRE, 5 );\r\n   flex:Add( wx.wxTextCtrl( panel, -1, wxT(\"\"), wx.wxDefaultPosition, wx.wxSize(100,-1)),\r\n                1, wx.wxALL+wx.wxALIGN_CENTRE, 5 );\r\n   flex:Add( wx.wxStaticText( panel, -1, wxT(\"wxSpinCtrl:\") ), 0, wx.wxALL+wx.wxALIGN_CENTRE, 5 );\r\n   flex:Add( wx.wxSpinCtrl( panel, -1, wxT(\"5\"), wx.wxDefaultPosition, wx.wxSize(100,-1),\r\n                wx.wxSP_ARROW_KEYS, 5, 50, 5 ), 0, wx.wxALL+wx.wxALIGN_CENTRE, 5 );\r\n   flex:Add( 5,5 );   flex:Add( 5,5 );\r\n   panel:SetSizer( flex );\r\n   ctrl:AddPage( panel, wxT(\"wxPanel\"), false, page_bmp );\r\n\r\n\r\n   ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 1\"), false, page_bmp );\r\n\r\n   ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some more text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 2\") );\r\n\r\n   ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some more text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 3\") );\r\n\r\n   ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some more text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 4\") );\r\n\r\n   ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some more text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 5\") );\r\n\r\n   ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some more text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 6\") );\r\n\r\n   ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some more text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 7 (longer title)\") );\r\n\r\n   ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some more text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 8\") );\r\n\r\n   return ctrl;\r\nend",
    "type": "function"
  }, {
    "id": 716,
    "text": "local w,h = this:GetClientSizeWH()",
    "type": "statement:localassign"
  }, {
    "id": 717,
    "text": "local ctrl = wxaui.wxAuiNotebook(this, wx.wxID_ANY,\r\n                                    wx.wxPoint(w, h), --wx.wxPoint(client_size.x, client_size.y),\r\n                                    wx.wxSize(430,200),\r\n                                    self.m_notebook_style)",
    "type": "statement:localassign"
  }, {
    "id": 718,
    "text": "local page_bmp = wx.wxArtProvider.GetBitmap(wx.wxART_NORMAL_FILE, wx.wxART_OTHER, wx.wxSize(16,16))",
    "type": "statement:localassign"
  }, {
    "id": 719,
    "text": "ctrl:AddPage(self:CreateHTMLCtrl(ctrl), wxT(\"Welcome to wxAUI\") , false, page_bmp)",
    "type": "statement:functioncall"
  }, {
    "id": 720,
    "text": "local panel = wx.wxPanel( ctrl, wx.wxID_ANY )",
    "type": "statement:localassign"
  }, {
    "id": 721,
    "text": "local flex = wx.wxFlexGridSizer( 2,2 )",
    "type": "statement:localassign"
  }, {
    "id": 722,
    "text": "flex:AddGrowableRow( 0 )",
    "type": "statement:functioncall"
  }, {
    "id": 723,
    "text": "flex:AddGrowableRow( 3 )",
    "type": "statement:functioncall"
  }, {
    "id": 724,
    "text": "flex:AddGrowableCol( 1 )",
    "type": "statement:functioncall"
  }, {
    "id": 725,
    "text": "flex:Add( 5,5 )",
    "type": "statement:functioncall"
  }, {
    "id": 726,
    "text": "flex:Add( wx.wxStaticText( panel, -1, wxT(\"wxTextCtrl:\") ), 0, wx.wxALL+wx.wxALIGN_CENTRE, 5 )",
    "type": "statement:functioncall"
  }, {
    "id": 727,
    "text": "flex:Add( wx.wxTextCtrl( panel, -1, wxT(\"\"), wx.wxDefaultPosition, wx.wxSize(100,-1)),\r\n                1, wx.wxALL+wx.wxALIGN_CENTRE, 5 )",
    "type": "statement:functioncall"
  }, {
    "id": 728,
    "text": "flex:Add( wx.wxStaticText( panel, -1, wxT(\"wxSpinCtrl:\") ), 0, wx.wxALL+wx.wxALIGN_CENTRE, 5 )",
    "type": "statement:functioncall"
  }, {
    "id": 729,
    "text": "flex:Add( wx.wxSpinCtrl( panel, -1, wxT(\"5\"), wx.wxDefaultPosition, wx.wxSize(100,-1),\r\n                wx.wxSP_ARROW_KEYS, 5, 50, 5 ), 0, wx.wxALL+wx.wxALIGN_CENTRE, 5 )",
    "type": "statement:functioncall"
  }, {
    "id": 730,
    "text": "panel:SetSizer( flex )",
    "type": "statement:functioncall"
  }, {
    "id": 731,
    "text": "ctrl:AddPage( panel, wxT(\"wxPanel\"), false, page_bmp )",
    "type": "statement:functioncall"
  }, {
    "id": 732,
    "text": "ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 1\"), false, page_bmp )",
    "type": "statement:functioncall"
  }, {
    "id": 733,
    "text": "ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some more text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 2\") )",
    "type": "statement:functioncall"
  }, {
    "id": 734,
    "text": "ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some more text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 3\") )",
    "type": "statement:functioncall"
  }, {
    "id": 735,
    "text": "ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some more text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 4\") )",
    "type": "statement:functioncall"
  }, {
    "id": 736,
    "text": "ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some more text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 5\") )",
    "type": "statement:functioncall"
  }, {
    "id": 737,
    "text": "ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some more text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 6\") )",
    "type": "statement:functioncall"
  }, {
    "id": 738,
    "text": "ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some more text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 7 (longer title)\") )",
    "type": "statement:functioncall"
  }, {
    "id": 739,
    "text": "ctrl:AddPage( wx.wxTextCtrl( ctrl, wx.wxID_ANY, wxT(\"Some more text\"),\r\n                wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_MULTILINE+wx.wxNO_BORDER) , wxT(\"wxTextCtrl 8\") )",
    "type": "statement:functioncall"
  }, {
    "id": 740,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 741,
    "text": "function MyFrame:GetIntroText()\r\n    local text = [[\r\n        <html><body>\r\n        <h3>Welcome to wxAUI</h3>\r\n        <br/><b>Overview</b><br/>\r\n        <p>wxAUI is an Advanced User Interface library for the wxWidgets toolkit\r\n        that allows developers to create high-quality, cross-platform user\r\n        interfaces quickly and easily.</p>\r\n        <p><b>Features</b></p>\r\n        <p>With wxAUI, developers can create application frameworks with:</p>\r\n        <ul>\r\n        <li>Native, dockable floating frames</li>\r\n        <li>Perspective saving and loading</li>\r\n        <li>Native toolbars incorporating real-time, &quot;spring-loaded&quot; dragging</li>\r\n        <li>Customizable floating/docking behavior</li>\r\n        <li>Completely customizable look-and-feel</li>\r\n        <li>Optional transparent window effects (while dragging or docking)</li>\r\n        <li>Splittable notebook control</li>\r\n        </ul>\r\n        <p><b>What's new in 0.9.3?</b></p>\r\n        <p>wxAUI 0.9.3, which is now bundled with wxWidgets, adds the following features:\r\n        <ul>\r\n        <li>New wxAuiNotebook class, a dynamic splittable notebook control</li>\r\n        <li>New wxAuiMDI* classes, a tab-based MDI and drop-in replacement for classic MDI</li>\r\n        <li>Maximize/Restore buttons implemented</li>\r\n        <li>Better hinting with wxGTK</li>\r\n        <li>Class rename.  'wxAui' is now the standard class prefix for all wxAUI classes</li>\r\n        <li>Lots of bug fixes</li>\r\n        </ul>\r\n        <p><b>What's new in 0.9.2?</b></p>\r\n        <p>The following features/fixes have been added since the last version of wxAUI:</p>\r\n        <ul>\r\n        <li>Support for wxMac</li>\r\n        <li>Updates for wxWidgets 2.6.3</li>\r\n        <li>Fix to pass more unused events through</li>\r\n        <li>Fix to allow floating windows to receive idle events</li>\r\n        <li>Fix for minimizing/maximizing problem with transparent hint pane</li>\r\n        <li>Fix to not paint empty hint rectangles</li>\r\n        <li>Fix for 64-bit compilation</li>\r\n        </ul>\r\n        <p><b>What changed in 0.9.1?</b></p>\r\n        <p>The following features/fixes were added in wxAUI 0.9.1:</p>\r\n        <ul>\r\n        <li>Support for MDI frames</li>\r\n        <li>Gradient captions option</li>\r\n        <li>Active/Inactive panes option</li>\r\n        <li>Fix for screen artifacts/paint problems</li>\r\n        <li>Fix for hiding/showing floated window problem</li>\r\n        <li>Fix for floating pane sizing problem</li>\r\n        <li>Fix for drop position problem when dragging around center pane margins</li>\r\n        <li>LF-only text file formatting for source code</li>\r\n        </ul>\r\n        <p>See README.txt for more information.</p>\r\n        </body></html>\r\n    ]]\r\n\r\n    return text;\r\nend",
    "type": "function"
  }, {
    "id": 742,
    "text": "local text = [[\r\n        <html><body>\r\n        <h3>Welcome to wxAUI</h3>\r\n        <br/><b>Overview</b><br/>\r\n        <p>wxAUI is an Advanced User Interface library for the wxWidgets toolkit\r\n        that allows developers to create high-quality, cross-platform user\r\n        interfaces quickly and easily.</p>\r\n        <p><b>Features</b></p>\r\n        <p>With wxAUI, developers can create application frameworks with:</p>\r\n        <ul>\r\n        <li>Native, dockable floating frames</li>\r\n        <li>Perspective saving and loading</li>\r\n        <li>Native toolbars incorporating real-time, &quot;spring-loaded&quot; dragging</li>\r\n        <li>Customizable floating/docking behavior</li>\r\n        <li>Completely customizable look-and-feel</li>\r\n        <li>Optional transparent window effects (while dragging or docking)</li>\r\n        <li>Splittable notebook control</li>\r\n        </ul>\r\n        <p><b>What's new in 0.9.3?</b></p>\r\n        <p>wxAUI 0.9.3, which is now bundled with wxWidgets, adds the following features:\r\n        <ul>\r\n        <li>New wxAuiNotebook class, a dynamic splittable notebook control</li>\r\n        <li>New wxAuiMDI* classes, a tab-based MDI and drop-in replacement for classic MDI</li>\r\n        <li>Maximize/Restore buttons implemented</li>\r\n        <li>Better hinting with wxGTK</li>\r\n        <li>Class rename.  'wxAui' is now the standard class prefix for all wxAUI classes</li>\r\n        <li>Lots of bug fixes</li>\r\n        </ul>\r\n        <p><b>What's new in 0.9.2?</b></p>\r\n        <p>The following features/fixes have been added since the last version of wxAUI:</p>\r\n        <ul>\r\n        <li>Support for wxMac</li>\r\n        <li>Updates for wxWidgets 2.6.3</li>\r\n        <li>Fix to pass more unused events through</li>\r\n        <li>Fix to allow floating windows to receive idle events</li>\r\n        <li>Fix for minimizing/maximizing problem with transparent hint pane</li>\r\n        <li>Fix to not paint empty hint rectangles</li>\r\n        <li>Fix for 64-bit compilation</li>\r\n        </ul>\r\n        <p><b>What changed in 0.9.1?</b></p>\r\n        <p>The following features/fixes were added in wxAUI 0.9.1:</p>\r\n        <ul>\r\n        <li>Support for MDI frames</li>\r\n        <li>Gradient captions option</li>\r\n        <li>Active/Inactive panes option</li>\r\n        <li>Fix for screen artifacts/paint problems</li>\r\n        <li>Fix for hiding/showing floated window problem</li>\r\n        <li>Fix for floating pane sizing problem</li>\r\n        <li>Fix for drop position problem when dragging around center pane margins</li>\r\n        <li>LF-only text file formatting for source code</li>\r\n        </ul>\r\n        <p>See README.txt for more information.</p>\r\n        </body></html>\r\n    ]]",
    "type": "statement:localassign"
  }, {
    "id": 743,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 744,
    "text": "function MyApp:OnInit()\r\n    local myframe = MyFrame:create()\r\n    local frame = myframe.this\r\n    wx.wxGetApp():SetTopWindow(frame);\r\n    frame:Show();\r\n    return true;\r\nend",
    "type": "function"
  }, {
    "id": 745,
    "text": "local myframe = MyFrame:create()",
    "type": "statement:localassign"
  }, {
    "id": 746,
    "text": "local frame = myframe.this",
    "type": "statement:localassign"
  }, {
    "id": 747,
    "text": "wx.wxGetApp():SetTopWindow(frame)",
    "type": "statement:functioncall"
  }, {
    "id": 748,
    "text": "frame:Show()",
    "type": "statement:functioncall"
  }, {
    "id": 749,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 750,
    "text": "function(event)\r\n            this:Refresh();\r\n        end",
    "type": "function"
  }, {
    "id": 751,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 752,
    "text": "function(event)\r\n            --// intentionally empty\r\n        end",
    "type": "function"
  }, {
    "id": 753,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 754,
    "text": "function(event)\r\n            local dc = wx.wxPaintDC(this)\r\n            local sizex,sizey = this:GetClientSizeWH();\r\n            local s;\r\n            local h, w, height;\r\n\r\n            s = string.format(wxT(\"Size: %d x %d\"), sizex, sizey);\r\n\r\n            dc:SetFont(wx.wxNORMAL_FONT);\r\n            w,height=dc:GetTextExtent(s);\r\n            height = height + 3;\r\n            dc:SetBrush(wx.wxWHITE_BRUSH);\r\n            dc:SetPen(wx.wxWHITE_PEN);\r\n            dc:DrawRectangle(0, 0, sizex, sizey);\r\n            dc:SetPen(wx.wxLIGHT_GREY_PEN);\r\n            dc:DrawLine(0, 0, sizex, sizey);\r\n            dc:DrawLine(0, sizey, sizex, 0);\r\n            dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2));\r\n\r\n            if (m_mgr) then\r\n                local pi = m_mgr:GetPane(this);\r\n\r\n                s = string.format(wxT(\"Layer: %d\"), pi.dock_layer);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*1));\r\n\r\n                s = string.format(wxT(\"Dock: %d Row: %d\"), pi.dock_direction, pi.dock_row);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*2));\r\n\r\n                s = string.format(wxT(\"Position: %d\"), pi.dock_pos);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*3));\r\n\r\n                s = string.format(wxT(\"Proportion: %d\"), pi.dock_proportion);\r\n                w,h = dc:GetTextExtent(s);\r\n                dc:DrawText(s, (sizex-w)/2, ((sizey-(height*5))/2)+(height*4));\r\n            end\r\n\r\n            dc:delete()\r\n        end",
    "type": "function"
  }, {
    "id": 755,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 756,
    "text": "function(event) self:OnPaneBorderSize(event) end",
    "type": "function"
  }, {
    "id": 757,
    "text": "function(event) self:OnSashSize(event) end",
    "type": "function"
  }, {
    "id": 758,
    "text": "function(event) self:OnCaptionSize(event) end",
    "type": "function"
  }, {
    "id": 759,
    "text": "function(event) self:OnSetColor(event) end",
    "type": "function"
  }, {
    "id": 760,
    "text": "function(event) self:OnSetColor(event) end",
    "type": "function"
  }, {
    "id": 761,
    "text": "function(event) self:OnSetColor(event) end",
    "type": "function"
  }, {
    "id": 762,
    "text": "function(event) self:OnSetColor(event) end",
    "type": "function"
  }, {
    "id": 763,
    "text": "function(event) self:OnSetColor(event) end",
    "type": "function"
  }, {
    "id": 764,
    "text": "function(event) self:OnSetColor(event) end",
    "type": "function"
  }, {
    "id": 765,
    "text": "function(event) self:OnSetColor(event) end",
    "type": "function"
  }, {
    "id": 766,
    "text": "function(event) self:OnSetColor(event) end",
    "type": "function"
  }, {
    "id": 767,
    "text": "function(event) self:OnSetColor(event) end",
    "type": "function"
  }, {
    "id": 768,
    "text": "function(event) self:OnSetColor(event) end",
    "type": "function"
  }, {
    "id": 769,
    "text": "function(event) self:OnEraseBackground(event) end",
    "type": "function"
  }, {
    "id": 770,
    "text": "function(event) self:OnSize(event) end",
    "type": "function"
  }, {
    "id": 771,
    "text": "function(event) self:OnCreateTree(event) end",
    "type": "function"
  }, {
    "id": 772,
    "text": "function(event) self:OnCreateGrid(event) end",
    "type": "function"
  }, {
    "id": 773,
    "text": "function(event) self:OnCreateText(event) end",
    "type": "function"
  }, {
    "id": 774,
    "text": "function(event) self:OnCreateHTML(event) end",
    "type": "function"
  }, {
    "id": 775,
    "text": "function(event) self:OnCreateSizeReport(event) end",
    "type": "function"
  }, {
    "id": 776,
    "text": "function(event) self:OnCreateNotebook(event) end",
    "type": "function"
  }, {
    "id": 777,
    "text": "function(event) self:OnCreatePerspective(event) end",
    "type": "function"
  }, {
    "id": 778,
    "text": "function(event) self:OnCopyPerspectiveCode(event) end",
    "type": "function"
  }, {
    "id": 779,
    "text": "function(event) self:OnManagerFlag(event) end",
    "type": "function"
  }, {
    "id": 780,
    "text": "function(event) self:OnManagerFlag(event) end",
    "type": "function"
  }, {
    "id": 781,
    "text": "function(event) self:OnManagerFlag(event) end",
    "type": "function"
  }, {
    "id": 782,
    "text": "function(event) self:OnManagerFlag(event) end",
    "type": "function"
  }, {
    "id": 783,
    "text": "function(event) self:OnManagerFlag(event) end",
    "type": "function"
  }, {
    "id": 784,
    "text": "function(event) self:OnManagerFlag(event) end",
    "type": "function"
  }, {
    "id": 785,
    "text": "function(event) self:OnManagerFlag(event) end",
    "type": "function"
  }, {
    "id": 786,
    "text": "function(event) self:OnManagerFlag(event) end",
    "type": "function"
  }, {
    "id": 787,
    "text": "function(event) self:OnManagerFlag(event) end",
    "type": "function"
  }, {
    "id": 788,
    "text": "function(event) self:OnNotebookFlag(event) end",
    "type": "function"
  }, {
    "id": 789,
    "text": "function(event) self:OnNotebookFlag(event) end",
    "type": "function"
  }, {
    "id": 790,
    "text": "function(event) self:OnNotebookFlag(event) end",
    "type": "function"
  }, {
    "id": 791,
    "text": "function(event) self:OnNotebookFlag(event) end",
    "type": "function"
  }, {
    "id": 792,
    "text": "function(event) self:OnNotebookFlag(event) end",
    "type": "function"
  }, {
    "id": 793,
    "text": "function(event) self:OnNotebookFlag(event) end",
    "type": "function"
  }, {
    "id": 794,
    "text": "function(event) self:OnNotebookFlag(event) end",
    "type": "function"
  }, {
    "id": 795,
    "text": "function(event) self:OnNotebookFlag(event) end",
    "type": "function"
  }, {
    "id": 796,
    "text": "function(event) self:OnNotebookFlag(event) end",
    "type": "function"
  }, {
    "id": 797,
    "text": "function(event) self:OnNotebookFlag(event) end",
    "type": "function"
  }, {
    "id": 798,
    "text": "function(event) self:OnNotebookFlag(event) end",
    "type": "function"
  }, {
    "id": 799,
    "text": "function(event) self:OnNotebookFlag(event) end",
    "type": "function"
  }, {
    "id": 800,
    "text": "function(event) self:OnTabAlignment(event) end",
    "type": "function"
  }, {
    "id": 801,
    "text": "function(event) self:OnTabAlignment(event) end",
    "type": "function"
  }, {
    "id": 802,
    "text": "function(event) self:OnGradient(event) end",
    "type": "function"
  }, {
    "id": 803,
    "text": "function(event) self:OnGradient(event) end",
    "type": "function"
  }, {
    "id": 804,
    "text": "function(event) self:OnGradient(event) end",
    "type": "function"
  }, {
    "id": 805,
    "text": "function(event) self:OnSettings(event) end",
    "type": "function"
  }, {
    "id": 806,
    "text": "function(event) self:OnChangeContentPane(event) end",
    "type": "function"
  }, {
    "id": 807,
    "text": "function(event) self:OnChangeContentPane(event) end",
    "type": "function"
  }, {
    "id": 808,
    "text": "function(event) self:OnChangeContentPane(event) end",
    "type": "function"
  }, {
    "id": 809,
    "text": "function(event) self:OnChangeContentPane(event) end",
    "type": "function"
  }, {
    "id": 810,
    "text": "function(event) self:OnChangeContentPane(event) end",
    "type": "function"
  }, {
    "id": 811,
    "text": "function(event) self:OnChangeContentPane(event) end",
    "type": "function"
  }, {
    "id": 812,
    "text": "function(event) self:OnExit(event) end",
    "type": "function"
  }, {
    "id": 813,
    "text": "function(event) self:OnAbout(event) end",
    "type": "function"
  }, {
    "id": 814,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 815,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 816,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 817,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 818,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 819,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 820,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 821,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 822,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 823,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 824,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 825,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 826,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 827,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 828,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 829,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 830,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 831,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 832,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 833,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 834,
    "text": "function(event) self:OnUpdateUI(event) end",
    "type": "function"
  }, {
    "id": 835,
    "text": "function(event) self:OnRestorePerspective(event) end",
    "type": "function"
  }, {
    "id": 836,
    "text": "function(event) self:OnRestorePerspective(event) end",
    "type": "function"
  }, {
    "id": 837,
    "text": "function(event) self:OnRestorePerspective(event) end",
    "type": "function"
  }, {
    "id": 838,
    "text": "function(event) self:OnRestorePerspective(event) end",
    "type": "function"
  }, {
    "id": 839,
    "text": "function(event) self:OnRestorePerspective(event) end",
    "type": "function"
  }, {
    "id": 840,
    "text": "function(event) self:OnRestorePerspective(event) end",
    "type": "function"
  }, {
    "id": 841,
    "text": "function(event) self:OnRestorePerspective(event) end",
    "type": "function"
  }, {
    "id": 842,
    "text": "function(event) self:OnRestorePerspective(event) end",
    "type": "function"
  }, {
    "id": 843,
    "text": "function(event) self:OnRestorePerspective(event) end",
    "type": "function"
  }, {
    "id": 844,
    "text": "function(event) self:OnRestorePerspective(event) end",
    "type": "function"
  }, {
    "id": 845,
    "text": "function(event) self:OnPaneClose(event) end",
    "type": "function"
  }, {
    "id": 846,
    "text": "function(event) self:OnAllowNotebookDnD(event) end",
    "type": "function"
  }, {
    "id": 847,
    "text": "function(event) self:OnNotebookPageClose(event) end",
    "type": "function"
  }, {
    "id": 848,
    "text": "",
    "type": "function container"
  }, {
    "id": 849,
    "text": "wxClipboard.Get",
    "type": "global function"
  }, {
    "id": 850,
    "text": "wxToolBar",
    "type": "global function"
  }, {
    "id": 851,
    "text": "wxMenuBar",
    "type": "global function"
  }, {
    "id": 852,
    "text": "wxImage",
    "type": "global function"
  }, {
    "id": 853,
    "text": "wxTextEntryDialog",
    "type": "global function"
  }, {
    "id": 854,
    "text": "wxSpinCtrl",
    "type": "global function"
  }, {
    "id": 855,
    "text": "wxTreeCtrl",
    "type": "global function"
  }, {
    "id": 856,
    "text": "wxMessageBox",
    "type": "global function"
  }, {
    "id": 857,
    "text": "wxIcon",
    "type": "global function"
  }, {
    "id": 858,
    "text": "wxSize",
    "type": "global function"
  }, {
    "id": 859,
    "text": "wxStaticText",
    "type": "global function"
  }, {
    "id": 860,
    "text": "wxControl",
    "type": "global function"
  }, {
    "id": 861,
    "text": "wxGetApp",
    "type": "global function"
  }, {
    "id": 862,
    "text": "wxMenu",
    "type": "global function"
  }, {
    "id": 863,
    "text": "wxBitmap",
    "type": "global function"
  }, {
    "id": 864,
    "text": "wxBitmapButton",
    "type": "global function"
  }, {
    "id": 865,
    "text": "wxTextCtrl",
    "type": "global function"
  }, {
    "id": 866,
    "text": "wxClassInfo.FindClass",
    "type": "global function"
  }, {
    "id": 867,
    "text": "wxBoxSizer",
    "type": "global function"
  }, {
    "id": 868,
    "text": "wxGrid",
    "type": "global function"
  }, {
    "id": 869,
    "text": "wxFrame",
    "type": "global function"
  }, {
    "id": 870,
    "text": "wxHtmlWindow",
    "type": "global function"
  }, {
    "id": 871,
    "text": "wxPoint",
    "type": "global function"
  }, {
    "id": 872,
    "text": "wxPanel",
    "type": "global function"
  }, {
    "id": 873,
    "text": "wxColourDialog",
    "type": "global function"
  }, {
    "id": 874,
    "text": "wxImageList",
    "type": "global function"
  }, {
    "id": 875,
    "text": "wxButton",
    "type": "global function"
  }, {
    "id": 876,
    "text": "wxArtProvider.GetBitmap",
    "type": "global function"
  }, {
    "id": 877,
    "text": "wxPaintDC",
    "type": "global function"
  }, {
    "id": 878,
    "text": "wxGridSizer",
    "type": "global function"
  }, {
    "id": 879,
    "text": "wxTextDataObject",
    "type": "global function"
  }, {
    "id": 880,
    "text": "wxArrayString",
    "type": "global function"
  }, {
    "id": 881,
    "text": "wxFlexGridSizer",
    "type": "global function"
  }, {
    "id": 882,
    "text": "wxAuiSimpleTabArt",
    "type": "global function"
  }, {
    "id": 883,
    "text": "wxAuiNotebook",
    "type": "global function"
  }, {
    "id": 884,
    "text": "bxor",
    "type": "global function"
  }, {
    "id": 885,
    "text": "wxAuiManager",
    "type": "global function"
  }, {
    "id": 886,
    "text": "bor",
    "type": "global function"
  }, {
    "id": 887,
    "text": "bnot",
    "type": "global function"
  }, {
    "id": 888,
    "text": "format",
    "type": "global function"
  }, {
    "id": 889,
    "text": "wxAuiPaneInfo",
    "type": "global function"
  }, {
    "id": 890,
    "text": "wxAuiDefaultTabArt",
    "type": "global function"
  }, {
    "id": 891,
    "text": "band",
    "type": "global function"
  }, {
    "id": 892,
    "text": "require",
    "type": "global function"
  }, {
    "id": 893,
    "text": "",
    "type": "variable container"
  }, {
    "id": 894,
    "text": "",
    "type": "require container"
  }, {
    "id": 895,
    "text": "",
    "type": "local variable"
  }, {
    "id": 896,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 897,
    "text": "",
    "type": "string"
  }, {
    "id": 898,
    "text": "",
    "type": "string"
  }, {
    "id": 899,
    "text": "",
    "type": "string"
  }, {
    "id": 900,
    "text": "",
    "type": "string"
  }, {
    "id": 901,
    "text": "",
    "type": "string"
  }, {
    "id": 902,
    "text": "",
    "type": "string"
  }, {
    "id": 903,
    "text": "",
    "type": "string"
  }, {
    "id": 904,
    "text": "",
    "type": "string"
  }, {
    "id": 905,
    "text": "",
    "type": "string"
  }, {
    "id": 906,
    "text": "",
    "type": "string"
  }, {
    "id": 907,
    "text": "",
    "type": "string"
  }, {
    "id": 908,
    "text": "",
    "type": "string"
  }, {
    "id": 909,
    "text": "",
    "type": "string"
  }, {
    "id": 910,
    "text": "",
    "type": "string"
  }, {
    "id": 911,
    "text": "",
    "type": "string"
  }, {
    "id": 912,
    "text": "",
    "type": "string"
  }, {
    "id": 913,
    "text": "",
    "type": "string"
  }, {
    "id": 914,
    "text": "",
    "type": "string"
  }, {
    "id": 915,
    "text": "",
    "type": "string"
  }, {
    "id": 916,
    "text": "",
    "type": "string"
  }, {
    "id": 917,
    "text": "",
    "type": "string"
  }, {
    "id": 918,
    "text": "",
    "type": "string"
  }, {
    "id": 919,
    "text": "",
    "type": "string"
  }, {
    "id": 920,
    "text": "",
    "type": "string"
  }, {
    "id": 921,
    "text": "",
    "type": "string"
  }, {
    "id": 922,
    "text": "",
    "type": "string"
  }, {
    "id": 923,
    "text": "",
    "type": "string"
  }, {
    "id": 924,
    "text": "",
    "type": "string"
  }, {
    "id": 925,
    "text": "",
    "type": "string"
  }, {
    "id": 926,
    "text": "",
    "type": "string"
  }, {
    "id": 927,
    "text": "",
    "type": "string"
  }, {
    "id": 928,
    "text": "",
    "type": "string"
  }, {
    "id": 929,
    "text": "",
    "type": "string"
  }, {
    "id": 930,
    "text": "",
    "type": "string"
  }, {
    "id": 931,
    "text": "",
    "type": "string"
  }, {
    "id": 932,
    "text": "",
    "type": "string"
  }, {
    "id": 933,
    "text": "",
    "type": "string"
  }, {
    "id": 934,
    "text": "",
    "type": "string"
  }, {
    "id": 935,
    "text": "",
    "type": "string"
  }, {
    "id": 936,
    "text": "",
    "type": "local variable"
  }, {
    "id": 937,
    "text": "",
    "type": "n/a"
  }, {
    "id": 938,
    "text": "",
    "type": "local variable"
  }, {
    "id": 939,
    "text": "",
    "type": "n/a"
  }, {
    "id": 940,
    "text": "",
    "type": "local variable"
  }, {
    "id": 941,
    "text": "",
    "type": "keyword"
  }, {
    "id": 942,
    "text": "",
    "type": "local variable"
  }, {
    "id": 943,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 944,
    "text": "",
    "type": "local variable"
  }, {
    "id": 945,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 946,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 947,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 948,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 949,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 950,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 951,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 952,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 953,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 954,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 955,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 956,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 957,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 958,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 959,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 960,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 961,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 962,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 963,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 964,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 965,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 966,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 967,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 968,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 969,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 970,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 971,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 972,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 973,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 974,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 975,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 976,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 977,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 978,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 979,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 980,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 981,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 982,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 983,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 984,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 985,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 986,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 987,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 988,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 989,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 990,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 991,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 992,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 993,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 994,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 995,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 996,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 997,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 998,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 999,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1000,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1001,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1002,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1003,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1004,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1005,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1006,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1007,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1008,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1009,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1010,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1011,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1012,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1013,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1014,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1015,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1016,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1017,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1018,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1019,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1020,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1021,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1022,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1023,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1024,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1025,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1026,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1027,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1028,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1029,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1030,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1031,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1032,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1033,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1034,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1035,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1036,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1037,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1038,
    "text": "",
    "type": "local variable"
  }, {
    "id": 1039,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 1040,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1041,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1042,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1043,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1044,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1045,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1046,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1047,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1048,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1049,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1050,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1051,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1052,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1053,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1054,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1055,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1056,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1057,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1058,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1059,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1060,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1061,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1062,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1063,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1064,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1065,
    "text": "",
    "type": "_prefixexp"
  }, {
    "id": 1066,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1067,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1068,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1069,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1070,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1071,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1072,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1073,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1074,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1075,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1076,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1077,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1078,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1079,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1080,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1081,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1082,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1083,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1084,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1085,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1086,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1087,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1088,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1089,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1090,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1091,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1092,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 1093,
    "text": "",
    "type": "keyword"
  }, {
    "id": 1094,
    "text": "",
    "type": "local variable"
  }, {
    "id": 1095,
    "text": "",
    "type": "number"
  }, {
    "id": 1096,
    "text": "",
    "type": "local variable"
  }, {
    "id": 1097,
    "text": "",
    "type": "number"
  }, {
    "id": 1098,
    "text": "",
    "type": "global variable"
  }, {
    "id": 1099,
    "text": "",
    "type": "n/a"
  }, {
    "id": 1100,
    "text": "",
    "type": "global variable"
  }, {
    "id": 1101,
    "text": "",
    "type": "n/a"
  }, {
    "id": 1102,
    "text": "",
    "type": "global variable"
  }, {
    "id": 1103,
    "text": "(wx)",
    "type": "module"
  }, {
    "id": 1104,
    "text": "",
    "type": "require container"
  }, {
    "id": 1105,
    "text": "",
    "type": "require container"
  }, {
    "id": 1106,
    "text": "",
    "type": "require container"
  }, {
    "id": 1107,
    "text": "",
    "type": "require container"
  }, {
    "id": 1108,
    "text": "",
    "type": "require container"
  }, {
    "id": 1109,
    "text": "",
    "type": "require container"
  }, {
    "id": 1110,
    "text": "",
    "type": "require container"
  }, {
    "id": 1111,
    "text": "",
    "type": "require container"
  }, {
    "id": 1112,
    "text": "",
    "type": "require container"
  }, {
    "id": 1113,
    "text": "",
    "type": "require container"
  }, {
    "id": 1114,
    "text": "",
    "type": "require container"
  }, {
    "id": 1115,
    "text": "",
    "type": "require container"
  }, {
    "id": 1116,
    "text": "",
    "type": "require container"
  }, {
    "id": 1117,
    "text": "",
    "type": "require container"
  }, {
    "id": 1118,
    "text": "",
    "type": "require container"
  }, {
    "id": 1119,
    "text": "",
    "type": "require container"
  }, {
    "id": 1120,
    "text": "",
    "type": "require container"
  }, {
    "id": 1121,
    "text": "",
    "type": "require container"
  }, {
    "id": 1122,
    "text": "",
    "type": "require container"
  }, {
    "id": 1123,
    "text": "",
    "type": "require container"
  }, {
    "id": 1124,
    "text": "",
    "type": "require container"
  }, {
    "id": 1125,
    "text": "",
    "type": "require container"
  }, {
    "id": 1126,
    "text": "",
    "type": "require container"
  }, {
    "id": 1127,
    "text": "",
    "type": "require container"
  }, {
    "id": 1128,
    "text": "",
    "type": "require container"
  } ]
}