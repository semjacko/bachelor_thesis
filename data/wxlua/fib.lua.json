{
  "_filename": "fib.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/wxlua/modules/lua/test/fib.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 7,
    "label": "has",
    "to": 5
  }, {
    "from": 7,
    "label": "has",
    "to": 9
  }, {
    "from": 7,
    "label": "has",
    "to": 10
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 10,
    "label": "has",
    "to": 12
  }, {
    "from": 7,
    "label": "has",
    "to": 5
  }, {
    "from": 7,
    "label": "has",
    "to": 13
  }, {
    "from": 14,
    "label": "has",
    "to": 15
  }, {
    "from": 14,
    "label": "has",
    "to": 16
  }, {
    "from": 14,
    "label": "has",
    "to": 17
  }, {
    "from": 14,
    "label": "has",
    "to": 18
  }, {
    "from": 14,
    "label": "has",
    "to": 19
  }, {
    "from": 14,
    "label": "has",
    "to": 20
  }, {
    "from": 21,
    "label": "has",
    "to": 9
  }, {
    "from": 21,
    "label": "has",
    "to": 10
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 10,
    "label": "has",
    "to": 12
  }, {
    "from": 21,
    "label": "has",
    "to": 5
  }, {
    "from": 21,
    "label": "has",
    "to": 22
  }, {
    "from": 23,
    "label": "calls",
    "to": 26
  }, {
    "from": 7,
    "label": "calls",
    "to": 27
  }, {
    "from": 14,
    "label": "calls",
    "to": 27
  }, {
    "from": 14,
    "label": "calls",
    "to": 25
  }, {
    "from": 14,
    "label": "calls",
    "to": 25
  }, {
    "from": 14,
    "label": "calls",
    "to": 24
  }, {
    "from": 23,
    "label": "calls",
    "to": 24
  }, {
    "from": 2,
    "label": "calls",
    "to": 2
  }, {
    "from": 2,
    "label": "calls",
    "to": 2
  }, {
    "from": 23,
    "label": "calls",
    "to": 14
  }, {
    "from": 23,
    "label": "calls",
    "to": 14
  }, {
    "from": 23,
    "label": "calls",
    "to": 7
  }, {
    "from": 1,
    "label": "contains",
    "to": 23
  }, {
    "from": 23,
    "label": "declares",
    "to": 2
  }, {
    "from": 23,
    "label": "declares",
    "to": 7
  }, {
    "from": 23,
    "label": "declares",
    "to": 14
  }, {
    "from": 23,
    "label": "declares",
    "to": 21
  }, {
    "from": 1,
    "label": "contains",
    "to": 28
  }, {
    "from": 1,
    "label": "contains",
    "to": 29
  }, {
    "from": 28,
    "label": "initializes",
    "to": 30
  }, {
    "from": 30,
    "label": "assigns",
    "to": 31
  }, {
    "from": 28,
    "label": "initializes",
    "to": 32
  }, {
    "from": 32,
    "label": "assigns",
    "to": 33
  }, {
    "from": 28,
    "label": "initializes",
    "to": 34
  }, {
    "from": 34,
    "label": "assigns",
    "to": 35
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "fib",
    "type": "module"
  }, {
    "id": 2,
    "text": "function fib(n)\r\n\tN=N+1\r\n\tif n<2 then\r\n\t\treturn n\r\n\telse\r\n\t\treturn fib(n-1)+fib(n-2)\r\n\tend\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "N=N+1",
    "type": "statement:assign"
  }, {
    "id": 4,
    "text": "if n<2 then\r\n\t\treturn n\r\n\telse\r\n\t\treturn fib(n-1)+fib(n-2)\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 5,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 6,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 7,
    "text": "function cache(f)\r\n\tlocal c={}\r\n\treturn function (x)\r\n\t\tlocal y=c[x]\r\n\t\tif not y then\r\n\t\t\ty=f(x)\r\n\t\t\tc[x]=y\r\n\t\tend\r\n\t\treturn y\r\n\tend\r\nend",
    "type": "function"
  }, {
    "id": 8,
    "text": "local c={}",
    "type": "statement:localassign"
  }, {
    "id": 9,
    "text": "local y=c[x]",
    "type": "statement:localassign"
  }, {
    "id": 10,
    "text": "if not y then\r\n\t\t\ty=f(x)\r\n\t\t\tc[x]=y\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 11,
    "text": "y=f(x)",
    "type": "statement:assign"
  }, {
    "id": 12,
    "text": "c[x]=y",
    "type": "statement:assign"
  }, {
    "id": 13,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 14,
    "text": "function test(s,f)\r\n\tN=0\r\n\tlocal c=os.clock()\r\n\tlocal v=f(n)\r\n\tlocal t=os.clock()-c\r\n\tprint(s,n,v,t,N)\r\nend",
    "type": "function"
  }, {
    "id": 15,
    "text": "N=0",
    "type": "statement:assign"
  }, {
    "id": 16,
    "text": "local c=os.clock()",
    "type": "statement:localassign"
  }, {
    "id": 17,
    "text": "local v=f(n)",
    "type": "statement:localassign"
  }, {
    "id": 18,
    "text": "local t=os.clock()-c",
    "type": "statement:localassign"
  }, {
    "id": 19,
    "text": "print(s,n,v,t,N)",
    "type": "statement:functioncall"
  }, {
    "id": 20,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 21,
    "text": "function (x)\r\n\t\tlocal y=c[x]\r\n\t\tif not y then\r\n\t\t\ty=f(x)\r\n\t\t\tc[x]=y\r\n\t\tend\r\n\t\treturn y\r\n\tend",
    "type": "function"
  }, {
    "id": 22,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 23,
    "text": "",
    "type": "function container"
  }, {
    "id": 24,
    "text": "print",
    "type": "global function"
  }, {
    "id": 25,
    "text": "clock",
    "type": "global function"
  }, {
    "id": 26,
    "text": "tonumber",
    "type": "global function"
  }, {
    "id": 27,
    "text": "f",
    "type": "global function"
  }, {
    "id": 28,
    "text": "",
    "type": "variable container"
  }, {
    "id": 29,
    "text": "",
    "type": "require container"
  }, {
    "id": 30,
    "text": "",
    "type": "global variable"
  }, {
    "id": 31,
    "text": "",
    "type": "n/a"
  }, {
    "id": 32,
    "text": "",
    "type": "global variable"
  }, {
    "id": 33,
    "text": "",
    "type": "n/a"
  }, {
    "id": 34,
    "text": "",
    "type": "global variable"
  }, {
    "id": 35,
    "text": "",
    "type": "n/a"
  } ]
}