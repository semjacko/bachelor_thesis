{
  "_filename": "dialog.wx.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/wxlua/samples/dialog.wx.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 9
  }, {
    "from": 2,
    "label": "has",
    "to": 10
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 12,
    "label": "has",
    "to": 14
  }, {
    "from": 12,
    "label": "has",
    "to": 15
  }, {
    "from": 12,
    "label": "has",
    "to": 16
  }, {
    "from": 11,
    "label": "has",
    "to": 17
  }, {
    "from": 11,
    "label": "has",
    "to": 18
  }, {
    "from": 11,
    "label": "has",
    "to": 9
  }, {
    "from": 11,
    "label": "has",
    "to": 19
  }, {
    "from": 20,
    "label": "has",
    "to": 21
  }, {
    "from": 20,
    "label": "has",
    "to": 22
  }, {
    "from": 23,
    "label": "has",
    "to": 9
  }, {
    "from": 24,
    "label": "has",
    "to": 9
  }, {
    "from": 25,
    "label": "has",
    "to": 9
  }, {
    "from": 26,
    "label": "has",
    "to": 9
  }, {
    "from": 27,
    "label": "has",
    "to": 28
  }, {
    "from": 28,
    "label": "has",
    "to": 29
  }, {
    "from": 27,
    "label": "has",
    "to": 9
  }, {
    "from": 27,
    "label": "has",
    "to": 30
  }, {
    "from": 27,
    "label": "has",
    "to": 31
  }, {
    "from": 31,
    "label": "has",
    "to": 32
  }, {
    "from": 31,
    "label": "has",
    "to": 33
  }, {
    "from": 33,
    "label": "has",
    "to": 9
  }, {
    "from": 33,
    "label": "has",
    "to": 9
  }, {
    "from": 33,
    "label": "has",
    "to": 9
  }, {
    "from": 33,
    "label": "has",
    "to": 9
  }, {
    "from": 31,
    "label": "has",
    "to": 34
  }, {
    "from": 31,
    "label": "has",
    "to": 35
  }, {
    "from": 31,
    "label": "has",
    "to": 36
  }, {
    "from": 31,
    "label": "has",
    "to": 37
  }, {
    "from": 31,
    "label": "has",
    "to": 38
  }, {
    "from": 27,
    "label": "has",
    "to": 39
  }, {
    "from": 40,
    "label": "has",
    "to": 41
  }, {
    "from": 42,
    "label": "has",
    "to": 41
  }, {
    "from": 42,
    "label": "has",
    "to": 29
  }, {
    "from": 42,
    "label": "has",
    "to": 43
  }, {
    "from": 44,
    "label": "has",
    "to": 45
  }, {
    "from": 44,
    "label": "has",
    "to": 46
  }, {
    "from": 47,
    "label": "calls",
    "to": 62
  }, {
    "from": 47,
    "label": "calls",
    "to": 62
  }, {
    "from": 47,
    "label": "calls",
    "to": 62
  }, {
    "from": 47,
    "label": "calls",
    "to": 62
  }, {
    "from": 47,
    "label": "calls",
    "to": 61
  }, {
    "from": 47,
    "label": "calls",
    "to": 56
  }, {
    "from": 47,
    "label": "calls",
    "to": 56
  }, {
    "from": 2,
    "label": "calls",
    "to": 50
  }, {
    "from": 47,
    "label": "calls",
    "to": 60
  }, {
    "from": 47,
    "label": "calls",
    "to": 59
  }, {
    "from": 47,
    "label": "calls",
    "to": 51
  }, {
    "from": 47,
    "label": "calls",
    "to": 51
  }, {
    "from": 2,
    "label": "calls",
    "to": 58
  }, {
    "from": 47,
    "label": "calls",
    "to": 58
  }, {
    "from": 47,
    "label": "calls",
    "to": 58
  }, {
    "from": 47,
    "label": "calls",
    "to": 55
  }, {
    "from": 47,
    "label": "calls",
    "to": 49
  }, {
    "from": 47,
    "label": "calls",
    "to": 49
  }, {
    "from": 47,
    "label": "calls",
    "to": 57
  }, {
    "from": 47,
    "label": "calls",
    "to": 11
  }, {
    "from": 47,
    "label": "calls",
    "to": 11
  }, {
    "from": 47,
    "label": "calls",
    "to": 11
  }, {
    "from": 47,
    "label": "calls",
    "to": 11
  }, {
    "from": 47,
    "label": "calls",
    "to": 2
  }, {
    "from": 47,
    "label": "calls",
    "to": 2
  }, {
    "from": 47,
    "label": "calls",
    "to": 2
  }, {
    "from": 47,
    "label": "calls",
    "to": 2
  }, {
    "from": 47,
    "label": "calls",
    "to": 48
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 63
  }, {
    "from": 2,
    "label": "calls",
    "to": 53
  }, {
    "from": 47,
    "label": "calls",
    "to": 52
  }, {
    "from": 1,
    "label": "contains",
    "to": 47
  }, {
    "from": 47,
    "label": "declares",
    "to": 2
  }, {
    "from": 47,
    "label": "declares",
    "to": 11
  }, {
    "from": 47,
    "label": "declares",
    "to": 20
  }, {
    "from": 47,
    "label": "declares",
    "to": 23
  }, {
    "from": 47,
    "label": "declares",
    "to": 24
  }, {
    "from": 47,
    "label": "declares",
    "to": 25
  }, {
    "from": 47,
    "label": "declares",
    "to": 26
  }, {
    "from": 47,
    "label": "declares",
    "to": 27
  }, {
    "from": 47,
    "label": "declares",
    "to": 40
  }, {
    "from": 47,
    "label": "declares",
    "to": 42
  }, {
    "from": 47,
    "label": "declares",
    "to": 44
  }, {
    "from": 1,
    "label": "contains",
    "to": 65
  }, {
    "from": 1,
    "label": "contains",
    "to": 66
  }, {
    "from": 65,
    "label": "initializes",
    "to": 67
  }, {
    "from": 67,
    "label": "assigns",
    "to": 68
  }, {
    "from": 65,
    "label": "initializes",
    "to": 69
  }, {
    "from": 69,
    "label": "assigns",
    "to": 70
  }, {
    "from": 65,
    "label": "initializes",
    "to": 71
  }, {
    "from": 71,
    "label": "assigns",
    "to": 72
  }, {
    "from": 65,
    "label": "initializes",
    "to": 73
  }, {
    "from": 73,
    "label": "assigns",
    "to": 74
  }, {
    "from": 65,
    "label": "initializes",
    "to": 75
  }, {
    "from": 75,
    "label": "assigns",
    "to": 76
  }, {
    "from": 65,
    "label": "initializes",
    "to": 77
  }, {
    "from": 77,
    "label": "assigns",
    "to": 78
  }, {
    "from": 65,
    "label": "initializes",
    "to": 79
  }, {
    "from": 79,
    "label": "assigns",
    "to": 80
  }, {
    "from": 65,
    "label": "initializes",
    "to": 81
  }, {
    "from": 81,
    "label": "assigns",
    "to": 82
  }, {
    "from": 65,
    "label": "initializes",
    "to": 83
  }, {
    "from": 65,
    "label": "initializes",
    "to": 84
  }, {
    "from": 65,
    "label": "initializes",
    "to": 85
  }, {
    "from": 65,
    "label": "initializes",
    "to": 86
  }, {
    "from": 65,
    "label": "initializes",
    "to": 87
  }, {
    "from": 65,
    "label": "initializes",
    "to": 88
  }, {
    "from": 65,
    "label": "initializes",
    "to": 89
  }, {
    "from": 65,
    "label": "initializes",
    "to": 90
  }, {
    "from": 65,
    "label": "initializes",
    "to": 91
  }, {
    "from": 65,
    "label": "initializes",
    "to": 92
  }, {
    "from": 65,
    "label": "initializes",
    "to": 93
  }, {
    "from": 65,
    "label": "initializes",
    "to": 94
  }, {
    "from": 94,
    "label": "assigns",
    "to": 95
  }, {
    "from": 65,
    "label": "initializes",
    "to": 96
  }, {
    "from": 96,
    "label": "assigns",
    "to": 97
  }, {
    "from": 65,
    "label": "initializes",
    "to": 98
  }, {
    "from": 98,
    "label": "assigns",
    "to": 99
  }, {
    "from": 65,
    "label": "initializes",
    "to": 100
  }, {
    "from": 100,
    "label": "assigns",
    "to": 101
  }, {
    "from": 65,
    "label": "initializes",
    "to": 102
  }, {
    "from": 102,
    "label": "assigns",
    "to": 103
  }, {
    "from": 65,
    "label": "initializes",
    "to": 104
  }, {
    "from": 104,
    "label": "assigns",
    "to": 105
  }, {
    "from": 66,
    "label": "initializes",
    "to": 64
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "dialog",
    "type": "module"
  }, {
    "id": 2,
    "text": "function AddConverterControl(name_string, button_text, textCtrlID, buttonID)\r\n    local staticText = wx.wxStaticText( panel, wx.wxID_ANY, name_string)\r\n    local textCtrl   = wx.wxTextCtrl( panel, textCtrlID, \"000000.00000\", wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_PROCESS_ENTER )\r\n    local button     = wx.wxButton( panel, buttonID, button_text)\r\n    flexGridSizer:Add( staticText, 0, wx.wxALIGN_CENTER_VERTICAL+wx.wxALL, 5 )\r\n    flexGridSizer:Add( textCtrl,   0, wx.wxGROW+wx.wxALIGN_CENTER+wx.wxALL, 5 )\r\n    flexGridSizer:Add( button,     0, wx.wxGROW+wx.wxALIGN_CENTER+wx.wxALL, 5 )\r\n\r\n    return textCtrl\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local staticText = wx.wxStaticText( panel, wx.wxID_ANY, name_string)",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "local textCtrl   = wx.wxTextCtrl( panel, textCtrlID, \"000000.00000\", wx.wxDefaultPosition, wx.wxDefaultSize, wx.wxTE_PROCESS_ENTER )",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "local button     = wx.wxButton( panel, buttonID, button_text)",
    "type": "statement:localassign"
  }, {
    "id": 6,
    "text": "flexGridSizer:Add( staticText, 0, wx.wxALIGN_CENTER_VERTICAL+wx.wxALL, 5 )",
    "type": "statement:functioncall"
  }, {
    "id": 7,
    "text": "flexGridSizer:Add( textCtrl,   0, wx.wxGROW+wx.wxALIGN_CENTER+wx.wxALL, 5 )",
    "type": "statement:functioncall"
  }, {
    "id": 8,
    "text": "flexGridSizer:Add( button,     0, wx.wxGROW+wx.wxALIGN_CENTER+wx.wxALL, 5 )",
    "type": "statement:functioncall"
  }, {
    "id": 9,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 10,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 11,
    "text": "function ConvertTemp( Tc, Tk, Tf, Tr )\r\n    if Tc or Tk then\r\n        Tc = Tc or (Tk - 273.15)\r\n        Tf = (Tc * 9/5) + 32\r\n    else -- Tf or Tr\r\n        Tf = Tf or (Tr - 459.67)\r\n        Tc = (Tf - 32) * 5/9\r\n    end\r\n\r\n    Tk = Tc + 273.15\r\n    Tr = Tf + 459.67\r\n\r\n    return Tc, Tk, Tf, Tr\r\nend",
    "type": "function"
  }, {
    "id": 12,
    "text": "if Tc or Tk then\r\n        Tc = Tc or (Tk - 273.15)\r\n        Tf = (Tc * 9/5) + 32\r\n    else -- Tf or Tr\r\n        Tf = Tf or (Tr - 459.67)\r\n        Tc = (Tf - 32) * 5/9\r\n    end",
    "type": "statement:if"
  }, {
    "id": 13,
    "text": "Tc = Tc or (Tk - 273.15)",
    "type": "statement:assign"
  }, {
    "id": 14,
    "text": "Tf = (Tc * 9/5) + 32",
    "type": "statement:assign"
  }, {
    "id": 15,
    "text": "Tf = Tf or (Tr - 459.67)",
    "type": "statement:assign"
  }, {
    "id": 16,
    "text": "Tc = (Tf - 32) * 5/9",
    "type": "statement:assign"
  }, {
    "id": 17,
    "text": "Tk = Tc + 273.15",
    "type": "statement:assign"
  }, {
    "id": 18,
    "text": "Tr = Tf + 459.67",
    "type": "statement:assign"
  }, {
    "id": 19,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 20,
    "text": "function(event)\r\n        -- Send \"fake\" button press to do calculation.\r\n        -- Button ids have been set to be -1 from textctrl ids.\r\n        dialog:ProcessEvent(wx.wxCommandEvent(wx.wxEVT_COMMAND_BUTTON_CLICKED, event:GetId()-1))\r\n    end",
    "type": "function"
  }, {
    "id": 21,
    "text": "dialog:ProcessEvent(wx.wxCommandEvent(wx.wxEVT_COMMAND_BUTTON_CLICKED, event:GetId()-1))",
    "type": "statement:functioncall"
  }, {
    "id": 22,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 23,
    "text": "function() return ConvertTemp(T, nil, nil, nil) end",
    "type": "function"
  }, {
    "id": 24,
    "text": "function() return ConvertTemp(nil, T) end",
    "type": "function"
  }, {
    "id": 25,
    "text": "function() return ConvertTemp(nil, nil, T) end",
    "type": "function"
  }, {
    "id": 26,
    "text": "function() return ConvertTemp(nil, nil, nil, T) end",
    "type": "function"
  }, {
    "id": 27,
    "text": "function(event)\r\n        -- NOTE: A wxID_CANCEL event is sent when the close button on the\r\n        -- dialog is pressed.\r\n        if event:GetId() >= ID__MAX then\r\n            event:Skip()\r\n            return\r\n        end\r\n\r\n        -- We know that the textctrl window ids are +1 from the button ids\r\n        local T = tonumber(dialog:FindWindow(event:GetId()+1):DynamicCast(\"wxTextCtrl\"):GetValue())\r\n\r\n        if T == nil then\r\n            wx.wxMessageBox(\"The input temperature is invalid, enter a number.\",\r\n                            \"Error!\",\r\n                            wx.wxOK + wx.wxICON_EXCLAMATION + wx.wxCENTRE,\r\n                            dialog)\r\n        else\r\n            -- Create a \"case\" type statement\r\n            local TempCase = {\r\n                [ID_CELSIUS_BUTTON]    = function() return ConvertTemp(T, nil, nil, nil) end,\r\n                [ID_KELVIN_BUTTON]     = function() return ConvertTemp(nil, T) end, -- don't need trailing nils\r\n                [ID_FAHRENHEIT_BUTTON] = function() return ConvertTemp(nil, nil, T) end,\r\n                [ID_RANKINE_BUTTON]    = function() return ConvertTemp(nil, nil, nil, T) end\r\n            }\r\n\r\n            -- call the \"case\" statement\r\n            local Tc, Tk, Tf, Tr = TempCase[event:GetId()]()\r\n\r\n            celsiusTextCtrl:SetValue(   string.format(\"%.3f\", Tc))\r\n            kelvinTextCtrl:SetValue(    string.format(\"%.3f\", Tk))\r\n            fahrenheitTextCtrl:SetValue(string.format(\"%.3f\", Tf))\r\n            rankineTextCtrl:SetValue(   string.format(\"%.3f\", Tr))\r\n        end\r\n    end",
    "type": "function"
  }, {
    "id": 28,
    "text": "if event:GetId() >= ID__MAX then\r\n            event:Skip()\r\n            return\r\n        end",
    "type": "statement:if"
  }, {
    "id": 29,
    "text": "event:Skip()",
    "type": "statement:functioncall"
  }, {
    "id": 30,
    "text": "local T = tonumber(dialog:FindWindow(event:GetId()+1):DynamicCast(\"wxTextCtrl\"):GetValue())",
    "type": "statement:localassign"
  }, {
    "id": 31,
    "text": "if T == nil then\r\n            wx.wxMessageBox(\"The input temperature is invalid, enter a number.\",\r\n                            \"Error!\",\r\n                            wx.wxOK + wx.wxICON_EXCLAMATION + wx.wxCENTRE,\r\n                            dialog)\r\n        else\r\n            -- Create a \"case\" type statement\r\n            local TempCase = {\r\n                [ID_CELSIUS_BUTTON]    = function() return ConvertTemp(T, nil, nil, nil) end,\r\n                [ID_KELVIN_BUTTON]     = function() return ConvertTemp(nil, T) end, -- don't need trailing nils\r\n                [ID_FAHRENHEIT_BUTTON] = function() return ConvertTemp(nil, nil, T) end,\r\n                [ID_RANKINE_BUTTON]    = function() return ConvertTemp(nil, nil, nil, T) end\r\n            }\r\n\r\n            -- call the \"case\" statement\r\n            local Tc, Tk, Tf, Tr = TempCase[event:GetId()]()\r\n\r\n            celsiusTextCtrl:SetValue(   string.format(\"%.3f\", Tc))\r\n            kelvinTextCtrl:SetValue(    string.format(\"%.3f\", Tk))\r\n            fahrenheitTextCtrl:SetValue(string.format(\"%.3f\", Tf))\r\n            rankineTextCtrl:SetValue(   string.format(\"%.3f\", Tr))\r\n        end",
    "type": "statement:if"
  }, {
    "id": 32,
    "text": "wx.wxMessageBox(\"The input temperature is invalid, enter a number.\",\r\n                            \"Error!\",\r\n                            wx.wxOK + wx.wxICON_EXCLAMATION + wx.wxCENTRE,\r\n                            dialog)",
    "type": "statement:functioncall"
  }, {
    "id": 33,
    "text": "local TempCase = {\r\n                [ID_CELSIUS_BUTTON]    = function() return ConvertTemp(T, nil, nil, nil) end,\r\n                [ID_KELVIN_BUTTON]     = function() return ConvertTemp(nil, T) end, -- don't need trailing nils\r\n                [ID_FAHRENHEIT_BUTTON] = function() return ConvertTemp(nil, nil, T) end,\r\n                [ID_RANKINE_BUTTON]    = function() return ConvertTemp(nil, nil, nil, T) end\r\n            }",
    "type": "statement:localassign"
  }, {
    "id": 34,
    "text": "local Tc, Tk, Tf, Tr = TempCase[event:GetId()]()",
    "type": "statement:localassign"
  }, {
    "id": 35,
    "text": "celsiusTextCtrl:SetValue(   string.format(\"%.3f\", Tc))",
    "type": "statement:functioncall"
  }, {
    "id": 36,
    "text": "kelvinTextCtrl:SetValue(    string.format(\"%.3f\", Tk))",
    "type": "statement:functioncall"
  }, {
    "id": 37,
    "text": "fahrenheitTextCtrl:SetValue(string.format(\"%.3f\", Tf))",
    "type": "statement:functioncall"
  }, {
    "id": 38,
    "text": "rankineTextCtrl:SetValue(   string.format(\"%.3f\", Tr))",
    "type": "statement:functioncall"
  }, {
    "id": 39,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 40,
    "text": "function(event) dialog:Destroy() end",
    "type": "function"
  }, {
    "id": 41,
    "text": "dialog:Destroy()",
    "type": "statement:functioncall"
  }, {
    "id": 42,
    "text": "function (event)\r\n        dialog:Destroy()\r\n        event:Skip()\r\n    end",
    "type": "function"
  }, {
    "id": 43,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 44,
    "text": "function(event)\r\n        wx.wxMessageBox(\"Based on the C++ version by Marco Ghislanzoni.\\n\"..\r\n                        wxlua.wxLUA_VERSION_STRING..\" built with \"..wx.wxVERSION_STRING,\r\n                        \"About wxLua Temperature Converter\",\r\n                        wx.wxOK + wx.wxICON_INFORMATION,\r\n                        dialog)\r\n    end",
    "type": "function"
  }, {
    "id": 45,
    "text": "wx.wxMessageBox(\"Based on the C++ version by Marco Ghislanzoni.\\n\"..\r\n                        wxlua.wxLUA_VERSION_STRING..\" built with \"..wx.wxVERSION_STRING,\r\n                        \"About wxLua Temperature Converter\",\r\n                        wx.wxOK + wx.wxICON_INFORMATION,\r\n                        dialog)",
    "type": "statement:functioncall"
  }, {
    "id": 46,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 47,
    "text": "",
    "type": "function container"
  }, {
    "id": 48,
    "text": "wxDialog",
    "type": "global function"
  }, {
    "id": 49,
    "text": "wxMessageBox",
    "type": "global function"
  }, {
    "id": 50,
    "text": "wxStaticText",
    "type": "global function"
  }, {
    "id": 51,
    "text": "wxCommandEvent",
    "type": "global function"
  }, {
    "id": 52,
    "text": "wxGetApp",
    "type": "global function"
  }, {
    "id": 53,
    "text": "wxTextCtrl",
    "type": "global function"
  }, {
    "id": 54,
    "text": "wxStaticBoxSizer",
    "type": "global function"
  }, {
    "id": 55,
    "text": "wxStaticBox",
    "type": "global function"
  }, {
    "id": 56,
    "text": "wxBoxSizer",
    "type": "global function"
  }, {
    "id": 57,
    "text": "wxPanel",
    "type": "global function"
  }, {
    "id": 58,
    "text": "wxButton",
    "type": "global function"
  }, {
    "id": 59,
    "text": "wxFlexGridSizer",
    "type": "global function"
  }, {
    "id": 60,
    "text": "tonumber",
    "type": "global function"
  }, {
    "id": 61,
    "text": "TempCase[event:GetId()]",
    "type": "global function"
  }, {
    "id": 62,
    "text": "format",
    "type": "global function"
  }, {
    "id": 63,
    "text": "require",
    "type": "global function"
  }, {
    "id": 64,
    "text": "",
    "type": "global variable"
  }, {
    "id": 65,
    "text": "",
    "type": "variable container"
  }, {
    "id": 66,
    "text": "",
    "type": "require container"
  }, {
    "id": 67,
    "text": "",
    "type": "local variable"
  }, {
    "id": 68,
    "text": "",
    "type": "n/a"
  }, {
    "id": 69,
    "text": "",
    "type": "local variable"
  }, {
    "id": 70,
    "text": "",
    "type": "n/a"
  }, {
    "id": 71,
    "text": "",
    "type": "local variable"
  }, {
    "id": 72,
    "text": "",
    "type": "n/a"
  }, {
    "id": 73,
    "text": "",
    "type": "local variable"
  }, {
    "id": 74,
    "text": "",
    "type": "n/a"
  }, {
    "id": 75,
    "text": "",
    "type": "local variable"
  }, {
    "id": 76,
    "text": "",
    "type": "n/a"
  }, {
    "id": 77,
    "text": "",
    "type": "local variable"
  }, {
    "id": 78,
    "text": "",
    "type": "n/a"
  }, {
    "id": 79,
    "text": "",
    "type": "local variable"
  }, {
    "id": 80,
    "text": "",
    "type": "n/a"
  }, {
    "id": 81,
    "text": "",
    "type": "global variable"
  }, {
    "id": 82,
    "text": "",
    "type": "n/a"
  }, {
    "id": 83,
    "text": "",
    "type": "global variable"
  }, {
    "id": 84,
    "text": "",
    "type": "global variable"
  }, {
    "id": 85,
    "text": "",
    "type": "global variable"
  }, {
    "id": 86,
    "text": "",
    "type": "global variable"
  }, {
    "id": 87,
    "text": "",
    "type": "global variable"
  }, {
    "id": 88,
    "text": "",
    "type": "global variable"
  }, {
    "id": 89,
    "text": "",
    "type": "global variable"
  }, {
    "id": 90,
    "text": "",
    "type": "global variable"
  }, {
    "id": 91,
    "text": "",
    "type": "global variable"
  }, {
    "id": 92,
    "text": "",
    "type": "global variable"
  }, {
    "id": 93,
    "text": "",
    "type": "global variable"
  }, {
    "id": 94,
    "text": "",
    "type": "global variable"
  }, {
    "id": 95,
    "text": "",
    "type": "n/a"
  }, {
    "id": 96,
    "text": "",
    "type": "global variable"
  }, {
    "id": 97,
    "text": "",
    "type": "n/a"
  }, {
    "id": 98,
    "text": "",
    "type": "global variable"
  }, {
    "id": 99,
    "text": "",
    "type": "n/a"
  }, {
    "id": 100,
    "text": "",
    "type": "global variable"
  }, {
    "id": 101,
    "text": "",
    "type": "n/a"
  }, {
    "id": 102,
    "text": "",
    "type": "global variable"
  }, {
    "id": 103,
    "text": "",
    "type": "n/a"
  }, {
    "id": 104,
    "text": "",
    "type": "global variable"
  }, {
    "id": 105,
    "text": "",
    "type": "n/a"
  } ]
}