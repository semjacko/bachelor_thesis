{
  "_filename": "wxluafreeze.lua",
  "_isShebang": true,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/wxlua/apps/wxluafreeze/src/wxluafreeze.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 5,
    "label": "has",
    "to": 8
  }, {
    "from": 5,
    "label": "has",
    "to": 9
  }, {
    "from": 5,
    "label": "has",
    "to": 8
  }, {
    "from": 5,
    "label": "has",
    "to": 10
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 11,
    "label": "has",
    "to": 13
  }, {
    "from": 11,
    "label": "has",
    "to": 14
  }, {
    "from": 11,
    "label": "has",
    "to": 15
  }, {
    "from": 11,
    "label": "has",
    "to": 16
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 18,
    "label": "has",
    "to": 19
  }, {
    "from": 17,
    "label": "has",
    "to": 8
  }, {
    "from": 17,
    "label": "has",
    "to": 20
  }, {
    "from": 17,
    "label": "has",
    "to": 21
  }, {
    "from": 17,
    "label": "has",
    "to": 22
  }, {
    "from": 17,
    "label": "has",
    "to": 23
  }, {
    "from": 23,
    "label": "has",
    "to": 24
  }, {
    "from": 17,
    "label": "has",
    "to": 8
  }, {
    "from": 17,
    "label": "has",
    "to": 25
  }, {
    "from": 25,
    "label": "has",
    "to": 26
  }, {
    "from": 17,
    "label": "has",
    "to": 8
  }, {
    "from": 17,
    "label": "has",
    "to": 27
  }, {
    "from": 27,
    "label": "has",
    "to": 28
  }, {
    "from": 17,
    "label": "has",
    "to": 29
  }, {
    "from": 17,
    "label": "has",
    "to": 30
  }, {
    "from": 17,
    "label": "has",
    "to": 31
  }, {
    "from": 17,
    "label": "has",
    "to": 32
  }, {
    "from": 17,
    "label": "has",
    "to": 33
  }, {
    "from": 17,
    "label": "has",
    "to": 34
  }, {
    "from": 34,
    "label": "has",
    "to": 35
  }, {
    "from": 17,
    "label": "has",
    "to": 8
  }, {
    "from": 17,
    "label": "has",
    "to": 36
  }, {
    "from": 17,
    "label": "has",
    "to": 37
  }, {
    "from": 17,
    "label": "has",
    "to": 38
  }, {
    "from": 17,
    "label": "has",
    "to": 39
  }, {
    "from": 17,
    "label": "has",
    "to": 40
  }, {
    "from": 17,
    "label": "has",
    "to": 41
  }, {
    "from": 17,
    "label": "has",
    "to": 42
  }, {
    "from": 17,
    "label": "has",
    "to": 43
  }, {
    "from": 17,
    "label": "has",
    "to": 44
  }, {
    "from": 17,
    "label": "has",
    "to": 45
  }, {
    "from": 2,
    "label": "calls",
    "to": 52
  }, {
    "from": 17,
    "label": "calls",
    "to": 52
  }, {
    "from": 5,
    "label": "calls",
    "to": 50
  }, {
    "from": 17,
    "label": "calls",
    "to": 50
  }, {
    "from": 17,
    "label": "calls",
    "to": 50
  }, {
    "from": 17,
    "label": "calls",
    "to": 50
  }, {
    "from": 11,
    "label": "calls",
    "to": 48
  }, {
    "from": 11,
    "label": "calls",
    "to": 48
  }, {
    "from": 11,
    "label": "calls",
    "to": 48
  }, {
    "from": 11,
    "label": "calls",
    "to": 48
  }, {
    "from": 17,
    "label": "calls",
    "to": 2
  }, {
    "from": 17,
    "label": "calls",
    "to": 2
  }, {
    "from": 17,
    "label": "calls",
    "to": 2
  }, {
    "from": 17,
    "label": "calls",
    "to": 2
  }, {
    "from": 17,
    "label": "calls",
    "to": 2
  }, {
    "from": 5,
    "label": "calls",
    "to": 53
  }, {
    "from": 17,
    "label": "calls",
    "to": 53
  }, {
    "from": 17,
    "label": "calls",
    "to": 53
  }, {
    "from": 17,
    "label": "calls",
    "to": 53
  }, {
    "from": 46,
    "label": "calls",
    "to": 17
  }, {
    "from": 17,
    "label": "calls",
    "to": 11
  }, {
    "from": 2,
    "label": "calls",
    "to": 51
  }, {
    "from": 17,
    "label": "calls",
    "to": 5
  }, {
    "from": 17,
    "label": "calls",
    "to": 5
  }, {
    "from": 17,
    "label": "calls",
    "to": 5
  }, {
    "from": 17,
    "label": "calls",
    "to": 49
  }, {
    "from": 2,
    "label": "calls",
    "to": 47
  }, {
    "from": 1,
    "label": "contains",
    "to": 46
  }, {
    "from": 46,
    "label": "declares",
    "to": 2
  }, {
    "from": 46,
    "label": "declares",
    "to": 5
  }, {
    "from": 46,
    "label": "declares",
    "to": 11
  }, {
    "from": 46,
    "label": "declares",
    "to": 17
  }, {
    "from": 1,
    "label": "contains",
    "to": 54
  }, {
    "from": 1,
    "label": "contains",
    "to": 55
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "wxluafreeze",
    "type": "module"
  }, {
    "id": 2,
    "text": "function printf(...)\r\n    io.write(string.format(unpack(arg)))\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "io.write(string.format(unpack(arg)))",
    "type": "statement:functioncall"
  }, {
    "id": 4,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 5,
    "text": "function FileExists(filename)\r\n    local file = io.open(filename, \"r\")\r\n    if (file == nil) then return false end\r\n    io.close(file)\r\n    return true\r\nend",
    "type": "function"
  }, {
    "id": 6,
    "text": "local file = io.open(filename, \"r\")",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "if (file == nil) then return false end",
    "type": "statement:if"
  }, {
    "id": 8,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 9,
    "text": "io.close(file)",
    "type": "statement:functioncall"
  }, {
    "id": 10,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 11,
    "text": "function Usage()\r\n  print(\"wxluafreeze.lua appends a wxLua program to a precompiled C++ wxLuaFreeze application.\")\r\n  print(\"Usage : $wxluafreeze.lua input_wxLuaFreezeApp input_wxLua_script.lua output_wxLuaFreezeApp\")\r\n  print()\r\n  print(\" If using unix, don't forget to $chmod +x output_wxLuaFreezeApp\")\r\nend",
    "type": "function"
  }, {
    "id": 12,
    "text": "print(\"wxluafreeze.lua appends a wxLua program to a precompiled C++ wxLuaFreeze application.\")",
    "type": "statement:functioncall"
  }, {
    "id": 13,
    "text": "print(\"Usage : $wxluafreeze.lua input_wxLuaFreezeApp input_wxLua_script.lua output_wxLuaFreezeApp\")",
    "type": "statement:functioncall"
  }, {
    "id": 14,
    "text": "print()",
    "type": "statement:functioncall"
  }, {
    "id": 15,
    "text": "print(\" If using unix, don't forget to $chmod +x output_wxLuaFreezeApp\")",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 17,
    "text": "function main()\r\n\r\n    if not arg or (#arg ~= 3) then\r\n        Usage()\r\n        return\r\n    end\r\n\r\n    local in_wxluafreeze  = arg[1]\r\n    local in_wxluascript  = arg[2]\r\n    local out_wxluafreeze = arg[3]\r\n\r\n    if not FileExists(in_wxluafreeze) then\r\n        printf(\"Input wxLuaFreeze program '%s' does not exist! Aborting.\\n\", in_wxluafreeze)\r\n        return\r\n    end\r\n    if not FileExists(in_wxluascript) then\r\n        printf(\"Input wxLua script '%s' does not exist! Aborting.\\n\", in_wxluascript)\r\n        return\r\n    end\r\n    if FileExists(out_wxluafreeze) then\r\n        printf(\"Output wxLuaFreeze program '%s' will be overwritten.\\n\", out_wxluafreeze)\r\n    end\r\n\r\n    printf(\"Appending '%s' to wxLuaFreeze program '%s' and outputting to '%s'\\n\",\r\n            in_wxluascript, in_wxluafreeze, out_wxluafreeze)\r\n\r\n    -- read the whole wxLuaFreeze program into memory\r\n    local in_wxluafreeze_handle = io.open(in_wxluafreeze, \"rb\")\r\n    local in_wxluafreeze_data   = in_wxluafreeze_handle:read(\"*a\")\r\n    local in_wxluafreeze_length = in_wxluafreeze_handle:seek(\"end\")\r\n    io.close(in_wxluafreeze_handle)\r\n\r\n    -- check to see if they're trying to append another script to wxLuaFreeze\r\n    if string.sub(in_wxluafreeze_data, in_wxluafreeze_length-21, in_wxluafreeze_length-10) == \"wxLuaFreeze:\" then\r\n        printf(\"Input wxLuaFreeze program '%s' already has a wxLua script attached! Aborting.\\n\", in_wxluafreeze)\r\n        return\r\n    end\r\n\r\n    -- read the whole wxLua script into memory\r\n    local in_wxluascript_handle = io.open(in_wxluascript, \"rb\")\r\n    local in_wxluascript_data   = in_wxluascript_handle:read(\"*a\")\r\n    local in_wxluascript_length = in_wxluascript_handle:seek(\"end\")\r\n    io.close(in_wxluascript_handle)\r\n\r\n    -- write the output file and our tag at the end\r\n    local out_wxluafreeze_handle = io.open(out_wxluafreeze, \"wb+\")\r\n    out_wxluafreeze_handle:write(in_wxluafreeze_data)\r\n    out_wxluafreeze_handle:write(in_wxluascript_data)\r\n    -- 2^32 = 4294967296, should be enough? Our data is 24 bytes from end.\r\n    out_wxluafreeze_handle:write(string.format(\"<wxLuaFreeze:%010d>\", in_wxluascript_length))\r\n    io.close(out_wxluafreeze_handle)\r\nend",
    "type": "function"
  }, {
    "id": 18,
    "text": "if not arg or (#arg ~= 3) then\r\n        Usage()\r\n        return\r\n    end",
    "type": "statement:if"
  }, {
    "id": 19,
    "text": "Usage()",
    "type": "statement:functioncall"
  }, {
    "id": 20,
    "text": "local in_wxluafreeze  = arg[1]",
    "type": "statement:localassign"
  }, {
    "id": 21,
    "text": "local in_wxluascript  = arg[2]",
    "type": "statement:localassign"
  }, {
    "id": 22,
    "text": "local out_wxluafreeze = arg[3]",
    "type": "statement:localassign"
  }, {
    "id": 23,
    "text": "if not FileExists(in_wxluafreeze) then\r\n        printf(\"Input wxLuaFreeze program '%s' does not exist! Aborting.\\n\", in_wxluafreeze)\r\n        return\r\n    end",
    "type": "statement:if"
  }, {
    "id": 24,
    "text": "printf(\"Input wxLuaFreeze program '%s' does not exist! Aborting.\\n\", in_wxluafreeze)",
    "type": "statement:functioncall"
  }, {
    "id": 25,
    "text": "if not FileExists(in_wxluascript) then\r\n        printf(\"Input wxLua script '%s' does not exist! Aborting.\\n\", in_wxluascript)\r\n        return\r\n    end",
    "type": "statement:if"
  }, {
    "id": 26,
    "text": "printf(\"Input wxLua script '%s' does not exist! Aborting.\\n\", in_wxluascript)",
    "type": "statement:functioncall"
  }, {
    "id": 27,
    "text": "if FileExists(out_wxluafreeze) then\r\n        printf(\"Output wxLuaFreeze program '%s' will be overwritten.\\n\", out_wxluafreeze)\r\n    end",
    "type": "statement:if"
  }, {
    "id": 28,
    "text": "printf(\"Output wxLuaFreeze program '%s' will be overwritten.\\n\", out_wxluafreeze)",
    "type": "statement:functioncall"
  }, {
    "id": 29,
    "text": "printf(\"Appending '%s' to wxLuaFreeze program '%s' and outputting to '%s'\\n\",\r\n            in_wxluascript, in_wxluafreeze, out_wxluafreeze)",
    "type": "statement:functioncall"
  }, {
    "id": 30,
    "text": "local in_wxluafreeze_handle = io.open(in_wxluafreeze, \"rb\")",
    "type": "statement:localassign"
  }, {
    "id": 31,
    "text": "local in_wxluafreeze_data   = in_wxluafreeze_handle:read(\"*a\")",
    "type": "statement:localassign"
  }, {
    "id": 32,
    "text": "local in_wxluafreeze_length = in_wxluafreeze_handle:seek(\"end\")",
    "type": "statement:localassign"
  }, {
    "id": 33,
    "text": "io.close(in_wxluafreeze_handle)",
    "type": "statement:functioncall"
  }, {
    "id": 34,
    "text": "if string.sub(in_wxluafreeze_data, in_wxluafreeze_length-21, in_wxluafreeze_length-10) == \"wxLuaFreeze:\" then\r\n        printf(\"Input wxLuaFreeze program '%s' already has a wxLua script attached! Aborting.\\n\", in_wxluafreeze)\r\n        return\r\n    end",
    "type": "statement:if"
  }, {
    "id": 35,
    "text": "printf(\"Input wxLuaFreeze program '%s' already has a wxLua script attached! Aborting.\\n\", in_wxluafreeze)",
    "type": "statement:functioncall"
  }, {
    "id": 36,
    "text": "local in_wxluascript_handle = io.open(in_wxluascript, \"rb\")",
    "type": "statement:localassign"
  }, {
    "id": 37,
    "text": "local in_wxluascript_data   = in_wxluascript_handle:read(\"*a\")",
    "type": "statement:localassign"
  }, {
    "id": 38,
    "text": "local in_wxluascript_length = in_wxluascript_handle:seek(\"end\")",
    "type": "statement:localassign"
  }, {
    "id": 39,
    "text": "io.close(in_wxluascript_handle)",
    "type": "statement:functioncall"
  }, {
    "id": 40,
    "text": "local out_wxluafreeze_handle = io.open(out_wxluafreeze, \"wb+\")",
    "type": "statement:localassign"
  }, {
    "id": 41,
    "text": "out_wxluafreeze_handle:write(in_wxluafreeze_data)",
    "type": "statement:functioncall"
  }, {
    "id": 42,
    "text": "out_wxluafreeze_handle:write(in_wxluascript_data)",
    "type": "statement:functioncall"
  }, {
    "id": 43,
    "text": "out_wxluafreeze_handle:write(string.format(\"<wxLuaFreeze:%010d>\", in_wxluascript_length))",
    "type": "statement:functioncall"
  }, {
    "id": 44,
    "text": "io.close(out_wxluafreeze_handle)",
    "type": "statement:functioncall"
  }, {
    "id": 45,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 46,
    "text": "",
    "type": "function container"
  }, {
    "id": 47,
    "text": "write",
    "type": "global function"
  }, {
    "id": 48,
    "text": "print",
    "type": "global function"
  }, {
    "id": 49,
    "text": "sub",
    "type": "global function"
  }, {
    "id": 50,
    "text": "close",
    "type": "global function"
  }, {
    "id": 51,
    "text": "unpack",
    "type": "global function"
  }, {
    "id": 52,
    "text": "format",
    "type": "global function"
  }, {
    "id": 53,
    "text": "open",
    "type": "global function"
  }, {
    "id": 54,
    "text": "",
    "type": "variable container"
  }, {
    "id": 55,
    "text": "",
    "type": "require container"
  } ]
}