{
  "_filename": "cl_filter.lua",
  "_isShebang": false,
  "_isSpec": true,
  "_isTest": false,
  "_path": "modules/busted/spec/cl_filter.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 8,
    "label": "has",
    "to": 10
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 16,
    "label": "has",
    "to": 3
  }, {
    "from": 15,
    "label": "has",
    "to": 17
  }, {
    "from": 17,
    "label": "has",
    "to": 6
  }, {
    "from": 15,
    "label": "has",
    "to": 18
  }, {
    "from": 18,
    "label": "has",
    "to": 9
  }, {
    "from": 15,
    "label": "has",
    "to": 19
  }, {
    "from": 15,
    "label": "has",
    "to": 20
  }, {
    "from": 15,
    "label": "has",
    "to": 21
  }, {
    "from": 22,
    "label": "has",
    "to": 23
  }, {
    "from": 22,
    "label": "has",
    "to": 24
  }, {
    "from": 25,
    "label": "has",
    "to": 26
  }, {
    "from": 25,
    "label": "has",
    "to": 27
  }, {
    "from": 28,
    "label": "has",
    "to": 29
  }, {
    "from": 30,
    "label": "has",
    "to": 31
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 33,
    "label": "has",
    "to": 23
  }, {
    "from": 32,
    "label": "has",
    "to": 34
  }, {
    "from": 34,
    "label": "has",
    "to": 26
  }, {
    "from": 32,
    "label": "has",
    "to": 35
  }, {
    "from": 32,
    "label": "has",
    "to": 36
  }, {
    "from": 32,
    "label": "has",
    "to": 37
  }, {
    "from": 38,
    "label": "has",
    "to": 39
  }, {
    "from": 38,
    "label": "has",
    "to": 40
  }, {
    "from": 41,
    "label": "has",
    "to": 42
  }, {
    "from": 42,
    "label": "has",
    "to": 39
  }, {
    "from": 41,
    "label": "has",
    "to": 43
  }, {
    "from": 44,
    "label": "calls",
    "to": 50
  }, {
    "from": 44,
    "label": "calls",
    "to": 50
  }, {
    "from": 44,
    "label": "calls",
    "to": 50
  }, {
    "from": 44,
    "label": "calls",
    "to": 50
  }, {
    "from": 44,
    "label": "calls",
    "to": 50
  }, {
    "from": 44,
    "label": "calls",
    "to": 50
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 45
  }, {
    "from": 44,
    "label": "calls",
    "to": 48
  }, {
    "from": 44,
    "label": "calls",
    "to": 51
  }, {
    "from": 44,
    "label": "calls",
    "to": 49
  }, {
    "from": 44,
    "label": "calls",
    "to": 49
  }, {
    "from": 44,
    "label": "calls",
    "to": 46
  }, {
    "from": 1,
    "label": "contains",
    "to": 44
  }, {
    "from": 44,
    "label": "declares",
    "to": 2
  }, {
    "from": 44,
    "label": "declares",
    "to": 5
  }, {
    "from": 44,
    "label": "declares",
    "to": 8
  }, {
    "from": 44,
    "label": "declares",
    "to": 11
  }, {
    "from": 44,
    "label": "declares",
    "to": 13
  }, {
    "from": 44,
    "label": "declares",
    "to": 15
  }, {
    "from": 44,
    "label": "declares",
    "to": 22
  }, {
    "from": 44,
    "label": "declares",
    "to": 25
  }, {
    "from": 44,
    "label": "declares",
    "to": 28
  }, {
    "from": 44,
    "label": "declares",
    "to": 30
  }, {
    "from": 44,
    "label": "declares",
    "to": 32
  }, {
    "from": 44,
    "label": "declares",
    "to": 38
  }, {
    "from": 44,
    "label": "declares",
    "to": 41
  }, {
    "from": 1,
    "label": "contains",
    "to": 52
  }, {
    "from": 1,
    "label": "contains",
    "to": 53
  }, {
    "from": 16,
    "label": "hasArgument",
    "to": 2
  }, {
    "from": 17,
    "label": "hasArgument",
    "to": 5
  }, {
    "from": 18,
    "label": "hasArgument",
    "to": 8
  }, {
    "from": 19,
    "label": "hasArgument",
    "to": 11
  }, {
    "from": 20,
    "label": "hasArgument",
    "to": 13
  }, {
    "from": 33,
    "label": "hasArgument",
    "to": 22
  }, {
    "from": 34,
    "label": "hasArgument",
    "to": 25
  }, {
    "from": 35,
    "label": "hasArgument",
    "to": 28
  }, {
    "from": 35,
    "label": "hasArgument",
    "to": 30
  }, {
    "from": 36,
    "label": "hasArgument",
    "to": 28
  }, {
    "from": 36,
    "label": "hasArgument",
    "to": 30
  }, {
    "from": 42,
    "label": "hasArgument",
    "to": 38
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "cl_filter",
    "type": "module"
  }, {
    "id": 2,
    "text": "function()\r\n    -- works by counting failure\r\n    error('error 1 on pattern1')\r\n  end",
    "type": "function"
  }, {
    "id": 3,
    "text": "error('error 1 on pattern1')",
    "type": "statement:functioncall"
  }, {
    "id": 4,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 5,
    "text": "function()\r\n    -- works by counting failure\r\n    error('error 2 on pattern1')\r\n  end",
    "type": "function"
  }, {
    "id": 6,
    "text": "error('error 2 on pattern1')",
    "type": "statement:functioncall"
  }, {
    "id": 7,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 8,
    "text": "function()\r\n    -- works by counting failure\r\n    error('error on pattern2')\r\n  end",
    "type": "function"
  }, {
    "id": 9,
    "text": "error('error on pattern2')",
    "type": "statement:functioncall"
  }, {
    "id": 10,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 11,
    "text": "function()\r\n    -- nothing here, makes it succeed\r\n  end",
    "type": "function"
  }, {
    "id": 12,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 13,
    "text": "function ()\r\n    -- Always succeed\r\n  end",
    "type": "function"
  }, {
    "id": 14,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 15,
    "text": "function()\r\n\r\n  it('is a test with pattern1', function()\r\n    -- works by counting failure\r\n    error('error 1 on pattern1')\r\n  end)\r\n\r\n  it('is another test with pattern1', function()\r\n    -- works by counting failure\r\n    error('error 2 on pattern1')\r\n  end)\r\n\r\n  it('is a test with pattern2', function()\r\n    -- works by counting failure\r\n    error('error on pattern2')\r\n  end)\r\n\r\n  it('is a test with pattern3', function()\r\n    -- nothing here, makes it succeed\r\n  end)\r\n\r\n  it('is a test with two pattern3 and pattern4', function ()\r\n    -- Always succeed\r\n  end)\r\nend",
    "type": "function"
  }, {
    "id": 16,
    "text": "it('is a test with pattern1', function()\r\n    -- works by counting failure\r\n    error('error 1 on pattern1')\r\n  end)",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "it('is another test with pattern1', function()\r\n    -- works by counting failure\r\n    error('error 2 on pattern1')\r\n  end)",
    "type": "statement:functioncall"
  }, {
    "id": 18,
    "text": "it('is a test with pattern2', function()\r\n    -- works by counting failure\r\n    error('error on pattern2')\r\n  end)",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "it('is a test with pattern3', function()\r\n    -- nothing here, makes it succeed\r\n  end)",
    "type": "statement:functioncall"
  }, {
    "id": 20,
    "text": "it('is a test with two pattern3 and pattern4', function ()\r\n    -- Always succeed\r\n  end)",
    "type": "statement:functioncall"
  }, {
    "id": 21,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 22,
    "text": "function()\r\n    error('error in before_each on patt1')\r\n  end",
    "type": "function"
  }, {
    "id": 23,
    "text": "error('error in before_each on patt1')",
    "type": "statement:functioncall"
  }, {
    "id": 24,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 25,
    "text": "function()\r\n    error('error in after_each on patt1')\r\n  end",
    "type": "function"
  }, {
    "id": 26,
    "text": "error('error in after_each on patt1')",
    "type": "statement:functioncall"
  }, {
    "id": 27,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 28,
    "text": "function()\r\n  end",
    "type": "function"
  }, {
    "id": 29,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 30,
    "text": "function()\r\n  end",
    "type": "function"
  }, {
    "id": 31,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 32,
    "text": "function()\r\n  before_each(function()\r\n    error('error in before_each on patt1')\r\n  end)\r\n\r\n  after_each(function()\r\n    error('error in after_each on patt1')\r\n  end)\r\n\r\n  it('is a test inside describe', function()\r\n  end)\r\n\r\n  it('is another test inside describe', function()\r\n  end)\r\nend",
    "type": "function"
  }, {
    "id": 33,
    "text": "before_each(function()\r\n    error('error in before_each on patt1')\r\n  end)",
    "type": "statement:functioncall"
  }, {
    "id": 34,
    "text": "after_each(function()\r\n    error('error in after_each on patt1')\r\n  end)",
    "type": "statement:functioncall"
  }, {
    "id": 35,
    "text": "it('is a test inside describe', function()\r\n  end)",
    "type": "statement:functioncall"
  }, {
    "id": 36,
    "text": "it('is another test inside describe', function()\r\n  end)",
    "type": "statement:functioncall"
  }, {
    "id": 37,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 38,
    "text": "function()\r\n    error('error in setup on patt2')\r\n  end",
    "type": "function"
  }, {
    "id": 39,
    "text": "error('error in setup on patt2')",
    "type": "statement:functioncall"
  }, {
    "id": 40,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 41,
    "text": "function()\r\n  setup(function()\r\n    error('error in setup on patt2')\r\n  end)\r\nend",
    "type": "function"
  }, {
    "id": 42,
    "text": "setup(function()\r\n    error('error in setup on patt2')\r\n  end)",
    "type": "statement:functioncall"
  }, {
    "id": 43,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 44,
    "text": "",
    "type": "function container"
  }, {
    "id": 45,
    "text": "setup",
    "type": "global function"
  }, {
    "id": 46,
    "text": "context",
    "type": "global function"
  }, {
    "id": 47,
    "text": "it",
    "type": "global function"
  }, {
    "id": 48,
    "text": "before_each",
    "type": "global function"
  }, {
    "id": 49,
    "text": "describe",
    "type": "global function"
  }, {
    "id": 50,
    "text": "error",
    "type": "global function"
  }, {
    "id": 51,
    "text": "after_each",
    "type": "global function"
  }, {
    "id": 52,
    "text": "",
    "type": "variable container"
  }, {
    "id": 53,
    "text": "",
    "type": "require container"
  } ]
}