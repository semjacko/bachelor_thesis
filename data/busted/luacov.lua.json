{
  "_filename": "luacov.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/busted/busted/modules/luacov.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 9
  }, {
    "from": 2,
    "label": "has",
    "to": 10
  }, {
    "from": 2,
    "label": "has",
    "to": 11
  }, {
    "from": 2,
    "label": "has",
    "to": 12
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 14,
    "label": "has",
    "to": 3
  }, {
    "from": 14,
    "label": "has",
    "to": 4
  }, {
    "from": 14,
    "label": "has",
    "to": 5
  }, {
    "from": 14,
    "label": "has",
    "to": 6
  }, {
    "from": 14,
    "label": "has",
    "to": 7
  }, {
    "from": 14,
    "label": "has",
    "to": 8
  }, {
    "from": 14,
    "label": "has",
    "to": 9
  }, {
    "from": 14,
    "label": "has",
    "to": 10
  }, {
    "from": 14,
    "label": "has",
    "to": 11
  }, {
    "from": 13,
    "label": "has",
    "to": 5
  }, {
    "from": 13,
    "label": "has",
    "to": 15
  }, {
    "from": 16,
    "label": "calls",
    "to": 18
  }, {
    "from": 16,
    "label": "calls",
    "to": 17
  }, {
    "from": 16,
    "label": "calls",
    "to": 19
  }, {
    "from": 16,
    "label": "calls",
    "to": 19
  }, {
    "from": 16,
    "label": "calls",
    "to": 19
  }, {
    "from": 16,
    "label": "calls",
    "to": 19
  }, {
    "from": 16,
    "label": "calls",
    "to": 19
  }, {
    "from": 16,
    "label": "calls",
    "to": 20
  }, {
    "from": 1,
    "label": "contains",
    "to": 16
  }, {
    "from": 16,
    "label": "declares",
    "to": 2
  }, {
    "from": 16,
    "label": "declares",
    "to": 13
  }, {
    "from": 1,
    "label": "contains",
    "to": 21
  }, {
    "from": 1,
    "label": "contains",
    "to": 22
  }, {
    "from": 1,
    "label": "provides",
    "to": 23
  }, {
    "from": 23,
    "label": "provides",
    "to": 24
  }, {
    "from": 25,
    "label": "requires",
    "to": 1
  }, {
    "from": 26,
    "label": "requires",
    "to": 1
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "luacov",
    "type": "module"
  }, {
    "id": 2,
    "text": "function()\r\n    local result, luacov = pcall(require, 'luacov.runner')\r\n\r\n    if not result then\r\n      return print('LuaCov not found on the system, try running without --coverage option, or install LuaCov first')\r\n    end\r\n\r\n    -- call it to start\r\n    luacov()\r\n\r\n    -- exclude busted files\r\n    table.insert(luacov.configuration.exclude, 'busted_bootstrap$')\r\n    table.insert(luacov.configuration.exclude, 'busted%.')\r\n    table.insert(luacov.configuration.exclude, 'luassert%.')\r\n    table.insert(luacov.configuration.exclude, 'say%.')\r\n    table.insert(luacov.configuration.exclude, 'pl%.')\r\n  end",
    "type": "function"
  }, {
    "id": 3,
    "text": "local result, luacov = pcall(require, 'luacov.runner')",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "if not result then\r\n      return print('LuaCov not found on the system, try running without --coverage option, or install LuaCov first')\r\n    end",
    "type": "statement:if"
  }, {
    "id": 5,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 6,
    "text": "luacov()",
    "type": "statement:functioncall"
  }, {
    "id": 7,
    "text": "table.insert(luacov.configuration.exclude, 'busted_bootstrap$')",
    "type": "statement:functioncall"
  }, {
    "id": 8,
    "text": "table.insert(luacov.configuration.exclude, 'busted%.')",
    "type": "statement:functioncall"
  }, {
    "id": 9,
    "text": "table.insert(luacov.configuration.exclude, 'luassert%.')",
    "type": "statement:functioncall"
  }, {
    "id": 10,
    "text": "table.insert(luacov.configuration.exclude, 'say%.')",
    "type": "statement:functioncall"
  }, {
    "id": 11,
    "text": "table.insert(luacov.configuration.exclude, 'pl%.')",
    "type": "statement:functioncall"
  }, {
    "id": 12,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 13,
    "text": "function()\r\n  -- Function to initialize luacov if available\r\n  local loadLuaCov = function()\r\n    local result, luacov = pcall(require, 'luacov.runner')\r\n\r\n    if not result then\r\n      return print('LuaCov not found on the system, try running without --coverage option, or install LuaCov first')\r\n    end\r\n\r\n    -- call it to start\r\n    luacov()\r\n\r\n    -- exclude busted files\r\n    table.insert(luacov.configuration.exclude, 'busted_bootstrap$')\r\n    table.insert(luacov.configuration.exclude, 'busted%.')\r\n    table.insert(luacov.configuration.exclude, 'luassert%.')\r\n    table.insert(luacov.configuration.exclude, 'say%.')\r\n    table.insert(luacov.configuration.exclude, 'pl%.')\r\n  end\r\n\r\n  return loadLuaCov\r\nend",
    "type": "function"
  }, {
    "id": 14,
    "text": "local loadLuaCov = function()\r\n    local result, luacov = pcall(require, 'luacov.runner')\r\n\r\n    if not result then\r\n      return print('LuaCov not found on the system, try running without --coverage option, or install LuaCov first')\r\n    end\r\n\r\n    -- call it to start\r\n    luacov()\r\n\r\n    -- exclude busted files\r\n    table.insert(luacov.configuration.exclude, 'busted_bootstrap$')\r\n    table.insert(luacov.configuration.exclude, 'busted%.')\r\n    table.insert(luacov.configuration.exclude, 'luassert%.')\r\n    table.insert(luacov.configuration.exclude, 'say%.')\r\n    table.insert(luacov.configuration.exclude, 'pl%.')\r\n  end",
    "type": "statement:localassign"
  }, {
    "id": 15,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 16,
    "text": "",
    "type": "function container"
  }, {
    "id": 17,
    "text": "print",
    "type": "global function"
  }, {
    "id": 18,
    "text": "pcall",
    "type": "global function"
  }, {
    "id": 19,
    "text": "insert",
    "type": "global function"
  }, {
    "id": 20,
    "text": "luacov",
    "type": "global function"
  }, {
    "id": 21,
    "text": "",
    "type": "variable container"
  }, {
    "id": 22,
    "text": "",
    "type": "require container"
  }, {
    "id": 23,
    "text": "",
    "type": "interface container"
  }, {
    "id": 24,
    "text": "",
    "type": "interface"
  }, {
    "id": 25,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 26,
    "text": "",
    "type": "require local variable"
  } ]
}