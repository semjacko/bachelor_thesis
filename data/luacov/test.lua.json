{
  "_filename": "test.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/luacov/tests/simple/test.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 1,
    "label": "contains",
    "to": 2
  }, {
    "from": 2,
    "label": "calls",
    "to": 14
  }, {
    "from": 2,
    "label": "calls",
    "to": 14
  }, {
    "from": 2,
    "label": "calls",
    "to": 13
  }, {
    "from": 2,
    "label": "calls",
    "to": 10
  }, {
    "from": 2,
    "label": "calls",
    "to": 10
  }, {
    "from": 2,
    "label": "calls",
    "to": 10
  }, {
    "from": 2,
    "label": "calls",
    "to": 10
  }, {
    "from": 2,
    "label": "calls",
    "to": 12
  }, {
    "from": 2,
    "label": "calls",
    "to": 12
  }, {
    "from": 2,
    "label": "calls",
    "to": 11
  }, {
    "from": 2,
    "label": "calls",
    "to": 15
  }, {
    "from": 2,
    "label": "calls",
    "to": 7
  }, {
    "from": 2,
    "label": "declares",
    "to": 3
  }, {
    "from": 2,
    "label": "declares",
    "to": 4
  }, {
    "from": 2,
    "label": "calls",
    "to": 15
  }, {
    "from": 2,
    "label": "calls",
    "to": 15
  }, {
    "from": 2,
    "label": "calls",
    "to": 15
  }, {
    "from": 2,
    "label": "calls",
    "to": 15
  }, {
    "from": 2,
    "label": "calls",
    "to": 6
  }, {
    "from": 2,
    "label": "calls",
    "to": 6
  }, {
    "from": 2,
    "label": "calls",
    "to": 9
  }, {
    "from": 2,
    "label": "calls",
    "to": 15
  }, {
    "from": 2,
    "label": "calls",
    "to": 15
  }, {
    "from": 2,
    "label": "calls",
    "to": 5
  }, {
    "from": 2,
    "label": "calls",
    "to": 5
  }, {
    "from": 2,
    "label": "calls",
    "to": 8
  }, {
    "from": 2,
    "label": "declares",
    "to": 5
  }, {
    "from": 1,
    "label": "contains",
    "to": 17
  }, {
    "from": 1,
    "label": "contains",
    "to": 18
  }, {
    "from": 17,
    "label": "initializes",
    "to": 19
  }, {
    "from": 1,
    "label": "provides",
    "to": 20
  }, {
    "from": 20,
    "label": "provides",
    "to": 21
  }, {
    "from": 1,
    "label": "contains",
    "to": 22
  }, {
    "from": 1,
    "label": "contains",
    "to": 23
  }, {
    "from": 22,
    "label": "initializes",
    "to": 24
  }, {
    "from": 22,
    "label": "initializes",
    "to": 25
  }, {
    "from": 23,
    "label": "initializes",
    "to": 26
  }, {
    "from": 1,
    "label": "contains",
    "to": 27
  }, {
    "from": 1,
    "label": "contains",
    "to": 28
  }, {
    "from": 28,
    "label": "initializes",
    "to": 16
  }, {
    "from": 28,
    "label": "initializes",
    "to": 16
  }, {
    "from": 1,
    "label": "contains",
    "to": 29
  }, {
    "from": 1,
    "label": "contains",
    "to": 30
  }, {
    "from": 29,
    "label": "initializes",
    "to": 31
  }, {
    "from": 29,
    "label": "initializes",
    "to": 32
  }, {
    "from": 30,
    "label": "initializes",
    "to": 33
  }, {
    "from": 30,
    "label": "initializes",
    "to": 34
  }, {
    "from": 1,
    "label": "contains",
    "to": 35
  }, {
    "from": 1,
    "label": "contains",
    "to": 36
  }, {
    "from": 35,
    "label": "initializes",
    "to": 37
  }, {
    "from": 35,
    "label": "initializes",
    "to": 38
  }, {
    "from": 35,
    "label": "initializes",
    "to": 39
  }, {
    "from": 36,
    "label": "initializes",
    "to": 40
  }, {
    "from": 36,
    "label": "initializes",
    "to": 41
  }, {
    "from": 1,
    "label": "contains",
    "to": 42
  }, {
    "from": 1,
    "label": "contains",
    "to": 43
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "test",
    "type": "module"
  }, {
    "id": 2,
    "text": "",
    "type": "function container"
  }, {
    "id": 3,
    "text": "local function f(x)\r\n   return coroutine.yield(x + 1) + 2\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "local function g(x)\r\n   return coroutine.yield(x + 3) + 4\r\nend",
    "type": "function"
  }, {
    "id": 5,
    "text": "local function test(tick_as_module)\r\n   local config = tick_as_module and \".luacov\" or \"tick.luacov\"\r\n   local mod = tick_as_module and \"luacov.tick\" or \"luacov\"\r\n   local cmd = (\"%q\"):format(lua) .. ' -e \"package.path=[[../?.lua;../../../src/?.lua;]]..package.path\"'\r\n   cmd = cmd .. ' -e \"osexit = os.exit\"'\r\n   cmd = cmd .. ' -e \"require([[luacov.runner]]).load_config([[' .. config .. ']])\"'\r\n   cmd = cmd .. \" -l \" .. mod\r\n   cmd = cmd .. ' -e \"dofile([[script.lua]])\"'\r\n   cmd = cmd:gsub(\"/\", dir_sep)\r\n\r\n   local ok = os.execute(\"cd subdir && \" .. cmd)\r\n   assert(ok == 0 or ok == true)\r\nend",
    "type": "function"
  }, {
    "id": 6,
    "text": "sethook",
    "type": "global function"
  }, {
    "id": 7,
    "text": "with_luacov",
    "type": "global function"
  }, {
    "id": 8,
    "text": "f1",
    "type": "global function"
  }, {
    "id": 9,
    "text": "f2",
    "type": "global function"
  }, {
    "id": 10,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 11,
    "text": "corowrap",
    "type": "global function"
  }, {
    "id": 12,
    "text": "wf",
    "type": "global function"
  }, {
    "id": 13,
    "text": "wrap",
    "type": "global function"
  }, {
    "id": 14,
    "text": "wg",
    "type": "global function"
  }, {
    "id": 15,
    "text": "require",
    "type": "global function"
  }, {
    "id": 16,
    "text": "",
    "type": "global variable"
  }, {
    "id": 17,
    "text": "",
    "type": "variable container"
  }, {
    "id": 18,
    "text": "",
    "type": "require container"
  }, {
    "id": 19,
    "text": "",
    "type": "local variable"
  }, {
    "id": 20,
    "text": "",
    "type": "interface container"
  }, {
    "id": 21,
    "text": "",
    "type": "interface"
  }, {
    "id": 22,
    "text": "",
    "type": "variable container"
  }, {
    "id": 23,
    "text": "",
    "type": "require container"
  }, {
    "id": 24,
    "text": "",
    "type": "local variable"
  }, {
    "id": 25,
    "text": "",
    "type": "local variable"
  }, {
    "id": 26,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 27,
    "text": "",
    "type": "variable container"
  }, {
    "id": 28,
    "text": "",
    "type": "require container"
  }, {
    "id": 29,
    "text": "",
    "type": "variable container"
  }, {
    "id": 30,
    "text": "",
    "type": "require container"
  }, {
    "id": 31,
    "text": "",
    "type": "local variable"
  }, {
    "id": 32,
    "text": "",
    "type": "local variable"
  }, {
    "id": 33,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 34,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 35,
    "text": "",
    "type": "variable container"
  }, {
    "id": 36,
    "text": "",
    "type": "require container"
  }, {
    "id": 37,
    "text": "",
    "type": "local variable"
  }, {
    "id": 38,
    "text": "",
    "type": "local variable"
  }, {
    "id": 39,
    "text": "",
    "type": "local variable"
  }, {
    "id": 40,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 41,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 42,
    "text": "",
    "type": "variable container"
  }, {
    "id": 43,
    "text": "",
    "type": "require container"
  } ]
}