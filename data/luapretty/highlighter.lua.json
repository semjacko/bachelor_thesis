{
  "_filename": "highlighter.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luapretty/src/luapretty/highlighter.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "calls",
    "to": 74
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 3,
    "label": "has",
    "to": 6
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 8,
    "label": "has",
    "to": 10
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 7,
    "label": "has",
    "to": 12
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 14,
    "label": "has",
    "to": 15
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 13,
    "label": "has",
    "to": 17
  }, {
    "from": 18,
    "label": "has",
    "to": 16
  }, {
    "from": 18,
    "label": "has",
    "to": 19
  }, {
    "from": 20,
    "label": "has",
    "to": 21
  }, {
    "from": 21,
    "label": "has",
    "to": 22
  }, {
    "from": 20,
    "label": "has",
    "to": 16
  }, {
    "from": 20,
    "label": "has",
    "to": 16
  }, {
    "from": 20,
    "label": "has",
    "to": 23
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 25,
    "label": "has",
    "to": 26
  }, {
    "from": 26,
    "label": "has",
    "to": 27
  }, {
    "from": 26,
    "label": "has",
    "to": 28
  }, {
    "from": 26,
    "label": "has",
    "to": 29
  }, {
    "from": 29,
    "label": "has",
    "to": 30
  }, {
    "from": 30,
    "label": "has",
    "to": 31
  }, {
    "from": 29,
    "label": "has",
    "to": 32
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 24,
    "label": "has",
    "to": 16
  }, {
    "from": 24,
    "label": "has",
    "to": 16
  }, {
    "from": 24,
    "label": "has",
    "to": 16
  }, {
    "from": 24,
    "label": "has",
    "to": 34
  }, {
    "from": 35,
    "label": "has",
    "to": 36
  }, {
    "from": 36,
    "label": "has",
    "to": 37
  }, {
    "from": 35,
    "label": "has",
    "to": 38
  }, {
    "from": 35,
    "label": "has",
    "to": 16
  }, {
    "from": 35,
    "label": "has",
    "to": 16
  }, {
    "from": 35,
    "label": "has",
    "to": 16
  }, {
    "from": 35,
    "label": "has",
    "to": 16
  }, {
    "from": 35,
    "label": "has",
    "to": 39
  }, {
    "from": 40,
    "label": "has",
    "to": 41
  }, {
    "from": 40,
    "label": "has",
    "to": 16
  }, {
    "from": 40,
    "label": "has",
    "to": 42
  }, {
    "from": 40,
    "label": "has",
    "to": 43
  }, {
    "from": 40,
    "label": "has",
    "to": 44
  }, {
    "from": 40,
    "label": "has",
    "to": 45
  }, {
    "from": 40,
    "label": "has",
    "to": 46
  }, {
    "from": 40,
    "label": "has",
    "to": 47
  }, {
    "from": 40,
    "label": "has",
    "to": 16
  }, {
    "from": 40,
    "label": "has",
    "to": 48
  }, {
    "from": 49,
    "label": "has",
    "to": 50
  }, {
    "from": 49,
    "label": "has",
    "to": 51
  }, {
    "from": 49,
    "label": "has",
    "to": 52
  }, {
    "from": 49,
    "label": "has",
    "to": 53
  }, {
    "from": 53,
    "label": "has",
    "to": 54
  }, {
    "from": 54,
    "label": "has",
    "to": 55
  }, {
    "from": 54,
    "label": "has",
    "to": 56
  }, {
    "from": 54,
    "label": "has",
    "to": 57
  }, {
    "from": 54,
    "label": "has",
    "to": 58
  }, {
    "from": 49,
    "label": "has",
    "to": 59
  }, {
    "from": 59,
    "label": "has",
    "to": 60
  }, {
    "from": 60,
    "label": "has",
    "to": 61
  }, {
    "from": 61,
    "label": "has",
    "to": 62
  }, {
    "from": 60,
    "label": "has",
    "to": 63
  }, {
    "from": 63,
    "label": "has",
    "to": 64
  }, {
    "from": 60,
    "label": "has",
    "to": 65
  }, {
    "from": 65,
    "label": "has",
    "to": 66
  }, {
    "from": 60,
    "label": "has",
    "to": 67
  }, {
    "from": 67,
    "label": "has",
    "to": 68
  }, {
    "from": 60,
    "label": "has",
    "to": 69
  }, {
    "from": 69,
    "label": "has",
    "to": 70
  }, {
    "from": 60,
    "label": "has",
    "to": 71
  }, {
    "from": 71,
    "label": "has",
    "to": 72
  }, {
    "from": 49,
    "label": "has",
    "to": 16
  }, {
    "from": 49,
    "label": "has",
    "to": 16
  }, {
    "from": 49,
    "label": "has",
    "to": 16
  }, {
    "from": 49,
    "label": "has",
    "to": 16
  }, {
    "from": 49,
    "label": "has",
    "to": 16
  }, {
    "from": 49,
    "label": "has",
    "to": 16
  }, {
    "from": 49,
    "label": "has",
    "to": 16
  }, {
    "from": 49,
    "label": "has",
    "to": 16
  }, {
    "from": 49,
    "label": "has",
    "to": 73
  }, {
    "from": 74,
    "label": "has",
    "to": 75
  }, {
    "from": 74,
    "label": "has",
    "to": 76
  }, {
    "from": 74,
    "label": "has",
    "to": 77
  }, {
    "from": 74,
    "label": "has",
    "to": 78
  }, {
    "from": 74,
    "label": "has",
    "to": 79
  }, {
    "from": 74,
    "label": "has",
    "to": 80
  }, {
    "from": 74,
    "label": "has",
    "to": 81
  }, {
    "from": 74,
    "label": "has",
    "to": 50
  }, {
    "from": 74,
    "label": "has",
    "to": 82
  }, {
    "from": 82,
    "label": "has",
    "to": 83
  }, {
    "from": 82,
    "label": "has",
    "to": 84
  }, {
    "from": 82,
    "label": "has",
    "to": 85
  }, {
    "from": 82,
    "label": "has",
    "to": 86
  }, {
    "from": 82,
    "label": "has",
    "to": 87
  }, {
    "from": 82,
    "label": "has",
    "to": 88
  }, {
    "from": 82,
    "label": "has",
    "to": 89
  }, {
    "from": 74,
    "label": "has",
    "to": 90
  }, {
    "from": 90,
    "label": "has",
    "to": 91
  }, {
    "from": 91,
    "label": "has",
    "to": 92
  }, {
    "from": 90,
    "label": "has",
    "to": 93
  }, {
    "from": 90,
    "label": "has",
    "to": 94
  }, {
    "from": 94,
    "label": "has",
    "to": 95
  }, {
    "from": 90,
    "label": "has",
    "to": 96
  }, {
    "from": 96,
    "label": "has",
    "to": 97
  }, {
    "from": 90,
    "label": "has",
    "to": 98
  }, {
    "from": 74,
    "label": "has",
    "to": 99
  }, {
    "from": 74,
    "label": "has",
    "to": 100
  }, {
    "from": 100,
    "label": "has",
    "to": 101
  }, {
    "from": 74,
    "label": "has",
    "to": 16
  }, {
    "from": 74,
    "label": "has",
    "to": 102
  }, {
    "from": 49,
    "label": "calls",
    "to": 24
  }, {
    "from": 49,
    "label": "calls",
    "to": 40
  }, {
    "from": 49,
    "label": "calls",
    "to": 40
  }, {
    "from": 49,
    "label": "calls",
    "to": 40
  }, {
    "from": 49,
    "label": "calls",
    "to": 40
  }, {
    "from": 49,
    "label": "calls",
    "to": 40
  }, {
    "from": 49,
    "label": "calls",
    "to": 40
  }, {
    "from": 49,
    "label": "calls",
    "to": 40
  }, {
    "from": 49,
    "label": "calls",
    "to": 40
  }, {
    "from": 49,
    "label": "calls",
    "to": 40
  }, {
    "from": 49,
    "label": "calls",
    "to": 40
  }, {
    "from": 49,
    "label": "calls",
    "to": 40
  }, {
    "from": 49,
    "label": "calls",
    "to": 40
  }, {
    "from": 49,
    "label": "calls",
    "to": 40
  }, {
    "from": 74,
    "label": "calls",
    "to": 40
  }, {
    "from": 74,
    "label": "calls",
    "to": 40
  }, {
    "from": 3,
    "label": "calls",
    "to": 110
  }, {
    "from": 7,
    "label": "calls",
    "to": 110
  }, {
    "from": 13,
    "label": "calls",
    "to": 110
  }, {
    "from": 35,
    "label": "calls",
    "to": 115
  }, {
    "from": 40,
    "label": "calls",
    "to": 115
  }, {
    "from": 49,
    "label": "calls",
    "to": 49
  }, {
    "from": 74,
    "label": "calls",
    "to": 49
  }, {
    "from": 74,
    "label": "calls",
    "to": 105
  }, {
    "from": 74,
    "label": "calls",
    "to": 3
  }, {
    "from": 20,
    "label": "calls",
    "to": 109
  }, {
    "from": 24,
    "label": "calls",
    "to": 109
  }, {
    "from": 24,
    "label": "calls",
    "to": 109
  }, {
    "from": 49,
    "label": "calls",
    "to": 109
  }, {
    "from": 7,
    "label": "calls",
    "to": 7
  }, {
    "from": 3,
    "label": "calls",
    "to": 107
  }, {
    "from": 74,
    "label": "calls",
    "to": 107
  }, {
    "from": 35,
    "label": "calls",
    "to": 20
  }, {
    "from": 74,
    "label": "calls",
    "to": 13
  }, {
    "from": 7,
    "label": "calls",
    "to": 111
  }, {
    "from": 49,
    "label": "calls",
    "to": 35
  }, {
    "from": 49,
    "label": "calls",
    "to": 35
  }, {
    "from": 49,
    "label": "calls",
    "to": 35
  }, {
    "from": 49,
    "label": "calls",
    "to": 35
  }, {
    "from": 49,
    "label": "calls",
    "to": 35
  }, {
    "from": 49,
    "label": "calls",
    "to": 35
  }, {
    "from": 49,
    "label": "calls",
    "to": 35
  }, {
    "from": 49,
    "label": "calls",
    "to": 35
  }, {
    "from": 49,
    "label": "calls",
    "to": 35
  }, {
    "from": 103,
    "label": "calls",
    "to": 112
  }, {
    "from": 49,
    "label": "calls",
    "to": 108
  }, {
    "from": 49,
    "label": "calls",
    "to": 108
  }, {
    "from": 49,
    "label": "calls",
    "to": 108
  }, {
    "from": 49,
    "label": "calls",
    "to": 108
  }, {
    "from": 49,
    "label": "calls",
    "to": 108
  }, {
    "from": 49,
    "label": "calls",
    "to": 108
  }, {
    "from": 7,
    "label": "calls",
    "to": 113
  }, {
    "from": 24,
    "label": "calls",
    "to": 113
  }, {
    "from": 35,
    "label": "calls",
    "to": 113
  }, {
    "from": 40,
    "label": "calls",
    "to": 113
  }, {
    "from": 49,
    "label": "calls",
    "to": 113
  }, {
    "from": 103,
    "label": "calls",
    "to": 114
  }, {
    "from": 103,
    "label": "calls",
    "to": 114
  }, {
    "from": 103,
    "label": "calls",
    "to": 114
  }, {
    "from": 103,
    "label": "calls",
    "to": 114
  }, {
    "from": 74,
    "label": "calls",
    "to": 104
  }, {
    "from": 74,
    "label": "calls",
    "to": 104
  }, {
    "from": 74,
    "label": "calls",
    "to": 106
  }, {
    "from": 74,
    "label": "calls",
    "to": 106
  }, {
    "from": 1,
    "label": "contains",
    "to": 103
  }, {
    "from": 103,
    "label": "declares",
    "to": 3
  }, {
    "from": 103,
    "label": "declares",
    "to": 7
  }, {
    "from": 103,
    "label": "declares",
    "to": 13
  }, {
    "from": 103,
    "label": "declares",
    "to": 18
  }, {
    "from": 103,
    "label": "declares",
    "to": 20
  }, {
    "from": 103,
    "label": "declares",
    "to": 24
  }, {
    "from": 103,
    "label": "declares",
    "to": 35
  }, {
    "from": 103,
    "label": "declares",
    "to": 40
  }, {
    "from": 103,
    "label": "declares",
    "to": 49
  }, {
    "from": 103,
    "label": "declares",
    "to": 74
  }, {
    "from": 1,
    "label": "contains",
    "to": 120
  }, {
    "from": 1,
    "label": "contains",
    "to": 121
  }, {
    "from": 120,
    "label": "initializes",
    "to": 122
  }, {
    "from": 122,
    "label": "assigns",
    "to": 123
  }, {
    "from": 123,
    "label": "assigns",
    "to": 124
  }, {
    "from": 124,
    "label": "assigns",
    "to": 125
  }, {
    "from": 123,
    "label": "assigns",
    "to": 126
  }, {
    "from": 126,
    "label": "assigns",
    "to": 127
  }, {
    "from": 123,
    "label": "assigns",
    "to": 128
  }, {
    "from": 128,
    "label": "assigns",
    "to": 129
  }, {
    "from": 123,
    "label": "assigns",
    "to": 130
  }, {
    "from": 130,
    "label": "assigns",
    "to": 131
  }, {
    "from": 123,
    "label": "assigns",
    "to": 132
  }, {
    "from": 132,
    "label": "assigns",
    "to": 133
  }, {
    "from": 123,
    "label": "assigns",
    "to": 134
  }, {
    "from": 134,
    "label": "assigns",
    "to": 135
  }, {
    "from": 123,
    "label": "assigns",
    "to": 136
  }, {
    "from": 136,
    "label": "assigns",
    "to": 137
  }, {
    "from": 123,
    "label": "assigns",
    "to": 138
  }, {
    "from": 138,
    "label": "assigns",
    "to": 139
  }, {
    "from": 123,
    "label": "assigns",
    "to": 140
  }, {
    "from": 140,
    "label": "assigns",
    "to": 141
  }, {
    "from": 123,
    "label": "assigns",
    "to": 142
  }, {
    "from": 142,
    "label": "assigns",
    "to": 143
  }, {
    "from": 123,
    "label": "assigns",
    "to": 144
  }, {
    "from": 144,
    "label": "assigns",
    "to": 145
  }, {
    "from": 123,
    "label": "assigns",
    "to": 146
  }, {
    "from": 146,
    "label": "assigns",
    "to": 147
  }, {
    "from": 123,
    "label": "assigns",
    "to": 148
  }, {
    "from": 148,
    "label": "assigns",
    "to": 149
  }, {
    "from": 123,
    "label": "assigns",
    "to": 150
  }, {
    "from": 150,
    "label": "assigns",
    "to": 151
  }, {
    "from": 123,
    "label": "assigns",
    "to": 152
  }, {
    "from": 152,
    "label": "assigns",
    "to": 153
  }, {
    "from": 123,
    "label": "assigns",
    "to": 154
  }, {
    "from": 154,
    "label": "assigns",
    "to": 155
  }, {
    "from": 123,
    "label": "assigns",
    "to": 156
  }, {
    "from": 156,
    "label": "assigns",
    "to": 157
  }, {
    "from": 123,
    "label": "assigns",
    "to": 158
  }, {
    "from": 158,
    "label": "assigns",
    "to": 159
  }, {
    "from": 123,
    "label": "assigns",
    "to": 160
  }, {
    "from": 160,
    "label": "assigns",
    "to": 161
  }, {
    "from": 123,
    "label": "assigns",
    "to": 162
  }, {
    "from": 162,
    "label": "assigns",
    "to": 163
  }, {
    "from": 123,
    "label": "assigns",
    "to": 164
  }, {
    "from": 164,
    "label": "assigns",
    "to": 165
  }, {
    "from": 123,
    "label": "assigns",
    "to": 166
  }, {
    "from": 166,
    "label": "assigns",
    "to": 167
  }, {
    "from": 123,
    "label": "assigns",
    "to": 168
  }, {
    "from": 168,
    "label": "assigns",
    "to": 169
  }, {
    "from": 123,
    "label": "assigns",
    "to": 170
  }, {
    "from": 170,
    "label": "assigns",
    "to": 171
  }, {
    "from": 123,
    "label": "assigns",
    "to": 172
  }, {
    "from": 172,
    "label": "assigns",
    "to": 173
  }, {
    "from": 123,
    "label": "assigns",
    "to": 174
  }, {
    "from": 174,
    "label": "assigns",
    "to": 175
  }, {
    "from": 123,
    "label": "assigns",
    "to": 176
  }, {
    "from": 176,
    "label": "assigns",
    "to": 177
  }, {
    "from": 123,
    "label": "assigns",
    "to": 178
  }, {
    "from": 178,
    "label": "assigns",
    "to": 179
  }, {
    "from": 120,
    "label": "initializes",
    "to": 180
  }, {
    "from": 180,
    "label": "assigns",
    "to": 181
  }, {
    "from": 181,
    "label": "assigns",
    "to": 182
  }, {
    "from": 181,
    "label": "assigns",
    "to": 183
  }, {
    "from": 181,
    "label": "assigns",
    "to": 184
  }, {
    "from": 181,
    "label": "assigns",
    "to": 185
  }, {
    "from": 181,
    "label": "assigns",
    "to": 186
  }, {
    "from": 181,
    "label": "assigns",
    "to": 187
  }, {
    "from": 181,
    "label": "assigns",
    "to": 188
  }, {
    "from": 181,
    "label": "assigns",
    "to": 189
  }, {
    "from": 120,
    "label": "initializes",
    "to": 190
  }, {
    "from": 190,
    "label": "assigns",
    "to": 191
  }, {
    "from": 191,
    "label": "assigns",
    "to": 192
  }, {
    "from": 191,
    "label": "assigns",
    "to": 193
  }, {
    "from": 191,
    "label": "assigns",
    "to": 194
  }, {
    "from": 191,
    "label": "assigns",
    "to": 195
  }, {
    "from": 191,
    "label": "assigns",
    "to": 196
  }, {
    "from": 191,
    "label": "assigns",
    "to": 197
  }, {
    "from": 191,
    "label": "assigns",
    "to": 198
  }, {
    "from": 191,
    "label": "assigns",
    "to": 199
  }, {
    "from": 191,
    "label": "assigns",
    "to": 200
  }, {
    "from": 191,
    "label": "assigns",
    "to": 201
  }, {
    "from": 191,
    "label": "assigns",
    "to": 202
  }, {
    "from": 191,
    "label": "assigns",
    "to": 203
  }, {
    "from": 191,
    "label": "assigns",
    "to": 204
  }, {
    "from": 191,
    "label": "assigns",
    "to": 205
  }, {
    "from": 191,
    "label": "assigns",
    "to": 206
  }, {
    "from": 191,
    "label": "assigns",
    "to": 207
  }, {
    "from": 191,
    "label": "assigns",
    "to": 208
  }, {
    "from": 191,
    "label": "assigns",
    "to": 209
  }, {
    "from": 191,
    "label": "assigns",
    "to": 210
  }, {
    "from": 191,
    "label": "assigns",
    "to": 211
  }, {
    "from": 191,
    "label": "assigns",
    "to": 212
  }, {
    "from": 191,
    "label": "assigns",
    "to": 213
  }, {
    "from": 191,
    "label": "assigns",
    "to": 214
  }, {
    "from": 191,
    "label": "assigns",
    "to": 215
  }, {
    "from": 191,
    "label": "assigns",
    "to": 216
  }, {
    "from": 191,
    "label": "assigns",
    "to": 217
  }, {
    "from": 191,
    "label": "assigns",
    "to": 218
  }, {
    "from": 191,
    "label": "assigns",
    "to": 219
  }, {
    "from": 191,
    "label": "assigns",
    "to": 220
  }, {
    "from": 120,
    "label": "initializes",
    "to": 221
  }, {
    "from": 221,
    "label": "assigns",
    "to": 222
  }, {
    "from": 222,
    "label": "assigns",
    "to": 223
  }, {
    "from": 222,
    "label": "assigns",
    "to": 224
  }, {
    "from": 222,
    "label": "assigns",
    "to": 225
  }, {
    "from": 222,
    "label": "assigns",
    "to": 226
  }, {
    "from": 222,
    "label": "assigns",
    "to": 227
  }, {
    "from": 222,
    "label": "assigns",
    "to": 228
  }, {
    "from": 222,
    "label": "assigns",
    "to": 229
  }, {
    "from": 222,
    "label": "assigns",
    "to": 230
  }, {
    "from": 222,
    "label": "assigns",
    "to": 231
  }, {
    "from": 222,
    "label": "assigns",
    "to": 232
  }, {
    "from": 222,
    "label": "assigns",
    "to": 233
  }, {
    "from": 222,
    "label": "assigns",
    "to": 234
  }, {
    "from": 222,
    "label": "assigns",
    "to": 235
  }, {
    "from": 222,
    "label": "assigns",
    "to": 236
  }, {
    "from": 222,
    "label": "assigns",
    "to": 237
  }, {
    "from": 222,
    "label": "assigns",
    "to": 238
  }, {
    "from": 222,
    "label": "assigns",
    "to": 239
  }, {
    "from": 222,
    "label": "assigns",
    "to": 240
  }, {
    "from": 222,
    "label": "assigns",
    "to": 241
  }, {
    "from": 222,
    "label": "assigns",
    "to": 242
  }, {
    "from": 222,
    "label": "assigns",
    "to": 243
  }, {
    "from": 120,
    "label": "initializes",
    "to": 244
  }, {
    "from": 244,
    "label": "assigns",
    "to": 245
  }, {
    "from": 120,
    "label": "initializes",
    "to": 246
  }, {
    "from": 246,
    "label": "assigns",
    "to": 247
  }, {
    "from": 120,
    "label": "initializes",
    "to": 248
  }, {
    "from": 248,
    "label": "assigns",
    "to": 249
  }, {
    "from": 120,
    "label": "initializes",
    "to": 250
  }, {
    "from": 250,
    "label": "assigns",
    "to": 251
  }, {
    "from": 120,
    "label": "initializes",
    "to": 252
  }, {
    "from": 252,
    "label": "assigns",
    "to": 253
  }, {
    "from": 120,
    "label": "initializes",
    "to": 254
  }, {
    "from": 254,
    "label": "assigns",
    "to": 255
  }, {
    "from": 121,
    "label": "initializes",
    "to": 256
  }, {
    "from": 256,
    "label": "requires",
    "to": 116
  }, {
    "from": 121,
    "label": "initializes",
    "to": 257
  }, {
    "from": 257,
    "label": "requires",
    "to": 117
  }, {
    "from": 121,
    "label": "initializes",
    "to": 258
  }, {
    "from": 258,
    "label": "requires",
    "to": 118
  }, {
    "from": 121,
    "label": "initializes",
    "to": 259
  }, {
    "from": 259,
    "label": "requires",
    "to": 119
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "highlighter",
    "type": "module"
  }, {
    "id": 2,
    "text": "local function process_text(text,with_headers,css_embedded_code,css_link,html_title)\r\n\treturn highlighter.highlight_text(text,nil,with_headers,css_embedded_code,css_link,html_title);\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local function prepare_grammar(tbl)\r\n\tfor key,value in pairs(tbl) do\r\n\t\ttbl[key]=lpeg.C(value);\r\n\tend\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "for key,value in pairs(tbl) do\r\n\t\ttbl[key]=lpeg.C(value);\r\n\tend",
    "type": "statement:genericfor"
  }, {
    "id": 5,
    "text": "tbl[key]=lpeg.C(value)",
    "type": "statement:assign"
  }, {
    "id": 6,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 7,
    "text": "local function print_table(tbl)\r\n\tfor key,value in pairs(tbl) do\r\n\t\tprint(key,\" \",value);\r\n\t\tif(type(value)==\"table\") then \r\n\t\t\tprint_table(value);\r\n\t\tend\r\n\tend\r\nend",
    "type": "function"
  }, {
    "id": 8,
    "text": "for key,value in pairs(tbl) do\r\n\t\tprint(key,\" \",value);\r\n\t\tif(type(value)==\"table\") then \r\n\t\t\tprint_table(value);\r\n\t\tend\r\n\tend",
    "type": "statement:genericfor"
  }, {
    "id": 9,
    "text": "print(key,\" \",value)",
    "type": "statement:functioncall"
  }, {
    "id": 10,
    "text": "if(type(value)==\"table\") then \r\n\t\t\tprint_table(value);\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 11,
    "text": "print_table(value)",
    "type": "statement:functioncall"
  }, {
    "id": 12,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 13,
    "text": "local function prepare_captures(grammar_tbl,captures_tbl)\r\n\tfor key,value in pairs(grammar_tbl) do\r\n\t\tcaptures_tbl[key]=function(str,...)\r\n\t\t\treturn {key=key,str=str,...};\r\n\t\tend;\r\n\tend\r\nend",
    "type": "function"
  }, {
    "id": 14,
    "text": "for key,value in pairs(grammar_tbl) do\r\n\t\tcaptures_tbl[key]=function(str,...)\r\n\t\t\treturn {key=key,str=str,...};\r\n\t\tend;\r\n\tend",
    "type": "statement:genericfor"
  }, {
    "id": 15,
    "text": "captures_tbl[key]=function(str,...)\r\n\t\t\treturn {key=key,str=str,...};\r\n\t\tend",
    "type": "statement:assign"
  }, {
    "id": 16,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 17,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 18,
    "text": "function(str,...)\r\n\t\t\treturn {key=key,str=str,...};\r\n\t\tend",
    "type": "function"
  }, {
    "id": 19,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 20,
    "text": "local function in_table(t,val)\r\n\tfor _,v in ipairs(t) do\t\r\n\t\tif(v==val) then\r\n\t\t\treturn true\r\n\t\tend\r\n\tend\r\n\treturn false\r\nend",
    "type": "function"
  }, {
    "id": 21,
    "text": "for _,v in ipairs(t) do\t\r\n\t\tif(v==val) then\r\n\t\t\treturn true\r\n\t\tend\r\n\tend",
    "type": "statement:genericfor"
  }, {
    "id": 22,
    "text": "if(v==val) then\r\n\t\t\treturn true\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 23,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 24,
    "text": "local function css_extra(key,value)\r\n\tif(key==\"Exp\" or key==\"_PrefixExp\") then\r\n\t\tif(type(value)==\"string\") then\r\n\t\t\tvalue=value:gsub(\"%(.+$\",\"\");\r\n\t\t\tlocal dot_pos=value:find(\"%.\");\r\n\t\t\tif(dot_pos) then\r\n\t\t\t\tfor k,v in ipairs(lua_modules) do\r\n\t\t\t\t\tif(value:sub(0,dot_pos-1)==v) then\r\n\t\t\t\t\t\treturn \" lua_module \"..v;\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\telse\r\n\t\t\t\t--funkcia\r\n\t\t\t\tfor k,v in ipairs(lua_functions) do\r\n\t\t\t\t\tif(value==v) then\r\n\t\t\t\t\t\treturn \" lua_function \"..v:lower();\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\treturn \"\";\r\nend",
    "type": "function"
  }, {
    "id": 25,
    "text": "if(key==\"Exp\" or key==\"_PrefixExp\") then\r\n\t\tif(type(value)==\"string\") then\r\n\t\t\tvalue=value:gsub(\"%(.+$\",\"\");\r\n\t\t\tlocal dot_pos=value:find(\"%.\");\r\n\t\t\tif(dot_pos) then\r\n\t\t\t\tfor k,v in ipairs(lua_modules) do\r\n\t\t\t\t\tif(value:sub(0,dot_pos-1)==v) then\r\n\t\t\t\t\t\treturn \" lua_module \"..v;\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\telse\r\n\t\t\t\t--funkcia\r\n\t\t\t\tfor k,v in ipairs(lua_functions) do\r\n\t\t\t\t\tif(value==v) then\r\n\t\t\t\t\t\treturn \" lua_function \"..v:lower();\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 26,
    "text": "if(type(value)==\"string\") then\r\n\t\t\tvalue=value:gsub(\"%(.+$\",\"\");\r\n\t\t\tlocal dot_pos=value:find(\"%.\");\r\n\t\t\tif(dot_pos) then\r\n\t\t\t\tfor k,v in ipairs(lua_modules) do\r\n\t\t\t\t\tif(value:sub(0,dot_pos-1)==v) then\r\n\t\t\t\t\t\treturn \" lua_module \"..v;\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\telse\r\n\t\t\t\t--funkcia\r\n\t\t\t\tfor k,v in ipairs(lua_functions) do\r\n\t\t\t\t\tif(value==v) then\r\n\t\t\t\t\t\treturn \" lua_function \"..v:lower();\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 27,
    "text": "value=value:gsub(\"%(.+$\",\"\")",
    "type": "statement:assign"
  }, {
    "id": 28,
    "text": "local dot_pos=value:find(\"%.\")",
    "type": "statement:localassign"
  }, {
    "id": 29,
    "text": "if(dot_pos) then\r\n\t\t\t\tfor k,v in ipairs(lua_modules) do\r\n\t\t\t\t\tif(value:sub(0,dot_pos-1)==v) then\r\n\t\t\t\t\t\treturn \" lua_module \"..v;\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\telse\r\n\t\t\t\t--funkcia\r\n\t\t\t\tfor k,v in ipairs(lua_functions) do\r\n\t\t\t\t\tif(value==v) then\r\n\t\t\t\t\t\treturn \" lua_function \"..v:lower();\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 30,
    "text": "for k,v in ipairs(lua_modules) do\r\n\t\t\t\t\tif(value:sub(0,dot_pos-1)==v) then\r\n\t\t\t\t\t\treturn \" lua_module \"..v;\r\n\t\t\t\t\tend\r\n\t\t\t\tend",
    "type": "statement:genericfor"
  }, {
    "id": 31,
    "text": "if(value:sub(0,dot_pos-1)==v) then\r\n\t\t\t\t\t\treturn \" lua_module \"..v;\r\n\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 32,
    "text": "for k,v in ipairs(lua_functions) do\r\n\t\t\t\t\tif(value==v) then\r\n\t\t\t\t\t\treturn \" lua_function \"..v:lower();\r\n\t\t\t\t\tend\r\n\t\t\t\tend",
    "type": "statement:genericfor"
  }, {
    "id": 33,
    "text": "if(value==v) then\r\n\t\t\t\t\t\treturn \" lua_function \"..v:lower();\r\n\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 34,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 35,
    "text": "local function get_css_class(key)\r\n\tif(type(key)==\"number\") then\r\n\t\tkey=tostring(key);\r\n\tend\r\n\tif(key:match(\"^%u+$\")) then\r\n\t\treturn (in_table(lua_keywords,key) and \"keyword \" or \"\")..\"upper_\"..key:lower();\r\n\telseif(key:match(\"^[a-zA-Z_]+$\")) then\r\n\t\treturn key:lower();\r\n\telseif(key:match(\"^%d+$\")) then\r\n\t\treturn symbol_aliases[key];\r\n\telse\r\n\t\treturn \"symbol symbol_\"..symbol_aliases[key];\r\n\tend\r\nend",
    "type": "function"
  }, {
    "id": 36,
    "text": "if(type(key)==\"number\") then\r\n\t\tkey=tostring(key);\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 37,
    "text": "key=tostring(key)",
    "type": "statement:assign"
  }, {
    "id": 38,
    "text": "if(key:match(\"^%u+$\")) then\r\n\t\treturn (in_table(lua_keywords,key) and \"keyword \" or \"\")..\"upper_\"..key:lower();\r\n\telseif(key:match(\"^[a-zA-Z_]+$\")) then\r\n\t\treturn key:lower();\r\n\telseif(key:match(\"^%d+$\")) then\r\n\t\treturn symbol_aliases[key];\r\n\telse\r\n\t\treturn \"symbol symbol_\"..symbol_aliases[key];\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 39,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 40,
    "text": "local function sh(text)\r\n\tif(type(text)~=\"string\") then\r\n\t\treturn tostring(text);\r\n\tend\r\n\ttext=text:gsub(\"&\",\"&amp;\");\r\n  \ttext=text:gsub(\"&#\",\"&#38;&#35;\");\r\n\ttext=text:gsub(\"<\",\"&lt;\");\r\n\ttext=text:gsub(\">\",\"&gt;\");\r\n\ttext=text:gsub(\"\\\"\",\"&#34;\");\r\n\ttext=text:gsub(\"'\",\"&#39;\");\r\n\treturn text;\r\nend",
    "type": "function"
  }, {
    "id": 41,
    "text": "if(type(text)~=\"string\") then\r\n\t\treturn tostring(text);\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 42,
    "text": "text=text:gsub(\"&\",\"&amp;\")",
    "type": "statement:assign"
  }, {
    "id": 43,
    "text": "text=text:gsub(\"&#\",\"&#38;&#35;\")",
    "type": "statement:assign"
  }, {
    "id": 44,
    "text": "text=text:gsub(\"<\",\"&lt;\")",
    "type": "statement:assign"
  }, {
    "id": 45,
    "text": "text=text:gsub(\">\",\"&gt;\")",
    "type": "statement:assign"
  }, {
    "id": 46,
    "text": "text=text:gsub(\"\\\"\",\"&#34;\")",
    "type": "statement:assign"
  }, {
    "id": 47,
    "text": "text=text:gsub(\"'\",\"&#39;\")",
    "type": "statement:assign"
  }, {
    "id": 48,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 49,
    "text": "function assemble_table(tbl)\r\n\tlocal output=\"\";\r\n\tlocal output_clean=\"\";\r\n\tlocal table_found=false;\r\n\tfor k,v in ipairs(tbl) do --ipairs is sufficient, as lpeg parsed sub-nodes will have only numeric keys\r\n\t\tif(type(v)==\"table\") then --just to be sure\r\n\t\t\tlocal out, out_clean=assemble_table(v);\r\n\t\t\toutput=output..out;\r\n\t\t\toutput_clean=output_clean..out_clean;\r\n\t\t\ttable_found=true;\r\n\t\tend\r\n\tend\r\n\tif(table_found==false) then\r\n\t\t\t\tif(get_css_class(tbl[\"key\"]) == \"upper_comment\")then\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*TODO\" ))then\r\n\t\t\t\t\t\ttodoi=todoi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_todo\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='TODO\" ..todoi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*bug\" ))then\r\n\t\t\t\t\t\tbugi=bugi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_bug\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='bug\" ..bugi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*?\" ))then\r\n\t\t\t\t\t\tquestioni=questioni+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_question\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='question\" ..questioni .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*fixme\" ))then\r\n\t\t\t\t\t\tfixmei=fixmei+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_fixme\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='fixme\" ..fixmei .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*info\" ))then\r\n\t\t\t\t\t\tinfoi=infoi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_info\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='info\" ..infoi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*how\" ))then\r\n\t\t\t\t\t\thowi=howi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_how\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='how\" ..howi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\t\t-- print(,sh(tbl['str']))\r\n\t\treturn \"<span class='\"..get_css_class(tbl['key'])..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'>\"..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\tend\r\n\treturn \"<span class='\"..get_css_class(tbl['key'])..css_extra(tbl['key'],output_clean)..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'>\"..output..\"</span>\", output_clean;\r\nend",
    "type": "function"
  }, {
    "id": 50,
    "text": "local output=\"\"",
    "type": "statement:localassign"
  }, {
    "id": 51,
    "text": "local output_clean=\"\"",
    "type": "statement:localassign"
  }, {
    "id": 52,
    "text": "local table_found=false",
    "type": "statement:localassign"
  }, {
    "id": 53,
    "text": "for k,v in ipairs(tbl) do --ipairs is sufficient, as lpeg parsed sub-nodes will have only numeric keys\r\n\t\tif(type(v)==\"table\") then --just to be sure\r\n\t\t\tlocal out, out_clean=assemble_table(v);\r\n\t\t\toutput=output..out;\r\n\t\t\toutput_clean=output_clean..out_clean;\r\n\t\t\ttable_found=true;\r\n\t\tend\r\n\tend",
    "type": "statement:genericfor"
  }, {
    "id": 54,
    "text": "if(type(v)==\"table\") then --just to be sure\r\n\t\t\tlocal out, out_clean=assemble_table(v);\r\n\t\t\toutput=output..out;\r\n\t\t\toutput_clean=output_clean..out_clean;\r\n\t\t\ttable_found=true;\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 55,
    "text": "local out, out_clean=assemble_table(v)",
    "type": "statement:localassign"
  }, {
    "id": 56,
    "text": "output=output..out",
    "type": "statement:assign"
  }, {
    "id": 57,
    "text": "output_clean=output_clean..out_clean",
    "type": "statement:assign"
  }, {
    "id": 58,
    "text": "table_found=true",
    "type": "statement:assign"
  }, {
    "id": 59,
    "text": "if(table_found==false) then\r\n\t\t\t\tif(get_css_class(tbl[\"key\"]) == \"upper_comment\")then\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*TODO\" ))then\r\n\t\t\t\t\t\ttodoi=todoi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_todo\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='TODO\" ..todoi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*bug\" ))then\r\n\t\t\t\t\t\tbugi=bugi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_bug\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='bug\" ..bugi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*?\" ))then\r\n\t\t\t\t\t\tquestioni=questioni+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_question\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='question\" ..questioni .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*fixme\" ))then\r\n\t\t\t\t\t\tfixmei=fixmei+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_fixme\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='fixme\" ..fixmei .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*info\" ))then\r\n\t\t\t\t\t\tinfoi=infoi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_info\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='info\" ..infoi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*how\" ))then\r\n\t\t\t\t\t\thowi=howi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_how\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='how\" ..howi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\t\t-- print(,sh(tbl['str']))\r\n\t\treturn \"<span class='\"..get_css_class(tbl['key'])..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'>\"..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 60,
    "text": "if(get_css_class(tbl[\"key\"]) == \"upper_comment\")then\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*TODO\" ))then\r\n\t\t\t\t\t\ttodoi=todoi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_todo\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='TODO\" ..todoi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*bug\" ))then\r\n\t\t\t\t\t\tbugi=bugi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_bug\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='bug\" ..bugi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*?\" ))then\r\n\t\t\t\t\t\tquestioni=questioni+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_question\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='question\" ..questioni .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*fixme\" ))then\r\n\t\t\t\t\t\tfixmei=fixmei+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_fixme\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='fixme\" ..fixmei .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*info\" ))then\r\n\t\t\t\t\t\tinfoi=infoi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_info\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='info\" ..infoi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif(string.match(sh(tbl['str']),\"^--[%s]*how\" ))then\r\n\t\t\t\t\t\thowi=howi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_how\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='how\" ..howi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend\r\n\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 61,
    "text": "if(string.match(sh(tbl['str']),\"^--[%s]*TODO\" ))then\r\n\t\t\t\t\t\ttodoi=todoi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_todo\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='TODO\" ..todoi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 62,
    "text": "todoi=todoi+1",
    "type": "statement:assign"
  }, {
    "id": 63,
    "text": "if(string.match(sh(tbl['str']),\"^--[%s]*bug\" ))then\r\n\t\t\t\t\t\tbugi=bugi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_bug\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='bug\" ..bugi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 64,
    "text": "bugi=bugi+1",
    "type": "statement:assign"
  }, {
    "id": 65,
    "text": "if(string.match(sh(tbl['str']),\"^--[%s]*?\" ))then\r\n\t\t\t\t\t\tquestioni=questioni+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_question\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='question\" ..questioni .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 66,
    "text": "questioni=questioni+1",
    "type": "statement:assign"
  }, {
    "id": 67,
    "text": "if(string.match(sh(tbl['str']),\"^--[%s]*fixme\" ))then\r\n\t\t\t\t\t\tfixmei=fixmei+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_fixme\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='fixme\" ..fixmei .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 68,
    "text": "fixmei=fixmei+1",
    "type": "statement:assign"
  }, {
    "id": 69,
    "text": "if(string.match(sh(tbl['str']),\"^--[%s]*info\" ))then\r\n\t\t\t\t\t\tinfoi=infoi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_info\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='info\" ..infoi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 70,
    "text": "infoi=infoi+1",
    "type": "statement:assign"
  }, {
    "id": 71,
    "text": "if(string.match(sh(tbl['str']),\"^--[%s]*how\" ))then\r\n\t\t\t\t\t\thowi=howi+1\r\n\t\t\t\t\t\treturn \"<span class='\"..get_css_class(tbl['key']).. \"_how\"..(tbl['css_extra'] and tbl['css_extra'] or \"\")..\"'><a name='how\" ..howi .. \"'></a>\" ..sh(tbl['str'])..\"</span>\", tbl['str'];\r\n\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 72,
    "text": "howi=howi+1",
    "type": "statement:assign"
  }, {
    "id": 73,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 74,
    "text": "function highlight_text(text,pt,with_headers,embedded_css_code,css_link,html_title) -- je mozne predat hotovy parse tree (jedine, co musi obsahovat, je kluc kazdej node)\r\n\tlocal rules=leg_parser.rules;\r\n\ttodoi=0\r\n\tbugi=0\r\n\tquestioni=0\r\n\tfixmei=0\r\n\tinfoi=0\r\n\thowi=0\r\n\r\n\tlocal output=\"\";\r\n\t\r\n\tif(pt==nil) then\r\n\t\tlocal captures_tbl={};\r\n\t\t\r\n\t\trules=leg_grammar.apply({COMMENT=leg_scanner.COMMENT, SPACE=leg_scanner.SPACE},rules)\r\n\t\r\n\t\tprepare_grammar(rules);\r\n\t\trules['IGNORED']=lpeg.C((lpeg.V'SPACE' + lpeg.V'COMMENT')^0)\r\n\t\tprepare_captures(rules,captures_tbl);\r\n\r\n\t\tlocal grammar_with_captures=leg_grammar.apply(rules,nil,captures_tbl);\r\n\r\n\t\tpt=lpeg.match(grammar_with_captures,text);\r\n\tend\r\n\t\r\n\t-- initialize parameters\r\n\tif(with_headers) then\r\n\t\tif(html_title==nil) then\r\n\t\t\thtml_title=\"Highlighted code\";\r\n\t\tend\r\n\t\toutput=[[<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n<meta name=\"description\" content=\"Highlighted code using Lua Highlighter\" />\r\n<meta name=\"Author\" content=\"Viliam Kubis\" />\r\n<meta name=\"keywords\" content=\"highlight, code\" />\r\n<meta name=\"robots\" content=\"index,follow\" />\r\n<title>]]..sh(html_title)..[[</title>]];\r\n\t\tif(embedded_css_code) then\r\n\t\t\toutput=output..\"<style type='text/css'>\\n\"..embedded_css_code..\"\\n</style>\";\r\n\t\tend\r\n\t\tif(css_link) then\r\n\t\t\toutput=output..\"<link rel='stylesheet' type='text/css' media='all' href='\"..sh(css_link)..\"' />\";\r\n\t\tend\r\n\t\toutput=output..[[\r\n</head>\r\n<body>\r\n]];\r\n\tend\r\n\t\r\n\toutput=output..\"<pre class='highlighted_code'>\"..assemble_table(pt)..\"</pre>\";\r\n\t\r\n\tif(with_headers) then\r\n\t\toutput=output..\"</body></html>\";\r\n\tend\r\n\treturn output, pt\r\nend",
    "type": "function"
  }, {
    "id": 75,
    "text": "local rules=leg_parser.rules",
    "type": "statement:localassign"
  }, {
    "id": 76,
    "text": "todoi=0",
    "type": "statement:assign"
  }, {
    "id": 77,
    "text": "bugi=0",
    "type": "statement:assign"
  }, {
    "id": 78,
    "text": "questioni=0",
    "type": "statement:assign"
  }, {
    "id": 79,
    "text": "fixmei=0",
    "type": "statement:assign"
  }, {
    "id": 80,
    "text": "infoi=0",
    "type": "statement:assign"
  }, {
    "id": 81,
    "text": "howi=0",
    "type": "statement:assign"
  }, {
    "id": 82,
    "text": "if(pt==nil) then\r\n\t\tlocal captures_tbl={};\r\n\t\t\r\n\t\trules=leg_grammar.apply({COMMENT=leg_scanner.COMMENT, SPACE=leg_scanner.SPACE},rules)\r\n\t\r\n\t\tprepare_grammar(rules);\r\n\t\trules['IGNORED']=lpeg.C((lpeg.V'SPACE' + lpeg.V'COMMENT')^0)\r\n\t\tprepare_captures(rules,captures_tbl);\r\n\r\n\t\tlocal grammar_with_captures=leg_grammar.apply(rules,nil,captures_tbl);\r\n\r\n\t\tpt=lpeg.match(grammar_with_captures,text);\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 83,
    "text": "local captures_tbl={}",
    "type": "statement:localassign"
  }, {
    "id": 84,
    "text": "rules=leg_grammar.apply({COMMENT=leg_scanner.COMMENT, SPACE=leg_scanner.SPACE},rules)",
    "type": "statement:assign"
  }, {
    "id": 85,
    "text": "prepare_grammar(rules)",
    "type": "statement:functioncall"
  }, {
    "id": 86,
    "text": "rules['IGNORED']=lpeg.C((lpeg.V'SPACE' + lpeg.V'COMMENT')^0)",
    "type": "statement:assign"
  }, {
    "id": 87,
    "text": "prepare_captures(rules,captures_tbl)",
    "type": "statement:functioncall"
  }, {
    "id": 88,
    "text": "local grammar_with_captures=leg_grammar.apply(rules,nil,captures_tbl)",
    "type": "statement:localassign"
  }, {
    "id": 89,
    "text": "pt=lpeg.match(grammar_with_captures,text)",
    "type": "statement:assign"
  }, {
    "id": 90,
    "text": "if(with_headers) then\r\n\t\tif(html_title==nil) then\r\n\t\t\thtml_title=\"Highlighted code\";\r\n\t\tend\r\n\t\toutput=[[<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n<meta name=\"description\" content=\"Highlighted code using Lua Highlighter\" />\r\n<meta name=\"Author\" content=\"Viliam Kubis\" />\r\n<meta name=\"keywords\" content=\"highlight, code\" />\r\n<meta name=\"robots\" content=\"index,follow\" />\r\n<title>]]..sh(html_title)..[[</title>]];\r\n\t\tif(embedded_css_code) then\r\n\t\t\toutput=output..\"<style type='text/css'>\\n\"..embedded_css_code..\"\\n</style>\";\r\n\t\tend\r\n\t\tif(css_link) then\r\n\t\t\toutput=output..\"<link rel='stylesheet' type='text/css' media='all' href='\"..sh(css_link)..\"' />\";\r\n\t\tend\r\n\t\toutput=output..[[\r\n</head>\r\n<body>\r\n]];\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 91,
    "text": "if(html_title==nil) then\r\n\t\t\thtml_title=\"Highlighted code\";\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 92,
    "text": "html_title=\"Highlighted code\"",
    "type": "statement:assign"
  }, {
    "id": 93,
    "text": "output=[[<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n<meta name=\"description\" content=\"Highlighted code using Lua Highlighter\" />\r\n<meta name=\"Author\" content=\"Viliam Kubis\" />\r\n<meta name=\"keywords\" content=\"highlight, code\" />\r\n<meta name=\"robots\" content=\"index,follow\" />\r\n<title>]]..sh(html_title)..[[</title>]]",
    "type": "statement:assign"
  }, {
    "id": 94,
    "text": "if(embedded_css_code) then\r\n\t\t\toutput=output..\"<style type='text/css'>\\n\"..embedded_css_code..\"\\n</style>\";\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 95,
    "text": "output=output..\"<style type='text/css'>\\n\"..embedded_css_code..\"\\n</style>\"",
    "type": "statement:assign"
  }, {
    "id": 96,
    "text": "if(css_link) then\r\n\t\t\toutput=output..\"<link rel='stylesheet' type='text/css' media='all' href='\"..sh(css_link)..\"' />\";\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 97,
    "text": "output=output..\"<link rel='stylesheet' type='text/css' media='all' href='\"..sh(css_link)..\"' />\"",
    "type": "statement:assign"
  }, {
    "id": 98,
    "text": "output=output..[[\r\n</head>\r\n<body>\r\n]]",
    "type": "statement:assign"
  }, {
    "id": 99,
    "text": "output=output..\"<pre class='highlighted_code'>\"..assemble_table(pt)..\"</pre>\"",
    "type": "statement:assign"
  }, {
    "id": 100,
    "text": "if(with_headers) then\r\n\t\toutput=output..\"</body></html>\";\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 101,
    "text": "output=output..\"</body></html>\"",
    "type": "statement:assign"
  }, {
    "id": 102,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 103,
    "text": "",
    "type": "function container"
  }, {
    "id": 104,
    "text": "apply",
    "type": "global function"
  }, {
    "id": 105,
    "text": "match",
    "type": "global function"
  }, {
    "id": 106,
    "text": "V",
    "type": "global function"
  }, {
    "id": 107,
    "text": "C",
    "type": "global function"
  }, {
    "id": 108,
    "text": "match",
    "type": "global function"
  }, {
    "id": 109,
    "text": "ipairs",
    "type": "global function"
  }, {
    "id": 110,
    "text": "pairs",
    "type": "global function"
  }, {
    "id": 111,
    "text": "print",
    "type": "global function"
  }, {
    "id": 112,
    "text": "module",
    "type": "global function"
  }, {
    "id": 113,
    "text": "type",
    "type": "global function"
  }, {
    "id": 114,
    "text": "require",
    "type": "global function"
  }, {
    "id": 115,
    "text": "tostring",
    "type": "global function"
  }, {
    "id": 116,
    "text": "(lpeg)",
    "type": "module"
  }, {
    "id": 117,
    "text": "parser)",
    "type": "module"
  }, {
    "id": 118,
    "text": "grammar)",
    "type": "module"
  }, {
    "id": 119,
    "text": "scanner)",
    "type": "module"
  }, {
    "id": 120,
    "text": "",
    "type": "variable container"
  }, {
    "id": 121,
    "text": "",
    "type": "require container"
  }, {
    "id": 122,
    "text": "",
    "type": "local variable"
  }, {
    "id": 123,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 124,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 125,
    "text": "",
    "type": "string"
  }, {
    "id": 126,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 127,
    "text": "",
    "type": "string"
  }, {
    "id": 128,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 129,
    "text": "",
    "type": "string"
  }, {
    "id": 130,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 131,
    "text": "",
    "type": "string"
  }, {
    "id": 132,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 133,
    "text": "",
    "type": "string"
  }, {
    "id": 134,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 135,
    "text": "",
    "type": "string"
  }, {
    "id": 136,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 137,
    "text": "",
    "type": "string"
  }, {
    "id": 138,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 139,
    "text": "",
    "type": "string"
  }, {
    "id": 140,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 141,
    "text": "",
    "type": "string"
  }, {
    "id": 142,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 143,
    "text": "",
    "type": "string"
  }, {
    "id": 144,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 145,
    "text": "",
    "type": "string"
  }, {
    "id": 146,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 147,
    "text": "",
    "type": "string"
  }, {
    "id": 148,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 149,
    "text": "",
    "type": "string"
  }, {
    "id": 150,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 151,
    "text": "",
    "type": "string"
  }, {
    "id": 152,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 153,
    "text": "",
    "type": "string"
  }, {
    "id": 154,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 155,
    "text": "",
    "type": "string"
  }, {
    "id": 156,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 157,
    "text": "",
    "type": "string"
  }, {
    "id": 158,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 159,
    "text": "",
    "type": "string"
  }, {
    "id": 160,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 161,
    "text": "",
    "type": "string"
  }, {
    "id": 162,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 163,
    "text": "",
    "type": "string"
  }, {
    "id": 164,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 165,
    "text": "",
    "type": "string"
  }, {
    "id": 166,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 167,
    "text": "",
    "type": "string"
  }, {
    "id": 168,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 169,
    "text": "",
    "type": "string"
  }, {
    "id": 170,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 171,
    "text": "",
    "type": "string"
  }, {
    "id": 172,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 173,
    "text": "",
    "type": "string"
  }, {
    "id": 174,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 175,
    "text": "",
    "type": "string"
  }, {
    "id": 176,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 177,
    "text": "",
    "type": "string"
  }, {
    "id": 178,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 179,
    "text": "",
    "type": "string"
  }, {
    "id": 180,
    "text": "",
    "type": "local variable"
  }, {
    "id": 181,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 182,
    "text": "",
    "type": "string"
  }, {
    "id": 183,
    "text": "",
    "type": "string"
  }, {
    "id": 184,
    "text": "",
    "type": "string"
  }, {
    "id": 185,
    "text": "",
    "type": "string"
  }, {
    "id": 186,
    "text": "",
    "type": "string"
  }, {
    "id": 187,
    "text": "",
    "type": "string"
  }, {
    "id": 188,
    "text": "",
    "type": "string"
  }, {
    "id": 189,
    "text": "",
    "type": "string"
  }, {
    "id": 190,
    "text": "",
    "type": "local variable"
  }, {
    "id": 191,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 192,
    "text": "",
    "type": "string"
  }, {
    "id": 193,
    "text": "",
    "type": "string"
  }, {
    "id": 194,
    "text": "",
    "type": "string"
  }, {
    "id": 195,
    "text": "",
    "type": "string"
  }, {
    "id": 196,
    "text": "",
    "type": "string"
  }, {
    "id": 197,
    "text": "",
    "type": "string"
  }, {
    "id": 198,
    "text": "",
    "type": "string"
  }, {
    "id": 199,
    "text": "",
    "type": "string"
  }, {
    "id": 200,
    "text": "",
    "type": "string"
  }, {
    "id": 201,
    "text": "",
    "type": "string"
  }, {
    "id": 202,
    "text": "",
    "type": "string"
  }, {
    "id": 203,
    "text": "",
    "type": "string"
  }, {
    "id": 204,
    "text": "",
    "type": "string"
  }, {
    "id": 205,
    "text": "",
    "type": "string"
  }, {
    "id": 206,
    "text": "",
    "type": "string"
  }, {
    "id": 207,
    "text": "",
    "type": "string"
  }, {
    "id": 208,
    "text": "",
    "type": "string"
  }, {
    "id": 209,
    "text": "",
    "type": "string"
  }, {
    "id": 210,
    "text": "",
    "type": "string"
  }, {
    "id": 211,
    "text": "",
    "type": "string"
  }, {
    "id": 212,
    "text": "",
    "type": "string"
  }, {
    "id": 213,
    "text": "",
    "type": "string"
  }, {
    "id": 214,
    "text": "",
    "type": "string"
  }, {
    "id": 215,
    "text": "",
    "type": "string"
  }, {
    "id": 216,
    "text": "",
    "type": "string"
  }, {
    "id": 217,
    "text": "",
    "type": "string"
  }, {
    "id": 218,
    "text": "",
    "type": "string"
  }, {
    "id": 219,
    "text": "",
    "type": "string"
  }, {
    "id": 220,
    "text": "",
    "type": "string"
  }, {
    "id": 221,
    "text": "",
    "type": "local variable"
  }, {
    "id": 222,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 223,
    "text": "",
    "type": "string"
  }, {
    "id": 224,
    "text": "",
    "type": "string"
  }, {
    "id": 225,
    "text": "",
    "type": "string"
  }, {
    "id": 226,
    "text": "",
    "type": "string"
  }, {
    "id": 227,
    "text": "",
    "type": "string"
  }, {
    "id": 228,
    "text": "",
    "type": "string"
  }, {
    "id": 229,
    "text": "",
    "type": "string"
  }, {
    "id": 230,
    "text": "",
    "type": "string"
  }, {
    "id": 231,
    "text": "",
    "type": "string"
  }, {
    "id": 232,
    "text": "",
    "type": "string"
  }, {
    "id": 233,
    "text": "",
    "type": "string"
  }, {
    "id": 234,
    "text": "",
    "type": "string"
  }, {
    "id": 235,
    "text": "",
    "type": "string"
  }, {
    "id": 236,
    "text": "",
    "type": "string"
  }, {
    "id": 237,
    "text": "",
    "type": "string"
  }, {
    "id": 238,
    "text": "",
    "type": "string"
  }, {
    "id": 239,
    "text": "",
    "type": "string"
  }, {
    "id": 240,
    "text": "",
    "type": "string"
  }, {
    "id": 241,
    "text": "",
    "type": "string"
  }, {
    "id": 242,
    "text": "",
    "type": "string"
  }, {
    "id": 243,
    "text": "",
    "type": "string"
  }, {
    "id": 244,
    "text": "",
    "type": "local variable"
  }, {
    "id": 245,
    "text": "",
    "type": "number"
  }, {
    "id": 246,
    "text": "",
    "type": "local variable"
  }, {
    "id": 247,
    "text": "",
    "type": "number"
  }, {
    "id": 248,
    "text": "",
    "type": "local variable"
  }, {
    "id": 249,
    "text": "",
    "type": "number"
  }, {
    "id": 250,
    "text": "",
    "type": "local variable"
  }, {
    "id": 251,
    "text": "",
    "type": "number"
  }, {
    "id": 252,
    "text": "",
    "type": "local variable"
  }, {
    "id": 253,
    "text": "",
    "type": "number"
  }, {
    "id": 254,
    "text": "",
    "type": "local variable"
  }, {
    "id": 255,
    "text": "",
    "type": "number"
  }, {
    "id": 256,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 257,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 258,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 259,
    "text": "",
    "type": "require local variable"
  } ]
}