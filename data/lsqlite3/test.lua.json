{
  "_filename": "test.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/lsqlite3/test.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 8,
    "label": "has",
    "to": 11
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 12,
    "label": "has",
    "to": 14
  }, {
    "from": 12,
    "label": "has",
    "to": 15
  }, {
    "from": 12,
    "label": "has",
    "to": 16
  }, {
    "from": 12,
    "label": "has",
    "to": 17
  }, {
    "from": 12,
    "label": "has",
    "to": 18
  }, {
    "from": 12,
    "label": "has",
    "to": 19
  }, {
    "from": 12,
    "label": "has",
    "to": 20
  }, {
    "from": 20,
    "label": "has",
    "to": 21
  }, {
    "from": 20,
    "label": "has",
    "to": 19
  }, {
    "from": 12,
    "label": "has",
    "to": 22
  }, {
    "from": 12,
    "label": "has",
    "to": 23
  }, {
    "from": 12,
    "label": "has",
    "to": 16
  }, {
    "from": 12,
    "label": "has",
    "to": 24
  }, {
    "from": 25,
    "label": "has",
    "to": 26
  }, {
    "from": 25,
    "label": "has",
    "to": 27
  }, {
    "from": 25,
    "label": "has",
    "to": 28
  }, {
    "from": 25,
    "label": "has",
    "to": 29
  }, {
    "from": 30,
    "label": "has",
    "to": 31
  }, {
    "from": 30,
    "label": "has",
    "to": 32
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 32,
    "label": "has",
    "to": 34
  }, {
    "from": 30,
    "label": "has",
    "to": 35
  }, {
    "from": 30,
    "label": "has",
    "to": 36
  }, {
    "from": 37,
    "label": "has",
    "to": 31
  }, {
    "from": 37,
    "label": "has",
    "to": 38
  }, {
    "from": 37,
    "label": "has",
    "to": 39
  }, {
    "from": 40,
    "label": "has",
    "to": 41
  }, {
    "from": 40,
    "label": "has",
    "to": 42
  }, {
    "from": 40,
    "label": "has",
    "to": 43
  }, {
    "from": 44,
    "label": "calls",
    "to": 52
  }, {
    "from": 44,
    "label": "calls",
    "to": 52
  }, {
    "from": 44,
    "label": "calls",
    "to": 52
  }, {
    "from": 44,
    "label": "calls",
    "to": 52
  }, {
    "from": 44,
    "label": "calls",
    "to": 52
  }, {
    "from": 44,
    "label": "calls",
    "to": 52
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 12,
    "label": "calls",
    "to": 8
  }, {
    "from": 12,
    "label": "calls",
    "to": 8
  }, {
    "from": 12,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 8
  }, {
    "from": 44,
    "label": "calls",
    "to": 2
  }, {
    "from": 44,
    "label": "calls",
    "to": 2
  }, {
    "from": 44,
    "label": "calls",
    "to": 2
  }, {
    "from": 44,
    "label": "calls",
    "to": 2
  }, {
    "from": 44,
    "label": "calls",
    "to": 2
  }, {
    "from": 44,
    "label": "calls",
    "to": 2
  }, {
    "from": 44,
    "label": "calls",
    "to": 2
  }, {
    "from": 44,
    "label": "calls",
    "to": 2
  }, {
    "from": 44,
    "label": "calls",
    "to": 2
  }, {
    "from": 44,
    "label": "calls",
    "to": 2
  }, {
    "from": 44,
    "label": "calls",
    "to": 2
  }, {
    "from": 44,
    "label": "calls",
    "to": 2
  }, {
    "from": 2,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 12,
    "label": "calls",
    "to": 47
  }, {
    "from": 12,
    "label": "calls",
    "to": 47
  }, {
    "from": 12,
    "label": "calls",
    "to": 47
  }, {
    "from": 12,
    "label": "calls",
    "to": 47
  }, {
    "from": 12,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 48
  }, {
    "from": 44,
    "label": "calls",
    "to": 51
  }, {
    "from": 44,
    "label": "calls",
    "to": 49
  }, {
    "from": 44,
    "label": "calls",
    "to": 55
  }, {
    "from": 44,
    "label": "calls",
    "to": 55
  }, {
    "from": 2,
    "label": "calls",
    "to": 54
  }, {
    "from": 2,
    "label": "calls",
    "to": 54
  }, {
    "from": 2,
    "label": "calls",
    "to": 50
  }, {
    "from": 44,
    "label": "calls",
    "to": 53
  }, {
    "from": 44,
    "label": "calls",
    "to": 46
  }, {
    "from": 25,
    "label": "calls",
    "to": 45
  }, {
    "from": 44,
    "label": "calls",
    "to": 12
  }, {
    "from": 44,
    "label": "calls",
    "to": 12
  }, {
    "from": 44,
    "label": "calls",
    "to": 12
  }, {
    "from": 44,
    "label": "calls",
    "to": 12
  }, {
    "from": 44,
    "label": "calls",
    "to": 12
  }, {
    "from": 1,
    "label": "contains",
    "to": 44
  }, {
    "from": 44,
    "label": "declares",
    "to": 2
  }, {
    "from": 44,
    "label": "declares",
    "to": 8
  }, {
    "from": 44,
    "label": "declares",
    "to": 12
  }, {
    "from": 44,
    "label": "declares",
    "to": 25
  }, {
    "from": 44,
    "label": "declares",
    "to": 30
  }, {
    "from": 44,
    "label": "declares",
    "to": 37
  }, {
    "from": 44,
    "label": "declares",
    "to": 40
  }, {
    "from": 1,
    "label": "contains",
    "to": 57
  }, {
    "from": 1,
    "label": "contains",
    "to": 58
  }, {
    "from": 57,
    "label": "initializes",
    "to": 59
  }, {
    "from": 59,
    "label": "assigns",
    "to": 60
  }, {
    "from": 57,
    "label": "initializes",
    "to": 61
  }, {
    "from": 57,
    "label": "initializes",
    "to": 62
  }, {
    "from": 57,
    "label": "initializes",
    "to": 63
  }, {
    "from": 63,
    "label": "assigns",
    "to": 64
  }, {
    "from": 57,
    "label": "initializes",
    "to": 65
  }, {
    "from": 57,
    "label": "initializes",
    "to": 66
  }, {
    "from": 66,
    "label": "assigns",
    "to": 67
  }, {
    "from": 57,
    "label": "initializes",
    "to": 68
  }, {
    "from": 68,
    "label": "assigns",
    "to": 69
  }, {
    "from": 57,
    "label": "initializes",
    "to": 70
  }, {
    "from": 70,
    "label": "assigns",
    "to": 71
  }, {
    "from": 58,
    "label": "initializes",
    "to": 56
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "test",
    "type": "module"
  }, {
    "id": 2,
    "text": "local function line(pref, suff)\r\n    pref = pref or ''\r\n    suff = suff or ''\r\n    local len = width - 2 - string.len(pref) - string.len(suff)\r\n    print(pref .. string.rep('-', len) .. suff)\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "pref = pref or ''",
    "type": "statement:assign"
  }, {
    "id": 4,
    "text": "suff = suff or ''",
    "type": "statement:assign"
  }, {
    "id": 5,
    "text": "local len = width - 2 - string.len(pref) - string.len(suff)",
    "type": "statement:localassign"
  }, {
    "id": 6,
    "text": "print(pref .. string.rep('-', len) .. suff)",
    "type": "statement:functioncall"
  }, {
    "id": 7,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 8,
    "text": "function (test)\r\n    if (not test) then\r\n        error(db:errmsg(), 2)\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 9,
    "text": "if (not test) then\r\n        error(db:errmsg(), 2)\r\n    end",
    "type": "statement:if"
  }, {
    "id": 10,
    "text": "error(db:errmsg(), 2)",
    "type": "statement:functioncall"
  }, {
    "id": 11,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 12,
    "text": "local function do_query(sql)\r\n    local r\r\n    local vm = db:prepare(sql)\r\n    assert(vm, db:errmsg())\r\n    print('====================================')\r\n    print(vm:get_unames())\r\n    print('------------------------------------')\r\n    r = vm:step()\r\n    while (r == sqlite3.ROW) do\r\n        print(vm:get_uvalues())\r\n        r = vm:step()\r\n    end\r\n    assert(r == sqlite3.DONE)\r\n    assert(vm:finalize() == sqlite3.OK)\r\n    print('====================================')\r\nend",
    "type": "function"
  }, {
    "id": 13,
    "text": "local r",
    "type": "statement:localassign"
  }, {
    "id": 14,
    "text": "local vm = db:prepare(sql)",
    "type": "statement:localassign"
  }, {
    "id": 15,
    "text": "assert(vm, db:errmsg())",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "print('====================================')",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "print(vm:get_unames())",
    "type": "statement:functioncall"
  }, {
    "id": 18,
    "text": "print('------------------------------------')",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "r = vm:step()",
    "type": "statement:assign"
  }, {
    "id": 20,
    "text": "while (r == sqlite3.ROW) do\r\n        print(vm:get_uvalues())\r\n        r = vm:step()\r\n    end",
    "type": "statement:while"
  }, {
    "id": 21,
    "text": "print(vm:get_uvalues())",
    "type": "statement:functioncall"
  }, {
    "id": 22,
    "text": "assert(r == sqlite3.DONE)",
    "type": "statement:functioncall"
  }, {
    "id": 23,
    "text": "assert(vm:finalize() == sqlite3.OK)",
    "type": "statement:functioncall"
  }, {
    "id": 24,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 25,
    "text": "local function udf1_scalar(ctx, v)\r\n    local ud = ctx:user_data()\r\n    ud.r = (ud.r or '') .. tostring(v)\r\n    ctx:result_text(ud.r)\r\nend",
    "type": "function"
  }, {
    "id": 26,
    "text": "local ud = ctx:user_data()",
    "type": "statement:localassign"
  }, {
    "id": 27,
    "text": "ud.r = (ud.r or '') .. tostring(v)",
    "type": "statement:assign"
  }, {
    "id": 28,
    "text": "ctx:result_text(ud.r)",
    "type": "statement:functioncall"
  }, {
    "id": 29,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 30,
    "text": "local function udf2_aggregate(ctx, ...)\r\n    local ud = ctx:get_aggregate_data()\r\n    if (not ud) then\r\n        ud = {}\r\n        ctx:set_aggregate_data(ud)\r\n    end\r\n    ud.r = (ud.r or 0) + 2\r\nend",
    "type": "function"
  }, {
    "id": 31,
    "text": "local ud = ctx:get_aggregate_data()",
    "type": "statement:localassign"
  }, {
    "id": 32,
    "text": "if (not ud) then\r\n        ud = {}\r\n        ctx:set_aggregate_data(ud)\r\n    end",
    "type": "statement:if"
  }, {
    "id": 33,
    "text": "ud = {}",
    "type": "statement:assign"
  }, {
    "id": 34,
    "text": "ctx:set_aggregate_data(ud)",
    "type": "statement:functioncall"
  }, {
    "id": 35,
    "text": "ud.r = (ud.r or 0) + 2",
    "type": "statement:assign"
  }, {
    "id": 36,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 37,
    "text": "local function udf2_aggregate_finalize(ctx, v)\r\n    local ud = ctx:get_aggregate_data()\r\n    ctx:result_number(ud and ud.r or 0)\r\nend",
    "type": "function"
  }, {
    "id": 38,
    "text": "ctx:result_number(ud and ud.r or 0)",
    "type": "statement:functioncall"
  }, {
    "id": 39,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 40,
    "text": "function (ud, ncols, values, names)\r\n    --table.setn(values, 2)\r\n    print(unpack(values))\r\n    return sqlite3.OK\r\nend",
    "type": "function"
  }, {
    "id": 41,
    "text": "print(unpack(values))",
    "type": "statement:functioncall"
  }, {
    "id": 42,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 43,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 44,
    "text": "",
    "type": "function container"
  }, {
    "id": 45,
    "text": "tostring",
    "type": "global function"
  }, {
    "id": 46,
    "text": "open",
    "type": "global function"
  }, {
    "id": 47,
    "text": "print",
    "type": "global function"
  }, {
    "id": 48,
    "text": "remove",
    "type": "global function"
  }, {
    "id": 49,
    "text": "error",
    "type": "global function"
  }, {
    "id": 50,
    "text": "rep",
    "type": "global function"
  }, {
    "id": 51,
    "text": "require",
    "type": "global function"
  }, {
    "id": 52,
    "text": "time",
    "type": "global function"
  }, {
    "id": 53,
    "text": "unpack",
    "type": "global function"
  }, {
    "id": 54,
    "text": "len",
    "type": "global function"
  }, {
    "id": 55,
    "text": "version",
    "type": "global function"
  }, {
    "id": 56,
    "text": "",
    "type": "global variable"
  }, {
    "id": 57,
    "text": "",
    "type": "variable container"
  }, {
    "id": 58,
    "text": "",
    "type": "require container"
  }, {
    "id": 59,
    "text": "",
    "type": "local variable"
  }, {
    "id": 60,
    "text": "",
    "type": "number"
  }, {
    "id": 61,
    "text": "",
    "type": "local variable"
  }, {
    "id": 62,
    "text": "",
    "type": "local variable"
  }, {
    "id": 63,
    "text": "",
    "type": "local variable"
  }, {
    "id": 64,
    "text": "",
    "type": "n/a"
  }, {
    "id": 65,
    "text": "",
    "type": "local variable"
  }, {
    "id": 66,
    "text": "",
    "type": "global variable"
  }, {
    "id": 67,
    "text": "",
    "type": "n/a"
  }, {
    "id": 68,
    "text": "",
    "type": "global variable"
  }, {
    "id": 69,
    "text": "",
    "type": "n/a"
  }, {
    "id": 70,
    "text": "",
    "type": "global variable"
  }, {
    "id": 71,
    "text": "",
    "type": "n/a"
  } ]
}