{
  "_filename": "wishart.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/numlua/examples/wishart.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 9
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 10,
    "label": "has",
    "to": 3
  }, {
    "from": 10,
    "label": "has",
    "to": 12
  }, {
    "from": 10,
    "label": "has",
    "to": 4
  }, {
    "from": 10,
    "label": "has",
    "to": 13
  }, {
    "from": 10,
    "label": "has",
    "to": 14
  }, {
    "from": 14,
    "label": "has",
    "to": 15
  }, {
    "from": 14,
    "label": "has",
    "to": 16
  }, {
    "from": 10,
    "label": "has",
    "to": 4
  }, {
    "from": 10,
    "label": "has",
    "to": 17
  }, {
    "from": 18,
    "label": "has",
    "to": 5
  }, {
    "from": 18,
    "label": "has",
    "to": 6
  }, {
    "from": 18,
    "label": "has",
    "to": 7
  }, {
    "from": 18,
    "label": "has",
    "to": 8
  }, {
    "from": 18,
    "label": "has",
    "to": 4
  }, {
    "from": 18,
    "label": "has",
    "to": 19
  }, {
    "from": 20,
    "label": "has",
    "to": 13
  }, {
    "from": 20,
    "label": "has",
    "to": 14
  }, {
    "from": 14,
    "label": "has",
    "to": 15
  }, {
    "from": 14,
    "label": "has",
    "to": 16
  }, {
    "from": 20,
    "label": "has",
    "to": 4
  }, {
    "from": 20,
    "label": "has",
    "to": 21
  }, {
    "from": 2,
    "label": "calls",
    "to": 28
  }, {
    "from": 10,
    "label": "calls",
    "to": 28
  }, {
    "from": 2,
    "label": "calls",
    "to": 27
  }, {
    "from": 10,
    "label": "calls",
    "to": 27
  }, {
    "from": 10,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 30
  }, {
    "from": 2,
    "label": "calls",
    "to": 23
  }, {
    "from": 10,
    "label": "calls",
    "to": 23
  }, {
    "from": 2,
    "label": "calls",
    "to": 25
  }, {
    "from": 10,
    "label": "calls",
    "to": 25
  }, {
    "from": 10,
    "label": "calls",
    "to": 25
  }, {
    "from": 2,
    "label": "calls",
    "to": 29
  }, {
    "from": 10,
    "label": "calls",
    "to": 24
  }, {
    "from": 10,
    "label": "calls",
    "to": 24
  }, {
    "from": 2,
    "label": "calls",
    "to": 26
  }, {
    "from": 10,
    "label": "calls",
    "to": 26
  }, {
    "from": 10,
    "label": "calls",
    "to": 26
  }, {
    "from": 1,
    "label": "contains",
    "to": 22
  }, {
    "from": 22,
    "label": "declares",
    "to": 2
  }, {
    "from": 22,
    "label": "declares",
    "to": 10
  }, {
    "from": 22,
    "label": "declares",
    "to": 18
  }, {
    "from": 22,
    "label": "declares",
    "to": 20
  }, {
    "from": 1,
    "label": "contains",
    "to": 32
  }, {
    "from": 1,
    "label": "contains",
    "to": 33
  }, {
    "from": 32,
    "label": "initializes",
    "to": 34
  }, {
    "from": 34,
    "label": "assigns",
    "to": 35
  }, {
    "from": 32,
    "label": "initializes",
    "to": 36
  }, {
    "from": 36,
    "label": "assigns",
    "to": 37
  }, {
    "from": 32,
    "label": "initializes",
    "to": 38
  }, {
    "from": 38,
    "label": "assigns",
    "to": 39
  }, {
    "from": 32,
    "label": "initializes",
    "to": 40
  }, {
    "from": 40,
    "label": "assigns",
    "to": 41
  }, {
    "from": 32,
    "label": "initializes",
    "to": 42
  }, {
    "from": 42,
    "label": "assigns",
    "to": 43
  }, {
    "from": 32,
    "label": "initializes",
    "to": 44
  }, {
    "from": 44,
    "label": "assigns",
    "to": 45
  }, {
    "from": 33,
    "label": "initializes",
    "to": 31
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "wishart",
    "type": "module"
  }, {
    "id": 2,
    "text": "function mvnorm (mu, S)\r\n  local L = assert(chol(S, \"L\")) -- Cholesky factor: S = L * L^T\r\n  return function (dest)\r\n    local dest = dest or zeros(#mu)\r\n    local s = rnorm(0, 1, dest) -- s ~ N(0, I_n)\r\n    s = trmul(s, L) -- s = L * s, s ~ N(0, S)\r\n    s = add(s, mu, true) -- s = s + mu, s ~ N(mu, S)\r\n    return s\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local L = assert(chol(S, \"L\"))",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 5,
    "text": "local dest = dest or zeros(#mu)",
    "type": "statement:localassign"
  }, {
    "id": 6,
    "text": "local s = rnorm(0, 1, dest)",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "s = trmul(s, L)",
    "type": "statement:assign"
  }, {
    "id": 8,
    "text": "s = add(s, mu, true)",
    "type": "statement:assign"
  }, {
    "id": 9,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 10,
    "text": "function wishart (S, n)\r\n  local m = #S\r\n  local L = assert(chol(S, \"L\")) -- Cholesky factor: S = L * L^T\r\n  local c = zeros(m) -- cache\r\n  return function ()\r\n    local w = zeros(m, m)\r\n    for i = 1, n - 1 do\r\n      c = trmul(rnorm(0, 1, c), L) -- c ~ N(0, S)\r\n      w = hemul(w, c, false, \"L\") -- w = w + c * c^T\r\n    end\r\n    return hemul(w, trmul(rnorm(0, 1, c), L)) -- n-th run: full hemul\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 11,
    "text": "local m = #S",
    "type": "statement:localassign"
  }, {
    "id": 12,
    "text": "local c = zeros(m)",
    "type": "statement:localassign"
  }, {
    "id": 13,
    "text": "local w = zeros(m, m)",
    "type": "statement:localassign"
  }, {
    "id": 14,
    "text": "for i = 1, n - 1 do\r\n      c = trmul(rnorm(0, 1, c), L) -- c ~ N(0, S)\r\n      w = hemul(w, c, false, \"L\") -- w = w + c * c^T\r\n    end",
    "type": "statement:numericfor"
  }, {
    "id": 15,
    "text": "c = trmul(rnorm(0, 1, c), L)",
    "type": "statement:assign"
  }, {
    "id": 16,
    "text": "w = hemul(w, c, false, \"L\")",
    "type": "statement:assign"
  }, {
    "id": 17,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 18,
    "text": "function (dest)\r\n    local dest = dest or zeros(#mu)\r\n    local s = rnorm(0, 1, dest) -- s ~ N(0, I_n)\r\n    s = trmul(s, L) -- s = L * s, s ~ N(0, S)\r\n    s = add(s, mu, true) -- s = s + mu, s ~ N(mu, S)\r\n    return s\r\n  end",
    "type": "function"
  }, {
    "id": 19,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 20,
    "text": "function ()\r\n    local w = zeros(m, m)\r\n    for i = 1, n - 1 do\r\n      c = trmul(rnorm(0, 1, c), L) -- c ~ N(0, S)\r\n      w = hemul(w, c, false, \"L\") -- w = w + c * c^T\r\n    end\r\n    return hemul(w, trmul(rnorm(0, 1, c), L)) -- n-th run: full hemul\r\n  end",
    "type": "function"
  }, {
    "id": 21,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 22,
    "text": "",
    "type": "function container"
  }, {
    "id": 23,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 24,
    "text": "hemul",
    "type": "global function"
  }, {
    "id": 25,
    "text": "trmul",
    "type": "global function"
  }, {
    "id": 26,
    "text": "zeros",
    "type": "global function"
  }, {
    "id": 27,
    "text": "rnorm",
    "type": "global function"
  }, {
    "id": 28,
    "text": "chol",
    "type": "global function"
  }, {
    "id": 29,
    "text": "add",
    "type": "global function"
  }, {
    "id": 30,
    "text": "require",
    "type": "global function"
  }, {
    "id": 31,
    "text": "",
    "type": "global variable"
  }, {
    "id": 32,
    "text": "",
    "type": "variable container"
  }, {
    "id": 33,
    "text": "",
    "type": "require container"
  }, {
    "id": 34,
    "text": "",
    "type": "local variable"
  }, {
    "id": 35,
    "text": "",
    "type": "n/a"
  }, {
    "id": 36,
    "text": "",
    "type": "local variable"
  }, {
    "id": 37,
    "text": "",
    "type": "n/a"
  }, {
    "id": 38,
    "text": "",
    "type": "local variable"
  }, {
    "id": 39,
    "text": "",
    "type": "n/a"
  }, {
    "id": 40,
    "text": "",
    "type": "local variable"
  }, {
    "id": 41,
    "text": "",
    "type": "n/a"
  }, {
    "id": 42,
    "text": "",
    "type": "local variable"
  }, {
    "id": 43,
    "text": "",
    "type": "n/a"
  }, {
    "id": 44,
    "text": "",
    "type": "local variable"
  }, {
    "id": 45,
    "text": "",
    "type": "n/a"
  } ]
}