{
  "_filename": "extract_doc.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/lua-xmlreader/doc/extract_doc.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 3,
    "label": "has",
    "to": 6
  }, {
    "from": 3,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 9
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 10,
    "label": "has",
    "to": 12
  }, {
    "from": 10,
    "label": "has",
    "to": 13
  }, {
    "from": 14,
    "label": "has",
    "to": 15
  }, {
    "from": 14,
    "label": "has",
    "to": 16
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 17,
    "label": "has",
    "to": 19
  }, {
    "from": 17,
    "label": "has",
    "to": 20
  }, {
    "from": 21,
    "label": "has",
    "to": 22
  }, {
    "from": 21,
    "label": "has",
    "to": 23
  }, {
    "from": 21,
    "label": "has",
    "to": 24
  }, {
    "from": 25,
    "label": "has",
    "to": 26
  }, {
    "from": 27,
    "label": "calls",
    "to": 28
  }, {
    "from": 27,
    "label": "calls",
    "to": 29
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 25
  }, {
    "from": 27,
    "label": "calls",
    "to": 31
  }, {
    "from": 27,
    "label": "calls",
    "to": 31
  }, {
    "from": 25,
    "label": "calls",
    "to": 34
  }, {
    "from": 27,
    "label": "calls",
    "to": 32
  }, {
    "from": 27,
    "label": "calls",
    "to": 33
  }, {
    "from": 27,
    "label": "calls",
    "to": 30
  }, {
    "from": 27,
    "label": "calls",
    "to": 30
  }, {
    "from": 27,
    "label": "calls",
    "to": 30
  }, {
    "from": 27,
    "label": "calls",
    "to": 30
  }, {
    "from": 1,
    "label": "contains",
    "to": 27
  }, {
    "from": 27,
    "label": "declares",
    "to": 2
  }, {
    "from": 27,
    "label": "declares",
    "to": 10
  }, {
    "from": 27,
    "label": "declares",
    "to": 14
  }, {
    "from": 27,
    "label": "declares",
    "to": 17
  }, {
    "from": 27,
    "label": "declares",
    "to": 21
  }, {
    "from": 27,
    "label": "declares",
    "to": 25
  }, {
    "from": 1,
    "label": "contains",
    "to": 35
  }, {
    "from": 1,
    "label": "contains",
    "to": 36
  }, {
    "from": 35,
    "label": "initializes",
    "to": 37
  }, {
    "from": 37,
    "label": "assigns",
    "to": 38
  }, {
    "from": 35,
    "label": "initializes",
    "to": 39
  }, {
    "from": 39,
    "label": "assigns",
    "to": 40
  }, {
    "from": 35,
    "label": "initializes",
    "to": 41
  }, {
    "from": 41,
    "label": "assigns",
    "to": 42
  }, {
    "from": 35,
    "label": "initializes",
    "to": 43
  }, {
    "from": 43,
    "label": "assigns",
    "to": 44
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "extract_doc",
    "type": "module"
  }, {
    "id": 2,
    "text": "function module(name)\r\n  if modules[name] then\r\n    current_module=modules[name]\r\n  else\r\n    current_module={name=name, description=\"\"}\r\n    modules[#modules+1]=name\r\n    modules[name]=current_module\r\n  end\r\n  current_obj=current_module\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "if modules[name] then\r\n    current_module=modules[name]\r\n  else\r\n    current_module={name=name, description=\"\"}\r\n    modules[#modules+1]=name\r\n    modules[name]=current_module\r\n  end",
    "type": "statement:if"
  }, {
    "id": 4,
    "text": "current_module=modules[name]",
    "type": "statement:assign"
  }, {
    "id": 5,
    "text": "current_module={name=name, description=\"\"}",
    "type": "statement:assign"
  }, {
    "id": 6,
    "text": "modules[#modules+1]=name",
    "type": "statement:assign"
  }, {
    "id": 7,
    "text": "modules[name]=current_module",
    "type": "statement:assign"
  }, {
    "id": 8,
    "text": "current_obj=current_module",
    "type": "statement:assign"
  }, {
    "id": 9,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 10,
    "text": "function signature(name)\r\n  current_obj = {name=name, params={}, returns={}}\r\n  current_module[#current_module+1]=current_obj\r\nend",
    "type": "function"
  }, {
    "id": 11,
    "text": "current_obj = {name=name, params={}, returns={}}",
    "type": "statement:assign"
  }, {
    "id": 12,
    "text": "current_module[#current_module+1]=current_obj",
    "type": "statement:assign"
  }, {
    "id": 13,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 14,
    "text": "function description(str)\r\n  current_obj.description=str\r\nend",
    "type": "function"
  }, {
    "id": 15,
    "text": "current_obj.description=str",
    "type": "statement:assign"
  }, {
    "id": 16,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 17,
    "text": "function param(name, desc)\r\n  current_obj.params[#current_obj.params+1]=name\r\n  current_obj.params[name]=desc\r\nend",
    "type": "function"
  }, {
    "id": 18,
    "text": "current_obj.params[#current_obj.params+1]=name",
    "type": "statement:assign"
  }, {
    "id": 19,
    "text": "current_obj.params[name]=desc",
    "type": "statement:assign"
  }, {
    "id": 20,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 21,
    "text": "function returns(name, desc)\r\n  current_obj.returns[#current_obj.returns+1]=name\r\n  current_obj.returns[name]=desc\r\nend",
    "type": "function"
  }, {
    "id": 22,
    "text": "current_obj.returns[#current_obj.returns+1]=name",
    "type": "statement:assign"
  }, {
    "id": 23,
    "text": "current_obj.returns[name]=desc",
    "type": "statement:assign"
  }, {
    "id": 24,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 25,
    "text": "function fwrite(fmt, ...) io.write(fmt:format(...)) end",
    "type": "function"
  }, {
    "id": 26,
    "text": "io.write(fmt:format(...))",
    "type": "statement:functioncall"
  }, {
    "id": 27,
    "text": "",
    "type": "function container"
  }, {
    "id": 28,
    "text": "lines",
    "type": "global function"
  }, {
    "id": 29,
    "text": "concat",
    "type": "global function"
  }, {
    "id": 30,
    "text": "ipairs",
    "type": "global function"
  }, {
    "id": 31,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 32,
    "text": "loadstring",
    "type": "global function"
  }, {
    "id": 33,
    "text": "sort",
    "type": "global function"
  }, {
    "id": 34,
    "text": "write",
    "type": "global function"
  }, {
    "id": 35,
    "text": "",
    "type": "variable container"
  }, {
    "id": 36,
    "text": "",
    "type": "require container"
  }, {
    "id": 37,
    "text": "",
    "type": "local variable"
  }, {
    "id": 38,
    "text": "",
    "type": "n/a"
  }, {
    "id": 39,
    "text": "",
    "type": "local variable"
  }, {
    "id": 40,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 41,
    "text": "",
    "type": "local variable"
  }, {
    "id": 42,
    "text": "",
    "type": "boolean"
  }, {
    "id": 43,
    "text": "",
    "type": "global variable"
  }, {
    "id": 44,
    "text": "",
    "type": "n/a"
  } ]
}