{
  "_filename": "define.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/toluapp/src/bin/lua/define.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 8,
    "label": "has",
    "to": 10
  }, {
    "from": 8,
    "label": "has",
    "to": 11
  }, {
    "from": 8,
    "label": "has",
    "to": 12
  }, {
    "from": 8,
    "label": "has",
    "to": 13
  }, {
    "from": 14,
    "label": "has",
    "to": 15
  }, {
    "from": 14,
    "label": "has",
    "to": 16
  }, {
    "from": 14,
    "label": "has",
    "to": 17
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 14,
    "label": "has",
    "to": 19
  }, {
    "from": 14,
    "label": "has",
    "to": 4
  }, {
    "from": 14,
    "label": "has",
    "to": 20
  }, {
    "from": 21,
    "label": "has",
    "to": 4
  }, {
    "from": 21,
    "label": "has",
    "to": 22
  }, {
    "from": 14,
    "label": "calls",
    "to": 25
  }, {
    "from": 23,
    "label": "calls",
    "to": 27
  }, {
    "from": 14,
    "label": "calls",
    "to": 27
  }, {
    "from": 21,
    "label": "calls",
    "to": 14
  }, {
    "from": 14,
    "label": "calls",
    "to": 28
  }, {
    "from": 8,
    "label": "calls",
    "to": 24
  }, {
    "from": 8,
    "label": "calls",
    "to": 24
  }, {
    "from": 8,
    "label": "calls",
    "to": 24
  }, {
    "from": 8,
    "label": "calls",
    "to": 24
  }, {
    "from": 2,
    "label": "calls",
    "to": 26
  }, {
    "from": 1,
    "label": "contains",
    "to": 23
  }, {
    "from": 23,
    "label": "declares",
    "to": 2
  }, {
    "from": 23,
    "label": "declares",
    "to": 8
  }, {
    "from": 23,
    "label": "declares",
    "to": 14
  }, {
    "from": 23,
    "label": "declares",
    "to": 21
  }, {
    "from": 1,
    "label": "contains",
    "to": 29
  }, {
    "from": 1,
    "label": "contains",
    "to": 30
  }, {
    "from": 29,
    "label": "initializes",
    "to": 31
  }, {
    "from": 31,
    "label": "assigns",
    "to": 32
  }, {
    "from": 29,
    "label": "initializes",
    "to": 33
  }, {
    "from": 33,
    "label": "assigns",
    "to": 34
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "define",
    "type": "module"
  }, {
    "id": 2,
    "text": "function classDefine:register (pre)\r\n\tif not self:check_public_access() then\r\n\t\treturn\r\n\tend\r\n\r\n pre = pre or ''\r\n output(pre..'tolua_constant(tolua_S,\"'..self.lname..'\",'..self.name..');')\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "if not self:check_public_access() then\r\n\t\treturn\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 4,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 5,
    "text": "pre = pre or ''",
    "type": "statement:assign"
  }, {
    "id": 6,
    "text": "output(pre..'tolua_constant(tolua_S,\"'..self.lname..'\",'..self.name..');')",
    "type": "statement:functioncall"
  }, {
    "id": 7,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 8,
    "text": "function classDefine:print (ident,close)\r\n print(ident..\"Define{\")\r\n print(ident..\" name = '\"..self.name..\"',\")\r\n print(ident..\" lname = '\"..self.lname..\"',\")\r\n print(ident..\"}\"..close)\r\nend",
    "type": "function"
  }, {
    "id": 9,
    "text": "print(ident..\"Define{\")",
    "type": "statement:functioncall"
  }, {
    "id": 10,
    "text": "print(ident..\" name = '\"..self.name..\"',\")",
    "type": "statement:functioncall"
  }, {
    "id": 11,
    "text": "print(ident..\" lname = '\"..self.lname..\"',\")",
    "type": "statement:functioncall"
  }, {
    "id": 12,
    "text": "print(ident..\"}\"..close)",
    "type": "statement:functioncall"
  }, {
    "id": 13,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 14,
    "text": "function _Define (t)\r\n setmetatable(t,classDefine)\r\n t:buildnames()\r\n\r\n if t.name == '' then\r\n  error(\"#invalid define\")\r\n end\r\n\r\n append(t)\r\n return t\r\nend",
    "type": "function"
  }, {
    "id": 15,
    "text": "setmetatable(t,classDefine)",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "t:buildnames()",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "if t.name == '' then\r\n  error(\"#invalid define\")\r\n end",
    "type": "statement:if"
  }, {
    "id": 18,
    "text": "error(\"#invalid define\")",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "append(t)",
    "type": "statement:functioncall"
  }, {
    "id": 20,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 21,
    "text": "function Define (n)\r\n return _Define{\r\n  name = n\r\n }\r\nend",
    "type": "function"
  }, {
    "id": 22,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 23,
    "text": "",
    "type": "function container"
  }, {
    "id": 24,
    "text": "print",
    "type": "global function"
  }, {
    "id": 25,
    "text": "error",
    "type": "global function"
  }, {
    "id": 26,
    "text": "output",
    "type": "global function"
  }, {
    "id": 27,
    "text": "setmetatable",
    "type": "global function"
  }, {
    "id": 28,
    "text": "append",
    "type": "global function"
  }, {
    "id": 29,
    "text": "",
    "type": "variable container"
  }, {
    "id": 30,
    "text": "",
    "type": "require container"
  }, {
    "id": 31,
    "text": "",
    "type": "global variable"
  }, {
    "id": 32,
    "text": "",
    "type": "n/a"
  }, {
    "id": 33,
    "text": "",
    "type": "global variable"
  }, {
    "id": 34,
    "text": "",
    "type": "n/a"
  } ]
}