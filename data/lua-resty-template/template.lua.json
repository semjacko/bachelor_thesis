{
  "_filename": "template.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/lua-resty-template/lib/resty/template.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 4,
    "label": "has",
    "to": 3
  }, {
    "from": 4,
    "label": "has",
    "to": 3
  }, {
    "from": 4,
    "label": "has",
    "to": 6
  }, {
    "from": 7,
    "label": "has",
    "to": 3
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 10,
    "label": "has",
    "to": 12
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 9,
    "label": "has",
    "to": 3
  }, {
    "from": 9,
    "label": "has",
    "to": 14
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 16,
    "label": "has",
    "to": 17
  }, {
    "from": 15,
    "label": "has",
    "to": 3
  }, {
    "from": 15,
    "label": "has",
    "to": 3
  }, {
    "from": 15,
    "label": "has",
    "to": 3
  }, {
    "from": 15,
    "label": "has",
    "to": 18
  }, {
    "from": 19,
    "label": "has",
    "to": 20
  }, {
    "from": 19,
    "label": "has",
    "to": 21
  }, {
    "from": 19,
    "label": "has",
    "to": 3
  }, {
    "from": 19,
    "label": "has",
    "to": 22
  }, {
    "from": 19,
    "label": "has",
    "to": 23
  }, {
    "from": 19,
    "label": "has",
    "to": 3
  }, {
    "from": 19,
    "label": "has",
    "to": 24
  }, {
    "from": 25,
    "label": "has",
    "to": 3
  }, {
    "from": 25,
    "label": "has",
    "to": 26
  }, {
    "from": 27,
    "label": "has",
    "to": 28
  }, {
    "from": 27,
    "label": "has",
    "to": 29
  }, {
    "from": 27,
    "label": "has",
    "to": 30
  }, {
    "from": 30,
    "label": "has",
    "to": 31
  }, {
    "from": 27,
    "label": "has",
    "to": 32
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 33,
    "label": "has",
    "to": 34
  }, {
    "from": 32,
    "label": "has",
    "to": 35
  }, {
    "from": 32,
    "label": "has",
    "to": 36
  }, {
    "from": 27,
    "label": "has",
    "to": 3
  }, {
    "from": 27,
    "label": "has",
    "to": 37
  }, {
    "from": 27,
    "label": "has",
    "to": 38
  }, {
    "from": 38,
    "label": "has",
    "to": 39
  }, {
    "from": 27,
    "label": "has",
    "to": 3
  }, {
    "from": 27,
    "label": "has",
    "to": 40
  }, {
    "from": 41,
    "label": "has",
    "to": 3
  }, {
    "from": 41,
    "label": "has",
    "to": 42
  }, {
    "from": 43,
    "label": "has",
    "to": 44
  }, {
    "from": 43,
    "label": "has",
    "to": 45
  }, {
    "from": 43,
    "label": "has",
    "to": 3
  }, {
    "from": 43,
    "label": "has",
    "to": 46
  }, {
    "from": 47,
    "label": "has",
    "to": 3
  }, {
    "from": 47,
    "label": "has",
    "to": 48
  }, {
    "from": 49,
    "label": "has",
    "to": 50
  }, {
    "from": 50,
    "label": "has",
    "to": 51
  }, {
    "from": 49,
    "label": "has",
    "to": 3
  }, {
    "from": 49,
    "label": "has",
    "to": 52
  }, {
    "from": 53,
    "label": "has",
    "to": 54
  }, {
    "from": 53,
    "label": "has",
    "to": 3
  }, {
    "from": 53,
    "label": "has",
    "to": 55
  }, {
    "from": 53,
    "label": "has",
    "to": 3
  }, {
    "from": 53,
    "label": "has",
    "to": 3
  }, {
    "from": 53,
    "label": "has",
    "to": 56
  }, {
    "from": 57,
    "label": "has",
    "to": 58
  }, {
    "from": 58,
    "label": "has",
    "to": 59
  }, {
    "from": 57,
    "label": "has",
    "to": 3
  }, {
    "from": 57,
    "label": "has",
    "to": 3
  }, {
    "from": 57,
    "label": "has",
    "to": 3
  }, {
    "from": 57,
    "label": "has",
    "to": 60
  }, {
    "from": 61,
    "label": "has",
    "to": 62
  }, {
    "from": 61,
    "label": "has",
    "to": 63
  }, {
    "from": 61,
    "label": "has",
    "to": 64
  }, {
    "from": 64,
    "label": "has",
    "to": 65
  }, {
    "from": 65,
    "label": "has",
    "to": 66
  }, {
    "from": 65,
    "label": "has",
    "to": 67
  }, {
    "from": 65,
    "label": "has",
    "to": 68
  }, {
    "from": 65,
    "label": "has",
    "to": 69
  }, {
    "from": 65,
    "label": "has",
    "to": 70
  }, {
    "from": 65,
    "label": "has",
    "to": 3
  }, {
    "from": 65,
    "label": "has",
    "to": 71
  }, {
    "from": 65,
    "label": "has",
    "to": 67
  }, {
    "from": 65,
    "label": "has",
    "to": 68
  }, {
    "from": 65,
    "label": "has",
    "to": 69
  }, {
    "from": 65,
    "label": "has",
    "to": 72
  }, {
    "from": 65,
    "label": "has",
    "to": 3
  }, {
    "from": 65,
    "label": "has",
    "to": 66
  }, {
    "from": 65,
    "label": "has",
    "to": 67
  }, {
    "from": 65,
    "label": "has",
    "to": 68
  }, {
    "from": 65,
    "label": "has",
    "to": 3
  }, {
    "from": 65,
    "label": "has",
    "to": 71
  }, {
    "from": 65,
    "label": "has",
    "to": 67
  }, {
    "from": 65,
    "label": "has",
    "to": 68
  }, {
    "from": 65,
    "label": "has",
    "to": 3
  }, {
    "from": 61,
    "label": "has",
    "to": 3
  }, {
    "from": 61,
    "label": "has",
    "to": 3
  }, {
    "from": 61,
    "label": "has",
    "to": 3
  }, {
    "from": 61,
    "label": "has",
    "to": 3
  }, {
    "from": 61,
    "label": "has",
    "to": 3
  }, {
    "from": 61,
    "label": "has",
    "to": 73
  }, {
    "from": 74,
    "label": "has",
    "to": 75
  }, {
    "from": 74,
    "label": "has",
    "to": 76
  }, {
    "from": 76,
    "label": "has",
    "to": 77
  }, {
    "from": 76,
    "label": "has",
    "to": 78
  }, {
    "from": 76,
    "label": "has",
    "to": 23
  }, {
    "from": 74,
    "label": "has",
    "to": 3
  }, {
    "from": 74,
    "label": "has",
    "to": 79
  }, {
    "from": 80,
    "label": "has",
    "to": 81
  }, {
    "from": 80,
    "label": "has",
    "to": 82
  }, {
    "from": 80,
    "label": "has",
    "to": 3
  }, {
    "from": 80,
    "label": "has",
    "to": 83
  }, {
    "from": 80,
    "label": "has",
    "to": 84
  }, {
    "from": 80,
    "label": "has",
    "to": 85
  }, {
    "from": 80,
    "label": "has",
    "to": 3
  }, {
    "from": 80,
    "label": "has",
    "to": 86
  }, {
    "from": 80,
    "label": "has",
    "to": 87
  }, {
    "from": 87,
    "label": "has",
    "to": 88
  }, {
    "from": 80,
    "label": "has",
    "to": 3
  }, {
    "from": 80,
    "label": "has",
    "to": 89
  }, {
    "from": 90,
    "label": "has",
    "to": 91
  }, {
    "from": 90,
    "label": "has",
    "to": 92
  }, {
    "from": 92,
    "label": "has",
    "to": 93
  }, {
    "from": 92,
    "label": "has",
    "to": 94
  }, {
    "from": 90,
    "label": "has",
    "to": 3
  }, {
    "from": 90,
    "label": "has",
    "to": 95
  }, {
    "from": 90,
    "label": "has",
    "to": 96
  }, {
    "from": 90,
    "label": "has",
    "to": 97
  }, {
    "from": 90,
    "label": "has",
    "to": 98
  }, {
    "from": 98,
    "label": "has",
    "to": 99
  }, {
    "from": 98,
    "label": "has",
    "to": 100
  }, {
    "from": 100,
    "label": "has",
    "to": 101
  }, {
    "from": 100,
    "label": "has",
    "to": 102
  }, {
    "from": 102,
    "label": "has",
    "to": 103
  }, {
    "from": 102,
    "label": "has",
    "to": 104
  }, {
    "from": 104,
    "label": "has",
    "to": 105
  }, {
    "from": 104,
    "label": "has",
    "to": 106
  }, {
    "from": 104,
    "label": "has",
    "to": 107
  }, {
    "from": 104,
    "label": "has",
    "to": 108
  }, {
    "from": 102,
    "label": "has",
    "to": 109
  }, {
    "from": 109,
    "label": "has",
    "to": 110
  }, {
    "from": 109,
    "label": "has",
    "to": 111
  }, {
    "from": 109,
    "label": "has",
    "to": 112
  }, {
    "from": 109,
    "label": "has",
    "to": 113
  }, {
    "from": 109,
    "label": "has",
    "to": 108
  }, {
    "from": 109,
    "label": "has",
    "to": 114
  }, {
    "from": 100,
    "label": "has",
    "to": 115
  }, {
    "from": 100,
    "label": "has",
    "to": 116
  }, {
    "from": 116,
    "label": "has",
    "to": 103
  }, {
    "from": 116,
    "label": "has",
    "to": 104
  }, {
    "from": 104,
    "label": "has",
    "to": 105
  }, {
    "from": 104,
    "label": "has",
    "to": 106
  }, {
    "from": 104,
    "label": "has",
    "to": 107
  }, {
    "from": 104,
    "label": "has",
    "to": 108
  }, {
    "from": 116,
    "label": "has",
    "to": 117
  }, {
    "from": 117,
    "label": "has",
    "to": 110
  }, {
    "from": 117,
    "label": "has",
    "to": 118
  }, {
    "from": 117,
    "label": "has",
    "to": 112
  }, {
    "from": 117,
    "label": "has",
    "to": 113
  }, {
    "from": 117,
    "label": "has",
    "to": 108
  }, {
    "from": 117,
    "label": "has",
    "to": 114
  }, {
    "from": 100,
    "label": "has",
    "to": 119
  }, {
    "from": 100,
    "label": "has",
    "to": 120
  }, {
    "from": 120,
    "label": "has",
    "to": 103
  }, {
    "from": 120,
    "label": "has",
    "to": 121
  }, {
    "from": 121,
    "label": "has",
    "to": 122
  }, {
    "from": 122,
    "label": "has",
    "to": 105
  }, {
    "from": 122,
    "label": "has",
    "to": 106
  }, {
    "from": 122,
    "label": "has",
    "to": 107
  }, {
    "from": 122,
    "label": "has",
    "to": 108
  }, {
    "from": 121,
    "label": "has",
    "to": 110
  }, {
    "from": 121,
    "label": "has",
    "to": 123
  }, {
    "from": 121,
    "label": "has",
    "to": 124
  }, {
    "from": 124,
    "label": "has",
    "to": 125
  }, {
    "from": 121,
    "label": "has",
    "to": 126
  }, {
    "from": 121,
    "label": "has",
    "to": 127
  }, {
    "from": 127,
    "label": "has",
    "to": 105
  }, {
    "from": 127,
    "label": "has",
    "to": 128
  }, {
    "from": 127,
    "label": "has",
    "to": 107
  }, {
    "from": 127,
    "label": "has",
    "to": 108
  }, {
    "from": 121,
    "label": "has",
    "to": 129
  }, {
    "from": 121,
    "label": "has",
    "to": 130
  }, {
    "from": 121,
    "label": "has",
    "to": 131
  }, {
    "from": 121,
    "label": "has",
    "to": 132
  }, {
    "from": 100,
    "label": "has",
    "to": 133
  }, {
    "from": 100,
    "label": "has",
    "to": 134
  }, {
    "from": 134,
    "label": "has",
    "to": 103
  }, {
    "from": 134,
    "label": "has",
    "to": 104
  }, {
    "from": 104,
    "label": "has",
    "to": 105
  }, {
    "from": 104,
    "label": "has",
    "to": 106
  }, {
    "from": 104,
    "label": "has",
    "to": 107
  }, {
    "from": 104,
    "label": "has",
    "to": 108
  }, {
    "from": 134,
    "label": "has",
    "to": 135
  }, {
    "from": 135,
    "label": "has",
    "to": 110
  }, {
    "from": 135,
    "label": "has",
    "to": 136
  }, {
    "from": 135,
    "label": "has",
    "to": 137
  }, {
    "from": 135,
    "label": "has",
    "to": 138
  }, {
    "from": 138,
    "label": "has",
    "to": 139
  }, {
    "from": 138,
    "label": "has",
    "to": 140
  }, {
    "from": 138,
    "label": "has",
    "to": 141
  }, {
    "from": 138,
    "label": "has",
    "to": 142
  }, {
    "from": 138,
    "label": "has",
    "to": 143
  }, {
    "from": 138,
    "label": "has",
    "to": 144
  }, {
    "from": 138,
    "label": "has",
    "to": 139
  }, {
    "from": 138,
    "label": "has",
    "to": 145
  }, {
    "from": 138,
    "label": "has",
    "to": 146
  }, {
    "from": 138,
    "label": "has",
    "to": 108
  }, {
    "from": 135,
    "label": "has",
    "to": 114
  }, {
    "from": 100,
    "label": "has",
    "to": 147
  }, {
    "from": 100,
    "label": "has",
    "to": 148
  }, {
    "from": 148,
    "label": "has",
    "to": 103
  }, {
    "from": 148,
    "label": "has",
    "to": 104
  }, {
    "from": 104,
    "label": "has",
    "to": 105
  }, {
    "from": 104,
    "label": "has",
    "to": 106
  }, {
    "from": 104,
    "label": "has",
    "to": 107
  }, {
    "from": 104,
    "label": "has",
    "to": 108
  }, {
    "from": 148,
    "label": "has",
    "to": 149
  }, {
    "from": 149,
    "label": "has",
    "to": 110
  }, {
    "from": 149,
    "label": "has",
    "to": 150
  }, {
    "from": 149,
    "label": "has",
    "to": 112
  }, {
    "from": 149,
    "label": "has",
    "to": 113
  }, {
    "from": 149,
    "label": "has",
    "to": 108
  }, {
    "from": 149,
    "label": "has",
    "to": 114
  }, {
    "from": 100,
    "label": "has",
    "to": 151
  }, {
    "from": 100,
    "label": "has",
    "to": 152
  }, {
    "from": 152,
    "label": "has",
    "to": 153
  }, {
    "from": 152,
    "label": "has",
    "to": 154
  }, {
    "from": 154,
    "label": "has",
    "to": 103
  }, {
    "from": 154,
    "label": "has",
    "to": 155
  }, {
    "from": 155,
    "label": "has",
    "to": 156
  }, {
    "from": 156,
    "label": "has",
    "to": 105
  }, {
    "from": 156,
    "label": "has",
    "to": 106
  }, {
    "from": 156,
    "label": "has",
    "to": 107
  }, {
    "from": 156,
    "label": "has",
    "to": 108
  }, {
    "from": 155,
    "label": "has",
    "to": 110
  }, {
    "from": 155,
    "label": "has",
    "to": 157
  }, {
    "from": 155,
    "label": "has",
    "to": 158
  }, {
    "from": 155,
    "label": "has",
    "to": 159
  }, {
    "from": 159,
    "label": "has",
    "to": 157
  }, {
    "from": 155,
    "label": "has",
    "to": 160
  }, {
    "from": 155,
    "label": "has",
    "to": 161
  }, {
    "from": 161,
    "label": "has",
    "to": 162
  }, {
    "from": 162,
    "label": "has",
    "to": 105
  }, {
    "from": 162,
    "label": "has",
    "to": 106
  }, {
    "from": 162,
    "label": "has",
    "to": 107
  }, {
    "from": 162,
    "label": "has",
    "to": 108
  }, {
    "from": 161,
    "label": "has",
    "to": 163
  }, {
    "from": 161,
    "label": "has",
    "to": 164
  }, {
    "from": 161,
    "label": "has",
    "to": 107
  }, {
    "from": 161,
    "label": "has",
    "to": 108
  }, {
    "from": 161,
    "label": "has",
    "to": 165
  }, {
    "from": 165,
    "label": "has",
    "to": 158
  }, {
    "from": 161,
    "label": "has",
    "to": 126
  }, {
    "from": 161,
    "label": "has",
    "to": 166
  }, {
    "from": 166,
    "label": "has",
    "to": 105
  }, {
    "from": 166,
    "label": "has",
    "to": 128
  }, {
    "from": 166,
    "label": "has",
    "to": 107
  }, {
    "from": 166,
    "label": "has",
    "to": 108
  }, {
    "from": 161,
    "label": "has",
    "to": 167
  }, {
    "from": 161,
    "label": "has",
    "to": 168
  }, {
    "from": 161,
    "label": "has",
    "to": 169
  }, {
    "from": 161,
    "label": "has",
    "to": 170
  }, {
    "from": 161,
    "label": "has",
    "to": 171
  }, {
    "from": 161,
    "label": "has",
    "to": 144
  }, {
    "from": 155,
    "label": "has",
    "to": 172
  }, {
    "from": 100,
    "label": "has",
    "to": 173
  }, {
    "from": 100,
    "label": "has",
    "to": 174
  }, {
    "from": 174,
    "label": "has",
    "to": 103
  }, {
    "from": 174,
    "label": "has",
    "to": 104
  }, {
    "from": 104,
    "label": "has",
    "to": 105
  }, {
    "from": 104,
    "label": "has",
    "to": 106
  }, {
    "from": 104,
    "label": "has",
    "to": 107
  }, {
    "from": 104,
    "label": "has",
    "to": 108
  }, {
    "from": 174,
    "label": "has",
    "to": 175
  }, {
    "from": 175,
    "label": "has",
    "to": 110
  }, {
    "from": 175,
    "label": "has",
    "to": 176
  }, {
    "from": 175,
    "label": "has",
    "to": 177
  }, {
    "from": 177,
    "label": "has",
    "to": 178
  }, {
    "from": 175,
    "label": "has",
    "to": 179
  }, {
    "from": 98,
    "label": "has",
    "to": 180
  }, {
    "from": 90,
    "label": "has",
    "to": 181
  }, {
    "from": 90,
    "label": "has",
    "to": 182
  }, {
    "from": 182,
    "label": "has",
    "to": 105
  }, {
    "from": 182,
    "label": "has",
    "to": 183
  }, {
    "from": 182,
    "label": "has",
    "to": 107
  }, {
    "from": 182,
    "label": "has",
    "to": 108
  }, {
    "from": 90,
    "label": "has",
    "to": 184
  }, {
    "from": 90,
    "label": "has",
    "to": 3
  }, {
    "from": 90,
    "label": "has",
    "to": 185
  }, {
    "from": 186,
    "label": "has",
    "to": 187
  }, {
    "from": 186,
    "label": "has",
    "to": 3
  }, {
    "from": 186,
    "label": "has",
    "to": 188
  }, {
    "from": 189,
    "label": "has",
    "to": 3
  }, {
    "from": 189,
    "label": "has",
    "to": 190
  }, {
    "from": 191,
    "label": "has",
    "to": 3
  }, {
    "from": 191,
    "label": "has",
    "to": 192
  }, {
    "from": 193,
    "label": "has",
    "to": 66
  }, {
    "from": 193,
    "label": "has",
    "to": 67
  }, {
    "from": 193,
    "label": "has",
    "to": 68
  }, {
    "from": 193,
    "label": "has",
    "to": 69
  }, {
    "from": 193,
    "label": "has",
    "to": 70
  }, {
    "from": 193,
    "label": "has",
    "to": 3
  }, {
    "from": 193,
    "label": "has",
    "to": 194
  }, {
    "from": 195,
    "label": "has",
    "to": 71
  }, {
    "from": 195,
    "label": "has",
    "to": 67
  }, {
    "from": 195,
    "label": "has",
    "to": 68
  }, {
    "from": 195,
    "label": "has",
    "to": 69
  }, {
    "from": 195,
    "label": "has",
    "to": 72
  }, {
    "from": 195,
    "label": "has",
    "to": 3
  }, {
    "from": 195,
    "label": "has",
    "to": 196
  }, {
    "from": 197,
    "label": "has",
    "to": 66
  }, {
    "from": 197,
    "label": "has",
    "to": 67
  }, {
    "from": 197,
    "label": "has",
    "to": 68
  }, {
    "from": 197,
    "label": "has",
    "to": 3
  }, {
    "from": 197,
    "label": "has",
    "to": 198
  }, {
    "from": 199,
    "label": "has",
    "to": 71
  }, {
    "from": 199,
    "label": "has",
    "to": 67
  }, {
    "from": 199,
    "label": "has",
    "to": 68
  }, {
    "from": 199,
    "label": "has",
    "to": 3
  }, {
    "from": 199,
    "label": "has",
    "to": 200
  }, {
    "from": 201,
    "label": "has",
    "to": 3
  }, {
    "from": 201,
    "label": "has",
    "to": 202
  }, {
    "from": 203,
    "label": "has",
    "to": 3
  }, {
    "from": 203,
    "label": "has",
    "to": 204
  }, {
    "from": 205,
    "label": "calls",
    "to": 2
  }, {
    "from": 61,
    "label": "calls",
    "to": 193
  }, {
    "from": 61,
    "label": "calls",
    "to": 193
  }, {
    "from": 205,
    "label": "calls",
    "to": 207
  }, {
    "from": 205,
    "label": "calls",
    "to": 207
  }, {
    "from": 205,
    "label": "calls",
    "to": 207
  }, {
    "from": 61,
    "label": "calls",
    "to": 207
  }, {
    "from": 80,
    "label": "calls",
    "to": 207
  }, {
    "from": 90,
    "label": "calls",
    "to": 207
  }, {
    "from": 186,
    "label": "calls",
    "to": 207
  }, {
    "from": 53,
    "label": "calls",
    "to": 209
  }, {
    "from": 61,
    "label": "calls",
    "to": 209
  }, {
    "from": 205,
    "label": "calls",
    "to": 211
  }, {
    "from": 7,
    "label": "calls",
    "to": 212
  }, {
    "from": 7,
    "label": "calls",
    "to": 212
  }, {
    "from": 57,
    "label": "calls",
    "to": 212
  }, {
    "from": 57,
    "label": "calls",
    "to": 212
  }, {
    "from": 53,
    "label": "calls",
    "to": 213
  }, {
    "from": 27,
    "label": "calls",
    "to": 219
  }, {
    "from": 205,
    "label": "calls",
    "to": 219
  }, {
    "from": 186,
    "label": "calls",
    "to": 221
  }, {
    "from": 80,
    "label": "calls",
    "to": 41
  }, {
    "from": 80,
    "label": "calls",
    "to": 41
  }, {
    "from": 205,
    "label": "calls",
    "to": 224
  }, {
    "from": 205,
    "label": "calls",
    "to": 223
  }, {
    "from": 74,
    "label": "calls",
    "to": 80
  }, {
    "from": 186,
    "label": "calls",
    "to": 80
  }, {
    "from": 27,
    "label": "calls",
    "to": 206
  }, {
    "from": 90,
    "label": "calls",
    "to": 222
  }, {
    "from": 90,
    "label": "calls",
    "to": 222
  }, {
    "from": 90,
    "label": "calls",
    "to": 222
  }, {
    "from": 90,
    "label": "calls",
    "to": 222
  }, {
    "from": 90,
    "label": "calls",
    "to": 222
  }, {
    "from": 90,
    "label": "calls",
    "to": 222
  }, {
    "from": 90,
    "label": "calls",
    "to": 222
  }, {
    "from": 90,
    "label": "calls",
    "to": 222
  }, {
    "from": 90,
    "label": "calls",
    "to": 222
  }, {
    "from": 90,
    "label": "calls",
    "to": 222
  }, {
    "from": 90,
    "label": "calls",
    "to": 222
  }, {
    "from": 90,
    "label": "calls",
    "to": 208
  }, {
    "from": 19,
    "label": "calls",
    "to": 210
  }, {
    "from": 74,
    "label": "calls",
    "to": 210
  }, {
    "from": 9,
    "label": "calls",
    "to": 214
  }, {
    "from": 15,
    "label": "calls",
    "to": 214
  }, {
    "from": 15,
    "label": "calls",
    "to": 214
  }, {
    "from": 27,
    "label": "calls",
    "to": 214
  }, {
    "from": 27,
    "label": "calls",
    "to": 214
  }, {
    "from": 27,
    "label": "calls",
    "to": 214
  }, {
    "from": 27,
    "label": "calls",
    "to": 214
  }, {
    "from": 27,
    "label": "calls",
    "to": 214
  }, {
    "from": 27,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 214
  }, {
    "from": 90,
    "label": "calls",
    "to": 9
  }, {
    "from": 90,
    "label": "calls",
    "to": 9
  }, {
    "from": 61,
    "label": "calls",
    "to": 216
  }, {
    "from": 61,
    "label": "calls",
    "to": 216
  }, {
    "from": 61,
    "label": "calls",
    "to": 216
  }, {
    "from": 61,
    "label": "calls",
    "to": 216
  }, {
    "from": 61,
    "label": "calls",
    "to": 216
  }, {
    "from": 61,
    "label": "calls",
    "to": 216
  }, {
    "from": 53,
    "label": "calls",
    "to": 53
  }, {
    "from": 57,
    "label": "calls",
    "to": 53
  }, {
    "from": 205,
    "label": "calls",
    "to": 220
  }, {
    "from": 53,
    "label": "calls",
    "to": 217
  }, {
    "from": 57,
    "label": "calls",
    "to": 217
  }, {
    "from": 61,
    "label": "calls",
    "to": 217
  }, {
    "from": 25,
    "label": "calls",
    "to": 19
  }, {
    "from": 27,
    "label": "calls",
    "to": 19
  }, {
    "from": 80,
    "label": "calls",
    "to": 90
  }, {
    "from": 80,
    "label": "calls",
    "to": 90
  }, {
    "from": 74,
    "label": "calls",
    "to": 218
  }, {
    "from": 205,
    "label": "calls",
    "to": 225
  }, {
    "from": 205,
    "label": "calls",
    "to": 225
  }, {
    "from": 205,
    "label": "calls",
    "to": 225
  }, {
    "from": 61,
    "label": "calls",
    "to": 225
  }, {
    "from": 61,
    "label": "calls",
    "to": 225
  }, {
    "from": 61,
    "label": "calls",
    "to": 225
  }, {
    "from": 205,
    "label": "calls",
    "to": 4
  }, {
    "from": 90,
    "label": "calls",
    "to": 227
  }, {
    "from": 90,
    "label": "calls",
    "to": 7
  }, {
    "from": 90,
    "label": "calls",
    "to": 7
  }, {
    "from": 90,
    "label": "calls",
    "to": 7
  }, {
    "from": 90,
    "label": "calls",
    "to": 7
  }, {
    "from": 90,
    "label": "calls",
    "to": 7
  }, {
    "from": 90,
    "label": "calls",
    "to": 7
  }, {
    "from": 90,
    "label": "calls",
    "to": 7
  }, {
    "from": 90,
    "label": "calls",
    "to": 7
  }, {
    "from": 205,
    "label": "calls",
    "to": 215
  }, {
    "from": 205,
    "label": "calls",
    "to": 215
  }, {
    "from": 90,
    "label": "calls",
    "to": 15
  }, {
    "from": 90,
    "label": "calls",
    "to": 15
  }, {
    "from": 90,
    "label": "calls",
    "to": 15
  }, {
    "from": 90,
    "label": "calls",
    "to": 15
  }, {
    "from": 90,
    "label": "calls",
    "to": 15
  }, {
    "from": 90,
    "label": "calls",
    "to": 15
  }, {
    "from": 90,
    "label": "calls",
    "to": 15
  }, {
    "from": 27,
    "label": "calls",
    "to": 226
  }, {
    "from": 27,
    "label": "calls",
    "to": 226
  }, {
    "from": 90,
    "label": "calls",
    "to": 226
  }, {
    "from": 1,
    "label": "contains",
    "to": 205
  }, {
    "from": 205,
    "label": "declares",
    "to": 2
  }, {
    "from": 205,
    "label": "declares",
    "to": 4
  }, {
    "from": 205,
    "label": "declares",
    "to": 7
  }, {
    "from": 205,
    "label": "declares",
    "to": 9
  }, {
    "from": 205,
    "label": "declares",
    "to": 15
  }, {
    "from": 205,
    "label": "declares",
    "to": 19
  }, {
    "from": 205,
    "label": "declares",
    "to": 25
  }, {
    "from": 205,
    "label": "declares",
    "to": 27
  }, {
    "from": 205,
    "label": "declares",
    "to": 41
  }, {
    "from": 205,
    "label": "declares",
    "to": 43
  }, {
    "from": 205,
    "label": "declares",
    "to": 47
  }, {
    "from": 205,
    "label": "declares",
    "to": 49
  }, {
    "from": 205,
    "label": "declares",
    "to": 53
  }, {
    "from": 205,
    "label": "declares",
    "to": 57
  }, {
    "from": 205,
    "label": "declares",
    "to": 61
  }, {
    "from": 205,
    "label": "declares",
    "to": 74
  }, {
    "from": 205,
    "label": "declares",
    "to": 80
  }, {
    "from": 205,
    "label": "declares",
    "to": 90
  }, {
    "from": 205,
    "label": "declares",
    "to": 186
  }, {
    "from": 205,
    "label": "declares",
    "to": 189
  }, {
    "from": 205,
    "label": "declares",
    "to": 191
  }, {
    "from": 205,
    "label": "declares",
    "to": 193
  }, {
    "from": 205,
    "label": "declares",
    "to": 195
  }, {
    "from": 205,
    "label": "declares",
    "to": 197
  }, {
    "from": 205,
    "label": "declares",
    "to": 199
  }, {
    "from": 205,
    "label": "declares",
    "to": 201
  }, {
    "from": 205,
    "label": "declares",
    "to": 203
  }, {
    "from": 1,
    "label": "declares",
    "to": 208
  }, {
    "from": 1,
    "label": "declares",
    "to": 221
  }, {
    "from": 228,
    "label": "requires",
    "to": 1
  }, {
    "from": 229,
    "label": "requires",
    "to": 1
  }, {
    "from": 1,
    "label": "contains",
    "to": 230
  }, {
    "from": 1,
    "label": "contains",
    "to": 231
  }, {
    "from": 230,
    "label": "initializes",
    "to": 232
  }, {
    "from": 232,
    "label": "assigns",
    "to": 233
  }, {
    "from": 230,
    "label": "initializes",
    "to": 234
  }, {
    "from": 234,
    "label": "assigns",
    "to": 235
  }, {
    "from": 230,
    "label": "initializes",
    "to": 236
  }, {
    "from": 230,
    "label": "initializes",
    "to": 237
  }, {
    "from": 237,
    "label": "assigns",
    "to": 238
  }, {
    "from": 230,
    "label": "initializes",
    "to": 239
  }, {
    "from": 239,
    "label": "assigns",
    "to": 240
  }, {
    "from": 230,
    "label": "initializes",
    "to": 241
  }, {
    "from": 241,
    "label": "assigns",
    "to": 242
  }, {
    "from": 230,
    "label": "initializes",
    "to": 243
  }, {
    "from": 230,
    "label": "initializes",
    "to": 244
  }, {
    "from": 244,
    "label": "assigns",
    "to": 245
  }, {
    "from": 230,
    "label": "initializes",
    "to": 246
  }, {
    "from": 246,
    "label": "assigns",
    "to": 247
  }, {
    "from": 230,
    "label": "initializes",
    "to": 248
  }, {
    "from": 230,
    "label": "initializes",
    "to": 249
  }, {
    "from": 249,
    "label": "assigns",
    "to": 250
  }, {
    "from": 230,
    "label": "initializes",
    "to": 251
  }, {
    "from": 251,
    "label": "assigns",
    "to": 252
  }, {
    "from": 230,
    "label": "initializes",
    "to": 253
  }, {
    "from": 230,
    "label": "initializes",
    "to": 254
  }, {
    "from": 254,
    "label": "assigns",
    "to": 255
  }, {
    "from": 230,
    "label": "initializes",
    "to": 256
  }, {
    "from": 256,
    "label": "assigns",
    "to": 257
  }, {
    "from": 230,
    "label": "initializes",
    "to": 258
  }, {
    "from": 258,
    "label": "assigns",
    "to": 259
  }, {
    "from": 230,
    "label": "initializes",
    "to": 260
  }, {
    "from": 260,
    "label": "assigns",
    "to": 261
  }, {
    "from": 230,
    "label": "initializes",
    "to": 262
  }, {
    "from": 262,
    "label": "assigns",
    "to": 263
  }, {
    "from": 230,
    "label": "initializes",
    "to": 264
  }, {
    "from": 264,
    "label": "assigns",
    "to": 265
  }, {
    "from": 230,
    "label": "initializes",
    "to": 266
  }, {
    "from": 266,
    "label": "assigns",
    "to": 267
  }, {
    "from": 230,
    "label": "initializes",
    "to": 268
  }, {
    "from": 230,
    "label": "initializes",
    "to": 269
  }, {
    "from": 269,
    "label": "assigns",
    "to": 270
  }, {
    "from": 230,
    "label": "initializes",
    "to": 271
  }, {
    "from": 271,
    "label": "assigns",
    "to": 272
  }, {
    "from": 230,
    "label": "initializes",
    "to": 273
  }, {
    "from": 273,
    "label": "assigns",
    "to": 274
  }, {
    "from": 230,
    "label": "initializes",
    "to": 275
  }, {
    "from": 230,
    "label": "initializes",
    "to": 276
  }, {
    "from": 276,
    "label": "assigns",
    "to": 277
  }, {
    "from": 230,
    "label": "initializes",
    "to": 278
  }, {
    "from": 278,
    "label": "assigns",
    "to": 279
  }, {
    "from": 230,
    "label": "initializes",
    "to": 280
  }, {
    "from": 280,
    "label": "assigns",
    "to": 281
  }, {
    "from": 230,
    "label": "initializes",
    "to": 282
  }, {
    "from": 282,
    "label": "assigns",
    "to": 283
  }, {
    "from": 283,
    "label": "assigns",
    "to": 284
  }, {
    "from": 284,
    "label": "assigns",
    "to": 285
  }, {
    "from": 283,
    "label": "assigns",
    "to": 286
  }, {
    "from": 286,
    "label": "assigns",
    "to": 287
  }, {
    "from": 283,
    "label": "assigns",
    "to": 288
  }, {
    "from": 288,
    "label": "assigns",
    "to": 289
  }, {
    "from": 283,
    "label": "assigns",
    "to": 290
  }, {
    "from": 290,
    "label": "assigns",
    "to": 291
  }, {
    "from": 283,
    "label": "assigns",
    "to": 292
  }, {
    "from": 292,
    "label": "assigns",
    "to": 293
  }, {
    "from": 283,
    "label": "assigns",
    "to": 294
  }, {
    "from": 294,
    "label": "assigns",
    "to": 295
  }, {
    "from": 230,
    "label": "initializes",
    "to": 296
  }, {
    "from": 296,
    "label": "assigns",
    "to": 297
  }, {
    "from": 297,
    "label": "assigns",
    "to": 298
  }, {
    "from": 298,
    "label": "assigns",
    "to": 299
  }, {
    "from": 297,
    "label": "assigns",
    "to": 300
  }, {
    "from": 300,
    "label": "assigns",
    "to": 301
  }, {
    "from": 297,
    "label": "assigns",
    "to": 302
  }, {
    "from": 302,
    "label": "assigns",
    "to": 303
  }, {
    "from": 297,
    "label": "assigns",
    "to": 304
  }, {
    "from": 304,
    "label": "assigns",
    "to": 305
  }, {
    "from": 297,
    "label": "assigns",
    "to": 306
  }, {
    "from": 306,
    "label": "assigns",
    "to": 307
  }, {
    "from": 297,
    "label": "assigns",
    "to": 308
  }, {
    "from": 308,
    "label": "assigns",
    "to": 309
  }, {
    "from": 297,
    "label": "assigns",
    "to": 310
  }, {
    "from": 310,
    "label": "assigns",
    "to": 311
  }, {
    "from": 297,
    "label": "assigns",
    "to": 312
  }, {
    "from": 312,
    "label": "assigns",
    "to": 313
  }, {
    "from": 230,
    "label": "initializes",
    "to": 314
  }, {
    "from": 230,
    "label": "initializes",
    "to": 315
  }, {
    "from": 315,
    "label": "assigns",
    "to": 316
  }, {
    "from": 230,
    "label": "initializes",
    "to": 317
  }, {
    "from": 230,
    "label": "initializes",
    "to": 318
  }, {
    "from": 318,
    "label": "assigns",
    "to": 319
  }, {
    "from": 230,
    "label": "initializes",
    "to": 320
  }, {
    "from": 320,
    "label": "assigns",
    "to": 321
  }, {
    "from": 230,
    "label": "initializes",
    "to": 322
  }, {
    "from": 230,
    "label": "initializes",
    "to": 323
  }, {
    "from": 323,
    "label": "assigns",
    "to": 324
  }, {
    "from": 1,
    "label": "provides",
    "to": 325
  }, {
    "from": 320,
    "label": "represents",
    "to": 326
  }, {
    "from": 325,
    "label": "provides",
    "to": 326
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "template",
    "type": "module"
  }, {
    "id": 2,
    "text": "function() return {} end",
    "type": "function"
  }, {
    "id": 3,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 4,
    "text": "local function enabled(val)\r\n    if val == nil then return true end\r\n    return val == true or (val == \"1\" or val == \"true\" or val == \"on\")\r\nend",
    "type": "function"
  }, {
    "id": 5,
    "text": "if val == nil then return true end",
    "type": "statement:if"
  }, {
    "id": 6,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 7,
    "text": "local function trim(s)\r\n    return gsub(gsub(s, \"^%s+\", \"\"), \"%s+$\", \"\")\r\nend",
    "type": "function"
  }, {
    "id": 8,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 9,
    "text": "local function rpos(view, s)\r\n    while s > 0 do\r\n        local c = sub(view, s, s)\r\n        if c == \" \" or c == \"\\t\" or c == \"\\0\" or c == \"\\x0B\" then\r\n            s = s - 1\r\n        else\r\n            break\r\n        end\r\n    end\r\n    return s\r\nend",
    "type": "function"
  }, {
    "id": 10,
    "text": "while s > 0 do\r\n        local c = sub(view, s, s)\r\n        if c == \" \" or c == \"\\t\" or c == \"\\0\" or c == \"\\x0B\" then\r\n            s = s - 1\r\n        else\r\n            break\r\n        end\r\n    end",
    "type": "statement:while"
  }, {
    "id": 11,
    "text": "local c = sub(view, s, s)",
    "type": "statement:localassign"
  }, {
    "id": 12,
    "text": "if c == \" \" or c == \"\\t\" or c == \"\\0\" or c == \"\\x0B\" then\r\n            s = s - 1\r\n        else\r\n            break\r\n        end",
    "type": "statement:if"
  }, {
    "id": 13,
    "text": "s = s - 1",
    "type": "statement:assign"
  }, {
    "id": 14,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 15,
    "text": "local function escaped(view, s)\r\n    if s > 1 and sub(view, s - 1, s - 1) == \"\\\\\" then\r\n        if s > 2 and sub(view, s - 2, s - 2) == \"\\\\\" then\r\n            return false, 1\r\n        else\r\n            return true, 1\r\n        end\r\n    end\r\n    return false, 0\r\nend",
    "type": "function"
  }, {
    "id": 16,
    "text": "if s > 1 and sub(view, s - 1, s - 1) == \"\\\\\" then\r\n        if s > 2 and sub(view, s - 2, s - 2) == \"\\\\\" then\r\n            return false, 1\r\n        else\r\n            return true, 1\r\n        end\r\n    end",
    "type": "statement:if"
  }, {
    "id": 17,
    "text": "if s > 2 and sub(view, s - 2, s - 2) == \"\\\\\" then\r\n            return false, 1\r\n        else\r\n            return true, 1\r\n        end",
    "type": "statement:if"
  }, {
    "id": 18,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 19,
    "text": "local function readfile(path)\r\n    local file = open(path, \"rb\")\r\n    if not file then return nil end\r\n    local content = file:read \"*a\"\r\n    file:close()\r\n    return content\r\nend",
    "type": "function"
  }, {
    "id": 20,
    "text": "local file = open(path, \"rb\")",
    "type": "statement:localassign"
  }, {
    "id": 21,
    "text": "if not file then return nil end",
    "type": "statement:if"
  }, {
    "id": 22,
    "text": "local content = file:read \"*a\"",
    "type": "statement:localassign"
  }, {
    "id": 23,
    "text": "file:close()",
    "type": "statement:functioncall"
  }, {
    "id": 24,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 25,
    "text": "local function loadlua(path)\r\n    return readfile(path) or path\r\nend",
    "type": "function"
  }, {
    "id": 26,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 27,
    "text": "local function loadngx(path)\r\n    local vars = VAR_PHASES[phase()]\r\n    local file, location = path, vars and var.template_location\r\n    if sub(file, 1)  == \"/\" then file = sub(file, 2) end\r\n    if location and location ~= \"\" then\r\n        if sub(location, -1) == \"/\" then location = sub(location, 1, -2) end\r\n        local res = capture(concat{ location, '/', file})\r\n        if res.status == 200 then return res.body end\r\n    end\r\n    local root = vars and (var.template_root or var.document_root) or prefix\r\n    if sub(root, -1) == \"/\" then root = sub(root, 1, -2) end\r\n    return readfile(concat{ root, \"/\", file }) or path\r\nend",
    "type": "function"
  }, {
    "id": 28,
    "text": "local vars = VAR_PHASES[phase()]",
    "type": "statement:localassign"
  }, {
    "id": 29,
    "text": "local file, location = path, vars and var.template_location",
    "type": "statement:localassign"
  }, {
    "id": 30,
    "text": "if sub(file, 1)  == \"/\" then file = sub(file, 2) end",
    "type": "statement:if"
  }, {
    "id": 31,
    "text": "file = sub(file, 2)",
    "type": "statement:assign"
  }, {
    "id": 32,
    "text": "if location and location ~= \"\" then\r\n        if sub(location, -1) == \"/\" then location = sub(location, 1, -2) end\r\n        local res = capture(concat{ location, '/', file})\r\n        if res.status == 200 then return res.body end\r\n    end",
    "type": "statement:if"
  }, {
    "id": 33,
    "text": "if sub(location, -1) == \"/\" then location = sub(location, 1, -2) end",
    "type": "statement:if"
  }, {
    "id": 34,
    "text": "location = sub(location, 1, -2)",
    "type": "statement:assign"
  }, {
    "id": 35,
    "text": "local res = capture(concat{ location, '/', file})",
    "type": "statement:localassign"
  }, {
    "id": 36,
    "text": "if res.status == 200 then return res.body end",
    "type": "statement:if"
  }, {
    "id": 37,
    "text": "local root = vars and (var.template_root or var.document_root) or prefix",
    "type": "statement:localassign"
  }, {
    "id": 38,
    "text": "if sub(root, -1) == \"/\" then root = sub(root, 1, -2) end",
    "type": "statement:if"
  }, {
    "id": 39,
    "text": "root = sub(root, 1, -2)",
    "type": "statement:assign"
  }, {
    "id": 40,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 41,
    "text": "function(view)\r\n                return assert(load(view, nil, nil, setmetatable({ template = template }, context)))\r\n            end",
    "type": "function"
  }, {
    "id": 42,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 43,
    "text": "function(view)\r\n                local func = assert(loadstring(view))\r\n                setfenv(func, setmetatable({ template = template }, context))\r\n                return func\r\n            end",
    "type": "function"
  }, {
    "id": 44,
    "text": "local func = assert(loadstring(view))",
    "type": "statement:localassign"
  }, {
    "id": 45,
    "text": "setfenv(func, setmetatable({ template = template }, context))",
    "type": "statement:functioncall"
  }, {
    "id": 46,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 47,
    "text": "function(view)\r\n            return assert(load(view, nil, nil, setmetatable({ template = template }, context)))\r\n        end",
    "type": "function"
  }, {
    "id": 48,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 49,
    "text": "function template.caching(enable)\r\n    if enable ~= nil then caching = enable == true end\r\n    return caching\r\nend",
    "type": "function"
  }, {
    "id": 50,
    "text": "if enable ~= nil then caching = enable == true end",
    "type": "statement:if"
  }, {
    "id": 51,
    "text": "caching = enable == true",
    "type": "statement:assign"
  }, {
    "id": 52,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 53,
    "text": "function template.output(s)\r\n    if s == nil or s == null then return \"\" end\r\n    if type(s) == \"function\" then return template.output(s()) end\r\n    return tostring(s)\r\nend",
    "type": "function"
  }, {
    "id": 54,
    "text": "if s == nil or s == null then return \"\" end",
    "type": "statement:if"
  }, {
    "id": 55,
    "text": "if type(s) == \"function\" then return template.output(s()) end",
    "type": "statement:if"
  }, {
    "id": 56,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 57,
    "text": "function template.escape(s, c)\r\n    if type(s) == \"string\" then\r\n        if c then return gsub(s, \"[}{\\\">/<'&]\", CODE_ENTITIES) end\r\n        return gsub(s, \"[\\\">/<'&]\", HTML_ENTITIES)\r\n    end\r\n    return template.output(s)\r\nend",
    "type": "function"
  }, {
    "id": 58,
    "text": "if type(s) == \"string\" then\r\n        if c then return gsub(s, \"[}{\\\">/<'&]\", CODE_ENTITIES) end\r\n        return gsub(s, \"[\\\">/<'&]\", HTML_ENTITIES)\r\n    end",
    "type": "statement:if"
  }, {
    "id": 59,
    "text": "if c then return gsub(s, \"[}{\\\">/<'&]\", CODE_ENTITIES) end",
    "type": "statement:if"
  }, {
    "id": 60,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 61,
    "text": "function template.new(view, layout)\r\n    assert(view, \"view was not provided for template.new(view, layout).\")\r\n    local render, compile = template.render, template.compile\r\n    if layout then\r\n        if type(layout) == \"table\" then\r\n            return setmetatable({ render = function(self, context)\r\n                local context = context or self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                layout.blocks = context.blocks or {}\r\n                layout.view = context.view or \"\"\r\n                return layout:render()\r\n            end }, { __tostring = function(self)\r\n                local context = self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                layout.blocks = context.blocks or {}\r\n                layout.view = context.view\r\n                return tostring(layout)\r\n            end })\r\n        else\r\n            return setmetatable({ render = function(self, context)\r\n                local context = context or self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                return render(layout, context)\r\n            end }, { __tostring = function(self)\r\n                local context = self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                return compile(layout)(context)\r\n            end })\r\n        end\r\n    end\r\n    return setmetatable({ render = function(self, context)\r\n        return render(view, context or self)\r\n    end }, { __tostring = function(self)\r\n        return compile(view)(self)\r\n    end })\r\nend",
    "type": "function"
  }, {
    "id": 62,
    "text": "assert(view, \"view was not provided for template.new(view, layout).\")",
    "type": "statement:functioncall"
  }, {
    "id": 63,
    "text": "local render, compile = template.render, template.compile",
    "type": "statement:localassign"
  }, {
    "id": 64,
    "text": "if layout then\r\n        if type(layout) == \"table\" then\r\n            return setmetatable({ render = function(self, context)\r\n                local context = context or self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                layout.blocks = context.blocks or {}\r\n                layout.view = context.view or \"\"\r\n                return layout:render()\r\n            end }, { __tostring = function(self)\r\n                local context = self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                layout.blocks = context.blocks or {}\r\n                layout.view = context.view\r\n                return tostring(layout)\r\n            end })\r\n        else\r\n            return setmetatable({ render = function(self, context)\r\n                local context = context or self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                return render(layout, context)\r\n            end }, { __tostring = function(self)\r\n                local context = self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                return compile(layout)(context)\r\n            end })\r\n        end\r\n    end",
    "type": "statement:if"
  }, {
    "id": 65,
    "text": "if type(layout) == \"table\" then\r\n            return setmetatable({ render = function(self, context)\r\n                local context = context or self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                layout.blocks = context.blocks or {}\r\n                layout.view = context.view or \"\"\r\n                return layout:render()\r\n            end }, { __tostring = function(self)\r\n                local context = self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                layout.blocks = context.blocks or {}\r\n                layout.view = context.view\r\n                return tostring(layout)\r\n            end })\r\n        else\r\n            return setmetatable({ render = function(self, context)\r\n                local context = context or self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                return render(layout, context)\r\n            end }, { __tostring = function(self)\r\n                local context = self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                return compile(layout)(context)\r\n            end })\r\n        end",
    "type": "statement:if"
  }, {
    "id": 66,
    "text": "local context = context or self",
    "type": "statement:localassign"
  }, {
    "id": 67,
    "text": "context.blocks = context.blocks or {}",
    "type": "statement:assign"
  }, {
    "id": 68,
    "text": "context.view = compile(view)(context)",
    "type": "statement:assign"
  }, {
    "id": 69,
    "text": "layout.blocks = context.blocks or {}",
    "type": "statement:assign"
  }, {
    "id": 70,
    "text": "layout.view = context.view or \"\"",
    "type": "statement:assign"
  }, {
    "id": 71,
    "text": "local context = self",
    "type": "statement:localassign"
  }, {
    "id": 72,
    "text": "layout.view = context.view",
    "type": "statement:assign"
  }, {
    "id": 73,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 74,
    "text": "function template.precompile(view, path, strip)\r\n    local chunk = dump(template.compile(view), strip ~= false)\r\n    if path then\r\n        local file = open(path, \"wb\")\r\n        file:write(chunk)\r\n        file:close()\r\n    end\r\n    return chunk\r\nend",
    "type": "function"
  }, {
    "id": 75,
    "text": "local chunk = dump(template.compile(view), strip ~= false)",
    "type": "statement:localassign"
  }, {
    "id": 76,
    "text": "if path then\r\n        local file = open(path, \"wb\")\r\n        file:write(chunk)\r\n        file:close()\r\n    end",
    "type": "statement:if"
  }, {
    "id": 77,
    "text": "local file = open(path, \"wb\")",
    "type": "statement:localassign"
  }, {
    "id": 78,
    "text": "file:write(chunk)",
    "type": "statement:functioncall"
  }, {
    "id": 79,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 80,
    "text": "function template.compile(view, key, plain)\r\n    assert(view, \"view was not provided for template.compile(view, key, plain).\")\r\n    if key == \"no-cache\" then\r\n        return loadchunk(template.parse(view, plain)), false\r\n    end\r\n    key = key or view\r\n    local cache = template.cache\r\n    if cache[key] then return cache[key], true end\r\n    local func = loadchunk(template.parse(view, plain))\r\n    if caching then cache[key] = func end\r\n    return func, false\r\nend",
    "type": "function"
  }, {
    "id": 81,
    "text": "assert(view, \"view was not provided for template.compile(view, key, plain).\")",
    "type": "statement:functioncall"
  }, {
    "id": 82,
    "text": "if key == \"no-cache\" then\r\n        return loadchunk(template.parse(view, plain)), false\r\n    end",
    "type": "statement:if"
  }, {
    "id": 83,
    "text": "key = key or view",
    "type": "statement:assign"
  }, {
    "id": 84,
    "text": "local cache = template.cache",
    "type": "statement:localassign"
  }, {
    "id": 85,
    "text": "if cache[key] then return cache[key], true end",
    "type": "statement:if"
  }, {
    "id": 86,
    "text": "local func = loadchunk(template.parse(view, plain))",
    "type": "statement:localassign"
  }, {
    "id": 87,
    "text": "if caching then cache[key] = func end",
    "type": "statement:if"
  }, {
    "id": 88,
    "text": "cache[key] = func",
    "type": "statement:assign"
  }, {
    "id": 89,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 90,
    "text": "function template.parse(view, plain)\r\n    assert(view, \"view was not provided for template.parse(view, plain).\")\r\n    if not plain then\r\n        view = template.load(view)\r\n        if byte(view, 1, 1) == 27 then return view end\r\n    end\r\n    local j = 2\r\n    local c = {[[\r\ncontext=... or {}\r\nlocal function include(v, c) return template.compile(v)(c or context) end\r\nlocal ___,blocks,layout={},blocks or {}\r\n]] }\r\n    local i, s = 1, find(view, \"{\", 1, true)\r\n    while s do\r\n        local t, p = sub(view, s + 1, s + 1), s + 2\r\n        if t == \"{\" then\r\n            local e = find(view, \"}}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=template.escape(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end\r\n        elseif t == \"*\" then\r\n            local e = find(view, \"*}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=template.output(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end\r\n        elseif t == \"%\" then\r\n            local e = find(view, \"%}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if z then\r\n                    if i < s - w then\r\n                        c[j] = \"___[#___+1]=[=[\\n\"\r\n                        c[j+1] = sub(view, i, s - 1 - w)\r\n                        c[j+2] = \"]=]\\n\"\r\n                        j=j+3\r\n                    end\r\n                    i = s\r\n                else\r\n                    local n = e + 2\r\n                    if sub(view, n, n) == \"\\n\" then\r\n                        n = n + 1\r\n                    end\r\n                    local r = rpos(view, s - 1)\r\n                    if i <= r then\r\n                        c[j] = \"___[#___+1]=[=[\\n\"\r\n                        c[j+1] = sub(view, i, r)\r\n                        c[j+2] = \"]=]\\n\"\r\n                        j=j+3\r\n                    end\r\n                    c[j] = trim(sub(view, p, e - 1))\r\n                    c[j+1] = \"\\n\"\r\n                    j=j+2\r\n                    s, i = n - 1, n\r\n                end\r\n            end\r\n        elseif t == \"(\" then\r\n            local e = find(view, \")}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    local f = sub(view, p, e - 1)\r\n                    local x = find(f, \",\", 2, true)\r\n                    if x then\r\n                        c[j] = \"___[#___+1]=include([=[\"\r\n                        c[j+1] = trim(sub(f, 1, x - 1))\r\n                        c[j+2] = \"]=],\"\r\n                        c[j+3] = trim(sub(f, x + 1))\r\n                        c[j+4] = \")\\n\"\r\n                        j=j+5\r\n                    else\r\n                        c[j] = \"___[#___+1]=include([=[\"\r\n                        c[j+1] = trim(f)\r\n                        c[j+2] = \"]=])\\n\"\r\n                        j=j+3\r\n                    end\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end\r\n        elseif t == \"[\" then\r\n            local e = find(view, \"]}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=include(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end\r\n        elseif t == \"-\" then\r\n            local e = find(view, \"-}\", p, true)\r\n            if e then\r\n                local x, y = find(view, sub(view, s, e + 1), e + 2, true)\r\n                if x then\r\n                    local z, w = escaped(view, s)\r\n                    if z then\r\n                        if i < s - w then\r\n                            c[j] = \"___[#___+1]=[=[\\n\"\r\n                            c[j+1] = sub(view, i, s - 1 - w)\r\n                            c[j+2] = \"]=]\\n\"\r\n                            j=j+3\r\n                        end\r\n                        i = s\r\n                    else\r\n                        y = y + 1\r\n                        x = x - 1\r\n                        if sub(view, y, y) == \"\\n\" then\r\n                            y = y + 1\r\n                        end\r\n                        local b = trim(sub(view, p, e - 1))\r\n                        if b == \"verbatim\" or b == \"raw\" then\r\n                            if i < s - w then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, s - 1 - w)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end\r\n                            c[j] = \"___[#___+1]=[=[\"\r\n                            c[j+1] = sub(view, e + 2, x)\r\n                            c[j+2] = \"]=]\\n\"\r\n                            j=j+3\r\n                        else\r\n                            if sub(view, x, x) == \"\\n\" then\r\n                                x = x - 1\r\n                            end\r\n                            local r = rpos(view, s - 1)\r\n                            if i <= r then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, r)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end\r\n                            c[j] = 'blocks[\"'\r\n                            c[j+1] = b\r\n                            c[j+2] = '\"]=include[=['\r\n                            c[j+3] = sub(view, e + 2, x)\r\n                            c[j+4] = \"]=]\\n\"\r\n                            j=j+5\r\n                        end\r\n                        s, i = y - 1, y\r\n                    end\r\n                end\r\n            end\r\n        elseif t == \"#\" then\r\n            local e = find(view, \"#}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    e = e + 2\r\n                    if sub(view, e, e) == \"\\n\" then\r\n                        e = e + 1\r\n                    end\r\n                    s, i = e - 1, e\r\n                end\r\n            end\r\n        end\r\n        s = find(view, \"{\", s + 1, true)\r\n    end\r\n    s = sub(view, i)\r\n    if s and s ~= \"\" then\r\n        c[j] = \"___[#___+1]=[=[\\n\"\r\n        c[j+1] = s\r\n        c[j+2] = \"]=]\\n\"\r\n        j=j+3\r\n    end\r\n    c[j] = \"return layout and include(layout,setmetatable({view=table.concat(___),blocks=blocks},{__index=context})) or table.concat(___)\"\r\n    return concat(c)\r\nend",
    "type": "function"
  }, {
    "id": 91,
    "text": "assert(view, \"view was not provided for template.parse(view, plain).\")",
    "type": "statement:functioncall"
  }, {
    "id": 92,
    "text": "if not plain then\r\n        view = template.load(view)\r\n        if byte(view, 1, 1) == 27 then return view end\r\n    end",
    "type": "statement:if"
  }, {
    "id": 93,
    "text": "view = template.load(view)",
    "type": "statement:assign"
  }, {
    "id": 94,
    "text": "if byte(view, 1, 1) == 27 then return view end",
    "type": "statement:if"
  }, {
    "id": 95,
    "text": "local j = 2",
    "type": "statement:localassign"
  }, {
    "id": 96,
    "text": "local c = {[[\r\ncontext=... or {}\r\nlocal function include(v, c) return template.compile(v)(c or context) end\r\nlocal ___,blocks,layout={},blocks or {}\r\n]] }",
    "type": "statement:localassign"
  }, {
    "id": 97,
    "text": "local i, s = 1, find(view, \"{\", 1, true)",
    "type": "statement:localassign"
  }, {
    "id": 98,
    "text": "while s do\r\n        local t, p = sub(view, s + 1, s + 1), s + 2\r\n        if t == \"{\" then\r\n            local e = find(view, \"}}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=template.escape(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end\r\n        elseif t == \"*\" then\r\n            local e = find(view, \"*}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=template.output(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end\r\n        elseif t == \"%\" then\r\n            local e = find(view, \"%}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if z then\r\n                    if i < s - w then\r\n                        c[j] = \"___[#___+1]=[=[\\n\"\r\n                        c[j+1] = sub(view, i, s - 1 - w)\r\n                        c[j+2] = \"]=]\\n\"\r\n                        j=j+3\r\n                    end\r\n                    i = s\r\n                else\r\n                    local n = e + 2\r\n                    if sub(view, n, n) == \"\\n\" then\r\n                        n = n + 1\r\n                    end\r\n                    local r = rpos(view, s - 1)\r\n                    if i <= r then\r\n                        c[j] = \"___[#___+1]=[=[\\n\"\r\n                        c[j+1] = sub(view, i, r)\r\n                        c[j+2] = \"]=]\\n\"\r\n                        j=j+3\r\n                    end\r\n                    c[j] = trim(sub(view, p, e - 1))\r\n                    c[j+1] = \"\\n\"\r\n                    j=j+2\r\n                    s, i = n - 1, n\r\n                end\r\n            end\r\n        elseif t == \"(\" then\r\n            local e = find(view, \")}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    local f = sub(view, p, e - 1)\r\n                    local x = find(f, \",\", 2, true)\r\n                    if x then\r\n                        c[j] = \"___[#___+1]=include([=[\"\r\n                        c[j+1] = trim(sub(f, 1, x - 1))\r\n                        c[j+2] = \"]=],\"\r\n                        c[j+3] = trim(sub(f, x + 1))\r\n                        c[j+4] = \")\\n\"\r\n                        j=j+5\r\n                    else\r\n                        c[j] = \"___[#___+1]=include([=[\"\r\n                        c[j+1] = trim(f)\r\n                        c[j+2] = \"]=])\\n\"\r\n                        j=j+3\r\n                    end\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end\r\n        elseif t == \"[\" then\r\n            local e = find(view, \"]}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=include(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end\r\n        elseif t == \"-\" then\r\n            local e = find(view, \"-}\", p, true)\r\n            if e then\r\n                local x, y = find(view, sub(view, s, e + 1), e + 2, true)\r\n                if x then\r\n                    local z, w = escaped(view, s)\r\n                    if z then\r\n                        if i < s - w then\r\n                            c[j] = \"___[#___+1]=[=[\\n\"\r\n                            c[j+1] = sub(view, i, s - 1 - w)\r\n                            c[j+2] = \"]=]\\n\"\r\n                            j=j+3\r\n                        end\r\n                        i = s\r\n                    else\r\n                        y = y + 1\r\n                        x = x - 1\r\n                        if sub(view, y, y) == \"\\n\" then\r\n                            y = y + 1\r\n                        end\r\n                        local b = trim(sub(view, p, e - 1))\r\n                        if b == \"verbatim\" or b == \"raw\" then\r\n                            if i < s - w then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, s - 1 - w)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end\r\n                            c[j] = \"___[#___+1]=[=[\"\r\n                            c[j+1] = sub(view, e + 2, x)\r\n                            c[j+2] = \"]=]\\n\"\r\n                            j=j+3\r\n                        else\r\n                            if sub(view, x, x) == \"\\n\" then\r\n                                x = x - 1\r\n                            end\r\n                            local r = rpos(view, s - 1)\r\n                            if i <= r then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, r)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end\r\n                            c[j] = 'blocks[\"'\r\n                            c[j+1] = b\r\n                            c[j+2] = '\"]=include[=['\r\n                            c[j+3] = sub(view, e + 2, x)\r\n                            c[j+4] = \"]=]\\n\"\r\n                            j=j+5\r\n                        end\r\n                        s, i = y - 1, y\r\n                    end\r\n                end\r\n            end\r\n        elseif t == \"#\" then\r\n            local e = find(view, \"#}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    e = e + 2\r\n                    if sub(view, e, e) == \"\\n\" then\r\n                        e = e + 1\r\n                    end\r\n                    s, i = e - 1, e\r\n                end\r\n            end\r\n        end\r\n        s = find(view, \"{\", s + 1, true)\r\n    end",
    "type": "statement:while"
  }, {
    "id": 99,
    "text": "local t, p = sub(view, s + 1, s + 1), s + 2",
    "type": "statement:localassign"
  }, {
    "id": 100,
    "text": "if t == \"{\" then\r\n            local e = find(view, \"}}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=template.escape(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end\r\n        elseif t == \"*\" then\r\n            local e = find(view, \"*}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=template.output(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end\r\n        elseif t == \"%\" then\r\n            local e = find(view, \"%}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if z then\r\n                    if i < s - w then\r\n                        c[j] = \"___[#___+1]=[=[\\n\"\r\n                        c[j+1] = sub(view, i, s - 1 - w)\r\n                        c[j+2] = \"]=]\\n\"\r\n                        j=j+3\r\n                    end\r\n                    i = s\r\n                else\r\n                    local n = e + 2\r\n                    if sub(view, n, n) == \"\\n\" then\r\n                        n = n + 1\r\n                    end\r\n                    local r = rpos(view, s - 1)\r\n                    if i <= r then\r\n                        c[j] = \"___[#___+1]=[=[\\n\"\r\n                        c[j+1] = sub(view, i, r)\r\n                        c[j+2] = \"]=]\\n\"\r\n                        j=j+3\r\n                    end\r\n                    c[j] = trim(sub(view, p, e - 1))\r\n                    c[j+1] = \"\\n\"\r\n                    j=j+2\r\n                    s, i = n - 1, n\r\n                end\r\n            end\r\n        elseif t == \"(\" then\r\n            local e = find(view, \")}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    local f = sub(view, p, e - 1)\r\n                    local x = find(f, \",\", 2, true)\r\n                    if x then\r\n                        c[j] = \"___[#___+1]=include([=[\"\r\n                        c[j+1] = trim(sub(f, 1, x - 1))\r\n                        c[j+2] = \"]=],\"\r\n                        c[j+3] = trim(sub(f, x + 1))\r\n                        c[j+4] = \")\\n\"\r\n                        j=j+5\r\n                    else\r\n                        c[j] = \"___[#___+1]=include([=[\"\r\n                        c[j+1] = trim(f)\r\n                        c[j+2] = \"]=])\\n\"\r\n                        j=j+3\r\n                    end\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end\r\n        elseif t == \"[\" then\r\n            local e = find(view, \"]}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=include(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end\r\n        elseif t == \"-\" then\r\n            local e = find(view, \"-}\", p, true)\r\n            if e then\r\n                local x, y = find(view, sub(view, s, e + 1), e + 2, true)\r\n                if x then\r\n                    local z, w = escaped(view, s)\r\n                    if z then\r\n                        if i < s - w then\r\n                            c[j] = \"___[#___+1]=[=[\\n\"\r\n                            c[j+1] = sub(view, i, s - 1 - w)\r\n                            c[j+2] = \"]=]\\n\"\r\n                            j=j+3\r\n                        end\r\n                        i = s\r\n                    else\r\n                        y = y + 1\r\n                        x = x - 1\r\n                        if sub(view, y, y) == \"\\n\" then\r\n                            y = y + 1\r\n                        end\r\n                        local b = trim(sub(view, p, e - 1))\r\n                        if b == \"verbatim\" or b == \"raw\" then\r\n                            if i < s - w then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, s - 1 - w)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end\r\n                            c[j] = \"___[#___+1]=[=[\"\r\n                            c[j+1] = sub(view, e + 2, x)\r\n                            c[j+2] = \"]=]\\n\"\r\n                            j=j+3\r\n                        else\r\n                            if sub(view, x, x) == \"\\n\" then\r\n                                x = x - 1\r\n                            end\r\n                            local r = rpos(view, s - 1)\r\n                            if i <= r then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, r)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end\r\n                            c[j] = 'blocks[\"'\r\n                            c[j+1] = b\r\n                            c[j+2] = '\"]=include[=['\r\n                            c[j+3] = sub(view, e + 2, x)\r\n                            c[j+4] = \"]=]\\n\"\r\n                            j=j+5\r\n                        end\r\n                        s, i = y - 1, y\r\n                    end\r\n                end\r\n            end\r\n        elseif t == \"#\" then\r\n            local e = find(view, \"#}\", p, true)\r\n            if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    e = e + 2\r\n                    if sub(view, e, e) == \"\\n\" then\r\n                        e = e + 1\r\n                    end\r\n                    s, i = e - 1, e\r\n                end\r\n            end\r\n        end",
    "type": "statement:if"
  }, {
    "id": 101,
    "text": "local e = find(view, \"}}\", p, true)",
    "type": "statement:localassign"
  }, {
    "id": 102,
    "text": "if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=template.escape(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end",
    "type": "statement:if"
  }, {
    "id": 103,
    "text": "local z, w = escaped(view, s)",
    "type": "statement:localassign"
  }, {
    "id": 104,
    "text": "if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end",
    "type": "statement:if"
  }, {
    "id": 105,
    "text": "c[j] = \"___[#___+1]=[=[\\n\"",
    "type": "statement:assign"
  }, {
    "id": 106,
    "text": "c[j+1] = sub(view, i, s - 1 - w)",
    "type": "statement:assign"
  }, {
    "id": 107,
    "text": "c[j+2] = \"]=]\\n\"",
    "type": "statement:assign"
  }, {
    "id": 108,
    "text": "j=j+3",
    "type": "statement:assign"
  }, {
    "id": 109,
    "text": "if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=template.escape(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end",
    "type": "statement:if"
  }, {
    "id": 110,
    "text": "i = s",
    "type": "statement:assign"
  }, {
    "id": 111,
    "text": "c[j] = \"___[#___+1]=template.escape(\"",
    "type": "statement:assign"
  }, {
    "id": 112,
    "text": "c[j+1] = trim(sub(view, p, e - 1))",
    "type": "statement:assign"
  }, {
    "id": 113,
    "text": "c[j+2] = \")\\n\"",
    "type": "statement:assign"
  }, {
    "id": 114,
    "text": "s, i = e + 1, e + 2",
    "type": "statement:assign"
  }, {
    "id": 115,
    "text": "local e = find(view, \"*}\", p, true)",
    "type": "statement:localassign"
  }, {
    "id": 116,
    "text": "if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=template.output(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end",
    "type": "statement:if"
  }, {
    "id": 117,
    "text": "if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=template.output(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end",
    "type": "statement:if"
  }, {
    "id": 118,
    "text": "c[j] = \"___[#___+1]=template.output(\"",
    "type": "statement:assign"
  }, {
    "id": 119,
    "text": "local e = find(view, \"%}\", p, true)",
    "type": "statement:localassign"
  }, {
    "id": 120,
    "text": "if e then\r\n                local z, w = escaped(view, s)\r\n                if z then\r\n                    if i < s - w then\r\n                        c[j] = \"___[#___+1]=[=[\\n\"\r\n                        c[j+1] = sub(view, i, s - 1 - w)\r\n                        c[j+2] = \"]=]\\n\"\r\n                        j=j+3\r\n                    end\r\n                    i = s\r\n                else\r\n                    local n = e + 2\r\n                    if sub(view, n, n) == \"\\n\" then\r\n                        n = n + 1\r\n                    end\r\n                    local r = rpos(view, s - 1)\r\n                    if i <= r then\r\n                        c[j] = \"___[#___+1]=[=[\\n\"\r\n                        c[j+1] = sub(view, i, r)\r\n                        c[j+2] = \"]=]\\n\"\r\n                        j=j+3\r\n                    end\r\n                    c[j] = trim(sub(view, p, e - 1))\r\n                    c[j+1] = \"\\n\"\r\n                    j=j+2\r\n                    s, i = n - 1, n\r\n                end\r\n            end",
    "type": "statement:if"
  }, {
    "id": 121,
    "text": "if z then\r\n                    if i < s - w then\r\n                        c[j] = \"___[#___+1]=[=[\\n\"\r\n                        c[j+1] = sub(view, i, s - 1 - w)\r\n                        c[j+2] = \"]=]\\n\"\r\n                        j=j+3\r\n                    end\r\n                    i = s\r\n                else\r\n                    local n = e + 2\r\n                    if sub(view, n, n) == \"\\n\" then\r\n                        n = n + 1\r\n                    end\r\n                    local r = rpos(view, s - 1)\r\n                    if i <= r then\r\n                        c[j] = \"___[#___+1]=[=[\\n\"\r\n                        c[j+1] = sub(view, i, r)\r\n                        c[j+2] = \"]=]\\n\"\r\n                        j=j+3\r\n                    end\r\n                    c[j] = trim(sub(view, p, e - 1))\r\n                    c[j+1] = \"\\n\"\r\n                    j=j+2\r\n                    s, i = n - 1, n\r\n                end",
    "type": "statement:if"
  }, {
    "id": 122,
    "text": "if i < s - w then\r\n                        c[j] = \"___[#___+1]=[=[\\n\"\r\n                        c[j+1] = sub(view, i, s - 1 - w)\r\n                        c[j+2] = \"]=]\\n\"\r\n                        j=j+3\r\n                    end",
    "type": "statement:if"
  }, {
    "id": 123,
    "text": "local n = e + 2",
    "type": "statement:localassign"
  }, {
    "id": 124,
    "text": "if sub(view, n, n) == \"\\n\" then\r\n                        n = n + 1\r\n                    end",
    "type": "statement:if"
  }, {
    "id": 125,
    "text": "n = n + 1",
    "type": "statement:assign"
  }, {
    "id": 126,
    "text": "local r = rpos(view, s - 1)",
    "type": "statement:localassign"
  }, {
    "id": 127,
    "text": "if i <= r then\r\n                        c[j] = \"___[#___+1]=[=[\\n\"\r\n                        c[j+1] = sub(view, i, r)\r\n                        c[j+2] = \"]=]\\n\"\r\n                        j=j+3\r\n                    end",
    "type": "statement:if"
  }, {
    "id": 128,
    "text": "c[j+1] = sub(view, i, r)",
    "type": "statement:assign"
  }, {
    "id": 129,
    "text": "c[j] = trim(sub(view, p, e - 1))",
    "type": "statement:assign"
  }, {
    "id": 130,
    "text": "c[j+1] = \"\\n\"",
    "type": "statement:assign"
  }, {
    "id": 131,
    "text": "j=j+2",
    "type": "statement:assign"
  }, {
    "id": 132,
    "text": "s, i = n - 1, n",
    "type": "statement:assign"
  }, {
    "id": 133,
    "text": "local e = find(view, \")}\", p, true)",
    "type": "statement:localassign"
  }, {
    "id": 134,
    "text": "if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    local f = sub(view, p, e - 1)\r\n                    local x = find(f, \",\", 2, true)\r\n                    if x then\r\n                        c[j] = \"___[#___+1]=include([=[\"\r\n                        c[j+1] = trim(sub(f, 1, x - 1))\r\n                        c[j+2] = \"]=],\"\r\n                        c[j+3] = trim(sub(f, x + 1))\r\n                        c[j+4] = \")\\n\"\r\n                        j=j+5\r\n                    else\r\n                        c[j] = \"___[#___+1]=include([=[\"\r\n                        c[j+1] = trim(f)\r\n                        c[j+2] = \"]=])\\n\"\r\n                        j=j+3\r\n                    end\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end",
    "type": "statement:if"
  }, {
    "id": 135,
    "text": "if z then\r\n                    i = s\r\n                else\r\n                    local f = sub(view, p, e - 1)\r\n                    local x = find(f, \",\", 2, true)\r\n                    if x then\r\n                        c[j] = \"___[#___+1]=include([=[\"\r\n                        c[j+1] = trim(sub(f, 1, x - 1))\r\n                        c[j+2] = \"]=],\"\r\n                        c[j+3] = trim(sub(f, x + 1))\r\n                        c[j+4] = \")\\n\"\r\n                        j=j+5\r\n                    else\r\n                        c[j] = \"___[#___+1]=include([=[\"\r\n                        c[j+1] = trim(f)\r\n                        c[j+2] = \"]=])\\n\"\r\n                        j=j+3\r\n                    end\r\n                    s, i = e + 1, e + 2\r\n                end",
    "type": "statement:if"
  }, {
    "id": 136,
    "text": "local f = sub(view, p, e - 1)",
    "type": "statement:localassign"
  }, {
    "id": 137,
    "text": "local x = find(f, \",\", 2, true)",
    "type": "statement:localassign"
  }, {
    "id": 138,
    "text": "if x then\r\n                        c[j] = \"___[#___+1]=include([=[\"\r\n                        c[j+1] = trim(sub(f, 1, x - 1))\r\n                        c[j+2] = \"]=],\"\r\n                        c[j+3] = trim(sub(f, x + 1))\r\n                        c[j+4] = \")\\n\"\r\n                        j=j+5\r\n                    else\r\n                        c[j] = \"___[#___+1]=include([=[\"\r\n                        c[j+1] = trim(f)\r\n                        c[j+2] = \"]=])\\n\"\r\n                        j=j+3\r\n                    end",
    "type": "statement:if"
  }, {
    "id": 139,
    "text": "c[j] = \"___[#___+1]=include([=[\"",
    "type": "statement:assign"
  }, {
    "id": 140,
    "text": "c[j+1] = trim(sub(f, 1, x - 1))",
    "type": "statement:assign"
  }, {
    "id": 141,
    "text": "c[j+2] = \"]=],\"",
    "type": "statement:assign"
  }, {
    "id": 142,
    "text": "c[j+3] = trim(sub(f, x + 1))",
    "type": "statement:assign"
  }, {
    "id": 143,
    "text": "c[j+4] = \")\\n\"",
    "type": "statement:assign"
  }, {
    "id": 144,
    "text": "j=j+5",
    "type": "statement:assign"
  }, {
    "id": 145,
    "text": "c[j+1] = trim(f)",
    "type": "statement:assign"
  }, {
    "id": 146,
    "text": "c[j+2] = \"]=])\\n\"",
    "type": "statement:assign"
  }, {
    "id": 147,
    "text": "local e = find(view, \"]}\", p, true)",
    "type": "statement:localassign"
  }, {
    "id": 148,
    "text": "if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=include(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end\r\n            end",
    "type": "statement:if"
  }, {
    "id": 149,
    "text": "if z then\r\n                    i = s\r\n                else\r\n                    c[j] = \"___[#___+1]=include(\"\r\n                    c[j+1] = trim(sub(view, p, e - 1))\r\n                    c[j+2] = \")\\n\"\r\n                    j=j+3\r\n                    s, i = e + 1, e + 2\r\n                end",
    "type": "statement:if"
  }, {
    "id": 150,
    "text": "c[j] = \"___[#___+1]=include(\"",
    "type": "statement:assign"
  }, {
    "id": 151,
    "text": "local e = find(view, \"-}\", p, true)",
    "type": "statement:localassign"
  }, {
    "id": 152,
    "text": "if e then\r\n                local x, y = find(view, sub(view, s, e + 1), e + 2, true)\r\n                if x then\r\n                    local z, w = escaped(view, s)\r\n                    if z then\r\n                        if i < s - w then\r\n                            c[j] = \"___[#___+1]=[=[\\n\"\r\n                            c[j+1] = sub(view, i, s - 1 - w)\r\n                            c[j+2] = \"]=]\\n\"\r\n                            j=j+3\r\n                        end\r\n                        i = s\r\n                    else\r\n                        y = y + 1\r\n                        x = x - 1\r\n                        if sub(view, y, y) == \"\\n\" then\r\n                            y = y + 1\r\n                        end\r\n                        local b = trim(sub(view, p, e - 1))\r\n                        if b == \"verbatim\" or b == \"raw\" then\r\n                            if i < s - w then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, s - 1 - w)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end\r\n                            c[j] = \"___[#___+1]=[=[\"\r\n                            c[j+1] = sub(view, e + 2, x)\r\n                            c[j+2] = \"]=]\\n\"\r\n                            j=j+3\r\n                        else\r\n                            if sub(view, x, x) == \"\\n\" then\r\n                                x = x - 1\r\n                            end\r\n                            local r = rpos(view, s - 1)\r\n                            if i <= r then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, r)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end\r\n                            c[j] = 'blocks[\"'\r\n                            c[j+1] = b\r\n                            c[j+2] = '\"]=include[=['\r\n                            c[j+3] = sub(view, e + 2, x)\r\n                            c[j+4] = \"]=]\\n\"\r\n                            j=j+5\r\n                        end\r\n                        s, i = y - 1, y\r\n                    end\r\n                end\r\n            end",
    "type": "statement:if"
  }, {
    "id": 153,
    "text": "local x, y = find(view, sub(view, s, e + 1), e + 2, true)",
    "type": "statement:localassign"
  }, {
    "id": 154,
    "text": "if x then\r\n                    local z, w = escaped(view, s)\r\n                    if z then\r\n                        if i < s - w then\r\n                            c[j] = \"___[#___+1]=[=[\\n\"\r\n                            c[j+1] = sub(view, i, s - 1 - w)\r\n                            c[j+2] = \"]=]\\n\"\r\n                            j=j+3\r\n                        end\r\n                        i = s\r\n                    else\r\n                        y = y + 1\r\n                        x = x - 1\r\n                        if sub(view, y, y) == \"\\n\" then\r\n                            y = y + 1\r\n                        end\r\n                        local b = trim(sub(view, p, e - 1))\r\n                        if b == \"verbatim\" or b == \"raw\" then\r\n                            if i < s - w then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, s - 1 - w)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end\r\n                            c[j] = \"___[#___+1]=[=[\"\r\n                            c[j+1] = sub(view, e + 2, x)\r\n                            c[j+2] = \"]=]\\n\"\r\n                            j=j+3\r\n                        else\r\n                            if sub(view, x, x) == \"\\n\" then\r\n                                x = x - 1\r\n                            end\r\n                            local r = rpos(view, s - 1)\r\n                            if i <= r then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, r)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end\r\n                            c[j] = 'blocks[\"'\r\n                            c[j+1] = b\r\n                            c[j+2] = '\"]=include[=['\r\n                            c[j+3] = sub(view, e + 2, x)\r\n                            c[j+4] = \"]=]\\n\"\r\n                            j=j+5\r\n                        end\r\n                        s, i = y - 1, y\r\n                    end\r\n                end",
    "type": "statement:if"
  }, {
    "id": 155,
    "text": "if z then\r\n                        if i < s - w then\r\n                            c[j] = \"___[#___+1]=[=[\\n\"\r\n                            c[j+1] = sub(view, i, s - 1 - w)\r\n                            c[j+2] = \"]=]\\n\"\r\n                            j=j+3\r\n                        end\r\n                        i = s\r\n                    else\r\n                        y = y + 1\r\n                        x = x - 1\r\n                        if sub(view, y, y) == \"\\n\" then\r\n                            y = y + 1\r\n                        end\r\n                        local b = trim(sub(view, p, e - 1))\r\n                        if b == \"verbatim\" or b == \"raw\" then\r\n                            if i < s - w then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, s - 1 - w)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end\r\n                            c[j] = \"___[#___+1]=[=[\"\r\n                            c[j+1] = sub(view, e + 2, x)\r\n                            c[j+2] = \"]=]\\n\"\r\n                            j=j+3\r\n                        else\r\n                            if sub(view, x, x) == \"\\n\" then\r\n                                x = x - 1\r\n                            end\r\n                            local r = rpos(view, s - 1)\r\n                            if i <= r then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, r)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end\r\n                            c[j] = 'blocks[\"'\r\n                            c[j+1] = b\r\n                            c[j+2] = '\"]=include[=['\r\n                            c[j+3] = sub(view, e + 2, x)\r\n                            c[j+4] = \"]=]\\n\"\r\n                            j=j+5\r\n                        end\r\n                        s, i = y - 1, y\r\n                    end",
    "type": "statement:if"
  }, {
    "id": 156,
    "text": "if i < s - w then\r\n                            c[j] = \"___[#___+1]=[=[\\n\"\r\n                            c[j+1] = sub(view, i, s - 1 - w)\r\n                            c[j+2] = \"]=]\\n\"\r\n                            j=j+3\r\n                        end",
    "type": "statement:if"
  }, {
    "id": 157,
    "text": "y = y + 1",
    "type": "statement:assign"
  }, {
    "id": 158,
    "text": "x = x - 1",
    "type": "statement:assign"
  }, {
    "id": 159,
    "text": "if sub(view, y, y) == \"\\n\" then\r\n                            y = y + 1\r\n                        end",
    "type": "statement:if"
  }, {
    "id": 160,
    "text": "local b = trim(sub(view, p, e - 1))",
    "type": "statement:localassign"
  }, {
    "id": 161,
    "text": "if b == \"verbatim\" or b == \"raw\" then\r\n                            if i < s - w then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, s - 1 - w)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end\r\n                            c[j] = \"___[#___+1]=[=[\"\r\n                            c[j+1] = sub(view, e + 2, x)\r\n                            c[j+2] = \"]=]\\n\"\r\n                            j=j+3\r\n                        else\r\n                            if sub(view, x, x) == \"\\n\" then\r\n                                x = x - 1\r\n                            end\r\n                            local r = rpos(view, s - 1)\r\n                            if i <= r then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, r)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end\r\n                            c[j] = 'blocks[\"'\r\n                            c[j+1] = b\r\n                            c[j+2] = '\"]=include[=['\r\n                            c[j+3] = sub(view, e + 2, x)\r\n                            c[j+4] = \"]=]\\n\"\r\n                            j=j+5\r\n                        end",
    "type": "statement:if"
  }, {
    "id": 162,
    "text": "if i < s - w then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, s - 1 - w)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end",
    "type": "statement:if"
  }, {
    "id": 163,
    "text": "c[j] = \"___[#___+1]=[=[\"",
    "type": "statement:assign"
  }, {
    "id": 164,
    "text": "c[j+1] = sub(view, e + 2, x)",
    "type": "statement:assign"
  }, {
    "id": 165,
    "text": "if sub(view, x, x) == \"\\n\" then\r\n                                x = x - 1\r\n                            end",
    "type": "statement:if"
  }, {
    "id": 166,
    "text": "if i <= r then\r\n                                c[j] = \"___[#___+1]=[=[\\n\"\r\n                                c[j+1] = sub(view, i, r)\r\n                                c[j+2] = \"]=]\\n\"\r\n                                j=j+3\r\n                            end",
    "type": "statement:if"
  }, {
    "id": 167,
    "text": "c[j] = 'blocks[\"'",
    "type": "statement:assign"
  }, {
    "id": 168,
    "text": "c[j+1] = b",
    "type": "statement:assign"
  }, {
    "id": 169,
    "text": "c[j+2] = '\"]=include[=['",
    "type": "statement:assign"
  }, {
    "id": 170,
    "text": "c[j+3] = sub(view, e + 2, x)",
    "type": "statement:assign"
  }, {
    "id": 171,
    "text": "c[j+4] = \"]=]\\n\"",
    "type": "statement:assign"
  }, {
    "id": 172,
    "text": "s, i = y - 1, y",
    "type": "statement:assign"
  }, {
    "id": 173,
    "text": "local e = find(view, \"#}\", p, true)",
    "type": "statement:localassign"
  }, {
    "id": 174,
    "text": "if e then\r\n                local z, w = escaped(view, s)\r\n                if i < s - w then\r\n                    c[j] = \"___[#___+1]=[=[\\n\"\r\n                    c[j+1] = sub(view, i, s - 1 - w)\r\n                    c[j+2] = \"]=]\\n\"\r\n                    j=j+3\r\n                end\r\n                if z then\r\n                    i = s\r\n                else\r\n                    e = e + 2\r\n                    if sub(view, e, e) == \"\\n\" then\r\n                        e = e + 1\r\n                    end\r\n                    s, i = e - 1, e\r\n                end\r\n            end",
    "type": "statement:if"
  }, {
    "id": 175,
    "text": "if z then\r\n                    i = s\r\n                else\r\n                    e = e + 2\r\n                    if sub(view, e, e) == \"\\n\" then\r\n                        e = e + 1\r\n                    end\r\n                    s, i = e - 1, e\r\n                end",
    "type": "statement:if"
  }, {
    "id": 176,
    "text": "e = e + 2",
    "type": "statement:assign"
  }, {
    "id": 177,
    "text": "if sub(view, e, e) == \"\\n\" then\r\n                        e = e + 1\r\n                    end",
    "type": "statement:if"
  }, {
    "id": 178,
    "text": "e = e + 1",
    "type": "statement:assign"
  }, {
    "id": 179,
    "text": "s, i = e - 1, e",
    "type": "statement:assign"
  }, {
    "id": 180,
    "text": "s = find(view, \"{\", s + 1, true)",
    "type": "statement:assign"
  }, {
    "id": 181,
    "text": "s = sub(view, i)",
    "type": "statement:assign"
  }, {
    "id": 182,
    "text": "if s and s ~= \"\" then\r\n        c[j] = \"___[#___+1]=[=[\\n\"\r\n        c[j+1] = s\r\n        c[j+2] = \"]=]\\n\"\r\n        j=j+3\r\n    end",
    "type": "statement:if"
  }, {
    "id": 183,
    "text": "c[j+1] = s",
    "type": "statement:assign"
  }, {
    "id": 184,
    "text": "c[j] = \"return layout and include(layout,setmetatable({view=table.concat(___),blocks=blocks},{__index=context})) or table.concat(___)\"",
    "type": "statement:assign"
  }, {
    "id": 185,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 186,
    "text": "function template.render(view, context, key, plain)\r\n    assert(view, \"view was not provided for template.render(view, context, key, plain).\")\r\n    return template.print(template.compile(view, key, plain)(context))\r\nend",
    "type": "function"
  }, {
    "id": 187,
    "text": "assert(view, \"view was not provided for template.render(view, context, key, plain).\")",
    "type": "statement:functioncall"
  }, {
    "id": 188,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 189,
    "text": "function(t, k)\r\n            return t.context[k] or t.template[k] or _G[k]\r\n        end",
    "type": "function"
  }, {
    "id": 190,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 191,
    "text": "function(t, k)\r\n            return t.context[k] or t.template[k] or _ENV[k]\r\n        end",
    "type": "function"
  }, {
    "id": 192,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 193,
    "text": "function(self, context)\r\n                local context = context or self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                layout.blocks = context.blocks or {}\r\n                layout.view = context.view or \"\"\r\n                return layout:render()\r\n            end",
    "type": "function"
  }, {
    "id": 194,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 195,
    "text": "function(self)\r\n                local context = self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                layout.blocks = context.blocks or {}\r\n                layout.view = context.view\r\n                return tostring(layout)\r\n            end",
    "type": "function"
  }, {
    "id": 196,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 197,
    "text": "function(self, context)\r\n                local context = context or self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                return render(layout, context)\r\n            end",
    "type": "function"
  }, {
    "id": 198,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 199,
    "text": "function(self)\r\n                local context = self\r\n                context.blocks = context.blocks or {}\r\n                context.view = compile(view)(context)\r\n                return compile(layout)(context)\r\n            end",
    "type": "function"
  }, {
    "id": 200,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 201,
    "text": "function(self, context)\r\n        return render(view, context or self)\r\n    end",
    "type": "function"
  }, {
    "id": 202,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 203,
    "text": "function(self)\r\n        return compile(view)(self)\r\n    end",
    "type": "function"
  }, {
    "id": 204,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 205,
    "text": "",
    "type": "function container"
  }, {
    "id": 206,
    "text": "capture",
    "type": "global function"
  }, {
    "id": 207,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 208,
    "text": "load",
    "type": "global function"
  }, {
    "id": 209,
    "text": "tostring",
    "type": "global function"
  }, {
    "id": 210,
    "text": "open",
    "type": "global function"
  }, {
    "id": 211,
    "text": "ngx.config.prefix",
    "type": "global function"
  }, {
    "id": 212,
    "text": "gsub",
    "type": "global function"
  }, {
    "id": 213,
    "text": "s",
    "type": "global function"
  }, {
    "id": 214,
    "text": "sub",
    "type": "global function"
  }, {
    "id": 215,
    "text": "load",
    "type": "global function"
  }, {
    "id": 216,
    "text": "compile",
    "type": "global function"
  }, {
    "id": 217,
    "text": "type",
    "type": "global function"
  }, {
    "id": 218,
    "text": "dump",
    "type": "global function"
  }, {
    "id": 219,
    "text": "phase",
    "type": "global function"
  }, {
    "id": 220,
    "text": "setfenv",
    "type": "global function"
  }, {
    "id": 221,
    "text": "print",
    "type": "global function"
  }, {
    "id": 222,
    "text": "find",
    "type": "global function"
  }, {
    "id": 223,
    "text": "loadstring",
    "type": "global function"
  }, {
    "id": 224,
    "text": "pcall",
    "type": "global function"
  }, {
    "id": 225,
    "text": "setmetatable",
    "type": "global function"
  }, {
    "id": 226,
    "text": "concat",
    "type": "global function"
  }, {
    "id": 227,
    "text": "byte",
    "type": "global function"
  }, {
    "id": 228,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 229,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 230,
    "text": "",
    "type": "variable container"
  }, {
    "id": 231,
    "text": "",
    "type": "require container"
  }, {
    "id": 232,
    "text": "",
    "type": "local variable"
  }, {
    "id": 233,
    "text": "",
    "type": "n/a"
  }, {
    "id": 234,
    "text": "",
    "type": "local variable"
  }, {
    "id": 235,
    "text": "",
    "type": "n/a"
  }, {
    "id": 236,
    "text": "",
    "type": "local variable"
  }, {
    "id": 237,
    "text": "",
    "type": "local variable"
  }, {
    "id": 238,
    "text": "",
    "type": "n/a"
  }, {
    "id": 239,
    "text": "",
    "type": "local variable"
  }, {
    "id": 240,
    "text": "",
    "type": "n/a"
  }, {
    "id": 241,
    "text": "",
    "type": "local variable"
  }, {
    "id": 242,
    "text": "",
    "type": "n/a"
  }, {
    "id": 243,
    "text": "",
    "type": "local variable"
  }, {
    "id": 244,
    "text": "",
    "type": "local variable"
  }, {
    "id": 245,
    "text": "",
    "type": "n/a"
  }, {
    "id": 246,
    "text": "",
    "type": "local variable"
  }, {
    "id": 247,
    "text": "",
    "type": "n/a"
  }, {
    "id": 248,
    "text": "",
    "type": "local variable"
  }, {
    "id": 249,
    "text": "",
    "type": "local variable"
  }, {
    "id": 250,
    "text": "",
    "type": "n/a"
  }, {
    "id": 251,
    "text": "",
    "type": "local variable"
  }, {
    "id": 252,
    "text": "",
    "type": "n/a"
  }, {
    "id": 253,
    "text": "",
    "type": "local variable"
  }, {
    "id": 254,
    "text": "",
    "type": "local variable"
  }, {
    "id": 255,
    "text": "",
    "type": "n/a"
  }, {
    "id": 256,
    "text": "",
    "type": "local variable"
  }, {
    "id": 257,
    "text": "",
    "type": "n/a"
  }, {
    "id": 258,
    "text": "",
    "type": "local variable"
  }, {
    "id": 259,
    "text": "",
    "type": "n/a"
  }, {
    "id": 260,
    "text": "",
    "type": "local variable"
  }, {
    "id": 261,
    "text": "",
    "type": "n/a"
  }, {
    "id": 262,
    "text": "",
    "type": "local variable"
  }, {
    "id": 263,
    "text": "",
    "type": "n/a"
  }, {
    "id": 264,
    "text": "",
    "type": "local variable"
  }, {
    "id": 265,
    "text": "",
    "type": "n/a"
  }, {
    "id": 266,
    "text": "",
    "type": "local variable"
  }, {
    "id": 267,
    "text": "",
    "type": "n/a"
  }, {
    "id": 268,
    "text": "",
    "type": "local variable"
  }, {
    "id": 269,
    "text": "",
    "type": "local variable"
  }, {
    "id": 270,
    "text": "",
    "type": "n/a"
  }, {
    "id": 271,
    "text": "",
    "type": "local variable"
  }, {
    "id": 272,
    "text": "",
    "type": "n/a"
  }, {
    "id": 273,
    "text": "",
    "type": "local variable"
  }, {
    "id": 274,
    "text": "",
    "type": "n/a"
  }, {
    "id": 275,
    "text": "",
    "type": "local variable"
  }, {
    "id": 276,
    "text": "",
    "type": "local variable"
  }, {
    "id": 277,
    "text": "",
    "type": "n/a"
  }, {
    "id": 278,
    "text": "",
    "type": "local variable"
  }, {
    "id": 279,
    "text": "",
    "type": "n/a"
  }, {
    "id": 280,
    "text": "",
    "type": "local variable"
  }, {
    "id": 281,
    "text": "",
    "type": "n/a"
  }, {
    "id": 282,
    "text": "",
    "type": "local variable"
  }, {
    "id": 283,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 284,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 285,
    "text": "",
    "type": "string"
  }, {
    "id": 286,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 287,
    "text": "",
    "type": "string"
  }, {
    "id": 288,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 289,
    "text": "",
    "type": "string"
  }, {
    "id": 290,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 291,
    "text": "",
    "type": "string"
  }, {
    "id": 292,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 293,
    "text": "",
    "type": "string"
  }, {
    "id": 294,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 295,
    "text": "",
    "type": "string"
  }, {
    "id": 296,
    "text": "",
    "type": "local variable"
  }, {
    "id": 297,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 298,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 299,
    "text": "",
    "type": "string"
  }, {
    "id": 300,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 301,
    "text": "",
    "type": "string"
  }, {
    "id": 302,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 303,
    "text": "",
    "type": "string"
  }, {
    "id": 304,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 305,
    "text": "",
    "type": "string"
  }, {
    "id": 306,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 307,
    "text": "",
    "type": "string"
  }, {
    "id": 308,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 309,
    "text": "",
    "type": "string"
  }, {
    "id": 310,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 311,
    "text": "",
    "type": "string"
  }, {
    "id": 312,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 313,
    "text": "",
    "type": "string"
  }, {
    "id": 314,
    "text": "",
    "type": "local variable"
  }, {
    "id": 315,
    "text": "",
    "type": "local variable"
  }, {
    "id": 316,
    "text": "",
    "type": "n/a"
  }, {
    "id": 317,
    "text": "",
    "type": "local variable"
  }, {
    "id": 318,
    "text": "",
    "type": "local variable"
  }, {
    "id": 319,
    "text": "",
    "type": "boolean"
  }, {
    "id": 320,
    "text": "",
    "type": "local variable"
  }, {
    "id": 321,
    "text": "",
    "type": "n/a"
  }, {
    "id": 322,
    "text": "",
    "type": "global variable"
  }, {
    "id": 323,
    "text": "",
    "type": "global variable"
  }, {
    "id": 324,
    "text": "",
    "type": "n/a"
  }, {
    "id": 325,
    "text": "",
    "type": "interface container"
  }, {
    "id": 326,
    "text": "",
    "type": "interface"
  } ]
}