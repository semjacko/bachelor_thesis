{
  "_filename": "html.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/lua-resty-template/lib/resty/template/html.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 3,
    "label": "has",
    "to": 6
  }, {
    "from": 3,
    "label": "has",
    "to": 7
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 9,
    "label": "has",
    "to": 11
  }, {
    "from": 7,
    "label": "has",
    "to": 12
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 12,
    "label": "has",
    "to": 14
  }, {
    "from": 3,
    "label": "has",
    "to": 15
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 15,
    "label": "has",
    "to": 17
  }, {
    "from": 15,
    "label": "has",
    "to": 18
  }, {
    "from": 15,
    "label": "has",
    "to": 6
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 15,
    "label": "has",
    "to": 19
  }, {
    "from": 3,
    "label": "has",
    "to": 20
  }, {
    "from": 3,
    "label": "has",
    "to": 21
  }, {
    "from": 22,
    "label": "has",
    "to": 20
  }, {
    "from": 22,
    "label": "has",
    "to": 23
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 25,
    "label": "has",
    "to": 20
  }, {
    "from": 24,
    "label": "has",
    "to": 20
  }, {
    "from": 24,
    "label": "has",
    "to": 20
  }, {
    "from": 24,
    "label": "has",
    "to": 26
  }, {
    "from": 27,
    "label": "has",
    "to": 20
  }, {
    "from": 27,
    "label": "has",
    "to": 25
  }, {
    "from": 25,
    "label": "has",
    "to": 20
  }, {
    "from": 27,
    "label": "has",
    "to": 20
  }, {
    "from": 27,
    "label": "has",
    "to": 20
  }, {
    "from": 27,
    "label": "has",
    "to": 28
  }, {
    "from": 29,
    "label": "calls",
    "to": 33
  }, {
    "from": 3,
    "label": "calls",
    "to": 31
  }, {
    "from": 3,
    "label": "calls",
    "to": 31
  }, {
    "from": 29,
    "label": "calls",
    "to": 31
  }, {
    "from": 29,
    "label": "calls",
    "to": 3
  }, {
    "from": 29,
    "label": "calls",
    "to": 3
  }, {
    "from": 3,
    "label": "calls",
    "to": 32
  }, {
    "from": 3,
    "label": "calls",
    "to": 32
  }, {
    "from": 3,
    "label": "calls",
    "to": 32
  }, {
    "from": 29,
    "label": "calls",
    "to": 35
  }, {
    "from": 3,
    "label": "calls",
    "to": 34
  }, {
    "from": 3,
    "label": "calls",
    "to": 34
  }, {
    "from": 3,
    "label": "calls",
    "to": 30
  }, {
    "from": 1,
    "label": "contains",
    "to": 29
  }, {
    "from": 29,
    "label": "declares",
    "to": 3
  }, {
    "from": 29,
    "label": "declares",
    "to": 22
  }, {
    "from": 29,
    "label": "declares",
    "to": 24
  }, {
    "from": 29,
    "label": "declares",
    "to": 27
  }, {
    "from": 1,
    "label": "contains",
    "to": 36
  }, {
    "from": 1,
    "label": "contains",
    "to": 37
  }, {
    "from": 36,
    "label": "initializes",
    "to": 38
  }, {
    "from": 38,
    "label": "assigns",
    "to": 39
  }, {
    "from": 36,
    "label": "initializes",
    "to": 40
  }, {
    "from": 40,
    "label": "assigns",
    "to": 41
  }, {
    "from": 36,
    "label": "initializes",
    "to": 42
  }, {
    "from": 42,
    "label": "assigns",
    "to": 43
  }, {
    "from": 36,
    "label": "initializes",
    "to": 44
  }, {
    "from": 44,
    "label": "assigns",
    "to": 45
  }, {
    "from": 36,
    "label": "initializes",
    "to": 46
  }, {
    "from": 46,
    "label": "assigns",
    "to": 47
  }, {
    "from": 36,
    "label": "initializes",
    "to": 48
  }, {
    "from": 48,
    "label": "assigns",
    "to": 49
  }, {
    "from": 49,
    "label": "assigns",
    "to": 50
  }, {
    "from": 50,
    "label": "assigns",
    "to": 51
  }, {
    "from": 36,
    "label": "initializes",
    "to": 52
  }, {
    "from": 52,
    "label": "assigns",
    "to": 53
  }, {
    "from": 37,
    "label": "initializes",
    "to": 54
  }, {
    "from": 54,
    "label": "requires",
    "to": 2
  }, {
    "from": 1,
    "label": "provides",
    "to": 55
  }, {
    "from": 55,
    "label": "provides",
    "to": 56
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "html",
    "type": "module"
  }, {
    "id": 2,
    "text": "template",
    "type": "module"
  }, {
    "id": 3,
    "text": "local function tag(name, content, attr)\r\n    local r, a, content = {}, {}, content or attr\r\n    r[#r + 1] = \"<\"\r\n    r[#r + 1] = name\r\n    if attr then\r\n        for k, v in pairs(attr) do\r\n            if type(k) == \"number\" then\r\n                a[#a + 1] = escape(v)\r\n            else\r\n                a[#a + 1] = k .. '=\"' .. escape(v) .. '\"'\r\n            end\r\n        end\r\n        if #a > 0 then\r\n            r[#r + 1] = \" \"\r\n            r[#r + 1] = concat(a, \" \")\r\n        end\r\n    end\r\n    if type(content) == \"string\" then\r\n        r[#r + 1] = \">\"\r\n        r[#r + 1] = escape(content)\r\n        r[#r + 1] = \"</\"\r\n        r[#r + 1] = name\r\n        r[#r + 1] = \">\"\r\n    else\r\n        r[#r + 1] = \" />\"\r\n    end\r\n    return concat(r)\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "local r, a, content = {}, {}, content or attr",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "r[#r + 1] = \"<\"",
    "type": "statement:assign"
  }, {
    "id": 6,
    "text": "r[#r + 1] = name",
    "type": "statement:assign"
  }, {
    "id": 7,
    "text": "if attr then\r\n        for k, v in pairs(attr) do\r\n            if type(k) == \"number\" then\r\n                a[#a + 1] = escape(v)\r\n            else\r\n                a[#a + 1] = k .. '=\"' .. escape(v) .. '\"'\r\n            end\r\n        end\r\n        if #a > 0 then\r\n            r[#r + 1] = \" \"\r\n            r[#r + 1] = concat(a, \" \")\r\n        end\r\n    end",
    "type": "statement:if"
  }, {
    "id": 8,
    "text": "for k, v in pairs(attr) do\r\n            if type(k) == \"number\" then\r\n                a[#a + 1] = escape(v)\r\n            else\r\n                a[#a + 1] = k .. '=\"' .. escape(v) .. '\"'\r\n            end\r\n        end",
    "type": "statement:genericfor"
  }, {
    "id": 9,
    "text": "if type(k) == \"number\" then\r\n                a[#a + 1] = escape(v)\r\n            else\r\n                a[#a + 1] = k .. '=\"' .. escape(v) .. '\"'\r\n            end",
    "type": "statement:if"
  }, {
    "id": 10,
    "text": "a[#a + 1] = escape(v)",
    "type": "statement:assign"
  }, {
    "id": 11,
    "text": "a[#a + 1] = k .. '=\"' .. escape(v) .. '\"'",
    "type": "statement:assign"
  }, {
    "id": 12,
    "text": "if #a > 0 then\r\n            r[#r + 1] = \" \"\r\n            r[#r + 1] = concat(a, \" \")\r\n        end",
    "type": "statement:if"
  }, {
    "id": 13,
    "text": "r[#r + 1] = \" \"",
    "type": "statement:assign"
  }, {
    "id": 14,
    "text": "r[#r + 1] = concat(a, \" \")",
    "type": "statement:assign"
  }, {
    "id": 15,
    "text": "if type(content) == \"string\" then\r\n        r[#r + 1] = \">\"\r\n        r[#r + 1] = escape(content)\r\n        r[#r + 1] = \"</\"\r\n        r[#r + 1] = name\r\n        r[#r + 1] = \">\"\r\n    else\r\n        r[#r + 1] = \" />\"\r\n    end",
    "type": "statement:if"
  }, {
    "id": 16,
    "text": "r[#r + 1] = \">\"",
    "type": "statement:assign"
  }, {
    "id": 17,
    "text": "r[#r + 1] = escape(content)",
    "type": "statement:assign"
  }, {
    "id": 18,
    "text": "r[#r + 1] = \"</\"",
    "type": "statement:assign"
  }, {
    "id": 19,
    "text": "r[#r + 1] = \" />\"",
    "type": "statement:assign"
  }, {
    "id": 20,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 21,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 22,
    "text": "function(content)\r\n                return tag(name, content, attr)\r\n            end",
    "type": "function"
  }, {
    "id": 23,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 24,
    "text": "function(attr)\r\n        if type(attr) == \"table\" then\r\n            return function(content)\r\n                return tag(name, content, attr)\r\n            end\r\n        else\r\n            return tag(name, attr)\r\n        end\r\n    end",
    "type": "function"
  }, {
    "id": 25,
    "text": "if type(attr) == \"table\" then\r\n            return function(content)\r\n                return tag(name, content, attr)\r\n            end\r\n        else\r\n            return tag(name, attr)\r\n        end",
    "type": "statement:if"
  }, {
    "id": 26,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 27,
    "text": "function(_, name)\r\n    return function(attr)\r\n        if type(attr) == \"table\" then\r\n            return function(content)\r\n                return tag(name, content, attr)\r\n            end\r\n        else\r\n            return tag(name, attr)\r\n        end\r\n    end\r\nend",
    "type": "function"
  }, {
    "id": 28,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 29,
    "text": "",
    "type": "function container"
  }, {
    "id": 30,
    "text": "pairs",
    "type": "global function"
  }, {
    "id": 31,
    "text": "type",
    "type": "global function"
  }, {
    "id": 32,
    "text": "escape",
    "type": "global function"
  }, {
    "id": 33,
    "text": "setmetatable",
    "type": "global function"
  }, {
    "id": 34,
    "text": "concat",
    "type": "global function"
  }, {
    "id": 35,
    "text": "require",
    "type": "global function"
  }, {
    "id": 36,
    "text": "",
    "type": "variable container"
  }, {
    "id": 37,
    "text": "",
    "type": "require container"
  }, {
    "id": 38,
    "text": "",
    "type": "local variable"
  }, {
    "id": 39,
    "text": "",
    "type": "n/a"
  }, {
    "id": 40,
    "text": "",
    "type": "local variable"
  }, {
    "id": 41,
    "text": "",
    "type": "n/a"
  }, {
    "id": 42,
    "text": "",
    "type": "local variable"
  }, {
    "id": 43,
    "text": "",
    "type": "n/a"
  }, {
    "id": 44,
    "text": "",
    "type": "local variable"
  }, {
    "id": 45,
    "text": "",
    "type": "n/a"
  }, {
    "id": 46,
    "text": "",
    "type": "local variable"
  }, {
    "id": 47,
    "text": "",
    "type": "n/a"
  }, {
    "id": 48,
    "text": "",
    "type": "local variable"
  }, {
    "id": 49,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 50,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 51,
    "text": "",
    "type": "function"
  }, {
    "id": 52,
    "text": "",
    "type": "global variable"
  }, {
    "id": 53,
    "text": "",
    "type": "n/a"
  }, {
    "id": 54,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 55,
    "text": "",
    "type": "interface container"
  }, {
    "id": 56,
    "text": "",
    "type": "interface"
  } ]
}