{
  "_filename": "bitbench.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luabitop/bitbench.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 4,
    "label": "has",
    "to": 3
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 6,
    "label": "has",
    "to": 7
  }, {
    "from": 6,
    "label": "has",
    "to": 8
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 8,
    "label": "has",
    "to": 10
  }, {
    "from": 8,
    "label": "has",
    "to": 11
  }, {
    "from": 8,
    "label": "has",
    "to": 12
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 12,
    "label": "has",
    "to": 14
  }, {
    "from": 8,
    "label": "has",
    "to": 15
  }, {
    "from": 6,
    "label": "has",
    "to": 3
  }, {
    "from": 6,
    "label": "has",
    "to": 16
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 17,
    "label": "has",
    "to": 19
  }, {
    "from": 19,
    "label": "has",
    "to": 20
  }, {
    "from": 17,
    "label": "has",
    "to": 21
  }, {
    "from": 22,
    "label": "has",
    "to": 23
  }, {
    "from": 22,
    "label": "has",
    "to": 18
  }, {
    "from": 22,
    "label": "has",
    "to": 24
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 22,
    "label": "has",
    "to": 26
  }, {
    "from": 27,
    "label": "has",
    "to": 28
  }, {
    "from": 27,
    "label": "has",
    "to": 18
  }, {
    "from": 27,
    "label": "has",
    "to": 24
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 27,
    "label": "has",
    "to": 29
  }, {
    "from": 30,
    "label": "has",
    "to": 31
  }, {
    "from": 30,
    "label": "has",
    "to": 18
  }, {
    "from": 30,
    "label": "has",
    "to": 32
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 30,
    "label": "has",
    "to": 34
  }, {
    "from": 35,
    "label": "has",
    "to": 36
  }, {
    "from": 35,
    "label": "has",
    "to": 18
  }, {
    "from": 35,
    "label": "has",
    "to": 32
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 35,
    "label": "has",
    "to": 37
  }, {
    "from": 38,
    "label": "has",
    "to": 39
  }, {
    "from": 38,
    "label": "has",
    "to": 18
  }, {
    "from": 38,
    "label": "has",
    "to": 32
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 38,
    "label": "has",
    "to": 40
  }, {
    "from": 41,
    "label": "has",
    "to": 42
  }, {
    "from": 41,
    "label": "has",
    "to": 18
  }, {
    "from": 41,
    "label": "has",
    "to": 24
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 41,
    "label": "has",
    "to": 43
  }, {
    "from": 6,
    "label": "calls",
    "to": 48
  }, {
    "from": 6,
    "label": "calls",
    "to": 46
  }, {
    "from": 6,
    "label": "calls",
    "to": 47
  }, {
    "from": 6,
    "label": "calls",
    "to": 47
  }, {
    "from": 2,
    "label": "calls",
    "to": 50
  }, {
    "from": 4,
    "label": "calls",
    "to": 50
  }, {
    "from": 4,
    "label": "calls",
    "to": 50
  }, {
    "from": 6,
    "label": "calls",
    "to": 51
  }, {
    "from": 2,
    "label": "calls",
    "to": 53
  }, {
    "from": 4,
    "label": "calls",
    "to": 53
  }, {
    "from": 44,
    "label": "calls",
    "to": 54
  }, {
    "from": 44,
    "label": "calls",
    "to": 52
  }, {
    "from": 44,
    "label": "calls",
    "to": 52
  }, {
    "from": 44,
    "label": "calls",
    "to": 52
  }, {
    "from": 44,
    "label": "calls",
    "to": 52
  }, {
    "from": 44,
    "label": "calls",
    "to": 52
  }, {
    "from": 44,
    "label": "calls",
    "to": 52
  }, {
    "from": 44,
    "label": "calls",
    "to": 6
  }, {
    "from": 44,
    "label": "calls",
    "to": 6
  }, {
    "from": 44,
    "label": "calls",
    "to": 6
  }, {
    "from": 44,
    "label": "calls",
    "to": 6
  }, {
    "from": 44,
    "label": "calls",
    "to": 6
  }, {
    "from": 44,
    "label": "calls",
    "to": 6
  }, {
    "from": 44,
    "label": "calls",
    "to": 6
  }, {
    "from": 2,
    "label": "calls",
    "to": 49
  }, {
    "from": 4,
    "label": "calls",
    "to": 49
  }, {
    "from": 4,
    "label": "calls",
    "to": 49
  }, {
    "from": 4,
    "label": "calls",
    "to": 55
  }, {
    "from": 4,
    "label": "calls",
    "to": 55
  }, {
    "from": 1,
    "label": "contains",
    "to": 44
  }, {
    "from": 44,
    "label": "declares",
    "to": 2
  }, {
    "from": 44,
    "label": "declares",
    "to": 4
  }, {
    "from": 44,
    "label": "declares",
    "to": 6
  }, {
    "from": 44,
    "label": "declares",
    "to": 17
  }, {
    "from": 44,
    "label": "declares",
    "to": 22
  }, {
    "from": 44,
    "label": "declares",
    "to": 27
  }, {
    "from": 44,
    "label": "declares",
    "to": 30
  }, {
    "from": 44,
    "label": "declares",
    "to": 35
  }, {
    "from": 44,
    "label": "declares",
    "to": 38
  }, {
    "from": 44,
    "label": "declares",
    "to": 41
  }, {
    "from": 1,
    "label": "contains",
    "to": 56
  }, {
    "from": 1,
    "label": "contains",
    "to": 57
  }, {
    "from": 56,
    "label": "initializes",
    "to": 58
  }, {
    "from": 58,
    "label": "assigns",
    "to": 59
  }, {
    "from": 56,
    "label": "initializes",
    "to": 60
  }, {
    "from": 60,
    "label": "assigns",
    "to": 61
  }, {
    "from": 57,
    "label": "initializes",
    "to": 62
  }, {
    "from": 62,
    "label": "requires",
    "to": 45
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "bitbench",
    "type": "module"
  }, {
    "id": 2,
    "text": "function bit.rol(a, b) return bor(shl(a, b), shr(a, 32-b)) end",
    "type": "function"
  }, {
    "id": 3,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 4,
    "text": "function bit.bswap(a)\r\n    return bor(shr(a, 24), band(shr(a, 8), 0xff00),\r\n\t       shl(band(a, 0xff00), 8), shl(a, 24));\r\n  end",
    "type": "function"
  }, {
    "id": 5,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 6,
    "text": "local function bench(name, t)\r\n  local n = 2000000\r\n  repeat\r\n    local tm = os.clock()\r\n    t(n)\r\n    tm = os.clock() - tm\r\n    if tm > 1 then\r\n      local ns = tm*1000/(n/1000000)\r\n      io.write(string.format(\"%-15s %6.1f ns\\n\", name, ns-base))\r\n      return ns\r\n    end\r\n    n = n + n\r\n  until false\r\nend",
    "type": "function"
  }, {
    "id": 7,
    "text": "local n = 2000000",
    "type": "statement:localassign"
  }, {
    "id": 8,
    "text": "repeat\r\n    local tm = os.clock()\r\n    t(n)\r\n    tm = os.clock() - tm\r\n    if tm > 1 then\r\n      local ns = tm*1000/(n/1000000)\r\n      io.write(string.format(\"%-15s %6.1f ns\\n\", name, ns-base))\r\n      return ns\r\n    end\r\n    n = n + n\r\n  until false",
    "type": "statement:repeat"
  }, {
    "id": 9,
    "text": "local tm = os.clock()",
    "type": "statement:localassign"
  }, {
    "id": 10,
    "text": "t(n)",
    "type": "statement:functioncall"
  }, {
    "id": 11,
    "text": "tm = os.clock() - tm",
    "type": "statement:assign"
  }, {
    "id": 12,
    "text": "if tm > 1 then\r\n      local ns = tm*1000/(n/1000000)\r\n      io.write(string.format(\"%-15s %6.1f ns\\n\", name, ns-base))\r\n      return ns\r\n    end",
    "type": "statement:if"
  }, {
    "id": 13,
    "text": "local ns = tm*1000/(n/1000000)",
    "type": "statement:localassign"
  }, {
    "id": 14,
    "text": "io.write(string.format(\"%-15s %6.1f ns\\n\", name, ns-base))",
    "type": "statement:functioncall"
  }, {
    "id": 15,
    "text": "n = n + n",
    "type": "statement:assign"
  }, {
    "id": 16,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 17,
    "text": "function(n)\r\n  local x = 0; for i=1,n do x = x + i end\r\nend",
    "type": "function"
  }, {
    "id": 18,
    "text": "local x = 0",
    "type": "statement:localassign"
  }, {
    "id": 19,
    "text": "for i=1,n do x = x + i end",
    "type": "statement:numericfor"
  }, {
    "id": 20,
    "text": "x = x + i",
    "type": "statement:assign"
  }, {
    "id": 21,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 22,
    "text": "function(n)\r\n  local f = bit.tobit or bit.cast\r\n  local x = 0; for i=1,n do x = x + f(i) end\r\nend",
    "type": "function"
  }, {
    "id": 23,
    "text": "local f = bit.tobit or bit.cast",
    "type": "statement:localassign"
  }, {
    "id": 24,
    "text": "for i=1,n do x = x + f(i) end",
    "type": "statement:numericfor"
  }, {
    "id": 25,
    "text": "x = x + f(i)",
    "type": "statement:assign"
  }, {
    "id": 26,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 27,
    "text": "function(n)\r\n  local f = bit.bnot\r\n  local x = 0; for i=1,n do x = x + f(i) end\r\nend",
    "type": "function"
  }, {
    "id": 28,
    "text": "local f = bit.bnot",
    "type": "statement:localassign"
  }, {
    "id": 29,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 30,
    "text": "function(n)\r\n  local f = bit.bor\r\n  local x = 0; for i=1,n do x = x + f(i, 1) end\r\nend",
    "type": "function"
  }, {
    "id": 31,
    "text": "local f = bit.bor",
    "type": "statement:localassign"
  }, {
    "id": 32,
    "text": "for i=1,n do x = x + f(i, 1) end",
    "type": "statement:numericfor"
  }, {
    "id": 33,
    "text": "x = x + f(i, 1)",
    "type": "statement:assign"
  }, {
    "id": 34,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 35,
    "text": "function(n)\r\n  local f = bit.lshift\r\n  local x = 0; for i=1,n do x = x + f(i, 1) end\r\nend",
    "type": "function"
  }, {
    "id": 36,
    "text": "local f = bit.lshift",
    "type": "statement:localassign"
  }, {
    "id": 37,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 38,
    "text": "function(n)\r\n  local f = bit.rol\r\n  local x = 0; for i=1,n do x = x + f(i, 1) end\r\nend",
    "type": "function"
  }, {
    "id": 39,
    "text": "local f = bit.rol",
    "type": "statement:localassign"
  }, {
    "id": 40,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 41,
    "text": "function(n)\r\n  local f = bit.bswap\r\n  local x = 0; for i=1,n do x = x + f(i) end\r\nend",
    "type": "function"
  }, {
    "id": 42,
    "text": "local f = bit.bswap",
    "type": "statement:localassign"
  }, {
    "id": 43,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 44,
    "text": "",
    "type": "function container"
  }, {
    "id": 45,
    "text": "bit",
    "type": "module"
  }, {
    "id": 46,
    "text": "write",
    "type": "global function"
  }, {
    "id": 47,
    "text": "clock",
    "type": "global function"
  }, {
    "id": 48,
    "text": "t",
    "type": "global function"
  }, {
    "id": 49,
    "text": "shl",
    "type": "global function"
  }, {
    "id": 50,
    "text": "shr",
    "type": "global function"
  }, {
    "id": 51,
    "text": "format",
    "type": "global function"
  }, {
    "id": 52,
    "text": "f",
    "type": "global function"
  }, {
    "id": 53,
    "text": "bor",
    "type": "global function"
  }, {
    "id": 54,
    "text": "require",
    "type": "global function"
  }, {
    "id": 55,
    "text": "band",
    "type": "global function"
  }, {
    "id": 56,
    "text": "",
    "type": "variable container"
  }, {
    "id": 57,
    "text": "",
    "type": "require container"
  }, {
    "id": 58,
    "text": "",
    "type": "local variable"
  }, {
    "id": 59,
    "text": "",
    "type": "number"
  }, {
    "id": 60,
    "text": "",
    "type": "global variable"
  }, {
    "id": 61,
    "text": "",
    "type": "n/a"
  }, {
    "id": 62,
    "text": "",
    "type": "require local variable"
  } ]
}