{
  "_filename": "numberlua.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/lua-bit-numberlua/module/lmod/bit/numberlua.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 5,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 9
  }, {
    "from": 10,
    "label": "has",
    "to": 6
  }, {
    "from": 10,
    "label": "has",
    "to": 7
  }, {
    "from": 10,
    "label": "has",
    "to": 8
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 13,
    "label": "has",
    "to": 15
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 15,
    "label": "has",
    "to": 17
  }, {
    "from": 15,
    "label": "has",
    "to": 18
  }, {
    "from": 15,
    "label": "has",
    "to": 19
  }, {
    "from": 15,
    "label": "has",
    "to": 20
  }, {
    "from": 13,
    "label": "has",
    "to": 21
  }, {
    "from": 13,
    "label": "has",
    "to": 8
  }, {
    "from": 12,
    "label": "has",
    "to": 8
  }, {
    "from": 12,
    "label": "has",
    "to": 22
  }, {
    "from": 23,
    "label": "has",
    "to": 14
  }, {
    "from": 23,
    "label": "has",
    "to": 15
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 15,
    "label": "has",
    "to": 17
  }, {
    "from": 15,
    "label": "has",
    "to": 18
  }, {
    "from": 15,
    "label": "has",
    "to": 19
  }, {
    "from": 15,
    "label": "has",
    "to": 20
  }, {
    "from": 23,
    "label": "has",
    "to": 21
  }, {
    "from": 23,
    "label": "has",
    "to": 8
  }, {
    "from": 23,
    "label": "has",
    "to": 24
  }, {
    "from": 25,
    "label": "has",
    "to": 26
  }, {
    "from": 25,
    "label": "has",
    "to": 27
  }, {
    "from": 27,
    "label": "has",
    "to": 8
  }, {
    "from": 27,
    "label": "has",
    "to": 8
  }, {
    "from": 25,
    "label": "has",
    "to": 8
  }, {
    "from": 25,
    "label": "has",
    "to": 28
  }, {
    "from": 29,
    "label": "has",
    "to": 8
  }, {
    "from": 30,
    "label": "has",
    "to": 8
  }, {
    "from": 31,
    "label": "has",
    "to": 8
  }, {
    "from": 32,
    "label": "has",
    "to": 8
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 34,
    "label": "has",
    "to": 8
  }, {
    "from": 34,
    "label": "has",
    "to": 8
  }, {
    "from": 34,
    "label": "has",
    "to": 35
  }, {
    "from": 25,
    "label": "calls",
    "to": 12
  }, {
    "from": 25,
    "label": "calls",
    "to": 12
  }, {
    "from": 2,
    "label": "calls",
    "to": 38
  }, {
    "from": 25,
    "label": "calls",
    "to": 39
  }, {
    "from": 30,
    "label": "calls",
    "to": 40
  }, {
    "from": 2,
    "label": "calls",
    "to": 37
  }, {
    "from": 25,
    "label": "calls",
    "to": 2
  }, {
    "from": 25,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 25
  }, {
    "from": 31,
    "label": "calls",
    "to": 30
  }, {
    "from": 1,
    "label": "contains",
    "to": 36
  }, {
    "from": 36,
    "label": "declares",
    "to": 2
  }, {
    "from": 36,
    "label": "declares",
    "to": 10
  }, {
    "from": 36,
    "label": "declares",
    "to": 12
  }, {
    "from": 36,
    "label": "declares",
    "to": 23
  }, {
    "from": 36,
    "label": "declares",
    "to": 25
  }, {
    "from": 36,
    "label": "declares",
    "to": 29
  }, {
    "from": 36,
    "label": "declares",
    "to": 30
  }, {
    "from": 36,
    "label": "declares",
    "to": 31
  }, {
    "from": 36,
    "label": "declares",
    "to": 32
  }, {
    "from": 36,
    "label": "declares",
    "to": 34
  }, {
    "from": 1,
    "label": "contains",
    "to": 41
  }, {
    "from": 1,
    "label": "contains",
    "to": 42
  }, {
    "from": 41,
    "label": "initializes",
    "to": 43
  }, {
    "from": 43,
    "label": "assigns",
    "to": 44
  }, {
    "from": 41,
    "label": "initializes",
    "to": 45
  }, {
    "from": 45,
    "label": "assigns",
    "to": 46
  }, {
    "from": 41,
    "label": "initializes",
    "to": 47
  }, {
    "from": 47,
    "label": "assigns",
    "to": 48
  }, {
    "from": 41,
    "label": "initializes",
    "to": 49
  }, {
    "from": 49,
    "label": "assigns",
    "to": 50
  }, {
    "from": 41,
    "label": "initializes",
    "to": 51
  }, {
    "from": 51,
    "label": "assigns",
    "to": 52
  }, {
    "from": 41,
    "label": "initializes",
    "to": 53
  }, {
    "from": 53,
    "label": "assigns",
    "to": 54
  }, {
    "from": 41,
    "label": "initializes",
    "to": 55
  }, {
    "from": 55,
    "label": "assigns",
    "to": 56
  }, {
    "from": 1,
    "label": "provides",
    "to": 57
  }, {
    "from": 47,
    "label": "represents",
    "to": 58
  }, {
    "from": 57,
    "label": "provides",
    "to": 58
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "numberlua",
    "type": "module"
  }, {
    "id": 2,
    "text": "local function memoize(f)\r\n  local mt = {}\r\n  local t = setmetatable({}, mt)\r\n  function mt:__index(k)\r\n    local v = f(k); t[k] = v\r\n    return v\r\n  end\r\n  return t\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local mt = {}",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "local t = setmetatable({}, mt)",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "function mt:__index(k)\r\n    local v = f(k); t[k] = v\r\n    return v\r\n  end",
    "type": "statement:globalfunction"
  }, {
    "id": 6,
    "text": "local v = f(k)",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "t[k] = v",
    "type": "statement:assign"
  }, {
    "id": 8,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 9,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 10,
    "text": "function mt:__index(k)\r\n    local v = f(k); t[k] = v\r\n    return v\r\n  end",
    "type": "function"
  }, {
    "id": 11,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 12,
    "text": "local function make_bitop_uncached(t, m)\r\n  local function bitop(a, b)\r\n    local res,p = 0,1\r\n    while a ~= 0 and b ~= 0 do\r\n      local am, bm = a%m, b%m\r\n      res = res + t[am][bm]*p\r\n      a = (a - am) / m\r\n      b = (b - bm) / m\r\n      p = p*m\r\n    end\r\n    res = res + (a+b)*p\r\n    return res\r\n  end\r\n  return bitop\r\nend",
    "type": "function"
  }, {
    "id": 13,
    "text": "local function bitop(a, b)\r\n    local res,p = 0,1\r\n    while a ~= 0 and b ~= 0 do\r\n      local am, bm = a%m, b%m\r\n      res = res + t[am][bm]*p\r\n      a = (a - am) / m\r\n      b = (b - bm) / m\r\n      p = p*m\r\n    end\r\n    res = res + (a+b)*p\r\n    return res\r\n  end",
    "type": "statement:localfunction"
  }, {
    "id": 14,
    "text": "local res,p = 0,1",
    "type": "statement:localassign"
  }, {
    "id": 15,
    "text": "while a ~= 0 and b ~= 0 do\r\n      local am, bm = a%m, b%m\r\n      res = res + t[am][bm]*p\r\n      a = (a - am) / m\r\n      b = (b - bm) / m\r\n      p = p*m\r\n    end",
    "type": "statement:while"
  }, {
    "id": 16,
    "text": "local am, bm = a%m, b%m",
    "type": "statement:localassign"
  }, {
    "id": 17,
    "text": "res = res + t[am][bm]*p",
    "type": "statement:assign"
  }, {
    "id": 18,
    "text": "a = (a - am) / m",
    "type": "statement:assign"
  }, {
    "id": 19,
    "text": "b = (b - bm) / m",
    "type": "statement:assign"
  }, {
    "id": 20,
    "text": "p = p*m",
    "type": "statement:assign"
  }, {
    "id": 21,
    "text": "res = res + (a+b)*p",
    "type": "statement:assign"
  }, {
    "id": 22,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 23,
    "text": "local function bitop(a, b)\r\n    local res,p = 0,1\r\n    while a ~= 0 and b ~= 0 do\r\n      local am, bm = a%m, b%m\r\n      res = res + t[am][bm]*p\r\n      a = (a - am) / m\r\n      b = (b - bm) / m\r\n      p = p*m\r\n    end\r\n    res = res + (a+b)*p\r\n    return res\r\n  end",
    "type": "function"
  }, {
    "id": 24,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 25,
    "text": "local function make_bitop(t)\r\n  local op1 = make_bitop_uncached(t,2^1)\r\n  local op2 = memoize(function(a)\r\n    return memoize(function(b)\r\n      return op1(a, b)\r\n    end)\r\n  end)\r\n  return make_bitop_uncached(op2, 2^(t.n or 1))\r\nend",
    "type": "function"
  }, {
    "id": 26,
    "text": "local op1 = make_bitop_uncached(t,2^1)",
    "type": "statement:localassign"
  }, {
    "id": 27,
    "text": "local op2 = memoize(function(a)\r\n    return memoize(function(b)\r\n      return op1(a, b)\r\n    end)\r\n  end)",
    "type": "statement:localassign"
  }, {
    "id": 28,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 29,
    "text": "local function bnot(a)   return F8 - a end",
    "type": "function"
  }, {
    "id": 30,
    "text": "local function band(a,b) return ((a+b) - bxor(a,b))/2 end",
    "type": "function"
  }, {
    "id": 31,
    "text": "local function bor(a,b)  return F8 - band(F8 - a, F8 - b) end",
    "type": "function"
  }, {
    "id": 32,
    "text": "function(b)\r\n      return op1(a, b)\r\n    end",
    "type": "function"
  }, {
    "id": 33,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 34,
    "text": "function(a)\r\n    return memoize(function(b)\r\n      return op1(a, b)\r\n    end)\r\n  end",
    "type": "function"
  }, {
    "id": 35,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 36,
    "text": "",
    "type": "function container"
  }, {
    "id": 37,
    "text": "setmetatable",
    "type": "global function"
  }, {
    "id": 38,
    "text": "f",
    "type": "global function"
  }, {
    "id": 39,
    "text": "op1",
    "type": "global function"
  }, {
    "id": 40,
    "text": "bxor",
    "type": "global function"
  }, {
    "id": 41,
    "text": "",
    "type": "variable container"
  }, {
    "id": 42,
    "text": "",
    "type": "require container"
  }, {
    "id": 43,
    "text": "",
    "type": "local variable"
  }, {
    "id": 44,
    "text": "",
    "type": "n/a"
  }, {
    "id": 45,
    "text": "",
    "type": "local variable"
  }, {
    "id": 46,
    "text": "",
    "type": "number"
  }, {
    "id": 47,
    "text": "",
    "type": "local variable"
  }, {
    "id": 48,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 49,
    "text": "",
    "type": "global variable"
  }, {
    "id": 50,
    "text": "",
    "type": "n/a"
  }, {
    "id": 51,
    "text": "",
    "type": "global variable"
  }, {
    "id": 52,
    "text": "",
    "type": "n/a"
  }, {
    "id": 53,
    "text": "",
    "type": "global variable"
  }, {
    "id": 54,
    "text": "",
    "type": "n/a"
  }, {
    "id": 55,
    "text": "",
    "type": "global variable"
  }, {
    "id": 56,
    "text": "",
    "type": "n/a"
  }, {
    "id": 57,
    "text": "",
    "type": "interface container"
  }, {
    "id": 58,
    "text": "",
    "type": "interface"
  } ]
}