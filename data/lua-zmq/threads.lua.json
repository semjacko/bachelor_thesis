{
  "_filename": "threads.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/lua-zmq/src/threads.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 4,
    "label": "has",
    "to": 6
  }, {
    "from": 7,
    "label": "has",
    "to": 5
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 9,
    "label": "has",
    "to": 12
  }, {
    "from": 9,
    "label": "has",
    "to": 5
  }, {
    "from": 9,
    "label": "has",
    "to": 13
  }, {
    "from": 14,
    "label": "has",
    "to": 15
  }, {
    "from": 14,
    "label": "has",
    "to": 16
  }, {
    "from": 17,
    "label": "has",
    "to": 5
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 19,
    "label": "has",
    "to": 5
  }, {
    "from": 19,
    "label": "has",
    "to": 20
  }, {
    "from": 21,
    "label": "has",
    "to": 22
  }, {
    "from": 21,
    "label": "has",
    "to": 23
  }, {
    "from": 24,
    "label": "has",
    "to": 5
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 9,
    "label": "calls",
    "to": 29
  }, {
    "from": 26,
    "label": "calls",
    "to": 30
  }, {
    "from": 26,
    "label": "calls",
    "to": 30
  }, {
    "from": 9,
    "label": "calls",
    "to": 28
  }, {
    "from": 17,
    "label": "calls",
    "to": 9
  }, {
    "from": 19,
    "label": "calls",
    "to": 9
  }, {
    "from": 1,
    "label": "contains",
    "to": 26
  }, {
    "from": 26,
    "label": "declares",
    "to": 4
  }, {
    "from": 26,
    "label": "declares",
    "to": 7
  }, {
    "from": 26,
    "label": "declares",
    "to": 9
  }, {
    "from": 26,
    "label": "declares",
    "to": 14
  }, {
    "from": 26,
    "label": "declares",
    "to": 17
  }, {
    "from": 26,
    "label": "declares",
    "to": 19
  }, {
    "from": 26,
    "label": "declares",
    "to": 21
  }, {
    "from": 26,
    "label": "declares",
    "to": 24
  }, {
    "from": 31,
    "label": "requires",
    "to": 1
  }, {
    "from": 32,
    "label": "requires",
    "to": 1
  }, {
    "from": 33,
    "label": "requires",
    "to": 1
  }, {
    "from": 1,
    "label": "contains",
    "to": 35
  }, {
    "from": 1,
    "label": "contains",
    "to": 36
  }, {
    "from": 35,
    "label": "initializes",
    "to": 37
  }, {
    "from": 37,
    "label": "assigns",
    "to": 38
  }, {
    "from": 35,
    "label": "initializes",
    "to": 39
  }, {
    "from": 39,
    "label": "assigns",
    "to": 40
  }, {
    "from": 35,
    "label": "initializes",
    "to": 41
  }, {
    "from": 41,
    "label": "assigns",
    "to": 42
  }, {
    "from": 35,
    "label": "initializes",
    "to": 43
  }, {
    "from": 43,
    "label": "assigns",
    "to": 44
  }, {
    "from": 35,
    "label": "initializes",
    "to": 45
  }, {
    "from": 45,
    "label": "assigns",
    "to": 46
  }, {
    "from": 35,
    "label": "initializes",
    "to": 47
  }, {
    "from": 47,
    "label": "assigns",
    "to": 48
  }, {
    "from": 35,
    "label": "initializes",
    "to": 49
  }, {
    "from": 49,
    "label": "assigns",
    "to": 50
  }, {
    "from": 35,
    "label": "initializes",
    "to": 51
  }, {
    "from": 51,
    "label": "assigns",
    "to": 52
  }, {
    "from": 35,
    "label": "initializes",
    "to": 53
  }, {
    "from": 53,
    "label": "assigns",
    "to": 54
  }, {
    "from": 35,
    "label": "initializes",
    "to": 55
  }, {
    "from": 55,
    "label": "assigns",
    "to": 56
  }, {
    "from": 36,
    "label": "initializes",
    "to": 57
  }, {
    "from": 57,
    "label": "requires",
    "to": 2
  }, {
    "from": 36,
    "label": "initializes",
    "to": 58
  }, {
    "from": 58,
    "label": "requires",
    "to": 27
  }, {
    "from": 1,
    "label": "provides",
    "to": 59
  }, {
    "from": 34,
    "label": "represents",
    "to": 60
  }, {
    "from": 59,
    "label": "provides",
    "to": 60
  }, {
    "from": 51,
    "label": "contains",
    "to": 3
  }, {
    "from": 34,
    "label": "contains",
    "to": 14
  }, {
    "from": 51,
    "label": "contains",
    "to": 14
  }, {
    "from": 34,
    "label": "contains",
    "to": 17
  }, {
    "from": 51,
    "label": "contains",
    "to": 17
  }, {
    "from": 34,
    "label": "contains",
    "to": 19
  }, {
    "from": 51,
    "label": "contains",
    "to": 19
  }, {
    "from": 34,
    "label": "contains",
    "to": 21
  }, {
    "from": 51,
    "label": "contains",
    "to": 21
  }, {
    "from": 34,
    "label": "contains",
    "to": 24
  }, {
    "from": 51,
    "label": "contains",
    "to": 24
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "threads",
    "type": "module"
  }, {
    "id": 2,
    "text": "zmq",
    "type": "module"
  }, {
    "id": 3,
    "text": "function M.new(pre_alloc)\r\n\treturn setmetatable({\r\n\t\tpoller = zmq.ZMQ_Poller(pre_alloc),\r\n\t\tcallbacks = {},\r\n\t}, poller_mt)\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "function thread_mt:start(detached)\r\n\treturn self.thread:start(detached)\r\nend",
    "type": "function"
  }, {
    "id": 5,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 6,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 7,
    "text": "function thread_mt:join()\r\n\treturn self.thread:join()\r\nend",
    "type": "function"
  }, {
    "id": 8,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 9,
    "text": "local function new_thread(ctx, action, action_arg, ...)\r\n\t-- convert ZMQ_Ctx to lightuserdata.\r\n\tif ctx then\r\n\t\tctx = ctx:lightuserdata()\r\n\tend\r\n\tlocal thread = llthreads.new(bootstrap_code, action, action_arg, ctx, ...)\r\n\treturn setmetatable({\r\n\t\tthread = thread,\r\n\t}, thread_mt)\r\nend",
    "type": "function"
  }, {
    "id": 10,
    "text": "if ctx then\r\n\t\tctx = ctx:lightuserdata()\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 11,
    "text": "ctx = ctx:lightuserdata()",
    "type": "statement:assign"
  }, {
    "id": 12,
    "text": "local thread = llthreads.new(bootstrap_code, action, action_arg, ctx, ...)",
    "type": "statement:localassign"
  }, {
    "id": 13,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 14,
    "text": "function M.set_bootstrap_prelude(code)\r\n   bootstrap_code = bootstrap_pre .. code .. bootstrap_post\r\nend",
    "type": "function"
  }, {
    "id": 15,
    "text": "bootstrap_code = bootstrap_pre .. code .. bootstrap_post",
    "type": "statement:assign"
  }, {
    "id": 16,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 17,
    "text": "function M.runfile(ctx, file, ...)\r\n\treturn new_thread(ctx, 'runfile', file, ...)\r\nend",
    "type": "function"
  }, {
    "id": 18,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 19,
    "text": "function M.runstring(ctx, code, ...)\r\n\treturn new_thread(ctx, 'runstring', code, ...)\r\nend",
    "type": "function"
  }, {
    "id": 20,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 21,
    "text": "function M.set_parent_ctx(ctx)\r\n\tparent_ctx = ctx\r\nend",
    "type": "function"
  }, {
    "id": 22,
    "text": "parent_ctx = ctx",
    "type": "statement:assign"
  }, {
    "id": 23,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 24,
    "text": "function M.get_parent_ctx(ctx)\r\n\treturn parent_ctx\r\nend",
    "type": "function"
  }, {
    "id": 25,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 26,
    "text": "",
    "type": "function container"
  }, {
    "id": 27,
    "text": "llthreads",
    "type": "module"
  }, {
    "id": 28,
    "text": "new",
    "type": "global function"
  }, {
    "id": 29,
    "text": "setmetatable",
    "type": "global function"
  }, {
    "id": 30,
    "text": "require",
    "type": "global function"
  }, {
    "id": 31,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 32,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 33,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 34,
    "text": "",
    "type": "local variable"
  }, {
    "id": 35,
    "text": "",
    "type": "variable container"
  }, {
    "id": 36,
    "text": "",
    "type": "require container"
  }, {
    "id": 37,
    "text": "",
    "type": "local variable"
  }, {
    "id": 38,
    "text": "",
    "type": "n/a"
  }, {
    "id": 39,
    "text": "",
    "type": "local variable"
  }, {
    "id": 40,
    "text": "",
    "type": "n/a"
  }, {
    "id": 41,
    "text": "",
    "type": "local variable"
  }, {
    "id": 42,
    "text": "",
    "type": "n/a"
  }, {
    "id": 43,
    "text": "",
    "type": "local variable"
  }, {
    "id": 44,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 45,
    "text": "",
    "type": "local variable"
  }, {
    "id": 46,
    "text": "",
    "type": "string"
  }, {
    "id": 47,
    "text": "",
    "type": "local variable"
  }, {
    "id": 48,
    "text": "",
    "type": "string"
  }, {
    "id": 49,
    "text": "",
    "type": "local variable"
  }, {
    "id": 50,
    "text": "",
    "type": "n/a"
  }, {
    "id": 51,
    "text": "",
    "type": "local variable"
  }, {
    "id": 52,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 53,
    "text": "",
    "type": "local variable"
  }, {
    "id": 54,
    "text": "",
    "type": "keyword"
  }, {
    "id": 55,
    "text": "",
    "type": "global variable"
  }, {
    "id": 56,
    "text": "",
    "type": "n/a"
  }, {
    "id": 57,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 58,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 59,
    "text": "",
    "type": "interface container"
  }, {
    "id": 60,
    "text": "",
    "type": "interface"
  } ]
}