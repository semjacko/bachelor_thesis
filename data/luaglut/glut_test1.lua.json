{
  "_filename": "glut_test1.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luaglut/glut_test1.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 6,
    "label": "has",
    "to": 7
  }, {
    "from": 5,
    "label": "has",
    "to": 8
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 9,
    "label": "has",
    "to": 11
  }, {
    "from": 9,
    "label": "has",
    "to": 12
  }, {
    "from": 9,
    "label": "has",
    "to": 13
  }, {
    "from": 9,
    "label": "has",
    "to": 14
  }, {
    "from": 9,
    "label": "has",
    "to": 15
  }, {
    "from": 9,
    "label": "has",
    "to": 16
  }, {
    "from": 9,
    "label": "has",
    "to": 17
  }, {
    "from": 9,
    "label": "has",
    "to": 18
  }, {
    "from": 9,
    "label": "has",
    "to": 19
  }, {
    "from": 9,
    "label": "has",
    "to": 20
  }, {
    "from": 9,
    "label": "has",
    "to": 21
  }, {
    "from": 9,
    "label": "has",
    "to": 22
  }, {
    "from": 9,
    "label": "has",
    "to": 23
  }, {
    "from": 9,
    "label": "has",
    "to": 24
  }, {
    "from": 9,
    "label": "has",
    "to": 25
  }, {
    "from": 9,
    "label": "has",
    "to": 26
  }, {
    "from": 9,
    "label": "has",
    "to": 27
  }, {
    "from": 9,
    "label": "has",
    "to": 28
  }, {
    "from": 29,
    "label": "has",
    "to": 30
  }, {
    "from": 29,
    "label": "has",
    "to": 31
  }, {
    "from": 29,
    "label": "has",
    "to": 32
  }, {
    "from": 29,
    "label": "has",
    "to": 33
  }, {
    "from": 29,
    "label": "has",
    "to": 34
  }, {
    "from": 29,
    "label": "has",
    "to": 35
  }, {
    "from": 29,
    "label": "has",
    "to": 32
  }, {
    "from": 29,
    "label": "has",
    "to": 36
  }, {
    "from": 29,
    "label": "has",
    "to": 37
  }, {
    "from": 29,
    "label": "has",
    "to": 38
  }, {
    "from": 29,
    "label": "has",
    "to": 39
  }, {
    "from": 40,
    "label": "has",
    "to": 41
  }, {
    "from": 40,
    "label": "has",
    "to": 42
  }, {
    "from": 40,
    "label": "has",
    "to": 43
  }, {
    "from": 43,
    "label": "has",
    "to": 44
  }, {
    "from": 43,
    "label": "has",
    "to": 45
  }, {
    "from": 43,
    "label": "has",
    "to": 46
  }, {
    "from": 40,
    "label": "has",
    "to": 47
  }, {
    "from": 48,
    "label": "has",
    "to": 41
  }, {
    "from": 48,
    "label": "has",
    "to": 42
  }, {
    "from": 48,
    "label": "has",
    "to": 49
  }, {
    "from": 48,
    "label": "has",
    "to": 50
  }, {
    "from": 48,
    "label": "has",
    "to": 51
  }, {
    "from": 48,
    "label": "has",
    "to": 52
  }, {
    "from": 48,
    "label": "has",
    "to": 35
  }, {
    "from": 48,
    "label": "has",
    "to": 53
  }, {
    "from": 48,
    "label": "has",
    "to": 54
  }, {
    "from": 48,
    "label": "has",
    "to": 55
  }, {
    "from": 48,
    "label": "has",
    "to": 56
  }, {
    "from": 48,
    "label": "has",
    "to": 57
  }, {
    "from": 48,
    "label": "has",
    "to": 58
  }, {
    "from": 58,
    "label": "has",
    "to": 59
  }, {
    "from": 58,
    "label": "has",
    "to": 60
  }, {
    "from": 58,
    "label": "has",
    "to": 61
  }, {
    "from": 58,
    "label": "has",
    "to": 62
  }, {
    "from": 48,
    "label": "has",
    "to": 63
  }, {
    "from": 48,
    "label": "has",
    "to": 31
  }, {
    "from": 48,
    "label": "has",
    "to": 53
  }, {
    "from": 48,
    "label": "has",
    "to": 32
  }, {
    "from": 48,
    "label": "has",
    "to": 64
  }, {
    "from": 48,
    "label": "has",
    "to": 65
  }, {
    "from": 48,
    "label": "has",
    "to": 66
  }, {
    "from": 48,
    "label": "has",
    "to": 67
  }, {
    "from": 48,
    "label": "has",
    "to": 63
  }, {
    "from": 48,
    "label": "has",
    "to": 68
  }, {
    "from": 48,
    "label": "has",
    "to": 69
  }, {
    "from": 69,
    "label": "has",
    "to": 46
  }, {
    "from": 48,
    "label": "has",
    "to": 70
  }, {
    "from": 48,
    "label": "has",
    "to": 71
  }, {
    "from": 71,
    "label": "has",
    "to": 72
  }, {
    "from": 71,
    "label": "has",
    "to": 73
  }, {
    "from": 71,
    "label": "has",
    "to": 74
  }, {
    "from": 71,
    "label": "has",
    "to": 75
  }, {
    "from": 48,
    "label": "has",
    "to": 76
  }, {
    "from": 77,
    "label": "has",
    "to": 78
  }, {
    "from": 78,
    "label": "has",
    "to": 79
  }, {
    "from": 78,
    "label": "has",
    "to": 80
  }, {
    "from": 78,
    "label": "has",
    "to": 81
  }, {
    "from": 77,
    "label": "has",
    "to": 82
  }, {
    "from": 83,
    "label": "has",
    "to": 84
  }, {
    "from": 85,
    "label": "has",
    "to": 86
  }, {
    "from": 87,
    "label": "has",
    "to": 88
  }, {
    "from": 89,
    "label": "has",
    "to": 90
  }, {
    "from": 91,
    "label": "has",
    "to": 92
  }, {
    "from": 91,
    "label": "has",
    "to": 44
  }, {
    "from": 91,
    "label": "has",
    "to": 46
  }, {
    "from": 91,
    "label": "has",
    "to": 93
  }, {
    "from": 94,
    "label": "has",
    "to": 95
  }, {
    "from": 94,
    "label": "has",
    "to": 45
  }, {
    "from": 94,
    "label": "has",
    "to": 96
  }, {
    "from": 97,
    "label": "has",
    "to": 79
  }, {
    "from": 97,
    "label": "has",
    "to": 80
  }, {
    "from": 97,
    "label": "has",
    "to": 81
  }, {
    "from": 97,
    "label": "has",
    "to": 98
  }, {
    "from": 29,
    "label": "calls",
    "to": 100
  }, {
    "from": 29,
    "label": "calls",
    "to": 100
  }, {
    "from": 48,
    "label": "calls",
    "to": 100
  }, {
    "from": 9,
    "label": "calls",
    "to": 101
  }, {
    "from": 9,
    "label": "calls",
    "to": 101
  }, {
    "from": 29,
    "label": "calls",
    "to": 101
  }, {
    "from": 29,
    "label": "calls",
    "to": 101
  }, {
    "from": 48,
    "label": "calls",
    "to": 101
  }, {
    "from": 48,
    "label": "calls",
    "to": 102
  }, {
    "from": 48,
    "label": "calls",
    "to": 102
  }, {
    "from": 99,
    "label": "calls",
    "to": 103
  }, {
    "from": 99,
    "label": "calls",
    "to": 120
  }, {
    "from": 99,
    "label": "calls",
    "to": 104
  }, {
    "from": 48,
    "label": "calls",
    "to": 121
  }, {
    "from": 48,
    "label": "calls",
    "to": 105
  }, {
    "from": 5,
    "label": "calls",
    "to": 122
  }, {
    "from": 99,
    "label": "calls",
    "to": 106
  }, {
    "from": 40,
    "label": "calls",
    "to": 107
  }, {
    "from": 99,
    "label": "calls",
    "to": 107
  }, {
    "from": 99,
    "label": "calls",
    "to": 107
  }, {
    "from": 99,
    "label": "calls",
    "to": 108
  }, {
    "from": 99,
    "label": "calls",
    "to": 108
  }, {
    "from": 99,
    "label": "calls",
    "to": 108
  }, {
    "from": 48,
    "label": "calls",
    "to": 108
  }, {
    "from": 99,
    "label": "calls",
    "to": 108
  }, {
    "from": 99,
    "label": "calls",
    "to": 108
  }, {
    "from": 77,
    "label": "calls",
    "to": 123
  }, {
    "from": 99,
    "label": "calls",
    "to": 123
  }, {
    "from": 99,
    "label": "calls",
    "to": 124
  }, {
    "from": 99,
    "label": "calls",
    "to": 132
  }, {
    "from": 48,
    "label": "calls",
    "to": 129
  }, {
    "from": 48,
    "label": "calls",
    "to": 125
  }, {
    "from": 48,
    "label": "calls",
    "to": 125
  }, {
    "from": 29,
    "label": "calls",
    "to": 110
  }, {
    "from": 29,
    "label": "calls",
    "to": 110
  }, {
    "from": 48,
    "label": "calls",
    "to": 110
  }, {
    "from": 48,
    "label": "calls",
    "to": 110
  }, {
    "from": 9,
    "label": "calls",
    "to": 111
  }, {
    "from": 5,
    "label": "calls",
    "to": 126
  }, {
    "from": 5,
    "label": "calls",
    "to": 140
  }, {
    "from": 29,
    "label": "calls",
    "to": 116
  }, {
    "from": 48,
    "label": "calls",
    "to": 138
  }, {
    "from": 48,
    "label": "calls",
    "to": 138
  }, {
    "from": 48,
    "label": "calls",
    "to": 112
  }, {
    "from": 9,
    "label": "calls",
    "to": 109
  }, {
    "from": 9,
    "label": "calls",
    "to": 109
  }, {
    "from": 9,
    "label": "calls",
    "to": 109
  }, {
    "from": 9,
    "label": "calls",
    "to": 109
  }, {
    "from": 9,
    "label": "calls",
    "to": 109
  }, {
    "from": 9,
    "label": "calls",
    "to": 109
  }, {
    "from": 99,
    "label": "calls",
    "to": 139
  }, {
    "from": 48,
    "label": "calls",
    "to": 119
  }, {
    "from": 48,
    "label": "calls",
    "to": 113
  }, {
    "from": 40,
    "label": "calls",
    "to": 128
  }, {
    "from": 99,
    "label": "calls",
    "to": 128
  }, {
    "from": 29,
    "label": "calls",
    "to": 114
  }, {
    "from": 48,
    "label": "calls",
    "to": 115
  }, {
    "from": 48,
    "label": "calls",
    "to": 115
  }, {
    "from": 48,
    "label": "calls",
    "to": 115
  }, {
    "from": 99,
    "label": "calls",
    "to": 115
  }, {
    "from": 9,
    "label": "calls",
    "to": 131
  }, {
    "from": 99,
    "label": "calls",
    "to": 137
  }, {
    "from": 99,
    "label": "calls",
    "to": 137
  }, {
    "from": 48,
    "label": "calls",
    "to": 133
  }, {
    "from": 48,
    "label": "calls",
    "to": 133
  }, {
    "from": 9,
    "label": "calls",
    "to": 135
  }, {
    "from": 9,
    "label": "calls",
    "to": 135
  }, {
    "from": 48,
    "label": "calls",
    "to": 134
  }, {
    "from": 48,
    "label": "calls",
    "to": 136
  }, {
    "from": 29,
    "label": "calls",
    "to": 9
  }, {
    "from": 48,
    "label": "calls",
    "to": 5
  }, {
    "from": 99,
    "label": "calls",
    "to": 143
  }, {
    "from": 9,
    "label": "calls",
    "to": 130
  }, {
    "from": 9,
    "label": "calls",
    "to": 130
  }, {
    "from": 9,
    "label": "calls",
    "to": 130
  }, {
    "from": 9,
    "label": "calls",
    "to": 130
  }, {
    "from": 9,
    "label": "calls",
    "to": 130
  }, {
    "from": 9,
    "label": "calls",
    "to": 130
  }, {
    "from": 99,
    "label": "calls",
    "to": 127
  }, {
    "from": 99,
    "label": "calls",
    "to": 127
  }, {
    "from": 99,
    "label": "calls",
    "to": 127
  }, {
    "from": 99,
    "label": "calls",
    "to": 127
  }, {
    "from": 99,
    "label": "calls",
    "to": 127
  }, {
    "from": 99,
    "label": "calls",
    "to": 127
  }, {
    "from": 99,
    "label": "calls",
    "to": 127
  }, {
    "from": 99,
    "label": "calls",
    "to": 117
  }, {
    "from": 99,
    "label": "calls",
    "to": 141
  }, {
    "from": 99,
    "label": "calls",
    "to": 141
  }, {
    "from": 40,
    "label": "calls",
    "to": 142
  }, {
    "from": 48,
    "label": "calls",
    "to": 142
  }, {
    "from": 99,
    "label": "calls",
    "to": 142
  }, {
    "from": 77,
    "label": "calls",
    "to": 118
  }, {
    "from": 99,
    "label": "calls",
    "to": 118
  }, {
    "from": 1,
    "label": "contains",
    "to": 99
  }, {
    "from": 99,
    "label": "declares",
    "to": 5
  }, {
    "from": 99,
    "label": "declares",
    "to": 9
  }, {
    "from": 99,
    "label": "declares",
    "to": 29
  }, {
    "from": 99,
    "label": "declares",
    "to": 40
  }, {
    "from": 99,
    "label": "declares",
    "to": 48
  }, {
    "from": 99,
    "label": "declares",
    "to": 77
  }, {
    "from": 99,
    "label": "declares",
    "to": 83
  }, {
    "from": 99,
    "label": "declares",
    "to": 85
  }, {
    "from": 99,
    "label": "declares",
    "to": 87
  }, {
    "from": 99,
    "label": "declares",
    "to": 89
  }, {
    "from": 99,
    "label": "declares",
    "to": 91
  }, {
    "from": 99,
    "label": "declares",
    "to": 94
  }, {
    "from": 99,
    "label": "declares",
    "to": 97
  }, {
    "from": 1,
    "label": "contains",
    "to": 144
  }, {
    "from": 1,
    "label": "contains",
    "to": 145
  }, {
    "from": 144,
    "label": "initializes",
    "to": 146
  }, {
    "from": 146,
    "label": "assigns",
    "to": 147
  }, {
    "from": 144,
    "label": "initializes",
    "to": 148
  }, {
    "from": 148,
    "label": "assigns",
    "to": 149
  }, {
    "from": 144,
    "label": "initializes",
    "to": 150
  }, {
    "from": 150,
    "label": "assigns",
    "to": 151
  }, {
    "from": 144,
    "label": "initializes",
    "to": 152
  }, {
    "from": 152,
    "label": "assigns",
    "to": 153
  }, {
    "from": 144,
    "label": "initializes",
    "to": 154
  }, {
    "from": 154,
    "label": "assigns",
    "to": 155
  }, {
    "from": 144,
    "label": "initializes",
    "to": 156
  }, {
    "from": 144,
    "label": "initializes",
    "to": 157
  }, {
    "from": 144,
    "label": "initializes",
    "to": 158
  }, {
    "from": 158,
    "label": "assigns",
    "to": 159
  }, {
    "from": 144,
    "label": "initializes",
    "to": 160
  }, {
    "from": 160,
    "label": "assigns",
    "to": 161
  }, {
    "from": 144,
    "label": "initializes",
    "to": 162
  }, {
    "from": 162,
    "label": "assigns",
    "to": 163
  }, {
    "from": 144,
    "label": "initializes",
    "to": 164
  }, {
    "from": 164,
    "label": "assigns",
    "to": 165
  }, {
    "from": 144,
    "label": "initializes",
    "to": 166
  }, {
    "from": 166,
    "label": "assigns",
    "to": 167
  }, {
    "from": 144,
    "label": "initializes",
    "to": 168
  }, {
    "from": 168,
    "label": "assigns",
    "to": 169
  }, {
    "from": 144,
    "label": "initializes",
    "to": 170
  }, {
    "from": 170,
    "label": "assigns",
    "to": 171
  }, {
    "from": 144,
    "label": "initializes",
    "to": 172
  }, {
    "from": 172,
    "label": "assigns",
    "to": 173
  }, {
    "from": 145,
    "label": "initializes",
    "to": 174
  }, {
    "from": 174,
    "label": "requires",
    "to": 2
  }, {
    "from": 145,
    "label": "initializes",
    "to": 174
  }, {
    "from": 174,
    "label": "requires",
    "to": 3
  }, {
    "from": 175,
    "label": "initializes",
    "to": 174
  }, {
    "from": 174,
    "label": "requires",
    "to": 2
  }, {
    "from": 175,
    "label": "initializes",
    "to": 174
  }, {
    "from": 174,
    "label": "requires",
    "to": 3
  }, {
    "from": 175,
    "label": "initializes",
    "to": 174
  }, {
    "from": 174,
    "label": "requires",
    "to": 4
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "glut_test1",
    "type": "module"
  }, {
    "id": 2,
    "text": "luagl",
    "type": "module"
  }, {
    "id": 3,
    "text": "luaglut",
    "type": "module"
  }, {
    "id": 4,
    "text": "memarray",
    "type": "module"
  }, {
    "id": 5,
    "text": "local function glutBitmapString(font, str)\r\n   for i = 1, string.len(str) do\r\n      glutBitmapCharacter(font, string.byte(str, i))\r\n   end\r\nend",
    "type": "function"
  }, {
    "id": 6,
    "text": "for i = 1, string.len(str) do\r\n      glutBitmapCharacter(font, string.byte(str, i))\r\n   end",
    "type": "statement:numericfor"
  }, {
    "id": 7,
    "text": "glutBitmapCharacter(font, string.byte(str, i))",
    "type": "statement:functioncall"
  }, {
    "id": 8,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 9,
    "text": "local function set_material_clay()\r\n   glMaterialfv(GL_FRONT, GL_AMBIENT,  {0.2125, 0.1275, 0.054, 1.0})\r\n   glMaterialfv(GL_FRONT, GL_DIFFUSE,  {0.514, 0.4284, 0.18144, 1.0})\r\n   glMaterialfv(GL_FRONT, GL_SPECULAR, {0.393548, 0.271906, 0.166721, 1.0})\r\n   glMaterialf(GL_FRONT, GL_SHININESS, 0.2 * 128.0)\r\n\r\n   glMaterialfv(GL_BACK, GL_AMBIENT,  {0.1, 0.18725, 0.1745, 1.0})\r\n   glMaterialfv(GL_BACK, GL_DIFFUSE,  {0.396, 0.74151, 0.69102, 1.0})\r\n   glMaterialfv(GL_BACK, GL_SPECULAR, {0.297254, 0.30829, 0.306678, 1.0})\r\n   glMaterialf(GL_BACK, GL_SHININESS, 0.1 * 128.0)\r\n\r\n   glEnable(GL_LIGHT0)\r\n   glLightfv(GL_LIGHT0, GL_AMBIENT, {0.2, 0.2, 0.2, 1})\r\n   glLightfv(GL_LIGHT0, GL_DIFFUSE, {1, 1, 1, 1})\r\n   glLightfv(GL_LIGHT0, GL_POSITION, {0.0, 1.0, 0.0, 0.0})\r\n\r\n   glEnable(GL_LIGHT1)\r\n   glLightfv(GL_LIGHT1, GL_AMBIENT, {0.2, 0.2, 0.2, 1})\r\n   glLightfv(GL_LIGHT1, GL_DIFFUSE, {1, 1, 1, 1})\r\n   glLightfv(GL_LIGHT1, GL_POSITION, {1.0, 0.0, 1.0, 0.0})\r\n\r\n   glLightModelf(GL_LIGHT_MODEL_TWO_SIDE, GL_FALSE)\r\n   glFrontFace(GL_CW)\r\nend",
    "type": "function"
  }, {
    "id": 10,
    "text": "glMaterialfv(GL_FRONT, GL_AMBIENT,  {0.2125, 0.1275, 0.054, 1.0})",
    "type": "statement:functioncall"
  }, {
    "id": 11,
    "text": "glMaterialfv(GL_FRONT, GL_DIFFUSE,  {0.514, 0.4284, 0.18144, 1.0})",
    "type": "statement:functioncall"
  }, {
    "id": 12,
    "text": "glMaterialfv(GL_FRONT, GL_SPECULAR, {0.393548, 0.271906, 0.166721, 1.0})",
    "type": "statement:functioncall"
  }, {
    "id": 13,
    "text": "glMaterialf(GL_FRONT, GL_SHININESS, 0.2 * 128.0)",
    "type": "statement:functioncall"
  }, {
    "id": 14,
    "text": "glMaterialfv(GL_BACK, GL_AMBIENT,  {0.1, 0.18725, 0.1745, 1.0})",
    "type": "statement:functioncall"
  }, {
    "id": 15,
    "text": "glMaterialfv(GL_BACK, GL_DIFFUSE,  {0.396, 0.74151, 0.69102, 1.0})",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "glMaterialfv(GL_BACK, GL_SPECULAR, {0.297254, 0.30829, 0.306678, 1.0})",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "glMaterialf(GL_BACK, GL_SHININESS, 0.1 * 128.0)",
    "type": "statement:functioncall"
  }, {
    "id": 18,
    "text": "glEnable(GL_LIGHT0)",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "glLightfv(GL_LIGHT0, GL_AMBIENT, {0.2, 0.2, 0.2, 1})",
    "type": "statement:functioncall"
  }, {
    "id": 20,
    "text": "glLightfv(GL_LIGHT0, GL_DIFFUSE, {1, 1, 1, 1})",
    "type": "statement:functioncall"
  }, {
    "id": 21,
    "text": "glLightfv(GL_LIGHT0, GL_POSITION, {0.0, 1.0, 0.0, 0.0})",
    "type": "statement:functioncall"
  }, {
    "id": 22,
    "text": "glEnable(GL_LIGHT1)",
    "type": "statement:functioncall"
  }, {
    "id": 23,
    "text": "glLightfv(GL_LIGHT1, GL_AMBIENT, {0.2, 0.2, 0.2, 1})",
    "type": "statement:functioncall"
  }, {
    "id": 24,
    "text": "glLightfv(GL_LIGHT1, GL_DIFFUSE, {1, 1, 1, 1})",
    "type": "statement:functioncall"
  }, {
    "id": 25,
    "text": "glLightfv(GL_LIGHT1, GL_POSITION, {1.0, 0.0, 1.0, 0.0})",
    "type": "statement:functioncall"
  }, {
    "id": 26,
    "text": "glLightModelf(GL_LIGHT_MODEL_TWO_SIDE, GL_FALSE)",
    "type": "statement:functioncall"
  }, {
    "id": 27,
    "text": "glFrontFace(GL_CW)",
    "type": "statement:functioncall"
  }, {
    "id": 28,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 29,
    "text": "function resize_func(w, h)\r\n   local ratio = w / h\r\n   glMatrixMode(GL_PROJECTION)\r\n   glLoadIdentity()\r\n   glViewport(0,0,w,h)\r\n   gluPerspective(45,ratio,1,1000)\r\n   glMatrixMode(GL_MODELVIEW)\r\n   glLoadIdentity()\r\n   set_material_clay()\r\n   glEnable(GL_DEPTH_TEST)\r\n   glEnable(GL_NORMALIZE)\r\nend",
    "type": "function"
  }, {
    "id": 30,
    "text": "local ratio = w / h",
    "type": "statement:localassign"
  }, {
    "id": 31,
    "text": "glMatrixMode(GL_PROJECTION)",
    "type": "statement:functioncall"
  }, {
    "id": 32,
    "text": "glLoadIdentity()",
    "type": "statement:functioncall"
  }, {
    "id": 33,
    "text": "glViewport(0,0,w,h)",
    "type": "statement:functioncall"
  }, {
    "id": 34,
    "text": "gluPerspective(45,ratio,1,1000)",
    "type": "statement:functioncall"
  }, {
    "id": 35,
    "text": "glMatrixMode(GL_MODELVIEW)",
    "type": "statement:functioncall"
  }, {
    "id": 36,
    "text": "set_material_clay()",
    "type": "statement:functioncall"
  }, {
    "id": 37,
    "text": "glEnable(GL_DEPTH_TEST)",
    "type": "statement:functioncall"
  }, {
    "id": 38,
    "text": "glEnable(GL_NORMALIZE)",
    "type": "statement:functioncall"
  }, {
    "id": 39,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 40,
    "text": "function timer_func()\r\n   if quit then return end\r\n   if fps_mode == 'fixed' then\r\n      glutSetWindow(window)\r\n      glutTimerFunc(msec, timer_func, 0)\r\n      glutPostRedisplay()\r\n   end\r\nend",
    "type": "function"
  }, {
    "id": 41,
    "text": "if quit then return end",
    "type": "statement:if"
  }, {
    "id": 42,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 43,
    "text": "if fps_mode == 'fixed' then\r\n      glutSetWindow(window)\r\n      glutTimerFunc(msec, timer_func, 0)\r\n      glutPostRedisplay()\r\n   end",
    "type": "statement:if"
  }, {
    "id": 44,
    "text": "glutSetWindow(window)",
    "type": "statement:functioncall"
  }, {
    "id": 45,
    "text": "glutTimerFunc(msec, timer_func, 0)",
    "type": "statement:functioncall"
  }, {
    "id": 46,
    "text": "glutPostRedisplay()",
    "type": "statement:functioncall"
  }, {
    "id": 47,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 48,
    "text": "function display_func()\r\n   if quit then return end\r\n\r\n   local elapsed_time = glutGet(GLUT_ELAPSED_TIME) - start_time\r\n\r\n   angle = angle + 200 / (msec)\r\n   angle2 = angle2 + 170 / (msec)\r\n\r\n   glClear(GL_COLOR_BUFFER_BIT + GL_DEPTH_BUFFER_BIT)\r\n\r\n   glMatrixMode(GL_MODELVIEW)\r\n   glPushMatrix()\r\n   glTranslated(0,0,-5)\r\n   glRotated(angle, 0, 1, 0)\r\n   glRotated(angle2, 0, 0, 1)\r\n   glColor3d(1,0,0)\r\n   if draw_mode == 'wireframe' then\r\n      glutWireTeapot(0.75)\r\n   else\r\n      glEnable(GL_LIGHTING)\r\n      glutSolidTeapot(0.75)\r\n      glDisable(GL_LIGHTING)\r\n   end\r\n   glPopMatrix()\r\n\r\n   glMatrixMode(GL_PROJECTION)\r\n   glPushMatrix()\r\n   glLoadIdentity()\r\n   glOrtho(0, glutGet(GLUT_WINDOW_WIDTH), 0, glutGet(GLUT_WINDOW_HEIGHT), -1, 1)\r\n   glColor3d(1,1,1)\r\n   glRasterPos2d(10,10)\r\n   glutBitmapString(GLUT_BITMAP_HELVETICA_12, fps_str)\r\n   glPopMatrix()\r\n\r\n   glutSwapBuffers()\r\n\r\n   if fps_mode == 'fastest' then glutPostRedisplay() end\r\n\r\n   frames = frames + 1\r\n\r\n   if elapsed_time > 1000 then\r\n      fps_str = 'measured fps: ' .. frames * 1000 / elapsed_time\r\n      print(fps_str)\r\n      start_time = start_time + elapsed_time\r\n      frames = 0\r\n   end\r\nend",
    "type": "function"
  }, {
    "id": 49,
    "text": "local elapsed_time = glutGet(GLUT_ELAPSED_TIME) - start_time",
    "type": "statement:localassign"
  }, {
    "id": 50,
    "text": "angle = angle + 200 / (msec)",
    "type": "statement:assign"
  }, {
    "id": 51,
    "text": "angle2 = angle2 + 170 / (msec)",
    "type": "statement:assign"
  }, {
    "id": 52,
    "text": "glClear(GL_COLOR_BUFFER_BIT + GL_DEPTH_BUFFER_BIT)",
    "type": "statement:functioncall"
  }, {
    "id": 53,
    "text": "glPushMatrix()",
    "type": "statement:functioncall"
  }, {
    "id": 54,
    "text": "glTranslated(0,0,-5)",
    "type": "statement:functioncall"
  }, {
    "id": 55,
    "text": "glRotated(angle, 0, 1, 0)",
    "type": "statement:functioncall"
  }, {
    "id": 56,
    "text": "glRotated(angle2, 0, 0, 1)",
    "type": "statement:functioncall"
  }, {
    "id": 57,
    "text": "glColor3d(1,0,0)",
    "type": "statement:functioncall"
  }, {
    "id": 58,
    "text": "if draw_mode == 'wireframe' then\r\n      glutWireTeapot(0.75)\r\n   else\r\n      glEnable(GL_LIGHTING)\r\n      glutSolidTeapot(0.75)\r\n      glDisable(GL_LIGHTING)\r\n   end",
    "type": "statement:if"
  }, {
    "id": 59,
    "text": "glutWireTeapot(0.75)",
    "type": "statement:functioncall"
  }, {
    "id": 60,
    "text": "glEnable(GL_LIGHTING)",
    "type": "statement:functioncall"
  }, {
    "id": 61,
    "text": "glutSolidTeapot(0.75)",
    "type": "statement:functioncall"
  }, {
    "id": 62,
    "text": "glDisable(GL_LIGHTING)",
    "type": "statement:functioncall"
  }, {
    "id": 63,
    "text": "glPopMatrix()",
    "type": "statement:functioncall"
  }, {
    "id": 64,
    "text": "glOrtho(0, glutGet(GLUT_WINDOW_WIDTH), 0, glutGet(GLUT_WINDOW_HEIGHT), -1, 1)",
    "type": "statement:functioncall"
  }, {
    "id": 65,
    "text": "glColor3d(1,1,1)",
    "type": "statement:functioncall"
  }, {
    "id": 66,
    "text": "glRasterPos2d(10,10)",
    "type": "statement:functioncall"
  }, {
    "id": 67,
    "text": "glutBitmapString(GLUT_BITMAP_HELVETICA_12, fps_str)",
    "type": "statement:functioncall"
  }, {
    "id": 68,
    "text": "glutSwapBuffers()",
    "type": "statement:functioncall"
  }, {
    "id": 69,
    "text": "if fps_mode == 'fastest' then glutPostRedisplay() end",
    "type": "statement:if"
  }, {
    "id": 70,
    "text": "frames = frames + 1",
    "type": "statement:assign"
  }, {
    "id": 71,
    "text": "if elapsed_time > 1000 then\r\n      fps_str = 'measured fps: ' .. frames * 1000 / elapsed_time\r\n      print(fps_str)\r\n      start_time = start_time + elapsed_time\r\n      frames = 0\r\n   end",
    "type": "statement:if"
  }, {
    "id": 72,
    "text": "fps_str = 'measured fps: ' .. frames * 1000 / elapsed_time",
    "type": "statement:assign"
  }, {
    "id": 73,
    "text": "print(fps_str)",
    "type": "statement:functioncall"
  }, {
    "id": 74,
    "text": "start_time = start_time + elapsed_time",
    "type": "statement:assign"
  }, {
    "id": 75,
    "text": "frames = 0",
    "type": "statement:assign"
  }, {
    "id": 76,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 77,
    "text": "function keyboard_func(key,x,y)\r\n   if key == 27 then\r\n      quit = true\r\n      glutDestroyWindow(window)\r\n      os.exit(0)\r\n   end\r\nend",
    "type": "function"
  }, {
    "id": 78,
    "text": "if key == 27 then\r\n      quit = true\r\n      glutDestroyWindow(window)\r\n      os.exit(0)\r\n   end",
    "type": "statement:if"
  }, {
    "id": 79,
    "text": "quit = true",
    "type": "statement:assign"
  }, {
    "id": 80,
    "text": "glutDestroyWindow(window)",
    "type": "statement:functioncall"
  }, {
    "id": 81,
    "text": "os.exit(0)",
    "type": "statement:functioncall"
  }, {
    "id": 82,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 83,
    "text": "function(value) print('submenu callback ' .. value) end",
    "type": "function"
  }, {
    "id": 84,
    "text": "print('submenu callback ' .. value)",
    "type": "statement:functioncall"
  }, {
    "id": 85,
    "text": "function(value) print('mainmenu callback ' .. value) end",
    "type": "function"
  }, {
    "id": 86,
    "text": "print('mainmenu callback ' .. value)",
    "type": "statement:functioncall"
  }, {
    "id": 87,
    "text": "function() draw_mode = 'wireframe' end",
    "type": "function"
  }, {
    "id": 88,
    "text": "draw_mode = 'wireframe'",
    "type": "statement:assign"
  }, {
    "id": 89,
    "text": "function() draw_mode = 'solid' end",
    "type": "function"
  }, {
    "id": 90,
    "text": "draw_mode = 'solid'",
    "type": "statement:assign"
  }, {
    "id": 91,
    "text": "function()\r\n      fps_mode = 'fastest'\r\n      glutSetWindow(window)\r\n      glutPostRedisplay()\r\n   end",
    "type": "function"
  }, {
    "id": 92,
    "text": "fps_mode = 'fastest'",
    "type": "statement:assign"
  }, {
    "id": 93,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 94,
    "text": "function()\r\n      fps_mode = 'fixed'\r\n      glutTimerFunc(msec, timer_func, 0)\r\n   end",
    "type": "function"
  }, {
    "id": 95,
    "text": "fps_mode = 'fixed'",
    "type": "statement:assign"
  }, {
    "id": 96,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 97,
    "text": "function()\r\n      quit = true\r\n      glutDestroyWindow(window)\r\n      os.exit(0)\r\n    end",
    "type": "function"
  }, {
    "id": 98,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 99,
    "text": "",
    "type": "function container"
  }, {
    "id": 100,
    "text": "glLoadIdentity",
    "type": "global function"
  }, {
    "id": 101,
    "text": "glEnable",
    "type": "global function"
  }, {
    "id": 102,
    "text": "glPushMatrix",
    "type": "global function"
  }, {
    "id": 103,
    "text": "glutInit",
    "type": "global function"
  }, {
    "id": 104,
    "text": "glutMainLoop",
    "type": "global function"
  }, {
    "id": 105,
    "text": "glOrtho",
    "type": "global function"
  }, {
    "id": 106,
    "text": "glutKeyboardFunc",
    "type": "global function"
  }, {
    "id": 107,
    "text": "glutTimerFunc",
    "type": "global function"
  }, {
    "id": 108,
    "text": "print",
    "type": "global function"
  }, {
    "id": 109,
    "text": "glLightfv",
    "type": "global function"
  }, {
    "id": 110,
    "text": "glMatrixMode",
    "type": "global function"
  }, {
    "id": 111,
    "text": "glLightModelf",
    "type": "global function"
  }, {
    "id": 112,
    "text": "glTranslated",
    "type": "global function"
  }, {
    "id": 113,
    "text": "glRasterPos2d",
    "type": "global function"
  }, {
    "id": 114,
    "text": "glViewport",
    "type": "global function"
  }, {
    "id": 115,
    "text": "glutGet",
    "type": "global function"
  }, {
    "id": 116,
    "text": "gluPerspective",
    "type": "global function"
  }, {
    "id": 117,
    "text": "glutDisplayFunc",
    "type": "global function"
  }, {
    "id": 118,
    "text": "exit",
    "type": "global function"
  }, {
    "id": 119,
    "text": "glutWireTeapot",
    "type": "global function"
  }, {
    "id": 120,
    "text": "glutAttachMenu",
    "type": "global function"
  }, {
    "id": 121,
    "text": "glutSwapBuffers",
    "type": "global function"
  }, {
    "id": 122,
    "text": "glutBitmapCharacter",
    "type": "global function"
  }, {
    "id": 123,
    "text": "glutDestroyWindow",
    "type": "global function"
  }, {
    "id": 124,
    "text": "glutReshapeFunc",
    "type": "global function"
  }, {
    "id": 125,
    "text": "glColor3d",
    "type": "global function"
  }, {
    "id": 126,
    "text": "byte",
    "type": "global function"
  }, {
    "id": 127,
    "text": "glutAddMenuEntry",
    "type": "global function"
  }, {
    "id": 128,
    "text": "glutSetWindow",
    "type": "global function"
  }, {
    "id": 129,
    "text": "glutSolidTeapot",
    "type": "global function"
  }, {
    "id": 130,
    "text": "glMaterialfv",
    "type": "global function"
  }, {
    "id": 131,
    "text": "glFrontFace",
    "type": "global function"
  }, {
    "id": 132,
    "text": "glutCreateWindow",
    "type": "global function"
  }, {
    "id": 133,
    "text": "glPopMatrix",
    "type": "global function"
  }, {
    "id": 134,
    "text": "glClear",
    "type": "global function"
  }, {
    "id": 135,
    "text": "glMaterialf",
    "type": "global function"
  }, {
    "id": 136,
    "text": "glDisable",
    "type": "global function"
  }, {
    "id": 137,
    "text": "glutCreateMenu",
    "type": "global function"
  }, {
    "id": 138,
    "text": "glRotated",
    "type": "global function"
  }, {
    "id": 139,
    "text": "glutInitDisplayMode",
    "type": "global function"
  }, {
    "id": 140,
    "text": "len",
    "type": "global function"
  }, {
    "id": 141,
    "text": "require",
    "type": "global function"
  }, {
    "id": 142,
    "text": "glutPostRedisplay",
    "type": "global function"
  }, {
    "id": 143,
    "text": "glutAddSubMenu",
    "type": "global function"
  }, {
    "id": 144,
    "text": "",
    "type": "variable container"
  }, {
    "id": 145,
    "text": "",
    "type": "require container"
  }, {
    "id": 146,
    "text": "",
    "type": "local variable"
  }, {
    "id": 147,
    "text": "",
    "type": "boolean"
  }, {
    "id": 148,
    "text": "",
    "type": "local variable"
  }, {
    "id": 149,
    "text": "",
    "type": "number"
  }, {
    "id": 150,
    "text": "",
    "type": "local variable"
  }, {
    "id": 151,
    "text": "",
    "type": "string"
  }, {
    "id": 152,
    "text": "",
    "type": "local variable"
  }, {
    "id": 153,
    "text": "",
    "type": "n/a"
  }, {
    "id": 154,
    "text": "",
    "type": "local variable"
  }, {
    "id": 155,
    "text": "",
    "type": "number"
  }, {
    "id": 156,
    "text": "",
    "type": "local variable"
  }, {
    "id": 157,
    "text": "",
    "type": "local variable"
  }, {
    "id": 158,
    "text": "",
    "type": "local variable"
  }, {
    "id": 159,
    "text": "",
    "type": "string"
  }, {
    "id": 160,
    "text": "",
    "type": "local variable"
  }, {
    "id": 161,
    "text": "",
    "type": "string"
  }, {
    "id": 162,
    "text": "",
    "type": "local variable"
  }, {
    "id": 163,
    "text": "",
    "type": "number"
  }, {
    "id": 164,
    "text": "",
    "type": "local variable"
  }, {
    "id": 165,
    "text": "",
    "type": "number"
  }, {
    "id": 166,
    "text": "",
    "type": "local variable"
  }, {
    "id": 167,
    "text": "",
    "type": "n/a"
  }, {
    "id": 168,
    "text": "",
    "type": "local variable"
  }, {
    "id": 169,
    "text": "",
    "type": "n/a"
  }, {
    "id": 170,
    "text": "",
    "type": "global variable"
  }, {
    "id": 171,
    "text": "",
    "type": "n/a"
  }, {
    "id": 172,
    "text": "",
    "type": "global variable"
  }, {
    "id": 173,
    "text": "",
    "type": "n/a"
  }, {
    "id": 174,
    "text": "",
    "type": "global variable"
  }, {
    "id": 175,
    "text": "",
    "type": "require container"
  } ]
}