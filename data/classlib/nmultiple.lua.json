{
  "_filename": "nmultiple.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/classlib/nmultiple.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 4,
    "label": "has",
    "to": 6
  }, {
    "from": 4,
    "label": "has",
    "to": 7
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 8,
    "label": "has",
    "to": 10
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 11,
    "label": "has",
    "to": 13
  }, {
    "from": 11,
    "label": "has",
    "to": 14
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 15,
    "label": "has",
    "to": 17
  }, {
    "from": 18,
    "label": "has",
    "to": 19
  }, {
    "from": 18,
    "label": "has",
    "to": 20
  }, {
    "from": 21,
    "label": "has",
    "to": 22
  }, {
    "from": 21,
    "label": "has",
    "to": 23
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 24,
    "label": "has",
    "to": 26
  }, {
    "from": 24,
    "label": "has",
    "to": 27
  }, {
    "from": 28,
    "label": "has",
    "to": 29
  }, {
    "from": 29,
    "label": "has",
    "to": 30
  }, {
    "from": 28,
    "label": "has",
    "to": 13
  }, {
    "from": 28,
    "label": "has",
    "to": 31
  }, {
    "from": 28,
    "label": "has",
    "to": 32
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 33,
    "label": "has",
    "to": 34
  }, {
    "from": 28,
    "label": "has",
    "to": 35
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 2
  }, {
    "from": 36,
    "label": "calls",
    "to": 39
  }, {
    "from": 36,
    "label": "calls",
    "to": 37
  }, {
    "from": 28,
    "label": "calls",
    "to": 46
  }, {
    "from": 2,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 4,
    "label": "calls",
    "to": 44
  }, {
    "from": 11,
    "label": "calls",
    "to": 44
  }, {
    "from": 15,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 18,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 21,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 28,
    "label": "calls",
    "to": 44
  }, {
    "from": 28,
    "label": "calls",
    "to": 44
  }, {
    "from": 28,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 44
  }, {
    "from": 36,
    "label": "calls",
    "to": 45
  }, {
    "from": 36,
    "label": "calls",
    "to": 40
  }, {
    "from": 36,
    "label": "calls",
    "to": 40
  }, {
    "from": 36,
    "label": "calls",
    "to": 42
  }, {
    "from": 15,
    "label": "calls",
    "to": 38
  }, {
    "from": 28,
    "label": "calls",
    "to": 38
  }, {
    "from": 36,
    "label": "calls",
    "to": 41
  }, {
    "from": 28,
    "label": "calls",
    "to": 47
  }, {
    "from": 36,
    "label": "calls",
    "to": 43
  }, {
    "from": 36,
    "label": "calls",
    "to": 28
  }, {
    "from": 36,
    "label": "calls",
    "to": 28
  }, {
    "from": 36,
    "label": "calls",
    "to": 28
  }, {
    "from": 36,
    "label": "calls",
    "to": 28
  }, {
    "from": 36,
    "label": "calls",
    "to": 28
  }, {
    "from": 36,
    "label": "calls",
    "to": 28
  }, {
    "from": 36,
    "label": "calls",
    "to": 28
  }, {
    "from": 36,
    "label": "calls",
    "to": 28
  }, {
    "from": 36,
    "label": "calls",
    "to": 28
  }, {
    "from": 36,
    "label": "calls",
    "to": 48
  }, {
    "from": 1,
    "label": "contains",
    "to": 36
  }, {
    "from": 36,
    "label": "declares",
    "to": 2
  }, {
    "from": 36,
    "label": "declares",
    "to": 4
  }, {
    "from": 36,
    "label": "declares",
    "to": 8
  }, {
    "from": 36,
    "label": "declares",
    "to": 11
  }, {
    "from": 36,
    "label": "declares",
    "to": 15
  }, {
    "from": 36,
    "label": "declares",
    "to": 18
  }, {
    "from": 36,
    "label": "declares",
    "to": 21
  }, {
    "from": 36,
    "label": "declares",
    "to": 24
  }, {
    "from": 36,
    "label": "declares",
    "to": 28
  }, {
    "from": 1,
    "label": "contains",
    "to": 50
  }, {
    "from": 1,
    "label": "contains",
    "to": 51
  }, {
    "from": 50,
    "label": "initializes",
    "to": 52
  }, {
    "from": 50,
    "label": "initializes",
    "to": 53
  }, {
    "from": 50,
    "label": "initializes",
    "to": 54
  }, {
    "from": 54,
    "label": "assigns",
    "to": 55
  }, {
    "from": 50,
    "label": "initializes",
    "to": 56
  }, {
    "from": 56,
    "label": "assigns",
    "to": 57
  }, {
    "from": 50,
    "label": "initializes",
    "to": 58
  }, {
    "from": 58,
    "label": "assigns",
    "to": 59
  }, {
    "from": 50,
    "label": "initializes",
    "to": 60
  }, {
    "from": 60,
    "label": "assigns",
    "to": 61
  }, {
    "from": 50,
    "label": "initializes",
    "to": 62
  }, {
    "from": 50,
    "label": "initializes",
    "to": 63
  }, {
    "from": 63,
    "label": "assigns",
    "to": 64
  }, {
    "from": 50,
    "label": "initializes",
    "to": 65
  }, {
    "from": 51,
    "label": "initializes",
    "to": 49
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "nmultiple",
    "type": "module"
  }, {
    "id": 2,
    "text": "function say(msg) print(msg and \"> \" .. msg or \"\") end",
    "type": "function"
  }, {
    "id": 3,
    "text": "print(msg and \"> \" .. msg or \"\")",
    "type": "statement:functioncall"
  }, {
    "id": 4,
    "text": "function meter:__init(value)\r\n\tprint(\"meter init \" .. (value or 'nil'))\r\n\tself.value = value or 0\r\nend",
    "type": "function"
  }, {
    "id": 5,
    "text": "print(\"meter init \" .. (value or 'nil'))",
    "type": "statement:functioncall"
  }, {
    "id": 6,
    "text": "self.value = value or 0",
    "type": "statement:assign"
  }, {
    "id": 7,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 8,
    "text": "function meter:set(value)\r\n\tself.value = value\r\nend",
    "type": "function"
  }, {
    "id": 9,
    "text": "self.value = value",
    "type": "statement:assign"
  }, {
    "id": 10,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 11,
    "text": "function meter:read()\r\n\tprint(\"meter read \" .. self.value)\r\n\treturn self.value\r\nend",
    "type": "function"
  }, {
    "id": 12,
    "text": "print(\"meter read \" .. self.value)",
    "type": "statement:functioncall"
  }, {
    "id": 13,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 14,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 15,
    "text": "function meter:which()\r\n\tprint(\"meter = \" .. tostring(self) ..  \" { value = \" .. self.value .. \" }\")\r\nend",
    "type": "function"
  }, {
    "id": 16,
    "text": "print(\"meter = \" .. tostring(self) ..  \" { value = \" .. self.value .. \" }\")",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 18,
    "text": "function hygro:read()\r\n\tprint(\"humidity \" .. self.meter.value)\r\nend",
    "type": "function"
  }, {
    "id": 19,
    "text": "print(\"humidity \" .. self.meter.value)",
    "type": "statement:functioncall"
  }, {
    "id": 20,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 21,
    "text": "function therm:read()\r\n\tprint(\"temperature \" .. self.meter.value)\r\nend",
    "type": "function"
  }, {
    "id": 22,
    "text": "print(\"temperature \" .. self.meter.value)",
    "type": "statement:functioncall"
  }, {
    "id": 23,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 24,
    "text": "function hygrotherm:read()\r\n\tself.hygro:read()\r\n\tself.therm:read()\r\nend",
    "type": "function"
  }, {
    "id": 25,
    "text": "self.hygro:read()",
    "type": "statement:functioncall"
  }, {
    "id": 26,
    "text": "self.therm:read()",
    "type": "statement:functioncall"
  }, {
    "id": 27,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 28,
    "text": "function show(t)\r\n\tif not t or not t.__type then print(\"Sorry, cannot show \" .. tostring(t)) return end\r\n\tprint('__type', t.__type)\r\n\tfor i, v in pairs(t) do\r\n\t\tif type(i) ~= 'string' or i:sub(1, 2) ~= '__' then print(i, v) end\r\n\tend\r\nend",
    "type": "function"
  }, {
    "id": 29,
    "text": "if not t or not t.__type then print(\"Sorry, cannot show \" .. tostring(t)) return end",
    "type": "statement:if"
  }, {
    "id": 30,
    "text": "print(\"Sorry, cannot show \" .. tostring(t))",
    "type": "statement:functioncall"
  }, {
    "id": 31,
    "text": "print('__type', t.__type)",
    "type": "statement:functioncall"
  }, {
    "id": 32,
    "text": "for i, v in pairs(t) do\r\n\t\tif type(i) ~= 'string' or i:sub(1, 2) ~= '__' then print(i, v) end\r\n\tend",
    "type": "statement:genericfor"
  }, {
    "id": 33,
    "text": "if type(i) ~= 'string' or i:sub(1, 2) ~= '__' then print(i, v) end",
    "type": "statement:if"
  }, {
    "id": 34,
    "text": "print(i, v)",
    "type": "statement:functioncall"
  }, {
    "id": 35,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 36,
    "text": "",
    "type": "function container"
  }, {
    "id": 37,
    "text": "hygrotherm",
    "type": "global function"
  }, {
    "id": 38,
    "text": "tostring",
    "type": "global function"
  }, {
    "id": 39,
    "text": "shared",
    "type": "global function"
  }, {
    "id": 40,
    "text": "pcall",
    "type": "global function"
  }, {
    "id": 41,
    "text": "hygrotherm",
    "type": "global function"
  }, {
    "id": 42,
    "text": "therm",
    "type": "global function"
  }, {
    "id": 43,
    "text": "require",
    "type": "global function"
  }, {
    "id": 44,
    "text": "print",
    "type": "global function"
  }, {
    "id": 45,
    "text": "meter",
    "type": "global function"
  }, {
    "id": 46,
    "text": "pairs",
    "type": "global function"
  }, {
    "id": 47,
    "text": "type",
    "type": "global function"
  }, {
    "id": 48,
    "text": "hygro",
    "type": "global function"
  }, {
    "id": 49,
    "text": "",
    "type": "global variable"
  }, {
    "id": 50,
    "text": "",
    "type": "variable container"
  }, {
    "id": 51,
    "text": "",
    "type": "require container"
  }, {
    "id": 52,
    "text": "",
    "type": "global variable"
  }, {
    "id": 53,
    "text": "",
    "type": "global variable"
  }, {
    "id": 54,
    "text": "",
    "type": "global variable"
  }, {
    "id": 55,
    "text": "",
    "type": "n/a"
  }, {
    "id": 56,
    "text": "",
    "type": "global variable"
  }, {
    "id": 57,
    "text": "",
    "type": "n/a"
  }, {
    "id": 58,
    "text": "",
    "type": "global variable"
  }, {
    "id": 59,
    "text": "",
    "type": "n/a"
  }, {
    "id": 60,
    "text": "",
    "type": "global variable"
  }, {
    "id": 61,
    "text": "",
    "type": "n/a"
  }, {
    "id": 62,
    "text": "",
    "type": "global variable"
  }, {
    "id": 63,
    "text": "",
    "type": "global variable"
  }, {
    "id": 64,
    "text": "",
    "type": "n/a"
  }, {
    "id": 65,
    "text": "",
    "type": "global variable"
  } ]
}