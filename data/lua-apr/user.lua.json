{
  "_filename": "user.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/lua-apr/test/user.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 2
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 3,
    "label": "has",
    "to": 6
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 7,
    "label": "has",
    "to": 9
  }, {
    "from": 3,
    "label": "calls",
    "to": 12
  }, {
    "from": 10,
    "label": "calls",
    "to": 17
  }, {
    "from": 10,
    "label": "calls",
    "to": 17
  }, {
    "from": 10,
    "label": "calls",
    "to": 17
  }, {
    "from": 7,
    "label": "calls",
    "to": 17
  }, {
    "from": 10,
    "label": "calls",
    "to": 17
  }, {
    "from": 10,
    "label": "calls",
    "to": 7
  }, {
    "from": 10,
    "label": "calls",
    "to": 7
  }, {
    "from": 10,
    "label": "calls",
    "to": 13
  }, {
    "from": 10,
    "label": "calls",
    "to": 13
  }, {
    "from": 10,
    "label": "calls",
    "to": 13
  }, {
    "from": 10,
    "label": "calls",
    "to": 13
  }, {
    "from": 10,
    "label": "calls",
    "to": 18
  }, {
    "from": 10,
    "label": "calls",
    "to": 18
  }, {
    "from": 10,
    "label": "calls",
    "to": 3
  }, {
    "from": 10,
    "label": "calls",
    "to": 3
  }, {
    "from": 7,
    "label": "calls",
    "to": 14
  }, {
    "from": 10,
    "label": "calls",
    "to": 16
  }, {
    "from": 10,
    "label": "calls",
    "to": 19
  }, {
    "from": 10,
    "label": "calls",
    "to": 19
  }, {
    "from": 10,
    "label": "calls",
    "to": 20
  }, {
    "from": 10,
    "label": "calls",
    "to": 20
  }, {
    "from": 3,
    "label": "calls",
    "to": 15
  }, {
    "from": 10,
    "label": "calls",
    "to": 11
  }, {
    "from": 2,
    "label": "contains",
    "to": 10
  }, {
    "from": 10,
    "label": "declares",
    "to": 3
  }, {
    "from": 10,
    "label": "declares",
    "to": 7
  }, {
    "from": 2,
    "label": "contains",
    "to": 21
  }, {
    "from": 2,
    "label": "contains",
    "to": 22
  }, {
    "from": 21,
    "label": "initializes",
    "to": 23
  }, {
    "from": 23,
    "label": "assigns",
    "to": 24
  }, {
    "from": 21,
    "label": "initializes",
    "to": 25
  }, {
    "from": 21,
    "label": "initializes",
    "to": 26
  }, {
    "from": 26,
    "label": "assigns",
    "to": 27
  }, {
    "from": 21,
    "label": "initializes",
    "to": 28
  }, {
    "from": 21,
    "label": "initializes",
    "to": 29
  }, {
    "from": 29,
    "label": "assigns",
    "to": 30
  }, {
    "from": 21,
    "label": "initializes",
    "to": 31
  }, {
    "from": 31,
    "label": "assigns",
    "to": 32
  }, {
    "from": 21,
    "label": "initializes",
    "to": 33
  }, {
    "from": 33,
    "label": "assigns",
    "to": 34
  }, {
    "from": 22,
    "label": "initializes",
    "to": 35
  }, {
    "from": 35,
    "label": "requires",
    "to": 1
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "helpers",
    "type": "module"
  }, {
    "id": 2,
    "text": "user",
    "type": "module"
  }, {
    "id": 3,
    "text": "local function report(...)\r\n  helpers.warning(...)\r\n  helpers.message(\"This might not be an error, e.g. when using a chroot, which is why the tests will continue as normal.\\n\")\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "helpers.warning(...)",
    "type": "statement:functioncall"
  }, {
    "id": 5,
    "text": "helpers.message(\"This might not be an error, e.g. when using a chroot, which is why the tests will continue as normal.\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 6,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 7,
    "text": "local function normpath(p)\r\n  return assert(apr.filepath_merge('', p, 'native'))\r\nend",
    "type": "function"
  }, {
    "id": 8,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 9,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 10,
    "text": "",
    "type": "function container"
  }, {
    "id": 11,
    "text": "user_homepath_get",
    "type": "global function"
  }, {
    "id": 12,
    "text": "message",
    "type": "global function"
  }, {
    "id": 13,
    "text": "env_get",
    "type": "global function"
  }, {
    "id": 14,
    "text": "filepath_merge",
    "type": "global function"
  }, {
    "id": 15,
    "text": "warning",
    "type": "global function"
  }, {
    "id": 16,
    "text": "user_get",
    "type": "global function"
  }, {
    "id": 17,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 18,
    "text": "pcall",
    "type": "global function"
  }, {
    "id": 19,
    "text": "type",
    "type": "global function"
  }, {
    "id": 20,
    "text": "require",
    "type": "global function"
  }, {
    "id": 21,
    "text": "",
    "type": "variable container"
  }, {
    "id": 22,
    "text": "",
    "type": "require container"
  }, {
    "id": 23,
    "text": "",
    "type": "local variable"
  }, {
    "id": 24,
    "text": "",
    "type": "n/a"
  }, {
    "id": 25,
    "text": "",
    "type": "local variable"
  }, {
    "id": 26,
    "text": "",
    "type": "local variable"
  }, {
    "id": 27,
    "text": "",
    "type": "n/a"
  }, {
    "id": 28,
    "text": "",
    "type": "local variable"
  }, {
    "id": 29,
    "text": "",
    "type": "local variable"
  }, {
    "id": 30,
    "text": "",
    "type": "n/a"
  }, {
    "id": 31,
    "text": "",
    "type": "local variable"
  }, {
    "id": 32,
    "text": "",
    "type": "n/a"
  }, {
    "id": 33,
    "text": "",
    "type": "local variable"
  }, {
    "id": 34,
    "text": "",
    "type": "n/a"
  }, {
    "id": 35,
    "text": "",
    "type": "require local variable"
  } ]
}