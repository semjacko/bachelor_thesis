{
  "_filename": "getopt.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/lua-apr/test/getopt.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 3,
    "label": "has",
    "to": 6
  }, {
    "from": 3,
    "label": "has",
    "to": 7
  }, {
    "from": 3,
    "label": "has",
    "to": 8
  }, {
    "from": 3,
    "label": "has",
    "to": 9
  }, {
    "from": 10,
    "label": "calls",
    "to": 14
  }, {
    "from": 10,
    "label": "calls",
    "to": 14
  }, {
    "from": 3,
    "label": "calls",
    "to": 11
  }, {
    "from": 3,
    "label": "calls",
    "to": 12
  }, {
    "from": 3,
    "label": "calls",
    "to": 12
  }, {
    "from": 3,
    "label": "calls",
    "to": 13
  }, {
    "from": 3,
    "label": "calls",
    "to": 13
  }, {
    "from": 3,
    "label": "calls",
    "to": 13
  }, {
    "from": 10,
    "label": "calls",
    "to": 15
  }, {
    "from": 10,
    "label": "calls",
    "to": 15
  }, {
    "from": 10,
    "label": "calls",
    "to": 3
  }, {
    "from": 10,
    "label": "calls",
    "to": 3
  }, {
    "from": 10,
    "label": "calls",
    "to": 3
  }, {
    "from": 10,
    "label": "calls",
    "to": 3
  }, {
    "from": 1,
    "label": "contains",
    "to": 10
  }, {
    "from": 10,
    "label": "declares",
    "to": 3
  }, {
    "from": 1,
    "label": "contains",
    "to": 16
  }, {
    "from": 1,
    "label": "contains",
    "to": 17
  }, {
    "from": 16,
    "label": "initializes",
    "to": 18
  }, {
    "from": 18,
    "label": "assigns",
    "to": 19
  }, {
    "from": 16,
    "label": "initializes",
    "to": 20
  }, {
    "from": 17,
    "label": "initializes",
    "to": 21
  }, {
    "from": 21,
    "label": "requires",
    "to": 2
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "getopt",
    "type": "module"
  }, {
    "id": 2,
    "text": "helpers",
    "type": "module"
  }, {
    "id": 3,
    "text": "local function testopts(context)\r\n  context.arguments[0] = 'getopt'\r\n  local config = { silent = false, args = context.arguments }\r\n  local opts, args = assert(apr.getopt(context.usage, config))\r\n  assert(helpers.deepequal(opts, context.expected_opts))\r\n  assert(helpers.deepequal(args, context.expected_args))\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "context.arguments[0] = 'getopt'",
    "type": "statement:assign"
  }, {
    "id": 5,
    "text": "local config = { silent = false, args = context.arguments }",
    "type": "statement:localassign"
  }, {
    "id": 6,
    "text": "local opts, args = assert(apr.getopt(context.usage, config))",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "assert(helpers.deepequal(opts, context.expected_opts))",
    "type": "statement:functioncall"
  }, {
    "id": 8,
    "text": "assert(helpers.deepequal(args, context.expected_args))",
    "type": "statement:functioncall"
  }, {
    "id": 9,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 10,
    "text": "",
    "type": "function container"
  }, {
    "id": 11,
    "text": "getopt",
    "type": "global function"
  }, {
    "id": 12,
    "text": "deepequal",
    "type": "global function"
  }, {
    "id": 13,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 14,
    "text": "pcall",
    "type": "global function"
  }, {
    "id": 15,
    "text": "require",
    "type": "global function"
  }, {
    "id": 16,
    "text": "",
    "type": "variable container"
  }, {
    "id": 17,
    "text": "",
    "type": "require container"
  }, {
    "id": 18,
    "text": "",
    "type": "local variable"
  }, {
    "id": 19,
    "text": "",
    "type": "n/a"
  }, {
    "id": 20,
    "text": "",
    "type": "local variable"
  }, {
    "id": 21,
    "text": "",
    "type": "require local variable"
  } ]
}