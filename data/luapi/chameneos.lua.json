{
  "_filename": "chameneos.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luapi/examples/chameneos.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 3,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 9,
    "label": "has",
    "to": 11
  }, {
    "from": 9,
    "label": "has",
    "to": 12
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 9,
    "label": "has",
    "to": 14
  }, {
    "from": 14,
    "label": "has",
    "to": 15
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 15,
    "label": "has",
    "to": 17
  }, {
    "from": 14,
    "label": "has",
    "to": 18
  }, {
    "from": 14,
    "label": "has",
    "to": 19
  }, {
    "from": 19,
    "label": "has",
    "to": 20
  }, {
    "from": 9,
    "label": "has",
    "to": 21
  }, {
    "from": 9,
    "label": "has",
    "to": 22
  }, {
    "from": 23,
    "label": "has",
    "to": 13
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 24,
    "label": "has",
    "to": 26
  }, {
    "from": 26,
    "label": "has",
    "to": 27
  }, {
    "from": 26,
    "label": "has",
    "to": 28
  }, {
    "from": 24,
    "label": "has",
    "to": 29
  }, {
    "from": 24,
    "label": "has",
    "to": 30
  }, {
    "from": 31,
    "label": "has",
    "to": 16
  }, {
    "from": 32,
    "label": "has",
    "to": 17
  }, {
    "from": 33,
    "label": "calls",
    "to": 35
  }, {
    "from": 33,
    "label": "calls",
    "to": 34
  }, {
    "from": 23,
    "label": "calls",
    "to": 2
  }, {
    "from": 24,
    "label": "calls",
    "to": 36
  }, {
    "from": 9,
    "label": "calls",
    "to": 23
  }, {
    "from": 9,
    "label": "calls",
    "to": 23
  }, {
    "from": 33,
    "label": "calls",
    "to": 37
  }, {
    "from": 1,
    "label": "contains",
    "to": 33
  }, {
    "from": 33,
    "label": "declares",
    "to": 2
  }, {
    "from": 33,
    "label": "declares",
    "to": 9
  }, {
    "from": 33,
    "label": "declares",
    "to": 23
  }, {
    "from": 33,
    "label": "declares",
    "to": 24
  }, {
    "from": 33,
    "label": "declares",
    "to": 31
  }, {
    "from": 33,
    "label": "declares",
    "to": 32
  }, {
    "from": 1,
    "label": "contains",
    "to": 39
  }, {
    "from": 1,
    "label": "contains",
    "to": 40
  }, {
    "from": 39,
    "label": "initializes",
    "to": 41
  }, {
    "from": 41,
    "label": "assigns",
    "to": 42
  }, {
    "from": 39,
    "label": "initializes",
    "to": 43
  }, {
    "from": 43,
    "label": "assigns",
    "to": 44
  }, {
    "from": 39,
    "label": "initializes",
    "to": 45
  }, {
    "from": 45,
    "label": "assigns",
    "to": 46
  }, {
    "from": 39,
    "label": "initializes",
    "to": 47
  }, {
    "from": 47,
    "label": "assigns",
    "to": 48
  }, {
    "from": 39,
    "label": "initializes",
    "to": 49
  }, {
    "from": 49,
    "label": "assigns",
    "to": 50
  }, {
    "from": 39,
    "label": "initializes",
    "to": 51
  }, {
    "from": 51,
    "label": "assigns",
    "to": 52
  }, {
    "from": 40,
    "label": "initializes",
    "to": 38
  }, {
    "from": 15,
    "label": "hasArgument",
    "to": 31
  }, {
    "from": 15,
    "label": "hasArgument",
    "to": 32
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "chameneos",
    "type": "module"
  }, {
    "id": 2,
    "text": "function complement(color1,color2)\r\n  if color1==color2 then\r\n    return color2\r\n  elseif color1==blue then\r\n    if color2==red then\r\n      return yellow\r\n    elseif color2==yellow then\r\n      return red\r\n    end\r\n  elseif color1==red then\r\n    if color2==blue then\r\n      return yellow\r\n    elseif color2==yellow then\r\n      return blue\r\n    end\r\n  elseif color1==yellow then\r\n    if color2==blue then\r\n      return red\r\n    elseif color2==red then\r\n      return blue\r\n    end\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "if color1==color2 then\r\n    return color2\r\n  elseif color1==blue then\r\n    if color2==red then\r\n      return yellow\r\n    elseif color2==yellow then\r\n      return red\r\n    end\r\n  elseif color1==red then\r\n    if color2==blue then\r\n      return yellow\r\n    elseif color2==yellow then\r\n      return blue\r\n    end\r\n  elseif color1==yellow then\r\n    if color2==blue then\r\n      return red\r\n    elseif color2==red then\r\n      return blue\r\n    end\r\n  end",
    "type": "statement:if"
  }, {
    "id": 4,
    "text": "if color2==red then\r\n      return yellow\r\n    elseif color2==yellow then\r\n      return red\r\n    end",
    "type": "statement:if"
  }, {
    "id": 5,
    "text": "if color2==blue then\r\n      return yellow\r\n    elseif color2==yellow then\r\n      return blue\r\n    end",
    "type": "statement:if"
  }, {
    "id": 6,
    "text": "if color2==blue then\r\n      return red\r\n    elseif color2==red then\r\n      return blue\r\n    end",
    "type": "statement:if"
  }, {
    "id": 7,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 8,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 9,
    "text": "function Chameneos(proc,report,owncolor,color2,color3)\r\n  local faded = false\r\n  local nb = 0\r\n  local function update(color) owncolor = complement(owncolor,color) end\r\n  while not faded do\r\n    proc:choice( { owncolor:send() },\r\n                 { color2:receive() , function() update(color2) end },\r\n                 { color3:receive() , function() update(color3) end })\r\n    nb = nb + 1\r\n    if nb >= N then \r\n      faded = true\r\n    end\r\n  end\r\n  proc:send(report,nb)\r\nend",
    "type": "function"
  }, {
    "id": 10,
    "text": "local faded = false",
    "type": "statement:localassign"
  }, {
    "id": 11,
    "text": "local nb = 0",
    "type": "statement:localassign"
  }, {
    "id": 12,
    "text": "local function update(color) owncolor = complement(owncolor,color) end",
    "type": "statement:localfunction"
  }, {
    "id": 13,
    "text": "owncolor = complement(owncolor,color)",
    "type": "statement:assign"
  }, {
    "id": 14,
    "text": "while not faded do\r\n    proc:choice( { owncolor:send() },\r\n                 { color2:receive() , function() update(color2) end },\r\n                 { color3:receive() , function() update(color3) end })\r\n    nb = nb + 1\r\n    if nb >= N then \r\n      faded = true\r\n    end\r\n  end",
    "type": "statement:while"
  }, {
    "id": 15,
    "text": "proc:choice( { owncolor:send() },\r\n                 { color2:receive() , function() update(color2) end },\r\n                 { color3:receive() , function() update(color3) end })",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "update(color2)",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "update(color3)",
    "type": "statement:functioncall"
  }, {
    "id": 18,
    "text": "nb = nb + 1",
    "type": "statement:assign"
  }, {
    "id": 19,
    "text": "if nb >= N then \r\n      faded = true\r\n    end",
    "type": "statement:if"
  }, {
    "id": 20,
    "text": "faded = true",
    "type": "statement:assign"
  }, {
    "id": 21,
    "text": "proc:send(report,nb)",
    "type": "statement:functioncall"
  }, {
    "id": 22,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 23,
    "text": "local function update(color) owncolor = complement(owncolor,color) end",
    "type": "function"
  }, {
    "id": 24,
    "text": "function MeetingPlace(proc,nb,report)\r\n  local total = 0\r\n  while nb>0 do\r\n    total = total + proc:receive(report)\r\n    nb = nb - 1\r\n  end\r\n  print(total/2)\r\nend",
    "type": "function"
  }, {
    "id": 25,
    "text": "local total = 0",
    "type": "statement:localassign"
  }, {
    "id": 26,
    "text": "while nb>0 do\r\n    total = total + proc:receive(report)\r\n    nb = nb - 1\r\n  end",
    "type": "statement:while"
  }, {
    "id": 27,
    "text": "total = total + proc:receive(report)",
    "type": "statement:assign"
  }, {
    "id": 28,
    "text": "nb = nb - 1",
    "type": "statement:assign"
  }, {
    "id": 29,
    "text": "print(total/2)",
    "type": "statement:functioncall"
  }, {
    "id": 30,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 31,
    "text": "function() update(color2) end",
    "type": "function"
  }, {
    "id": 32,
    "text": "function() update(color3) end",
    "type": "function"
  }, {
    "id": 33,
    "text": "",
    "type": "function container"
  }, {
    "id": 34,
    "text": "init",
    "type": "global function"
  }, {
    "id": 35,
    "text": "tonumber",
    "type": "global function"
  }, {
    "id": 36,
    "text": "print",
    "type": "global function"
  }, {
    "id": 37,
    "text": "require",
    "type": "global function"
  }, {
    "id": 38,
    "text": "",
    "type": "global variable"
  }, {
    "id": 39,
    "text": "",
    "type": "variable container"
  }, {
    "id": 40,
    "text": "",
    "type": "require container"
  }, {
    "id": 41,
    "text": "",
    "type": "local variable"
  }, {
    "id": 42,
    "text": "",
    "type": "n/a"
  }, {
    "id": 43,
    "text": "",
    "type": "local variable"
  }, {
    "id": 44,
    "text": "",
    "type": "n/a"
  }, {
    "id": 45,
    "text": "",
    "type": "local variable"
  }, {
    "id": 46,
    "text": "",
    "type": "n/a"
  }, {
    "id": 47,
    "text": "",
    "type": "local variable"
  }, {
    "id": 48,
    "text": "",
    "type": "n/a"
  }, {
    "id": 49,
    "text": "",
    "type": "local variable"
  }, {
    "id": 50,
    "text": "",
    "type": "n/a"
  }, {
    "id": 51,
    "text": "",
    "type": "local variable"
  }, {
    "id": 52,
    "text": "",
    "type": "n/a"
  } ]
}