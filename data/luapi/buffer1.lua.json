{
  "_filename": "buffer1.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luapi/examples/buffer1.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 10,
    "label": "has",
    "to": 12
  }, {
    "from": 10,
    "label": "has",
    "to": 13
  }, {
    "from": 9,
    "label": "has",
    "to": 14
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 16,
    "label": "has",
    "to": 17
  }, {
    "from": 16,
    "label": "has",
    "to": 18
  }, {
    "from": 16,
    "label": "has",
    "to": 13
  }, {
    "from": 15,
    "label": "has",
    "to": 19
  }, {
    "from": 20,
    "label": "has",
    "to": 21
  }, {
    "from": 21,
    "label": "has",
    "to": 22
  }, {
    "from": 21,
    "label": "has",
    "to": 23
  }, {
    "from": 20,
    "label": "has",
    "to": 24
  }, {
    "from": 25,
    "label": "has",
    "to": 26
  }, {
    "from": 26,
    "label": "has",
    "to": 27
  }, {
    "from": 26,
    "label": "has",
    "to": 28
  }, {
    "from": 25,
    "label": "has",
    "to": 29
  }, {
    "from": 30,
    "label": "has",
    "to": 6
  }, {
    "from": 30,
    "label": "has",
    "to": 7
  }, {
    "from": 30,
    "label": "has",
    "to": 31
  }, {
    "from": 32,
    "label": "calls",
    "to": 35
  }, {
    "from": 32,
    "label": "calls",
    "to": 35
  }, {
    "from": 32,
    "label": "calls",
    "to": 35
  }, {
    "from": 32,
    "label": "calls",
    "to": 35
  }, {
    "from": 32,
    "label": "calls",
    "to": 38
  }, {
    "from": 32,
    "label": "calls",
    "to": 33
  }, {
    "from": 2,
    "label": "calls",
    "to": 36
  }, {
    "from": 32,
    "label": "calls",
    "to": 20
  }, {
    "from": 2,
    "label": "calls",
    "to": 37
  }, {
    "from": 9,
    "label": "calls",
    "to": 37
  }, {
    "from": 15,
    "label": "calls",
    "to": 37
  }, {
    "from": 2,
    "label": "calls",
    "to": 34
  }, {
    "from": 9,
    "label": "calls",
    "to": 34
  }, {
    "from": 9,
    "label": "calls",
    "to": 34
  }, {
    "from": 15,
    "label": "calls",
    "to": 34
  }, {
    "from": 20,
    "label": "calls",
    "to": 34
  }, {
    "from": 25,
    "label": "calls",
    "to": 34
  }, {
    "from": 32,
    "label": "calls",
    "to": 25
  }, {
    "from": 1,
    "label": "contains",
    "to": 32
  }, {
    "from": 32,
    "label": "declares",
    "to": 2
  }, {
    "from": 32,
    "label": "declares",
    "to": 9
  }, {
    "from": 32,
    "label": "declares",
    "to": 15
  }, {
    "from": 32,
    "label": "declares",
    "to": 20
  }, {
    "from": 32,
    "label": "declares",
    "to": 25
  }, {
    "from": 32,
    "label": "declares",
    "to": 30
  }, {
    "from": 1,
    "label": "contains",
    "to": 40
  }, {
    "from": 1,
    "label": "contains",
    "to": 41
  }, {
    "from": 40,
    "label": "initializes",
    "to": 42
  }, {
    "from": 42,
    "label": "assigns",
    "to": 43
  }, {
    "from": 40,
    "label": "initializes",
    "to": 44
  }, {
    "from": 44,
    "label": "assigns",
    "to": 45
  }, {
    "from": 40,
    "label": "initializes",
    "to": 46
  }, {
    "from": 46,
    "label": "assigns",
    "to": 47
  }, {
    "from": 40,
    "label": "initializes",
    "to": 48
  }, {
    "from": 48,
    "label": "assigns",
    "to": 49
  }, {
    "from": 40,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "assigns",
    "to": 51
  }, {
    "from": 40,
    "label": "initializes",
    "to": 52
  }, {
    "from": 52,
    "label": "assigns",
    "to": 53
  }, {
    "from": 40,
    "label": "initializes",
    "to": 54
  }, {
    "from": 54,
    "label": "assigns",
    "to": 55
  }, {
    "from": 41,
    "label": "initializes",
    "to": 39
  }, {
    "from": 5,
    "label": "hasArgument",
    "to": 30
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "buffer1",
    "type": "module"
  }, {
    "id": 2,
    "text": "function Cell(proc,read,write,ival)\r\n   local val = ival\r\n   while true do\r\n      proc:choice(\r\n      {write:receive(), function(nval)\r\n\t\t\t   print(\"Written: \" .. tostring(nval))\r\n\t\t\t   val = nval\r\n\t\t\tend },\r\n      {read:send(val) })()\r\n   end\r\n\t\t\t  \r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local val = ival",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "while true do\r\n      proc:choice(\r\n      {write:receive(), function(nval)\r\n\t\t\t   print(\"Written: \" .. tostring(nval))\r\n\t\t\t   val = nval\r\n\t\t\tend },\r\n      {read:send(val) })()\r\n   end",
    "type": "statement:while"
  }, {
    "id": 5,
    "text": "proc:choice(\r\n      {write:receive(), function(nval)\r\n\t\t\t   print(\"Written: \" .. tostring(nval))\r\n\t\t\t   val = nval\r\n\t\t\tend },\r\n      {read:send(val) })()",
    "type": "statement:functioncall"
  }, {
    "id": 6,
    "text": "print(\"Written: \" .. tostring(nval))",
    "type": "statement:functioncall"
  }, {
    "id": 7,
    "text": "val = nval",
    "type": "statement:assign"
  }, {
    "id": 8,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 9,
    "text": "function Reader(proc,read,fuel)\r\n   while fuel>0 do\r\n      local val = proc:receive(read)\r\n      print(\"Reader reads: \" .. tostring(val) .. \" (fuel=\" .. tostring(fuel) .. \")\")\r\n      fuel = fuel - 1\r\n   end\r\nend",
    "type": "function"
  }, {
    "id": 10,
    "text": "while fuel>0 do\r\n      local val = proc:receive(read)\r\n      print(\"Reader reads: \" .. tostring(val) .. \" (fuel=\" .. tostring(fuel) .. \")\")\r\n      fuel = fuel - 1\r\n   end",
    "type": "statement:while"
  }, {
    "id": 11,
    "text": "local val = proc:receive(read)",
    "type": "statement:localassign"
  }, {
    "id": 12,
    "text": "print(\"Reader reads: \" .. tostring(val) .. \" (fuel=\" .. tostring(fuel) .. \")\")",
    "type": "statement:functioncall"
  }, {
    "id": 13,
    "text": "fuel = fuel - 1",
    "type": "statement:assign"
  }, {
    "id": 14,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 15,
    "text": "function Writer(proc,write,num,fuel)\r\n   while fuel>0 do\r\n      proc:send(write,num)\r\n      print(\"Writer writes: \" .. tostring(num))\r\n      fuel = fuel - 1\r\n   end\r\nend",
    "type": "function"
  }, {
    "id": 16,
    "text": "while fuel>0 do\r\n      proc:send(write,num)\r\n      print(\"Writer writes: \" .. tostring(num))\r\n      fuel = fuel - 1\r\n   end",
    "type": "statement:while"
  }, {
    "id": 17,
    "text": "proc:send(write,num)",
    "type": "statement:functioncall"
  }, {
    "id": 18,
    "text": "print(\"Writer writes: \" .. tostring(num))",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 20,
    "text": "function SpawnReaders(agent,nbR,read,fuel)\r\n   while nbR >0 do\r\n      agent:spawn(\"Reader\"..tostring(nbR),Reader,read,fuel)\r\n      nbR = nbR - 1\r\n   end\r\nend",
    "type": "function"
  }, {
    "id": 21,
    "text": "while nbR >0 do\r\n      agent:spawn(\"Reader\"..tostring(nbR),Reader,read,fuel)\r\n      nbR = nbR - 1\r\n   end",
    "type": "statement:while"
  }, {
    "id": 22,
    "text": "agent:spawn(\"Reader\"..tostring(nbR),Reader,read,fuel)",
    "type": "statement:functioncall"
  }, {
    "id": 23,
    "text": "nbR = nbR - 1",
    "type": "statement:assign"
  }, {
    "id": 24,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 25,
    "text": "function SpawnWriters(agent,nbW,write,fuel)\r\n   while nbW > 0 do\r\n      agent:spawn(\"Writer\"..tostring(nbW),Writer,write,nbW,fuel)\r\n      nbW = nbW - 1\r\n   end\r\nend",
    "type": "function"
  }, {
    "id": 26,
    "text": "while nbW > 0 do\r\n      agent:spawn(\"Writer\"..tostring(nbW),Writer,write,nbW,fuel)\r\n      nbW = nbW - 1\r\n   end",
    "type": "statement:while"
  }, {
    "id": 27,
    "text": "agent:spawn(\"Writer\"..tostring(nbW),Writer,write,nbW,fuel)",
    "type": "statement:functioncall"
  }, {
    "id": 28,
    "text": "nbW = nbW - 1",
    "type": "statement:assign"
  }, {
    "id": 29,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 30,
    "text": "function(nval)\r\n\t\t\t   print(\"Written: \" .. tostring(nval))\r\n\t\t\t   val = nval\r\n\t\t\tend",
    "type": "function"
  }, {
    "id": 31,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 32,
    "text": "",
    "type": "function container"
  }, {
    "id": 33,
    "text": "init",
    "type": "global function"
  }, {
    "id": 34,
    "text": "tostring",
    "type": "global function"
  }, {
    "id": 35,
    "text": "tonumber",
    "type": "global function"
  }, {
    "id": 36,
    "text": "procchoice",
    "type": "global function"
  }, {
    "id": 37,
    "text": "print",
    "type": "global function"
  }, {
    "id": 38,
    "text": "require",
    "type": "global function"
  }, {
    "id": 39,
    "text": "",
    "type": "global variable"
  }, {
    "id": 40,
    "text": "",
    "type": "variable container"
  }, {
    "id": 41,
    "text": "",
    "type": "require container"
  }, {
    "id": 42,
    "text": "",
    "type": "local variable"
  }, {
    "id": 43,
    "text": "",
    "type": "n/a"
  }, {
    "id": 44,
    "text": "",
    "type": "local variable"
  }, {
    "id": 45,
    "text": "",
    "type": "n/a"
  }, {
    "id": 46,
    "text": "",
    "type": "global variable"
  }, {
    "id": 47,
    "text": "",
    "type": "n/a"
  }, {
    "id": 48,
    "text": "",
    "type": "global variable"
  }, {
    "id": 49,
    "text": "",
    "type": "n/a"
  }, {
    "id": 50,
    "text": "",
    "type": "global variable"
  }, {
    "id": 51,
    "text": "",
    "type": "n/a"
  }, {
    "id": 52,
    "text": "",
    "type": "global variable"
  }, {
    "id": 53,
    "text": "",
    "type": "n/a"
  }, {
    "id": 54,
    "text": "",
    "type": "global variable"
  }, {
    "id": 55,
    "text": "",
    "type": "n/a"
  } ]
}