{
  "_filename": "bclock2.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luapi/examples/bclock2.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 4,
    "label": "has",
    "to": 6
  }, {
    "from": 6,
    "label": "has",
    "to": 7
  }, {
    "from": 6,
    "label": "has",
    "to": 8
  }, {
    "from": 6,
    "label": "has",
    "to": 9
  }, {
    "from": 6,
    "label": "has",
    "to": 10
  }, {
    "from": 6,
    "label": "has",
    "to": 11
  }, {
    "from": 4,
    "label": "has",
    "to": 12
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 14,
    "label": "has",
    "to": 15
  }, {
    "from": 14,
    "label": "has",
    "to": 16
  }, {
    "from": 16,
    "label": "has",
    "to": 17
  }, {
    "from": 16,
    "label": "has",
    "to": 18
  }, {
    "from": 14,
    "label": "has",
    "to": 19
  }, {
    "from": 14,
    "label": "has",
    "to": 20
  }, {
    "from": 13,
    "label": "has",
    "to": 21
  }, {
    "from": 22,
    "label": "has",
    "to": 23
  }, {
    "from": 23,
    "label": "has",
    "to": 24
  }, {
    "from": 23,
    "label": "has",
    "to": 25
  }, {
    "from": 23,
    "label": "has",
    "to": 26
  }, {
    "from": 23,
    "label": "has",
    "to": 27
  }, {
    "from": 22,
    "label": "has",
    "to": 28
  }, {
    "from": 29,
    "label": "calls",
    "to": 33
  }, {
    "from": 29,
    "label": "calls",
    "to": 33
  }, {
    "from": 29,
    "label": "calls",
    "to": 30
  }, {
    "from": 29,
    "label": "calls",
    "to": 31
  }, {
    "from": 29,
    "label": "calls",
    "to": 35
  }, {
    "from": 29,
    "label": "calls",
    "to": 35
  }, {
    "from": 4,
    "label": "calls",
    "to": 32
  }, {
    "from": 22,
    "label": "calls",
    "to": 32
  }, {
    "from": 22,
    "label": "calls",
    "to": 32
  }, {
    "from": 22,
    "label": "calls",
    "to": 32
  }, {
    "from": 4,
    "label": "calls",
    "to": 34
  }, {
    "from": 22,
    "label": "calls",
    "to": 34
  }, {
    "from": 22,
    "label": "calls",
    "to": 34
  }, {
    "from": 29,
    "label": "calls",
    "to": 34
  }, {
    "from": 1,
    "label": "contains",
    "to": 29
  }, {
    "from": 29,
    "label": "declares",
    "to": 4
  }, {
    "from": 29,
    "label": "declares",
    "to": 13
  }, {
    "from": 29,
    "label": "declares",
    "to": 22
  }, {
    "from": 1,
    "label": "contains",
    "to": 36
  }, {
    "from": 1,
    "label": "contains",
    "to": 37
  }, {
    "from": 36,
    "label": "initializes",
    "to": 38
  }, {
    "from": 38,
    "label": "assigns",
    "to": 39
  }, {
    "from": 36,
    "label": "initializes",
    "to": 40
  }, {
    "from": 40,
    "label": "assigns",
    "to": 41
  }, {
    "from": 36,
    "label": "initializes",
    "to": 42
  }, {
    "from": 42,
    "label": "assigns",
    "to": 43
  }, {
    "from": 36,
    "label": "initializes",
    "to": 44
  }, {
    "from": 44,
    "label": "assigns",
    "to": 45
  }, {
    "from": 36,
    "label": "initializes",
    "to": 46
  }, {
    "from": 46,
    "label": "assigns",
    "to": 47
  }, {
    "from": 36,
    "label": "initializes",
    "to": 48
  }, {
    "from": 48,
    "label": "assigns",
    "to": 49
  }, {
    "from": 37,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 37,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 3
  }, {
    "from": 51,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 52,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 53,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 54,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 55,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 56,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 57,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 58,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 59,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 60,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 60,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 3
  }, {
    "from": 61,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 62,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 63,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 63,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 3
  }, {
    "from": 64,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 65,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 66,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 67,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 68,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 68,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 3
  }, {
    "from": 69,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 70,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 70,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 3
  }, {
    "from": 71,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 72,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 73,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 74,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 75,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 2
  }, {
    "from": 76,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 3
  }, {
    "from": 77,
    "label": "initializes",
    "to": 50
  }, {
    "from": 50,
    "label": "requires",
    "to": 3
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "bclock2",
    "type": "module"
  }, {
    "id": 2,
    "text": "pithreads",
    "type": "module"
  }, {
    "id": 3,
    "text": "utils",
    "type": "module"
  }, {
    "id": 4,
    "text": "function Clock(proc,clock,init,fuel,clockstart)\r\n  local tick = init\r\n  while fuel>0 do\r\n    -- first wait so that the receivers are ready\r\n    proc:wait(clockstart)\r\n    print(\"Tick #\" .. tostring(tick))\r\n    proc:bcast(clock,tick)\r\n    tick = tick + 1\r\n    fuel = fuel - 1\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 5,
    "text": "local tick = init",
    "type": "statement:localassign"
  }, {
    "id": 6,
    "text": "while fuel>0 do\r\n    -- first wait so that the receivers are ready\r\n    proc:wait(clockstart)\r\n    print(\"Tick #\" .. tostring(tick))\r\n    proc:bcast(clock,tick)\r\n    tick = tick + 1\r\n    fuel = fuel - 1\r\n  end",
    "type": "statement:while"
  }, {
    "id": 7,
    "text": "proc:wait(clockstart)",
    "type": "statement:functioncall"
  }, {
    "id": 8,
    "text": "print(\"Tick #\" .. tostring(tick))",
    "type": "statement:functioncall"
  }, {
    "id": 9,
    "text": "proc:bcast(clock,tick)",
    "type": "statement:functioncall"
  }, {
    "id": 10,
    "text": "tick = tick + 1",
    "type": "statement:assign"
  }, {
    "id": 11,
    "text": "fuel = fuel - 1",
    "type": "statement:assign"
  }, {
    "id": 12,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 13,
    "text": "function Barrier(proc,clockstart,ready,nbreceivers)\r\n  while true do\r\n    local i = nbreceivers\r\n    while i>0 do\r\n      proc:wait(ready)\r\n      i = i - 1\r\n    end\r\n    proc:yield() -- this is important to ensure the\r\n                 -- receivers have a chance to do their listening\r\n                 -- note that this trick is scheduling-dependent\r\n                 -- and here works because we use a home-made scheduler\r\n                 -- with system-level threads this would not work\r\n    proc:signal(clockstart)\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 14,
    "text": "while true do\r\n    local i = nbreceivers\r\n    while i>0 do\r\n      proc:wait(ready)\r\n      i = i - 1\r\n    end\r\n    proc:yield() -- this is important to ensure the\r\n                 -- receivers have a chance to do their listening\r\n                 -- note that this trick is scheduling-dependent\r\n                 -- and here works because we use a home-made scheduler\r\n                 -- with system-level threads this would not work\r\n    proc:signal(clockstart)\r\n  end",
    "type": "statement:while"
  }, {
    "id": 15,
    "text": "local i = nbreceivers",
    "type": "statement:localassign"
  }, {
    "id": 16,
    "text": "while i>0 do\r\n      proc:wait(ready)\r\n      i = i - 1\r\n    end",
    "type": "statement:while"
  }, {
    "id": 17,
    "text": "proc:wait(ready)",
    "type": "statement:functioncall"
  }, {
    "id": 18,
    "text": "i = i - 1",
    "type": "statement:assign"
  }, {
    "id": 19,
    "text": "proc:yield()",
    "type": "statement:functioncall"
  }, {
    "id": 20,
    "text": "proc:signal(clockstart)",
    "type": "statement:functioncall"
  }, {
    "id": 21,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 22,
    "text": "function Receiver(proc,id,clock,ready)\r\n  while true do\r\n    proc:signal(ready)\r\n    print(\"Receiver #\" ..tostring(id)..\" listens\")\r\n    local count = proc:listen(clock)\r\n    print(\"Receiver #\" ..tostring(id)..\" listened tick #\"..tostring(count))\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 23,
    "text": "while true do\r\n    proc:signal(ready)\r\n    print(\"Receiver #\" ..tostring(id)..\" listens\")\r\n    local count = proc:listen(clock)\r\n    print(\"Receiver #\" ..tostring(id)..\" listened tick #\"..tostring(count))\r\n  end",
    "type": "statement:while"
  }, {
    "id": 24,
    "text": "proc:signal(ready)",
    "type": "statement:functioncall"
  }, {
    "id": 25,
    "text": "print(\"Receiver #\" ..tostring(id)..\" listens\")",
    "type": "statement:functioncall"
  }, {
    "id": 26,
    "text": "local count = proc:listen(clock)",
    "type": "statement:localassign"
  }, {
    "id": 27,
    "text": "print(\"Receiver #\" ..tostring(id)..\" listened tick #\"..tostring(count))",
    "type": "statement:functioncall"
  }, {
    "id": 28,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 29,
    "text": "",
    "type": "function container"
  }, {
    "id": 30,
    "text": "function replicate(agent,procname,n,procfun,...)\r\n  --DEBUG(agent,\"replicate with arguments\",...)  \r\n  for i=1,n do\r\n    agent:spawn(procname..tostring(i),procfun,i,...)\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 31,
    "text": "init",
    "type": "global function"
  }, {
    "id": 32,
    "text": "tostring",
    "type": "global function"
  }, {
    "id": 33,
    "text": "tonumber",
    "type": "global function"
  }, {
    "id": 34,
    "text": "print",
    "type": "global function"
  }, {
    "id": 35,
    "text": "require",
    "type": "global function"
  }, {
    "id": 36,
    "text": "",
    "type": "variable container"
  }, {
    "id": 37,
    "text": "",
    "type": "require container"
  }, {
    "id": 38,
    "text": "",
    "type": "global variable"
  }, {
    "id": 39,
    "text": "",
    "type": "n/a"
  }, {
    "id": 40,
    "text": "",
    "type": "global variable"
  }, {
    "id": 41,
    "text": "",
    "type": "n/a"
  }, {
    "id": 42,
    "text": "",
    "type": "global variable"
  }, {
    "id": 43,
    "text": "",
    "type": "n/a"
  }, {
    "id": 44,
    "text": "",
    "type": "global variable"
  }, {
    "id": 45,
    "text": "",
    "type": "n/a"
  }, {
    "id": 46,
    "text": "",
    "type": "global variable"
  }, {
    "id": 47,
    "text": "",
    "type": "n/a"
  }, {
    "id": 48,
    "text": "",
    "type": "global variable"
  }, {
    "id": 49,
    "text": "",
    "type": "n/a"
  }, {
    "id": 50,
    "text": "",
    "type": "global variable"
  }, {
    "id": 51,
    "text": "",
    "type": "require container"
  }, {
    "id": 52,
    "text": "",
    "type": "require container"
  }, {
    "id": 53,
    "text": "",
    "type": "require container"
  }, {
    "id": 54,
    "text": "",
    "type": "require container"
  }, {
    "id": 55,
    "text": "",
    "type": "require container"
  }, {
    "id": 56,
    "text": "",
    "type": "require container"
  }, {
    "id": 57,
    "text": "",
    "type": "require container"
  }, {
    "id": 58,
    "text": "",
    "type": "require container"
  }, {
    "id": 59,
    "text": "",
    "type": "require container"
  }, {
    "id": 60,
    "text": "",
    "type": "require container"
  }, {
    "id": 61,
    "text": "",
    "type": "require container"
  }, {
    "id": 62,
    "text": "",
    "type": "require container"
  }, {
    "id": 63,
    "text": "",
    "type": "require container"
  }, {
    "id": 64,
    "text": "",
    "type": "require container"
  }, {
    "id": 65,
    "text": "",
    "type": "require container"
  }, {
    "id": 66,
    "text": "",
    "type": "require container"
  }, {
    "id": 67,
    "text": "",
    "type": "require container"
  }, {
    "id": 68,
    "text": "",
    "type": "require container"
  }, {
    "id": 69,
    "text": "",
    "type": "require container"
  }, {
    "id": 70,
    "text": "",
    "type": "require container"
  }, {
    "id": 71,
    "text": "",
    "type": "require container"
  }, {
    "id": 72,
    "text": "",
    "type": "require container"
  }, {
    "id": 73,
    "text": "",
    "type": "require container"
  }, {
    "id": 74,
    "text": "",
    "type": "require container"
  }, {
    "id": 75,
    "text": "",
    "type": "require container"
  }, {
    "id": 76,
    "text": "",
    "type": "require container"
  }, {
    "id": 77,
    "text": "",
    "type": "require container"
  } ]
}