{
  "_filename": "rdv.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luapi/examples/rdv.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 5,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 9
  }, {
    "from": 2,
    "label": "has",
    "to": 10
  }, {
    "from": 2,
    "label": "has",
    "to": 11
  }, {
    "from": 2,
    "label": "has",
    "to": 12
  }, {
    "from": 13,
    "label": "has",
    "to": 3
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 13,
    "label": "has",
    "to": 15
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 13,
    "label": "has",
    "to": 17
  }, {
    "from": 18,
    "label": "has",
    "to": 19
  }, {
    "from": 18,
    "label": "has",
    "to": 20
  }, {
    "from": 18,
    "label": "has",
    "to": 21
  }, {
    "from": 18,
    "label": "has",
    "to": 22
  }, {
    "from": 18,
    "label": "has",
    "to": 23
  }, {
    "from": 18,
    "label": "has",
    "to": 24
  }, {
    "from": 18,
    "label": "has",
    "to": 25
  }, {
    "from": 26,
    "label": "calls",
    "to": 30
  }, {
    "from": 26,
    "label": "calls",
    "to": 30
  }, {
    "from": 26,
    "label": "calls",
    "to": 27
  }, {
    "from": 2,
    "label": "calls",
    "to": 13
  }, {
    "from": 13,
    "label": "calls",
    "to": 31
  }, {
    "from": 18,
    "label": "calls",
    "to": 31
  }, {
    "from": 18,
    "label": "calls",
    "to": 31
  }, {
    "from": 26,
    "label": "calls",
    "to": 31
  }, {
    "from": 26,
    "label": "calls",
    "to": 32
  }, {
    "from": 26,
    "label": "calls",
    "to": 32
  }, {
    "from": 2,
    "label": "calls",
    "to": 29
  }, {
    "from": 2,
    "label": "calls",
    "to": 29
  }, {
    "from": 26,
    "label": "calls",
    "to": 29
  }, {
    "from": 26,
    "label": "calls",
    "to": 28
  }, {
    "from": 1,
    "label": "contains",
    "to": 26
  }, {
    "from": 26,
    "label": "declares",
    "to": 2
  }, {
    "from": 26,
    "label": "declares",
    "to": 13
  }, {
    "from": 26,
    "label": "declares",
    "to": 18
  }, {
    "from": 1,
    "label": "contains",
    "to": 34
  }, {
    "from": 1,
    "label": "contains",
    "to": 35
  }, {
    "from": 34,
    "label": "initializes",
    "to": 36
  }, {
    "from": 36,
    "label": "assigns",
    "to": 37
  }, {
    "from": 34,
    "label": "initializes",
    "to": 38
  }, {
    "from": 38,
    "label": "assigns",
    "to": 39
  }, {
    "from": 34,
    "label": "initializes",
    "to": 40
  }, {
    "from": 34,
    "label": "initializes",
    "to": 41
  }, {
    "from": 41,
    "label": "assigns",
    "to": 42
  }, {
    "from": 34,
    "label": "initializes",
    "to": 43
  }, {
    "from": 43,
    "label": "assigns",
    "to": 44
  }, {
    "from": 35,
    "label": "initializes",
    "to": 33
  }, {
    "from": 35,
    "label": "initializes",
    "to": 33
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "rdv",
    "type": "module"
  }, {
    "id": 2,
    "text": "function RDVRegister(proc,reg,nb)\r\n  local n = nb\r\n  local rdv = proc:new(\"rdv\"..tostring(RDVcount))\r\n  while n>0 do\r\n    local init = proc:receive(reg)\r\n    proc:send(init,rdv)\r\n    n = n - 1\r\n  end\r\n  RDVcount = RDVcount + 1\r\n  proc:spawn(\"RendezVous\"..tostring(RDVcount),RDVRegister,reg,nb)\r\n  RendezVous(proc,rdv,nb)\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local n = nb",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "local rdv = proc:new(\"rdv\"..tostring(RDVcount))",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "while n>0 do\r\n    local init = proc:receive(reg)\r\n    proc:send(init,rdv)\r\n    n = n - 1\r\n  end",
    "type": "statement:while"
  }, {
    "id": 6,
    "text": "local init = proc:receive(reg)",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "proc:send(init,rdv)",
    "type": "statement:functioncall"
  }, {
    "id": 8,
    "text": "n = n - 1",
    "type": "statement:assign"
  }, {
    "id": 9,
    "text": "RDVcount = RDVcount + 1",
    "type": "statement:assign"
  }, {
    "id": 10,
    "text": "proc:spawn(\"RendezVous\"..tostring(RDVcount),RDVRegister,reg,nb)",
    "type": "statement:functioncall"
  }, {
    "id": 11,
    "text": "RendezVous(proc,rdv,nb)",
    "type": "statement:functioncall"
  }, {
    "id": 12,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 13,
    "text": "function RendezVous(proc,rdv,nb)\r\n  local n = nb\r\n  print(proc.name .. \" activation\")\r\n  while n > 0 do\r\n    proc:send(rdv)\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 14,
    "text": "print(proc.name .. \" activation\")",
    "type": "statement:functioncall"
  }, {
    "id": 15,
    "text": "while n > 0 do\r\n    proc:send(rdv)\r\n  end",
    "type": "statement:while"
  }, {
    "id": 16,
    "text": "proc:send(rdv)",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 18,
    "text": "function Participant(proc,n,reg)\r\n  local init = proc:new(\"init-\"..proc.name)\r\n  proc:send(reg,init)\r\n  local rdv = proc:receive(init)\r\n  print(\"Participant \"..proc.name..\" registered\")\r\n  proc:receive(rdv)\r\n  print(\"Partipant \"..proc.name..\" joined\")\r\nend",
    "type": "function"
  }, {
    "id": 19,
    "text": "local init = proc:new(\"init-\"..proc.name)",
    "type": "statement:localassign"
  }, {
    "id": 20,
    "text": "proc:send(reg,init)",
    "type": "statement:functioncall"
  }, {
    "id": 21,
    "text": "local rdv = proc:receive(init)",
    "type": "statement:localassign"
  }, {
    "id": 22,
    "text": "print(\"Participant \"..proc.name..\" registered\")",
    "type": "statement:functioncall"
  }, {
    "id": 23,
    "text": "proc:receive(rdv)",
    "type": "statement:functioncall"
  }, {
    "id": 24,
    "text": "print(\"Partipant \"..proc.name..\" joined\")",
    "type": "statement:functioncall"
  }, {
    "id": 25,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 26,
    "text": "",
    "type": "function container"
  }, {
    "id": 27,
    "text": "function replicate(agent,procname,n,procfun,...)\r\n  --DEBUG(agent,\"replicate with arguments\",...)  \r\n  for i=1,n do\r\n    agent:spawn(procname..tostring(i),procfun,i,...)\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 28,
    "text": "init",
    "type": "global function"
  }, {
    "id": 29,
    "text": "tostring",
    "type": "global function"
  }, {
    "id": 30,
    "text": "tonumber",
    "type": "global function"
  }, {
    "id": 31,
    "text": "print",
    "type": "global function"
  }, {
    "id": 32,
    "text": "require",
    "type": "global function"
  }, {
    "id": 33,
    "text": "",
    "type": "global variable"
  }, {
    "id": 34,
    "text": "",
    "type": "variable container"
  }, {
    "id": 35,
    "text": "",
    "type": "require container"
  }, {
    "id": 36,
    "text": "",
    "type": "global variable"
  }, {
    "id": 37,
    "text": "",
    "type": "n/a"
  }, {
    "id": 38,
    "text": "",
    "type": "global variable"
  }, {
    "id": 39,
    "text": "",
    "type": "n/a"
  }, {
    "id": 40,
    "text": "",
    "type": "global variable"
  }, {
    "id": 41,
    "text": "",
    "type": "global variable"
  }, {
    "id": 42,
    "text": "",
    "type": "n/a"
  }, {
    "id": 43,
    "text": "",
    "type": "global variable"
  }, {
    "id": 44,
    "text": "",
    "type": "n/a"
  } ]
}