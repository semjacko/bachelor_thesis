{
  "_filename": "bclock.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luapi/examples/tutorial/bclock.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 3,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 8,
    "label": "has",
    "to": 11
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 12,
    "label": "has",
    "to": 14
  }, {
    "from": 15,
    "label": "calls",
    "to": 17
  }, {
    "from": 15,
    "label": "calls",
    "to": 17
  }, {
    "from": 15,
    "label": "calls",
    "to": 16
  }, {
    "from": 2,
    "label": "calls",
    "to": 19
  }, {
    "from": 15,
    "label": "calls",
    "to": 20
  }, {
    "from": 2,
    "label": "calls",
    "to": 18
  }, {
    "from": 15,
    "label": "calls",
    "to": 18
  }, {
    "from": 1,
    "label": "contains",
    "to": 15
  }, {
    "from": 15,
    "label": "declares",
    "to": 2
  }, {
    "from": 15,
    "label": "declares",
    "to": 8
  }, {
    "from": 15,
    "label": "declares",
    "to": 12
  }, {
    "from": 1,
    "label": "contains",
    "to": 22
  }, {
    "from": 1,
    "label": "contains",
    "to": 23
  }, {
    "from": 22,
    "label": "initializes",
    "to": 24
  }, {
    "from": 24,
    "label": "assigns",
    "to": 25
  }, {
    "from": 22,
    "label": "initializes",
    "to": 26
  }, {
    "from": 26,
    "label": "assigns",
    "to": 27
  }, {
    "from": 22,
    "label": "initializes",
    "to": 28
  }, {
    "from": 28,
    "label": "assigns",
    "to": 29
  }, {
    "from": 22,
    "label": "initializes",
    "to": 30
  }, {
    "from": 30,
    "label": "assigns",
    "to": 31
  }, {
    "from": 23,
    "label": "initializes",
    "to": 21
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "bclock",
    "type": "module"
  }, {
    "id": 2,
    "text": "function Worker(thread,id,tick,work)\r\n  while true do\r\n    -- wait for the next tick\r\n    local count = thread:listen(tick)\r\n    print(thread.name,\"Tick #\",count,\" received\")\r\n    -- perform some work\r\n    work(thread,id,count)\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "while true do\r\n    -- wait for the next tick\r\n    local count = thread:listen(tick)\r\n    print(thread.name,\"Tick #\",count,\" received\")\r\n    -- perform some work\r\n    work(thread,id,count)\r\n  end",
    "type": "statement:while"
  }, {
    "id": 4,
    "text": "local count = thread:listen(tick)",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "print(thread.name,\"Tick #\",count,\" received\")",
    "type": "statement:functioncall"
  }, {
    "id": 6,
    "text": "work(thread,id,count)",
    "type": "statement:functioncall"
  }, {
    "id": 7,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 8,
    "text": "function Clock(thread,tick,ttl)\r\n  for count=1,ttl do\r\n    -- emit the tick\r\n    thread:bcast(tick,count)\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 9,
    "text": "for count=1,ttl do\r\n    -- emit the tick\r\n    thread:bcast(tick,count)\r\n  end",
    "type": "statement:numericfor"
  }, {
    "id": 10,
    "text": "thread:bcast(tick,count)",
    "type": "statement:functioncall"
  }, {
    "id": 11,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 12,
    "text": "function(thread,id,tick)\r\n                  print(\"Worker #\",id,\" works at tick=\",tick)\r\n                end",
    "type": "function"
  }, {
    "id": 13,
    "text": "print(\"Worker #\",id,\" works at tick=\",tick)",
    "type": "statement:functioncall"
  }, {
    "id": 14,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 15,
    "text": "",
    "type": "function container"
  }, {
    "id": 16,
    "text": "init",
    "type": "global function"
  }, {
    "id": 17,
    "text": "tonumber",
    "type": "global function"
  }, {
    "id": 18,
    "text": "print",
    "type": "global function"
  }, {
    "id": 19,
    "text": "work",
    "type": "global function"
  }, {
    "id": 20,
    "text": "require",
    "type": "global function"
  }, {
    "id": 21,
    "text": "",
    "type": "global variable"
  }, {
    "id": 22,
    "text": "",
    "type": "variable container"
  }, {
    "id": 23,
    "text": "",
    "type": "require container"
  }, {
    "id": 24,
    "text": "",
    "type": "global variable"
  }, {
    "id": 25,
    "text": "",
    "type": "n/a"
  }, {
    "id": 26,
    "text": "",
    "type": "global variable"
  }, {
    "id": 27,
    "text": "",
    "type": "n/a"
  }, {
    "id": 28,
    "text": "",
    "type": "global variable"
  }, {
    "id": 29,
    "text": "",
    "type": "n/a"
  }, {
    "id": 30,
    "text": "",
    "type": "global variable"
  }, {
    "id": 31,
    "text": "",
    "type": "n/a"
  } ]
}