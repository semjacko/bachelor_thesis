{
  "_filename": "writers.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luapi/examples/writers.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 7,
    "label": "has",
    "to": 9
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 9,
    "label": "has",
    "to": 11
  }, {
    "from": 7,
    "label": "has",
    "to": 12
  }, {
    "from": 13,
    "label": "calls",
    "to": 17
  }, {
    "from": 13,
    "label": "calls",
    "to": 17
  }, {
    "from": 13,
    "label": "calls",
    "to": 14
  }, {
    "from": 13,
    "label": "calls",
    "to": 15
  }, {
    "from": 13,
    "label": "calls",
    "to": 19
  }, {
    "from": 2,
    "label": "calls",
    "to": 16
  }, {
    "from": 7,
    "label": "calls",
    "to": 16
  }, {
    "from": 2,
    "label": "calls",
    "to": 18
  }, {
    "from": 13,
    "label": "calls",
    "to": 18
  }, {
    "from": 1,
    "label": "contains",
    "to": 13
  }, {
    "from": 13,
    "label": "declares",
    "to": 2
  }, {
    "from": 13,
    "label": "declares",
    "to": 7
  }, {
    "from": 1,
    "label": "contains",
    "to": 21
  }, {
    "from": 1,
    "label": "contains",
    "to": 22
  }, {
    "from": 21,
    "label": "initializes",
    "to": 23
  }, {
    "from": 23,
    "label": "assigns",
    "to": 24
  }, {
    "from": 21,
    "label": "initializes",
    "to": 25
  }, {
    "from": 25,
    "label": "assigns",
    "to": 26
  }, {
    "from": 21,
    "label": "initializes",
    "to": 27
  }, {
    "from": 27,
    "label": "assigns",
    "to": 28
  }, {
    "from": 21,
    "label": "initializes",
    "to": 29
  }, {
    "from": 29,
    "label": "assigns",
    "to": 30
  }, {
    "from": 22,
    "label": "initializes",
    "to": 20
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "writers",
    "type": "module"
  }, {
    "id": 2,
    "text": "function Reader(proc,chan,nb)\r\n  for i=1,nb do\r\n    local m,id = proc:receive(chan)\r\n    print(\"Receiver: receives message '\" .. m .. \"' from writer #\" .. tostring(id))\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "for i=1,nb do\r\n    local m,id = proc:receive(chan)\r\n    print(\"Receiver: receives message '\" .. m .. \"' from writer #\" .. tostring(id))\r\n  end",
    "type": "statement:numericfor"
  }, {
    "id": 4,
    "text": "local m,id = proc:receive(chan)",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "print(\"Receiver: receives message '\" .. m .. \"' from writer #\" .. tostring(id))",
    "type": "statement:functioncall"
  }, {
    "id": 6,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 7,
    "text": "function Writer(proc,id,chan,msg)\r\n  local count = 1\r\n  while true do\r\n    proc:send(chan,msg .. \"#\" .. tostring(count),id)\r\n    count = count + 1\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 8,
    "text": "local count = 1",
    "type": "statement:localassign"
  }, {
    "id": 9,
    "text": "while true do\r\n    proc:send(chan,msg .. \"#\" .. tostring(count),id)\r\n    count = count + 1\r\n  end",
    "type": "statement:while"
  }, {
    "id": 10,
    "text": "proc:send(chan,msg .. \"#\" .. tostring(count),id)",
    "type": "statement:functioncall"
  }, {
    "id": 11,
    "text": "count = count + 1",
    "type": "statement:assign"
  }, {
    "id": 12,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 13,
    "text": "",
    "type": "function container"
  }, {
    "id": 14,
    "text": "function replicate(agent,procname,n,procfun,...)\r\n  --DEBUG(agent,\"replicate with arguments\",...)  \r\n  for i=1,n do\r\n    agent:spawn(procname..tostring(i),procfun,i,...)\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 15,
    "text": "init",
    "type": "global function"
  }, {
    "id": 16,
    "text": "tostring",
    "type": "global function"
  }, {
    "id": 17,
    "text": "tonumber",
    "type": "global function"
  }, {
    "id": 18,
    "text": "print",
    "type": "global function"
  }, {
    "id": 19,
    "text": "require",
    "type": "global function"
  }, {
    "id": 20,
    "text": "",
    "type": "global variable"
  }, {
    "id": 21,
    "text": "",
    "type": "variable container"
  }, {
    "id": 22,
    "text": "",
    "type": "require container"
  }, {
    "id": 23,
    "text": "",
    "type": "global variable"
  }, {
    "id": 24,
    "text": "",
    "type": "n/a"
  }, {
    "id": 25,
    "text": "",
    "type": "global variable"
  }, {
    "id": 26,
    "text": "",
    "type": "n/a"
  }, {
    "id": 27,
    "text": "",
    "type": "global variable"
  }, {
    "id": 28,
    "text": "",
    "type": "n/a"
  }, {
    "id": 29,
    "text": "",
    "type": "global variable"
  }, {
    "id": 30,
    "text": "",
    "type": "n/a"
  } ]
}