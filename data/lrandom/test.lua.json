{
  "_filename": "test.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/lrandom/test.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 7,
    "label": "has",
    "to": 9
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 5,
    "label": "has",
    "to": 11
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 5,
    "label": "has",
    "to": 13
  }, {
    "from": 5,
    "label": "has",
    "to": 14
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 15,
    "label": "has",
    "to": 17
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 15,
    "label": "has",
    "to": 19
  }, {
    "from": 15,
    "label": "has",
    "to": 20
  }, {
    "from": 15,
    "label": "has",
    "to": 21
  }, {
    "from": 22,
    "label": "has",
    "to": 23
  }, {
    "from": 24,
    "label": "has",
    "to": 23
  }, {
    "from": 25,
    "label": "has",
    "to": 23
  }, {
    "from": 2,
    "label": "calls",
    "to": 31
  }, {
    "from": 26,
    "label": "calls",
    "to": 32
  }, {
    "from": 2,
    "label": "calls",
    "to": 33
  }, {
    "from": 2,
    "label": "calls",
    "to": 33
  }, {
    "from": 26,
    "label": "calls",
    "to": 35
  }, {
    "from": 26,
    "label": "calls",
    "to": 35
  }, {
    "from": 2,
    "label": "calls",
    "to": 35
  }, {
    "from": 26,
    "label": "calls",
    "to": 35
  }, {
    "from": 26,
    "label": "calls",
    "to": 35
  }, {
    "from": 26,
    "label": "calls",
    "to": 35
  }, {
    "from": 2,
    "label": "calls",
    "to": 35
  }, {
    "from": 2,
    "label": "calls",
    "to": 35
  }, {
    "from": 26,
    "label": "calls",
    "to": 35
  }, {
    "from": 26,
    "label": "calls",
    "to": 35
  }, {
    "from": 26,
    "label": "calls",
    "to": 35
  }, {
    "from": 26,
    "label": "calls",
    "to": 35
  }, {
    "from": 2,
    "label": "calls",
    "to": 36
  }, {
    "from": 2,
    "label": "calls",
    "to": 36
  }, {
    "from": 26,
    "label": "calls",
    "to": 29
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 26,
    "label": "calls",
    "to": 2
  }, {
    "from": 2,
    "label": "calls",
    "to": 34
  }, {
    "from": 2,
    "label": "calls",
    "to": 34
  }, {
    "from": 2,
    "label": "calls",
    "to": 34
  }, {
    "from": 26,
    "label": "calls",
    "to": 37
  }, {
    "from": 26,
    "label": "calls",
    "to": 30
  }, {
    "from": 26,
    "label": "calls",
    "to": 28
  }, {
    "from": 1,
    "label": "contains",
    "to": 26
  }, {
    "from": 26,
    "label": "declares",
    "to": 2
  }, {
    "from": 26,
    "label": "declares",
    "to": 5
  }, {
    "from": 26,
    "label": "declares",
    "to": 15
  }, {
    "from": 26,
    "label": "declares",
    "to": 22
  }, {
    "from": 26,
    "label": "declares",
    "to": 24
  }, {
    "from": 26,
    "label": "declares",
    "to": 25
  }, {
    "from": 1,
    "label": "contains",
    "to": 38
  }, {
    "from": 1,
    "label": "contains",
    "to": 39
  }, {
    "from": 38,
    "label": "initializes",
    "to": 40
  }, {
    "from": 40,
    "label": "assigns",
    "to": 41
  }, {
    "from": 38,
    "label": "initializes",
    "to": 42
  }, {
    "from": 42,
    "label": "assigns",
    "to": 43
  }, {
    "from": 38,
    "label": "initializes",
    "to": 44
  }, {
    "from": 38,
    "label": "initializes",
    "to": 45
  }, {
    "from": 45,
    "label": "assigns",
    "to": 46
  }, {
    "from": 39,
    "label": "initializes",
    "to": 47
  }, {
    "from": 47,
    "label": "requires",
    "to": 27
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "test",
    "type": "module"
  }, {
    "id": 2,
    "text": "function test(w,r)\r\n print(w,r(),r(),r())\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "print(w,r(),r(),r())",
    "type": "statement:functioncall"
  }, {
    "id": 4,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 5,
    "text": "function test(N,a,b)\r\n local S={0,0,0,0,0,0,0,0,0,0,0}\r\n for i=1,N do\r\n  local i=r:value(a,b)\r\n  if i~=nil then S[i]=S[i]+1 end\r\n end\r\n for i=1,9 do\r\n  S[i]=math.floor(100*S[i]/N+0.5)\r\n end\r\n print(a..\":\"..b,\"\",S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[8])\r\nend",
    "type": "function"
  }, {
    "id": 6,
    "text": "local S={0,0,0,0,0,0,0,0,0,0,0}",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "for i=1,N do\r\n  local i=r:value(a,b)\r\n  if i~=nil then S[i]=S[i]+1 end\r\n end",
    "type": "statement:numericfor"
  }, {
    "id": 8,
    "text": "local i=r:value(a,b)",
    "type": "statement:localassign"
  }, {
    "id": 9,
    "text": "if i~=nil then S[i]=S[i]+1 end",
    "type": "statement:if"
  }, {
    "id": 10,
    "text": "S[i]=S[i]+1",
    "type": "statement:assign"
  }, {
    "id": 11,
    "text": "for i=1,9 do\r\n  S[i]=math.floor(100*S[i]/N+0.5)\r\n end",
    "type": "statement:numericfor"
  }, {
    "id": 12,
    "text": "S[i]=math.floor(100*S[i]/N+0.5)",
    "type": "statement:assign"
  }, {
    "id": 13,
    "text": "print(a..\":\"..b,\"\",S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[8])",
    "type": "statement:functioncall"
  }, {
    "id": 14,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 15,
    "text": "function test(w,f)\r\n local t=os.clock()\r\n for i=1,N do\r\n  f()\r\n end\r\n t=os.clock()-t\r\n print(w,math.floor(N/t/1000),N,t)\r\nend",
    "type": "function"
  }, {
    "id": 16,
    "text": "local t=os.clock()",
    "type": "statement:localassign"
  }, {
    "id": 17,
    "text": "for i=1,N do\r\n  f()\r\n end",
    "type": "statement:numericfor"
  }, {
    "id": 18,
    "text": "f()",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "t=os.clock()-t",
    "type": "statement:assign"
  }, {
    "id": 20,
    "text": "print(w,math.floor(N/t/1000),N,t)",
    "type": "statement:functioncall"
  }, {
    "id": 21,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 22,
    "text": "function () return math.random() end",
    "type": "function"
  }, {
    "id": 23,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 24,
    "text": "function () return random.value(r) end",
    "type": "function"
  }, {
    "id": 25,
    "text": "function () return r:value() end",
    "type": "function"
  }, {
    "id": 26,
    "text": "",
    "type": "function container"
  }, {
    "id": 27,
    "text": "random",
    "type": "module"
  }, {
    "id": 28,
    "text": "value",
    "type": "global function"
  }, {
    "id": 29,
    "text": "new",
    "type": "global function"
  }, {
    "id": 30,
    "text": "random",
    "type": "global function"
  }, {
    "id": 31,
    "text": "f",
    "type": "global function"
  }, {
    "id": 32,
    "text": "time",
    "type": "global function"
  }, {
    "id": 33,
    "text": "clock",
    "type": "global function"
  }, {
    "id": 34,
    "text": "r",
    "type": "global function"
  }, {
    "id": 35,
    "text": "print",
    "type": "global function"
  }, {
    "id": 36,
    "text": "floor",
    "type": "global function"
  }, {
    "id": 37,
    "text": "require",
    "type": "global function"
  }, {
    "id": 38,
    "text": "",
    "type": "variable container"
  }, {
    "id": 39,
    "text": "",
    "type": "require container"
  }, {
    "id": 40,
    "text": "",
    "type": "global variable"
  }, {
    "id": 41,
    "text": "",
    "type": "n/a"
  }, {
    "id": 42,
    "text": "",
    "type": "global variable"
  }, {
    "id": 43,
    "text": "",
    "type": "n/a"
  }, {
    "id": 44,
    "text": "",
    "type": "global variable"
  }, {
    "id": 45,
    "text": "",
    "type": "global variable"
  }, {
    "id": 46,
    "text": "",
    "type": "n/a"
  }, {
    "id": 47,
    "text": "",
    "type": "global variable"
  } ]
}