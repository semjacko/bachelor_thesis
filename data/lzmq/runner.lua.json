{
  "_filename": "runner.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/lzmq/examples/perf2/runner.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 9,
    "label": "has",
    "to": 11
  }, {
    "from": 9,
    "label": "has",
    "to": 5
  }, {
    "from": 9,
    "label": "has",
    "to": 12
  }, {
    "from": 13,
    "label": "has",
    "to": 5
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 15,
    "label": "has",
    "to": 5
  }, {
    "from": 15,
    "label": "has",
    "to": 17
  }, {
    "from": 18,
    "label": "has",
    "to": 16
  }, {
    "from": 18,
    "label": "has",
    "to": 5
  }, {
    "from": 18,
    "label": "has",
    "to": 19
  }, {
    "from": 20,
    "label": "has",
    "to": 21
  }, {
    "from": 20,
    "label": "has",
    "to": 22
  }, {
    "from": 22,
    "label": "has",
    "to": 23
  }, {
    "from": 20,
    "label": "has",
    "to": 5
  }, {
    "from": 20,
    "label": "has",
    "to": 24
  }, {
    "from": 25,
    "label": "has",
    "to": 26
  }, {
    "from": 25,
    "label": "has",
    "to": 27
  }, {
    "from": 28,
    "label": "has",
    "to": 29
  }, {
    "from": 28,
    "label": "has",
    "to": 30
  }, {
    "from": 30,
    "label": "has",
    "to": 31
  }, {
    "from": 28,
    "label": "has",
    "to": 32
  }, {
    "from": 33,
    "label": "has",
    "to": 34
  }, {
    "from": 33,
    "label": "has",
    "to": 30
  }, {
    "from": 30,
    "label": "has",
    "to": 31
  }, {
    "from": 33,
    "label": "has",
    "to": 35
  }, {
    "from": 36,
    "label": "has",
    "to": 37
  }, {
    "from": 36,
    "label": "has",
    "to": 38
  }, {
    "from": 38,
    "label": "has",
    "to": 39
  }, {
    "from": 36,
    "label": "has",
    "to": 40
  }, {
    "from": 41,
    "label": "has",
    "to": 42
  }, {
    "from": 41,
    "label": "has",
    "to": 38
  }, {
    "from": 38,
    "label": "has",
    "to": 39
  }, {
    "from": 41,
    "label": "has",
    "to": 43
  }, {
    "from": 18,
    "label": "calls",
    "to": 13
  }, {
    "from": 20,
    "label": "calls",
    "to": 46
  }, {
    "from": 44,
    "label": "calls",
    "to": 46
  }, {
    "from": 44,
    "label": "calls",
    "to": 46
  }, {
    "from": 44,
    "label": "calls",
    "to": 46
  }, {
    "from": 44,
    "label": "calls",
    "to": 46
  }, {
    "from": 44,
    "label": "calls",
    "to": 46
  }, {
    "from": 44,
    "label": "calls",
    "to": 46
  }, {
    "from": 15,
    "label": "calls",
    "to": 9
  }, {
    "from": 9,
    "label": "calls",
    "to": 49
  }, {
    "from": 9,
    "label": "calls",
    "to": 49
  }, {
    "from": 13,
    "label": "calls",
    "to": 49
  }, {
    "from": 15,
    "label": "calls",
    "to": 49
  }, {
    "from": 18,
    "label": "calls",
    "to": 49
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 20
  }, {
    "from": 44,
    "label": "calls",
    "to": 36
  }, {
    "from": 44,
    "label": "calls",
    "to": 36
  }, {
    "from": 44,
    "label": "calls",
    "to": 36
  }, {
    "from": 44,
    "label": "calls",
    "to": 36
  }, {
    "from": 28,
    "label": "calls",
    "to": 15
  }, {
    "from": 33,
    "label": "calls",
    "to": 15
  }, {
    "from": 2,
    "label": "calls",
    "to": 48
  }, {
    "from": 44,
    "label": "calls",
    "to": 33
  }, {
    "from": 36,
    "label": "calls",
    "to": 18
  }, {
    "from": 41,
    "label": "calls",
    "to": 18
  }, {
    "from": 28,
    "label": "calls",
    "to": 51
  }, {
    "from": 33,
    "label": "calls",
    "to": 51
  }, {
    "from": 36,
    "label": "calls",
    "to": 51
  }, {
    "from": 41,
    "label": "calls",
    "to": 51
  }, {
    "from": 25,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 44,
    "label": "calls",
    "to": 28
  }, {
    "from": 44,
    "label": "calls",
    "to": 28
  }, {
    "from": 44,
    "label": "calls",
    "to": 28
  }, {
    "from": 44,
    "label": "calls",
    "to": 28
  }, {
    "from": 25,
    "label": "calls",
    "to": 45
  }, {
    "from": 15,
    "label": "calls",
    "to": 2
  }, {
    "from": 18,
    "label": "calls",
    "to": 2
  }, {
    "from": 44,
    "label": "calls",
    "to": 41
  }, {
    "from": 44,
    "label": "calls",
    "to": 25
  }, {
    "from": 44,
    "label": "calls",
    "to": 25
  }, {
    "from": 44,
    "label": "calls",
    "to": 25
  }, {
    "from": 44,
    "label": "calls",
    "to": 25
  }, {
    "from": 44,
    "label": "calls",
    "to": 25
  }, {
    "from": 44,
    "label": "calls",
    "to": 25
  }, {
    "from": 9,
    "label": "calls",
    "to": 50
  }, {
    "from": 9,
    "label": "calls",
    "to": 50
  }, {
    "from": 13,
    "label": "calls",
    "to": 50
  }, {
    "from": 1,
    "label": "contains",
    "to": 44
  }, {
    "from": 44,
    "label": "declares",
    "to": 2
  }, {
    "from": 44,
    "label": "declares",
    "to": 9
  }, {
    "from": 44,
    "label": "declares",
    "to": 13
  }, {
    "from": 44,
    "label": "declares",
    "to": 15
  }, {
    "from": 44,
    "label": "declares",
    "to": 18
  }, {
    "from": 44,
    "label": "declares",
    "to": 20
  }, {
    "from": 44,
    "label": "declares",
    "to": 25
  }, {
    "from": 44,
    "label": "declares",
    "to": 28
  }, {
    "from": 44,
    "label": "declares",
    "to": 33
  }, {
    "from": 44,
    "label": "declares",
    "to": 36
  }, {
    "from": 44,
    "label": "declares",
    "to": 41
  }, {
    "from": 1,
    "label": "contains",
    "to": 52
  }, {
    "from": 1,
    "label": "contains",
    "to": 53
  }, {
    "from": 52,
    "label": "initializes",
    "to": 54
  }, {
    "from": 54,
    "label": "assigns",
    "to": 55
  }, {
    "from": 52,
    "label": "initializes",
    "to": 56
  }, {
    "from": 52,
    "label": "initializes",
    "to": 57
  }, {
    "from": 52,
    "label": "initializes",
    "to": 58
  }, {
    "from": 52,
    "label": "initializes",
    "to": 59
  }, {
    "from": 59,
    "label": "assigns",
    "to": 60
  }, {
    "from": 52,
    "label": "initializes",
    "to": 61
  }, {
    "from": 61,
    "label": "assigns",
    "to": 62
  }, {
    "from": 52,
    "label": "initializes",
    "to": 63
  }, {
    "from": 63,
    "label": "assigns",
    "to": 64
  }, {
    "from": 52,
    "label": "initializes",
    "to": 65
  }, {
    "from": 65,
    "label": "assigns",
    "to": 66
  }, {
    "from": 52,
    "label": "initializes",
    "to": 67
  }, {
    "from": 67,
    "label": "assigns",
    "to": 68
  }, {
    "from": 52,
    "label": "initializes",
    "to": 69
  }, {
    "from": 69,
    "label": "assigns",
    "to": 70
  }, {
    "from": 52,
    "label": "initializes",
    "to": 71
  }, {
    "from": 71,
    "label": "assigns",
    "to": 72
  }, {
    "from": 52,
    "label": "initializes",
    "to": 73
  }, {
    "from": 73,
    "label": "assigns",
    "to": 74
  }, {
    "from": 52,
    "label": "initializes",
    "to": 75
  }, {
    "from": 75,
    "label": "assigns",
    "to": 76
  }, {
    "from": 52,
    "label": "initializes",
    "to": 77
  }, {
    "from": 77,
    "label": "assigns",
    "to": 78
  }, {
    "from": 52,
    "label": "initializes",
    "to": 79
  }, {
    "from": 52,
    "label": "initializes",
    "to": 80
  }, {
    "from": 52,
    "label": "initializes",
    "to": 81
  }, {
    "from": 52,
    "label": "initializes",
    "to": 82
  }, {
    "from": 52,
    "label": "initializes",
    "to": 83
  }, {
    "from": 52,
    "label": "initializes",
    "to": 84
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "runner",
    "type": "module"
  }, {
    "id": 2,
    "text": "local function exec(cmd)\r\n  local f, err = io.popen(cmd, \"r\")\r\n  if not f then return err end\r\n  local data, err = f:read(\"*all\")\r\n  f:close()\r\n  return data, err\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local f, err = io.popen(cmd, \"r\")",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "if not f then return err end",
    "type": "statement:if"
  }, {
    "id": 5,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 6,
    "text": "local data, err = f:read(\"*all\")",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "f:close()",
    "type": "statement:functioncall"
  }, {
    "id": 8,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 9,
    "text": "local function parse_thr(result)\r\n  local msgps = assert(\r\n    tonumber((result:match(\"mean throughput: (%S+) %[msg/s%]\")))\r\n  , result)\r\n  local mbps = assert(\r\n    tonumber((result:match(\"mean throughput: (%S+) %[Mb/s%]\")))\r\n  , result)\r\n  return msgps, mbps\r\nend",
    "type": "function"
  }, {
    "id": 10,
    "text": "local msgps = assert(\r\n    tonumber((result:match(\"mean throughput: (%S+) %[msg/s%]\")))\r\n  , result)",
    "type": "statement:localassign"
  }, {
    "id": 11,
    "text": "local mbps = assert(\r\n    tonumber((result:match(\"mean throughput: (%S+) %[Mb/s%]\")))\r\n  , result)",
    "type": "statement:localassign"
  }, {
    "id": 12,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 13,
    "text": "local function parse_lat(result)\r\n  return assert(\r\n    tonumber((result:match(\"average latency: (%S+) %[us%]\")))\r\n  , result)\r\nend",
    "type": "function"
  }, {
    "id": 14,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 15,
    "text": "local function exec_thr(cmd)\r\n  local msg = assert(exec(cmd))\r\n  return parse_thr(msg)\r\nend",
    "type": "function"
  }, {
    "id": 16,
    "text": "local msg = assert(exec(cmd))",
    "type": "statement:localassign"
  }, {
    "id": 17,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 18,
    "text": "local function exec_lat(cmd)\r\n  local msg = assert(exec(cmd))\r\n  return parse_lat(msg)\r\nend",
    "type": "function"
  }, {
    "id": 19,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 20,
    "text": "local function field(wdt, fmt, value)\r\n  local str = string.format(fmt, value)\r\n  if wdt > #str then str = str .. (' '):rep(wdt - #str) end\r\n  return str\r\nend",
    "type": "function"
  }, {
    "id": 21,
    "text": "local str = string.format(fmt, value)",
    "type": "statement:localassign"
  }, {
    "id": 22,
    "text": "if wdt > #str then str = str .. (' '):rep(wdt - #str) end",
    "type": "statement:if"
  }, {
    "id": 23,
    "text": "str = str .. (' '):rep(wdt - #str)",
    "type": "statement:assign"
  }, {
    "id": 24,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 25,
    "text": "local function print_row(row)\r\n  print('|' .. table.concat(row, '|') .. '|')\r\nend",
    "type": "function"
  }, {
    "id": 26,
    "text": "print('|' .. table.concat(row, '|') .. '|')",
    "type": "statement:functioncall"
  }, {
    "id": 27,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 28,
    "text": "function luajit_thr(result, dir, ffi)\r\n  local cmd = \r\n    \"cd \" .. dir .. \" && \" ..\r\n      \"luajit .\" .. DIR_SEP ..\"inproc_thr.lua \" .. msg_size .. \" \" .. msg_count .. \" \" .. ffi ..\r\n    \" && cd ..\"\r\n\r\n  for i = 1, N do\r\n    table.insert(result, {exec_thr(cmd)})\r\n  end\r\n\r\nend",
    "type": "function"
  }, {
    "id": 29,
    "text": "local cmd = \r\n    \"cd \" .. dir .. \" && \" ..\r\n      \"luajit .\" .. DIR_SEP ..\"inproc_thr.lua \" .. msg_size .. \" \" .. msg_count .. \" \" .. ffi ..\r\n    \" && cd ..\"",
    "type": "statement:localassign"
  }, {
    "id": 30,
    "text": "for i = 1, N do\r\n    table.insert(result, {exec_thr(cmd)})\r\n  end",
    "type": "statement:numericfor"
  }, {
    "id": 31,
    "text": "table.insert(result, {exec_thr(cmd)})",
    "type": "statement:functioncall"
  }, {
    "id": 32,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 33,
    "text": "function bin_thr(result, dir)\r\n  local cmd = \r\n    \"cd \" .. dir .. \" && \" ..\r\n      \".\" .. DIR_SEP ..\"inproc_thr \" .. msg_size .. \" \" .. msg_count .. \r\n    \" && cd ..\"\r\n\r\n  for i = 1, N do\r\n    table.insert(result, {exec_thr(cmd)})\r\n  end\r\n\r\nend",
    "type": "function"
  }, {
    "id": 34,
    "text": "local cmd = \r\n    \"cd \" .. dir .. \" && \" ..\r\n      \".\" .. DIR_SEP ..\"inproc_thr \" .. msg_size .. \" \" .. msg_count .. \r\n    \" && cd ..\"",
    "type": "statement:localassign"
  }, {
    "id": 35,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 36,
    "text": "function luajit_lat(result, dir, ffi)\r\n  local cmd = \r\n    \"cd \" .. dir .. \" && \" ..\r\n      \"luajit .\" .. DIR_SEP ..\"inproc_lat.lua \" .. msg_size .. \" \" .. msg_count .. \" \" .. ffi ..\r\n    \" && cd ..\"\r\n\r\n  for i = 1, N do\r\n    table.insert(result, {exec_lat(cmd)})\r\n  end\r\n\r\nend",
    "type": "function"
  }, {
    "id": 37,
    "text": "local cmd = \r\n    \"cd \" .. dir .. \" && \" ..\r\n      \"luajit .\" .. DIR_SEP ..\"inproc_lat.lua \" .. msg_size .. \" \" .. msg_count .. \" \" .. ffi ..\r\n    \" && cd ..\"",
    "type": "statement:localassign"
  }, {
    "id": 38,
    "text": "for i = 1, N do\r\n    table.insert(result, {exec_lat(cmd)})\r\n  end",
    "type": "statement:numericfor"
  }, {
    "id": 39,
    "text": "table.insert(result, {exec_lat(cmd)})",
    "type": "statement:functioncall"
  }, {
    "id": 40,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 41,
    "text": "function bin_lat(result, dir)\r\n  local cmd = \r\n    \"cd \" .. dir .. \" && \" ..\r\n      \".\" .. DIR_SEP ..\"inproc_lat \" .. msg_size .. \" \" .. msg_count .. \r\n    \" && cd ..\"\r\n\r\n  for i = 1, N do\r\n    table.insert(result, {exec_lat(cmd)})\r\n  end\r\n\r\nend",
    "type": "function"
  }, {
    "id": 42,
    "text": "local cmd = \r\n    \"cd \" .. dir .. \" && \" ..\r\n      \".\" .. DIR_SEP ..\"inproc_lat \" .. msg_size .. \" \" .. msg_count .. \r\n    \" && cd ..\"",
    "type": "statement:localassign"
  }, {
    "id": 43,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 44,
    "text": "",
    "type": "function container"
  }, {
    "id": 45,
    "text": "concat",
    "type": "global function"
  }, {
    "id": 46,
    "text": "format",
    "type": "global function"
  }, {
    "id": 47,
    "text": "print",
    "type": "global function"
  }, {
    "id": 48,
    "text": "popen",
    "type": "global function"
  }, {
    "id": 49,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 50,
    "text": "tonumber",
    "type": "global function"
  }, {
    "id": 51,
    "text": "insert",
    "type": "global function"
  }, {
    "id": 52,
    "text": "",
    "type": "variable container"
  }, {
    "id": 53,
    "text": "",
    "type": "require container"
  }, {
    "id": 54,
    "text": "",
    "type": "local variable"
  }, {
    "id": 55,
    "text": "",
    "type": "n/a"
  }, {
    "id": 56,
    "text": "",
    "type": "local variable"
  }, {
    "id": 57,
    "text": "",
    "type": "local variable"
  }, {
    "id": 58,
    "text": "",
    "type": "local variable"
  }, {
    "id": 59,
    "text": "",
    "type": "local variable"
  }, {
    "id": 60,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 61,
    "text": "",
    "type": "local variable"
  }, {
    "id": 62,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 63,
    "text": "",
    "type": "local variable"
  }, {
    "id": 64,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 65,
    "text": "",
    "type": "local variable"
  }, {
    "id": 66,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 67,
    "text": "",
    "type": "local variable"
  }, {
    "id": 68,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 69,
    "text": "",
    "type": "local variable"
  }, {
    "id": 70,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 71,
    "text": "",
    "type": "local variable"
  }, {
    "id": 72,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 73,
    "text": "",
    "type": "local variable"
  }, {
    "id": 74,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 75,
    "text": "",
    "type": "local variable"
  }, {
    "id": 76,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 77,
    "text": "",
    "type": "local variable"
  }, {
    "id": 78,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 79,
    "text": "",
    "type": "global variable"
  }, {
    "id": 80,
    "text": "",
    "type": "global variable"
  }, {
    "id": 81,
    "text": "",
    "type": "global variable"
  }, {
    "id": 82,
    "text": "",
    "type": "global variable"
  }, {
    "id": 83,
    "text": "",
    "type": "global variable"
  }, {
    "id": 84,
    "text": "",
    "type": "global variable"
  } ]
}