{
  "_filename": "shallow_copy.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/lua_cliargs/src/cliargs/utils/shallow_copy.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "calls",
    "to": 11
  }, {
    "from": 2,
    "label": "calls",
    "to": 12
  }, {
    "from": 1,
    "label": "contains",
    "to": 9
  }, {
    "from": 9,
    "label": "declares",
    "to": 2
  }, {
    "from": 13,
    "label": "requires",
    "to": 1
  }, {
    "from": 1,
    "label": "contains",
    "to": 14
  }, {
    "from": 1,
    "label": "contains",
    "to": 15
  }, {
    "from": 1,
    "label": "provides",
    "to": 16
  }, {
    "from": 10,
    "label": "represents",
    "to": 17
  }, {
    "from": 16,
    "label": "provides",
    "to": 17
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "shallow_copy",
    "type": "module"
  }, {
    "id": 2,
    "text": "local function shallow_copy(orig)\r\n  if type(orig) == 'table' then\r\n    local copy = {}\r\n\r\n    for orig_key, orig_value in pairs(orig) do\r\n      copy[orig_key] = orig_value\r\n    end\r\n\r\n    return copy\r\n  else -- number, string, boolean, etc\r\n    return orig\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "if type(orig) == 'table' then\r\n    local copy = {}\r\n\r\n    for orig_key, orig_value in pairs(orig) do\r\n      copy[orig_key] = orig_value\r\n    end\r\n\r\n    return copy\r\n  else -- number, string, boolean, etc\r\n    return orig\r\n  end",
    "type": "statement:if"
  }, {
    "id": 4,
    "text": "local copy = {}",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "for orig_key, orig_value in pairs(orig) do\r\n      copy[orig_key] = orig_value\r\n    end",
    "type": "statement:genericfor"
  }, {
    "id": 6,
    "text": "copy[orig_key] = orig_value",
    "type": "statement:assign"
  }, {
    "id": 7,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 8,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 9,
    "text": "",
    "type": "function container"
  }, {
    "id": 10,
    "text": "shallow_copy",
    "type": "global function"
  }, {
    "id": 11,
    "text": "type",
    "type": "global function"
  }, {
    "id": 12,
    "text": "pairs",
    "type": "global function"
  }, {
    "id": 13,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 14,
    "text": "",
    "type": "variable container"
  }, {
    "id": 15,
    "text": "",
    "type": "require container"
  }, {
    "id": 16,
    "text": "",
    "type": "interface container"
  }, {
    "id": 17,
    "text": "",
    "type": "interface"
  } ]
}