{
  "_filename": "testxs.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/xstring/testxs.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 9
  }, {
    "from": 2,
    "label": "has",
    "to": 10
  }, {
    "from": 2,
    "label": "has",
    "to": 11
  }, {
    "from": 2,
    "label": "has",
    "to": 12
  }, {
    "from": 2,
    "label": "calls",
    "to": 17
  }, {
    "from": 2,
    "label": "calls",
    "to": 17
  }, {
    "from": 2,
    "label": "calls",
    "to": 17
  }, {
    "from": 2,
    "label": "calls",
    "to": 15
  }, {
    "from": 2,
    "label": "calls",
    "to": 15
  }, {
    "from": 2,
    "label": "calls",
    "to": 15
  }, {
    "from": 2,
    "label": "calls",
    "to": 15
  }, {
    "from": 2,
    "label": "calls",
    "to": 16
  }, {
    "from": 13,
    "label": "calls",
    "to": 19
  }, {
    "from": 2,
    "label": "calls",
    "to": 18
  }, {
    "from": 2,
    "label": "calls",
    "to": 18
  }, {
    "from": 2,
    "label": "calls",
    "to": 18
  }, {
    "from": 2,
    "label": "calls",
    "to": 18
  }, {
    "from": 2,
    "label": "calls",
    "to": 14
  }, {
    "from": 1,
    "label": "contains",
    "to": 13
  }, {
    "from": 13,
    "label": "declares",
    "to": 2
  }, {
    "from": 1,
    "label": "contains",
    "to": 20
  }, {
    "from": 1,
    "label": "contains",
    "to": 21
  }, {
    "from": 21,
    "label": "initializes",
    "to": 22
  }, {
    "from": 22,
    "label": "requires",
    "to": 23
  }, {
    "from": 24,
    "label": "initializes",
    "to": 22
  }, {
    "from": 22,
    "label": "requires",
    "to": 23
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "testxs",
    "type": "module"
  }, {
    "id": 2,
    "text": "function testxs (wool)\r\n    assert(type(wool) == \"userdata\")\r\n    print(\"wool = '\" .. tostring(wool) .. \"'\");\r\n\r\n    --local w = tostring(wool)\r\n    --print(\"type(w) = \" .. type(w));\r\n    --print(\"#w = \" .. #w);\r\n    assert(tostring(wool) == \"Pull the wool over your own eyes!\");\r\n\r\n    -- test object-oriented usage and xstring.substr()\r\n    local w = wool:sub(10, 13)\r\n    print(\"sub = '\" .. tostring(w) .. \"'\")\r\n    assert(tostring(w) == \"wool\")\r\n\r\n    -- call test-program-defined function\r\n    local pos = xfindbyte(wool, 'v')\r\n    print(\"xfindbyte('v') = \" .. pos)\r\n    assert(pos == 16)\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "assert(type(wool) == \"userdata\")",
    "type": "statement:functioncall"
  }, {
    "id": 4,
    "text": "print(\"wool = '\" .. tostring(wool) .. \"'\")",
    "type": "statement:functioncall"
  }, {
    "id": 5,
    "text": "assert(tostring(wool) == \"Pull the wool over your own eyes!\")",
    "type": "statement:functioncall"
  }, {
    "id": 6,
    "text": "local w = wool:sub(10, 13)",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "print(\"sub = '\" .. tostring(w) .. \"'\")",
    "type": "statement:functioncall"
  }, {
    "id": 8,
    "text": "assert(tostring(w) == \"wool\")",
    "type": "statement:functioncall"
  }, {
    "id": 9,
    "text": "local pos = xfindbyte(wool, 'v')",
    "type": "statement:localassign"
  }, {
    "id": 10,
    "text": "print(\"xfindbyte('v') = \" .. pos)",
    "type": "statement:functioncall"
  }, {
    "id": 11,
    "text": "assert(pos == 16)",
    "type": "statement:functioncall"
  }, {
    "id": 12,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 13,
    "text": "",
    "type": "function container"
  }, {
    "id": 14,
    "text": "type",
    "type": "global function"
  }, {
    "id": 15,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 16,
    "text": "xfindbyte",
    "type": "global function"
  }, {
    "id": 17,
    "text": "print",
    "type": "global function"
  }, {
    "id": 18,
    "text": "tostring",
    "type": "global function"
  }, {
    "id": 19,
    "text": "require",
    "type": "global function"
  }, {
    "id": 20,
    "text": "",
    "type": "variable container"
  }, {
    "id": 21,
    "text": "",
    "type": "require container"
  }, {
    "id": 22,
    "text": "",
    "type": "global variable"
  }, {
    "id": 23,
    "text": "xstring",
    "type": "module"
  }, {
    "id": 24,
    "text": "",
    "type": "require container"
  } ]
}