{
  "_filename": "local-imports.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/leg/examples/local-imports.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 6,
    "label": "has",
    "to": 7
  }, {
    "from": 3,
    "label": "has",
    "to": 8
  }, {
    "from": 3,
    "label": "has",
    "to": 9
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 10,
    "label": "has",
    "to": 12
  }, {
    "from": 10,
    "label": "has",
    "to": 13
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 10,
    "label": "has",
    "to": 8
  }, {
    "from": 10,
    "label": "has",
    "to": 15
  }, {
    "from": 16,
    "label": "has",
    "to": 17
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 17,
    "label": "has",
    "to": 19
  }, {
    "from": 17,
    "label": "has",
    "to": 20
  }, {
    "from": 17,
    "label": "has",
    "to": 21
  }, {
    "from": 16,
    "label": "has",
    "to": 22
  }, {
    "from": 10,
    "label": "calls",
    "to": 3
  }, {
    "from": 3,
    "label": "calls",
    "to": 25
  }, {
    "from": 10,
    "label": "calls",
    "to": 25
  }, {
    "from": 23,
    "label": "calls",
    "to": 27
  }, {
    "from": 10,
    "label": "calls",
    "to": 30
  }, {
    "from": 23,
    "label": "calls",
    "to": 31
  }, {
    "from": 10,
    "label": "calls",
    "to": 28
  }, {
    "from": 23,
    "label": "calls",
    "to": 29
  }, {
    "from": 23,
    "label": "calls",
    "to": 29
  }, {
    "from": 23,
    "label": "calls",
    "to": 32
  }, {
    "from": 23,
    "label": "calls",
    "to": 32
  }, {
    "from": 23,
    "label": "calls",
    "to": 26
  }, {
    "from": 23,
    "label": "calls",
    "to": 26
  }, {
    "from": 23,
    "label": "calls",
    "to": 10
  }, {
    "from": 23,
    "label": "calls",
    "to": 10
  }, {
    "from": 1,
    "label": "contains",
    "to": 23
  }, {
    "from": 23,
    "label": "declares",
    "to": 3
  }, {
    "from": 23,
    "label": "declares",
    "to": 10
  }, {
    "from": 23,
    "label": "declares",
    "to": 16
  }, {
    "from": 1,
    "label": "contains",
    "to": 33
  }, {
    "from": 1,
    "label": "contains",
    "to": 34
  }, {
    "from": 33,
    "label": "initializes",
    "to": 35
  }, {
    "from": 35,
    "label": "assigns",
    "to": 36
  }, {
    "from": 33,
    "label": "initializes",
    "to": 37
  }, {
    "from": 37,
    "label": "assigns",
    "to": 38
  }, {
    "from": 33,
    "label": "initializes",
    "to": 39
  }, {
    "from": 39,
    "label": "assigns",
    "to": 40
  }, {
    "from": 33,
    "label": "initializes",
    "to": 41
  }, {
    "from": 41,
    "label": "assigns",
    "to": 42
  }, {
    "from": 33,
    "label": "initializes",
    "to": 43
  }, {
    "from": 43,
    "label": "assigns",
    "to": 44
  }, {
    "from": 33,
    "label": "initializes",
    "to": 45
  }, {
    "from": 45,
    "label": "assigns",
    "to": 46
  }, {
    "from": 33,
    "label": "initializes",
    "to": 47
  }, {
    "from": 47,
    "label": "assigns",
    "to": 48
  }, {
    "from": 33,
    "label": "initializes",
    "to": 49
  }, {
    "from": 49,
    "label": "assigns",
    "to": 50
  }, {
    "from": 50,
    "label": "assigns",
    "to": 51
  }, {
    "from": 33,
    "label": "initializes",
    "to": 52
  }, {
    "from": 52,
    "label": "assigns",
    "to": 53
  }, {
    "from": 33,
    "label": "initializes",
    "to": 54
  }, {
    "from": 54,
    "label": "assigns",
    "to": 55
  }, {
    "from": 34,
    "label": "initializes",
    "to": 56
  }, {
    "from": 56,
    "label": "requires",
    "to": 2
  }, {
    "from": 34,
    "label": "initializes",
    "to": 57
  }, {
    "from": 57,
    "label": "requires",
    "to": 24
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "local-imports",
    "type": "module"
  }, {
    "id": 2,
    "text": "scanner",
    "type": "module"
  }, {
    "id": 3,
    "text": "local function maxNameLength(list)\r\n  local max = 0\r\n  \r\n  for _, v in ipairs(list) do\r\n    if max < #v then max = #v end\r\n  end\r\n  \r\n  return max\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "local max = 0",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "for _, v in ipairs(list) do\r\n    if max < #v then max = #v end\r\n  end",
    "type": "statement:genericfor"
  }, {
    "id": 6,
    "text": "if max < #v then max = #v end",
    "type": "statement:if"
  }, {
    "id": 7,
    "text": "max = #v",
    "type": "statement:assign"
  }, {
    "id": 8,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 9,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 10,
    "text": "local function buildStatements(list, type)\r\n  local str, max = '-- basic '..type..'\\n', maxNameLength(list)\r\n  \r\n  table.sort(list)\r\n  for _, v in ipairs(list) do\r\n    str = str..'local '..v..string.rep(' ', max - #v)..' = '..v..'\\n'\r\n  end\r\n  \r\n  return str\r\nend",
    "type": "function"
  }, {
    "id": 11,
    "text": "local str, max = '-- basic '..type..'\\n', maxNameLength(list)",
    "type": "statement:localassign"
  }, {
    "id": 12,
    "text": "table.sort(list)",
    "type": "statement:functioncall"
  }, {
    "id": 13,
    "text": "for _, v in ipairs(list) do\r\n    str = str..'local '..v..string.rep(' ', max - #v)..' = '..v..'\\n'\r\n  end",
    "type": "statement:genericfor"
  }, {
    "id": 14,
    "text": "str = str..'local '..v..string.rep(' ', max - #v)..' = '..v..'\\n'",
    "type": "statement:assign"
  }, {
    "id": 15,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 16,
    "text": "function (id)\r\n    if basicModules[id] and not modules[id] then\r\n      modules[#modules + 1] = id\r\n      modules[id] = #modules\r\n    elseif basicFunctions[id] and not functions[id] then\r\n      functions[#functions + 1] = id\r\n      functions[id] = #functions\r\n    end\r\n  end",
    "type": "function"
  }, {
    "id": 17,
    "text": "if basicModules[id] and not modules[id] then\r\n      modules[#modules + 1] = id\r\n      modules[id] = #modules\r\n    elseif basicFunctions[id] and not functions[id] then\r\n      functions[#functions + 1] = id\r\n      functions[id] = #functions\r\n    end",
    "type": "statement:if"
  }, {
    "id": 18,
    "text": "modules[#modules + 1] = id",
    "type": "statement:assign"
  }, {
    "id": 19,
    "text": "modules[id] = #modules",
    "type": "statement:assign"
  }, {
    "id": 20,
    "text": "functions[#functions + 1] = id",
    "type": "statement:assign"
  }, {
    "id": 21,
    "text": "functions[id] = #functions",
    "type": "statement:assign"
  }, {
    "id": 22,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 23,
    "text": "",
    "type": "function container"
  }, {
    "id": 24,
    "text": "lpeg",
    "type": "module"
  }, {
    "id": 25,
    "text": "ipairs",
    "type": "global function"
  }, {
    "id": 26,
    "text": "print",
    "type": "global function"
  }, {
    "id": 27,
    "text": "pairs",
    "type": "global function"
  }, {
    "id": 28,
    "text": "sort",
    "type": "global function"
  }, {
    "id": 29,
    "text": "type",
    "type": "global function"
  }, {
    "id": 30,
    "text": "rep",
    "type": "global function"
  }, {
    "id": 31,
    "text": "P",
    "type": "global function"
  }, {
    "id": 32,
    "text": "require",
    "type": "global function"
  }, {
    "id": 33,
    "text": "",
    "type": "variable container"
  }, {
    "id": 34,
    "text": "",
    "type": "require container"
  }, {
    "id": 35,
    "text": "",
    "type": "local variable"
  }, {
    "id": 36,
    "text": "",
    "type": "n/a"
  }, {
    "id": 37,
    "text": "",
    "type": "local variable"
  }, {
    "id": 38,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 39,
    "text": "",
    "type": "local variable"
  }, {
    "id": 40,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 41,
    "text": "",
    "type": "local variable"
  }, {
    "id": 42,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 43,
    "text": "",
    "type": "local variable"
  }, {
    "id": 44,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 45,
    "text": "",
    "type": "local variable"
  }, {
    "id": 46,
    "text": "",
    "type": "n/a"
  }, {
    "id": 47,
    "text": "",
    "type": "local variable"
  }, {
    "id": 48,
    "text": "",
    "type": "n/a"
  }, {
    "id": 49,
    "text": "",
    "type": "local variable"
  }, {
    "id": 50,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 51,
    "text": "",
    "type": "symbol"
  }, {
    "id": 52,
    "text": "",
    "type": "global variable"
  }, {
    "id": 53,
    "text": "",
    "type": "n/a"
  }, {
    "id": 54,
    "text": "",
    "type": "global variable"
  }, {
    "id": 55,
    "text": "",
    "type": "n/a"
  }, {
    "id": 56,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 57,
    "text": "",
    "type": "require local variable"
  } ]
}