{
  "_filename": "parser.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/leg/src/parser.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 2
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 4,
    "label": "has",
    "to": 6
  }, {
    "from": 4,
    "label": "has",
    "to": 7
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 7,
    "label": "has",
    "to": 9
  }, {
    "from": 4,
    "label": "has",
    "to": 10
  }, {
    "from": 4,
    "label": "has",
    "to": 10
  }, {
    "from": 4,
    "label": "has",
    "to": 11
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 13,
    "label": "has",
    "to": 10
  }, {
    "from": 12,
    "label": "has",
    "to": 14
  }, {
    "from": 12,
    "label": "has",
    "to": 10
  }, {
    "from": 12,
    "label": "has",
    "to": 15
  }, {
    "from": 16,
    "label": "has",
    "to": 10
  }, {
    "from": 17,
    "label": "has",
    "to": 10
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 17,
    "label": "has",
    "to": 10
  }, {
    "from": 17,
    "label": "has",
    "to": 19
  }, {
    "from": 20,
    "label": "has",
    "to": 10
  }, {
    "from": 20,
    "label": "has",
    "to": 10
  }, {
    "from": 20,
    "label": "has",
    "to": 21
  }, {
    "from": 22,
    "label": "has",
    "to": 23
  }, {
    "from": 22,
    "label": "has",
    "to": 10
  }, {
    "from": 22,
    "label": "has",
    "to": 24
  }, {
    "from": 22,
    "label": "has",
    "to": 25
  }, {
    "from": 22,
    "label": "has",
    "to": 26
  }, {
    "from": 22,
    "label": "has",
    "to": 27
  }, {
    "from": 28,
    "label": "has",
    "to": 29
  }, {
    "from": 28,
    "label": "has",
    "to": 30
  }, {
    "from": 28,
    "label": "has",
    "to": 31
  }, {
    "from": 31,
    "label": "has",
    "to": 32
  }, {
    "from": 31,
    "label": "has",
    "to": 33
  }, {
    "from": 31,
    "label": "has",
    "to": 34
  }, {
    "from": 31,
    "label": "has",
    "to": 35
  }, {
    "from": 31,
    "label": "has",
    "to": 36
  }, {
    "from": 31,
    "label": "has",
    "to": 37
  }, {
    "from": 28,
    "label": "has",
    "to": 10
  }, {
    "from": 28,
    "label": "has",
    "to": 10
  }, {
    "from": 28,
    "label": "has",
    "to": 38
  }, {
    "from": 39,
    "label": "has",
    "to": 10
  }, {
    "from": 39,
    "label": "has",
    "to": 40
  }, {
    "from": 41,
    "label": "has",
    "to": 18
  }, {
    "from": 41,
    "label": "has",
    "to": 10
  }, {
    "from": 41,
    "label": "has",
    "to": 42
  }, {
    "from": 43,
    "label": "has",
    "to": 10
  }, {
    "from": 43,
    "label": "has",
    "to": 44
  }, {
    "from": 45,
    "label": "has",
    "to": 24
  }, {
    "from": 45,
    "label": "has",
    "to": 25
  }, {
    "from": 45,
    "label": "has",
    "to": 26
  }, {
    "from": 45,
    "label": "has",
    "to": 46
  }, {
    "from": 28,
    "label": "calls",
    "to": 4
  }, {
    "from": 47,
    "label": "calls",
    "to": 59
  }, {
    "from": 47,
    "label": "calls",
    "to": 59
  }, {
    "from": 47,
    "label": "calls",
    "to": 59
  }, {
    "from": 12,
    "label": "calls",
    "to": 51
  }, {
    "from": 47,
    "label": "calls",
    "to": 17
  }, {
    "from": 47,
    "label": "calls",
    "to": 17
  }, {
    "from": 47,
    "label": "calls",
    "to": 17
  }, {
    "from": 47,
    "label": "calls",
    "to": 17
  }, {
    "from": 47,
    "label": "calls",
    "to": 17
  }, {
    "from": 47,
    "label": "calls",
    "to": 17
  }, {
    "from": 47,
    "label": "calls",
    "to": 57
  }, {
    "from": 47,
    "label": "calls",
    "to": 57
  }, {
    "from": 47,
    "label": "calls",
    "to": 57
  }, {
    "from": 12,
    "label": "calls",
    "to": 50
  }, {
    "from": 12,
    "label": "calls",
    "to": 50
  }, {
    "from": 22,
    "label": "calls",
    "to": 50
  }, {
    "from": 47,
    "label": "calls",
    "to": 50
  }, {
    "from": 28,
    "label": "calls",
    "to": 50
  }, {
    "from": 12,
    "label": "calls",
    "to": 52
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 22
  }, {
    "from": 47,
    "label": "calls",
    "to": 20
  }, {
    "from": 47,
    "label": "calls",
    "to": 20
  }, {
    "from": 39,
    "label": "calls",
    "to": 49
  }, {
    "from": 47,
    "label": "calls",
    "to": 56
  }, {
    "from": 4,
    "label": "calls",
    "to": 55
  }, {
    "from": 28,
    "label": "calls",
    "to": 55
  }, {
    "from": 22,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 47,
    "label": "calls",
    "to": 54
  }, {
    "from": 22,
    "label": "calls",
    "to": 12
  }, {
    "from": 28,
    "label": "calls",
    "to": 12
  }, {
    "from": 22,
    "label": "calls",
    "to": 58
  }, {
    "from": 47,
    "label": "calls",
    "to": 53
  }, {
    "from": 47,
    "label": "calls",
    "to": 53
  }, {
    "from": 2,
    "label": "contains",
    "to": 47
  }, {
    "from": 47,
    "label": "declares",
    "to": 4
  }, {
    "from": 47,
    "label": "declares",
    "to": 12
  }, {
    "from": 47,
    "label": "declares",
    "to": 16
  }, {
    "from": 47,
    "label": "declares",
    "to": 17
  }, {
    "from": 47,
    "label": "declares",
    "to": 20
  }, {
    "from": 47,
    "label": "declares",
    "to": 22
  }, {
    "from": 47,
    "label": "declares",
    "to": 28
  }, {
    "from": 47,
    "label": "declares",
    "to": 39
  }, {
    "from": 47,
    "label": "declares",
    "to": 41
  }, {
    "from": 47,
    "label": "declares",
    "to": 43
  }, {
    "from": 47,
    "label": "declares",
    "to": 45
  }, {
    "from": 60,
    "label": "requires",
    "to": 2
  }, {
    "from": 61,
    "label": "requires",
    "to": 2
  }, {
    "from": 62,
    "label": "requires",
    "to": 2
  }, {
    "from": 63,
    "label": "requires",
    "to": 2
  }, {
    "from": 64,
    "label": "requires",
    "to": 2
  }, {
    "from": 2,
    "label": "contains",
    "to": 65
  }, {
    "from": 2,
    "label": "contains",
    "to": 66
  }, {
    "from": 65,
    "label": "initializes",
    "to": 67
  }, {
    "from": 67,
    "label": "assigns",
    "to": 68
  }, {
    "from": 65,
    "label": "initializes",
    "to": 69
  }, {
    "from": 69,
    "label": "assigns",
    "to": 70
  }, {
    "from": 65,
    "label": "initializes",
    "to": 71
  }, {
    "from": 71,
    "label": "assigns",
    "to": 72
  }, {
    "from": 65,
    "label": "initializes",
    "to": 73
  }, {
    "from": 73,
    "label": "assigns",
    "to": 74
  }, {
    "from": 65,
    "label": "initializes",
    "to": 75
  }, {
    "from": 75,
    "label": "assigns",
    "to": 76
  }, {
    "from": 65,
    "label": "initializes",
    "to": 77
  }, {
    "from": 65,
    "label": "initializes",
    "to": 78
  }, {
    "from": 78,
    "label": "assigns",
    "to": 79
  }, {
    "from": 65,
    "label": "initializes",
    "to": 80
  }, {
    "from": 80,
    "label": "assigns",
    "to": 81
  }, {
    "from": 65,
    "label": "initializes",
    "to": 82
  }, {
    "from": 82,
    "label": "assigns",
    "to": 83
  }, {
    "from": 65,
    "label": "initializes",
    "to": 84
  }, {
    "from": 84,
    "label": "assigns",
    "to": 85
  }, {
    "from": 65,
    "label": "initializes",
    "to": 86
  }, {
    "from": 86,
    "label": "assigns",
    "to": 87
  }, {
    "from": 65,
    "label": "initializes",
    "to": 88
  }, {
    "from": 88,
    "label": "assigns",
    "to": 89
  }, {
    "from": 66,
    "label": "initializes",
    "to": 90
  }, {
    "from": 90,
    "label": "requires",
    "to": 48
  }, {
    "from": 66,
    "label": "initializes",
    "to": 91
  }, {
    "from": 91,
    "label": "requires",
    "to": 3
  }, {
    "from": 66,
    "label": "initializes",
    "to": 92
  }, {
    "from": 92,
    "label": "requires",
    "to": 1
  }, {
    "from": 93,
    "label": "requires",
    "to": 2
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "grammar",
    "type": "module"
  }, {
    "id": 2,
    "text": "parser",
    "type": "module"
  }, {
    "id": 3,
    "text": "scanner",
    "type": "module"
  }, {
    "id": 4,
    "text": "local function rfind(s, pattern, init, finish)\r\n  init = init or #s\r\n  finish = finish or 1\r\n  \r\n  for i = init, finish, -1 do\r\n    local lfind, rfind = string.find(s, pattern, i)\r\n    \r\n    if lfind and rfind then\r\n      return lfind, rfind\r\n    end\r\n  end\r\n  \r\n  return nil\r\nend",
    "type": "function"
  }, {
    "id": 5,
    "text": "init = init or #s",
    "type": "statement:assign"
  }, {
    "id": 6,
    "text": "finish = finish or 1",
    "type": "statement:assign"
  }, {
    "id": 7,
    "text": "for i = init, finish, -1 do\r\n    local lfind, rfind = string.find(s, pattern, i)\r\n    \r\n    if lfind and rfind then\r\n      return lfind, rfind\r\n    end\r\n  end",
    "type": "statement:numericfor"
  }, {
    "id": 8,
    "text": "local lfind, rfind = string.find(s, pattern, i)",
    "type": "statement:localassign"
  }, {
    "id": 9,
    "text": "if lfind and rfind then\r\n      return lfind, rfind\r\n    end",
    "type": "statement:if"
  }, {
    "id": 10,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 11,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 12,
    "text": "local function lines (subject)\r\n\tlocal inc = function (acc,arg) return acc + 1 end\r\n\tlocal L = m.Cf( m.Cc(1) * (m.P'\\n' + m.P(1)) ^0, inc )\r\n  \r\n\treturn L:match(subject)\r\nend",
    "type": "function"
  }, {
    "id": 13,
    "text": "local inc = function (acc,arg) return acc + 1 end",
    "type": "statement:localassign"
  }, {
    "id": 14,
    "text": "local L = m.Cf( m.Cc(1) * (m.P'\\n' + m.P(1)) ^0, inc )",
    "type": "statement:localassign"
  }, {
    "id": 15,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 16,
    "text": "function (acc,arg) return acc + 1 end",
    "type": "function"
  }, {
    "id": 17,
    "text": "function (p)\r\n\treturn function (_,i)\r\n\t\tprefix = p\r\n\t\treturn i\r\n\tend\r\nend",
    "type": "function"
  }, {
    "id": 18,
    "text": "prefix = p",
    "type": "statement:assign"
  }, {
    "id": 19,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 20,
    "text": "function (p)\r\n\treturn function (_, i)\r\n\t\treturn (prefix == p) and i\r\n\tend\r\nend",
    "type": "function"
  }, {
    "id": 21,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 22,
    "text": "local function CHECK(rule, desc)\r\n  patt, desc = m.V(rule), desc or 'chunk'\r\n  \r\n  return patt + m.P(function (s, i)\r\n    local line = lines(s:sub(1, i))\r\n    local vicinity = s:sub(i-5, i+5):gsub(\"\\n\", \"<EOL>\")\r\n    \r\n    error('Malformed '..desc..' in line '..line..', near \"'..vicinity..'\": a \"'..rule:lower()..'\" is missing!', 0)\r\n  end)\r\n\r\nend",
    "type": "function"
  }, {
    "id": 23,
    "text": "patt, desc = m.V(rule), desc or 'chunk'",
    "type": "statement:assign"
  }, {
    "id": 24,
    "text": "local line = lines(s:sub(1, i))",
    "type": "statement:localassign"
  }, {
    "id": 25,
    "text": "local vicinity = s:sub(i-5, i+5):gsub(\"\\n\", \"<EOL>\")",
    "type": "statement:localassign"
  }, {
    "id": 26,
    "text": "error('Malformed '..desc..' in line '..line..', near \"'..vicinity..'\": a \"'..rule:lower()..'\" is missing!', 0)",
    "type": "statement:functioncall"
  }, {
    "id": 27,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 28,
    "text": "function check(input)\r\n  local builder = m.P(rules)\r\n  local result = builder:match(input)\r\n  \r\n  if result ~= #input + 1 then -- failure, build the error message\r\n    local init, _ = rfind(input, '\\n*', result - 1) \r\n    local _, finish = string.find(input, '\\n*', result + 1)\r\n    \r\n    init = init or 0\r\n    finish = finish or #input\r\n    \r\n    local line = lines(input:sub(1, result))\r\n    local vicinity = input:sub(init + 1, finish)\r\n    \r\n    return false, 'Syntax error at line '..line..', near \"'..vicinity..'\"'\r\n  end\r\n  \r\n  return true\r\nend",
    "type": "function"
  }, {
    "id": 29,
    "text": "local builder = m.P(rules)",
    "type": "statement:localassign"
  }, {
    "id": 30,
    "text": "local result = builder:match(input)",
    "type": "statement:localassign"
  }, {
    "id": 31,
    "text": "if result ~= #input + 1 then -- failure, build the error message\r\n    local init, _ = rfind(input, '\\n*', result - 1) \r\n    local _, finish = string.find(input, '\\n*', result + 1)\r\n    \r\n    init = init or 0\r\n    finish = finish or #input\r\n    \r\n    local line = lines(input:sub(1, result))\r\n    local vicinity = input:sub(init + 1, finish)\r\n    \r\n    return false, 'Syntax error at line '..line..', near \"'..vicinity..'\"'\r\n  end",
    "type": "statement:if"
  }, {
    "id": 32,
    "text": "local init, _ = rfind(input, '\\n*', result - 1)",
    "type": "statement:localassign"
  }, {
    "id": 33,
    "text": "local _, finish = string.find(input, '\\n*', result + 1)",
    "type": "statement:localassign"
  }, {
    "id": 34,
    "text": "init = init or 0",
    "type": "statement:assign"
  }, {
    "id": 35,
    "text": "finish = finish or #input",
    "type": "statement:assign"
  }, {
    "id": 36,
    "text": "local line = lines(input:sub(1, result))",
    "type": "statement:localassign"
  }, {
    "id": 37,
    "text": "local vicinity = input:sub(init + 1, finish)",
    "type": "statement:localassign"
  }, {
    "id": 38,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 39,
    "text": "function apply(extraRules, captures)\r\n  return grammar.apply(rules, extraRules, captures)\r\nend",
    "type": "function"
  }, {
    "id": 40,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 41,
    "text": "function (_,i)\r\n\t\tprefix = p\r\n\t\treturn i\r\n\tend",
    "type": "function"
  }, {
    "id": 42,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 43,
    "text": "function (_, i)\r\n\t\treturn (prefix == p) and i\r\n\tend",
    "type": "function"
  }, {
    "id": 44,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 45,
    "text": "function (s, i)\r\n    local line = lines(s:sub(1, i))\r\n    local vicinity = s:sub(i-5, i+5):gsub(\"\\n\", \"<EOL>\")\r\n    \r\n    error('Malformed '..desc..' in line '..line..', near \"'..vicinity..'\": a \"'..rule:lower()..'\" is missing!', 0)\r\n  end",
    "type": "function"
  }, {
    "id": 46,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 47,
    "text": "",
    "type": "function container"
  }, {
    "id": 48,
    "text": "lpeg",
    "type": "module"
  }, {
    "id": 49,
    "text": "apply",
    "type": "global function"
  }, {
    "id": 50,
    "text": "P",
    "type": "global function"
  }, {
    "id": 51,
    "text": "Cc",
    "type": "global function"
  }, {
    "id": 52,
    "text": "Cf",
    "type": "global function"
  }, {
    "id": 53,
    "text": "complete",
    "type": "global function"
  }, {
    "id": 54,
    "text": "V",
    "type": "global function"
  }, {
    "id": 55,
    "text": "find",
    "type": "global function"
  }, {
    "id": 56,
    "text": "module",
    "type": "global function"
  }, {
    "id": 57,
    "text": "listOf",
    "type": "global function"
  }, {
    "id": 58,
    "text": "error",
    "type": "global function"
  }, {
    "id": 59,
    "text": "require",
    "type": "global function"
  }, {
    "id": 60,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 61,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 62,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 63,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 64,
    "text": "",
    "type": "global variable"
  }, {
    "id": 65,
    "text": "",
    "type": "variable container"
  }, {
    "id": 66,
    "text": "",
    "type": "require container"
  }, {
    "id": 67,
    "text": "",
    "type": "local variable"
  }, {
    "id": 68,
    "text": "",
    "type": "n/a"
  }, {
    "id": 69,
    "text": "",
    "type": "local variable"
  }, {
    "id": 70,
    "text": "",
    "type": "n/a"
  }, {
    "id": 71,
    "text": "",
    "type": "local variable"
  }, {
    "id": 72,
    "text": "",
    "type": "n/a"
  }, {
    "id": 73,
    "text": "",
    "type": "local variable"
  }, {
    "id": 74,
    "text": "",
    "type": "n/a"
  }, {
    "id": 75,
    "text": "",
    "type": "local variable"
  }, {
    "id": 76,
    "text": "",
    "type": "n/a"
  }, {
    "id": 77,
    "text": "",
    "type": "local variable"
  }, {
    "id": 78,
    "text": "",
    "type": "local variable"
  }, {
    "id": 79,
    "text": "",
    "type": "n/a"
  }, {
    "id": 80,
    "text": "",
    "type": "local variable"
  }, {
    "id": 81,
    "text": "",
    "type": "n/a"
  }, {
    "id": 82,
    "text": "",
    "type": "local variable"
  }, {
    "id": 83,
    "text": "",
    "type": "n/a"
  }, {
    "id": 84,
    "text": "",
    "type": "local variable"
  }, {
    "id": 85,
    "text": "",
    "type": "n/a"
  }, {
    "id": 86,
    "text": "",
    "type": "local variable"
  }, {
    "id": 87,
    "text": "",
    "type": "n/a"
  }, {
    "id": 88,
    "text": "",
    "type": "global variable"
  }, {
    "id": 89,
    "text": "",
    "type": "n/a"
  }, {
    "id": 90,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 91,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 92,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 93,
    "text": "",
    "type": "require local variable"
  } ]
}