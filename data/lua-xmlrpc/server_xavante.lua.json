{
  "_filename": "server_xavante.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/lua-xmlrpc/examples/server_xavante.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 9
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 9,
    "label": "has",
    "to": 11
  }, {
    "from": 9,
    "label": "has",
    "to": 12
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 2,
    "label": "has",
    "to": 14
  }, {
    "from": 2,
    "label": "has",
    "to": 15
  }, {
    "from": 2,
    "label": "has",
    "to": 16
  }, {
    "from": 16,
    "label": "has",
    "to": 17
  }, {
    "from": 2,
    "label": "has",
    "to": 18
  }, {
    "from": 2,
    "label": "has",
    "to": 19
  }, {
    "from": 20,
    "label": "has",
    "to": 17
  }, {
    "from": 20,
    "label": "has",
    "to": 21
  }, {
    "from": 22,
    "label": "has",
    "to": 18
  }, {
    "from": 22,
    "label": "has",
    "to": 23
  }, {
    "from": 2,
    "label": "calls",
    "to": 28
  }, {
    "from": 2,
    "label": "calls",
    "to": 33
  }, {
    "from": 2,
    "label": "calls",
    "to": 25
  }, {
    "from": 2,
    "label": "calls",
    "to": 26
  }, {
    "from": 24,
    "label": "calls",
    "to": 31
  }, {
    "from": 2,
    "label": "calls",
    "to": 32
  }, {
    "from": 24,
    "label": "calls",
    "to": 30
  }, {
    "from": 2,
    "label": "calls",
    "to": 36
  }, {
    "from": 24,
    "label": "calls",
    "to": 29
  }, {
    "from": 20,
    "label": "calls",
    "to": 37
  }, {
    "from": 2,
    "label": "calls",
    "to": 39
  }, {
    "from": 2,
    "label": "calls",
    "to": 35
  }, {
    "from": 2,
    "label": "calls",
    "to": 38
  }, {
    "from": 24,
    "label": "calls",
    "to": 40
  }, {
    "from": 24,
    "label": "calls",
    "to": 40
  }, {
    "from": 24,
    "label": "calls",
    "to": 40
  }, {
    "from": 24,
    "label": "calls",
    "to": 40
  }, {
    "from": 24,
    "label": "calls",
    "to": 40
  }, {
    "from": 24,
    "label": "calls",
    "to": 27
  }, {
    "from": 2,
    "label": "calls",
    "to": 34
  }, {
    "from": 1,
    "label": "contains",
    "to": 24
  }, {
    "from": 24,
    "label": "declares",
    "to": 2
  }, {
    "from": 24,
    "label": "declares",
    "to": 20
  }, {
    "from": 24,
    "label": "declares",
    "to": 22
  }, {
    "from": 1,
    "label": "contains",
    "to": 42
  }, {
    "from": 1,
    "label": "contains",
    "to": 43
  }, {
    "from": 42,
    "label": "initializes",
    "to": 44
  }, {
    "from": 44,
    "label": "assigns",
    "to": 45
  }, {
    "from": 45,
    "label": "assigns",
    "to": 46
  }, {
    "from": 42,
    "label": "initializes",
    "to": 47
  }, {
    "from": 47,
    "label": "assigns",
    "to": 48
  }, {
    "from": 48,
    "label": "assigns",
    "to": 49
  }, {
    "from": 49,
    "label": "assigns",
    "to": 50
  }, {
    "from": 48,
    "label": "assigns",
    "to": 51
  }, {
    "from": 51,
    "label": "assigns",
    "to": 52
  }, {
    "from": 42,
    "label": "initializes",
    "to": 53
  }, {
    "from": 53,
    "label": "assigns",
    "to": 54
  }, {
    "from": 43,
    "label": "initializes",
    "to": 41
  }, {
    "from": 41,
    "label": "requires",
    "to": 55
  }, {
    "from": 43,
    "label": "initializes",
    "to": 41
  }, {
    "from": 41,
    "label": "requires",
    "to": 56
  }, {
    "from": 43,
    "label": "initializes",
    "to": 41
  }, {
    "from": 41,
    "label": "requires",
    "to": 57
  }, {
    "from": 43,
    "label": "initializes",
    "to": 41
  }, {
    "from": 41,
    "label": "requires",
    "to": 58
  }, {
    "from": 43,
    "label": "initializes",
    "to": 41
  }, {
    "from": 41,
    "label": "requires",
    "to": 59
  }, {
    "from": 53,
    "label": "contains",
    "to": 22
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "server_xavante",
    "type": "module"
  }, {
    "id": 2,
    "text": "function wsapi_handler(wsapi_env)\r\n   local headers = { [\"Content-type\"] = \"text/xml\" }\r\n   local req = wsapi.request.new(wsapi_env)\r\n   local method, arg_table = xmlrpc.srvDecode(req.POST.post_data)\r\n   local func = xmlrpc.dispatch(method)\r\n   local result = { pcall(func, unpack(arg_table or {})) }\r\n   local ok = result[1]\r\n   if not ok then\r\n      result = { code = 3, message = result[2] }\r\n   else\r\n      table.remove(result, 1)\r\n      if table.getn(result) == 1 then\r\n         result = result[1]\r\n      end\r\n   end\r\n\r\n   local r = xmlrpc.srvEncode(result, not ok)\r\n   headers[\"Content-length\"] = tostring(#r)\r\n\r\n   local function xmlrpc_reply(wsapienv)\r\n      coroutine.yield(r)\r\n   end\r\n\r\n   return 200, headers, coroutine.wrap(xmlrpc_reply)\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local headers = { [\"Content-type\"] = \"text/xml\" }",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "local req = wsapi.request.new(wsapi_env)",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "local method, arg_table = xmlrpc.srvDecode(req.POST.post_data)",
    "type": "statement:localassign"
  }, {
    "id": 6,
    "text": "local func = xmlrpc.dispatch(method)",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "local result = { pcall(func, unpack(arg_table or {})) }",
    "type": "statement:localassign"
  }, {
    "id": 8,
    "text": "local ok = result[1]",
    "type": "statement:localassign"
  }, {
    "id": 9,
    "text": "if not ok then\r\n      result = { code = 3, message = result[2] }\r\n   else\r\n      table.remove(result, 1)\r\n      if table.getn(result) == 1 then\r\n         result = result[1]\r\n      end\r\n   end",
    "type": "statement:if"
  }, {
    "id": 10,
    "text": "result = { code = 3, message = result[2] }",
    "type": "statement:assign"
  }, {
    "id": 11,
    "text": "table.remove(result, 1)",
    "type": "statement:functioncall"
  }, {
    "id": 12,
    "text": "if table.getn(result) == 1 then\r\n         result = result[1]\r\n      end",
    "type": "statement:if"
  }, {
    "id": 13,
    "text": "result = result[1]",
    "type": "statement:assign"
  }, {
    "id": 14,
    "text": "local r = xmlrpc.srvEncode(result, not ok)",
    "type": "statement:localassign"
  }, {
    "id": 15,
    "text": "headers[\"Content-length\"] = tostring(#r)",
    "type": "statement:assign"
  }, {
    "id": 16,
    "text": "local function xmlrpc_reply(wsapienv)\r\n      coroutine.yield(r)\r\n   end",
    "type": "statement:localfunction"
  }, {
    "id": 17,
    "text": "coroutine.yield(r)",
    "type": "statement:functioncall"
  }, {
    "id": 18,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 19,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 20,
    "text": "local function xmlrpc_reply(wsapienv)\r\n      coroutine.yield(r)\r\n   end",
    "type": "function"
  }, {
    "id": 21,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 22,
    "text": "function xmlrpc_exports.hello_world()\r\n   return \"Hello World\"\r\nend",
    "type": "function"
  }, {
    "id": 23,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 24,
    "text": "",
    "type": "function container"
  }, {
    "id": 25,
    "text": "new",
    "type": "global function"
  }, {
    "id": 26,
    "text": "dispatch",
    "type": "global function"
  }, {
    "id": 27,
    "text": "start",
    "type": "global function"
  }, {
    "id": 28,
    "text": "srvEncode",
    "type": "global function"
  }, {
    "id": 29,
    "text": "HTTP",
    "type": "global function"
  }, {
    "id": 30,
    "text": "makeHandler",
    "type": "global function"
  }, {
    "id": 31,
    "text": "srvMethods",
    "type": "global function"
  }, {
    "id": 32,
    "text": "remove",
    "type": "global function"
  }, {
    "id": 33,
    "text": "srvDecode",
    "type": "global function"
  }, {
    "id": 34,
    "text": "tostring",
    "type": "global function"
  }, {
    "id": 35,
    "text": "wrap",
    "type": "global function"
  }, {
    "id": 36,
    "text": "pcall",
    "type": "global function"
  }, {
    "id": 37,
    "text": "yield",
    "type": "global function"
  }, {
    "id": 38,
    "text": "unpack",
    "type": "global function"
  }, {
    "id": 39,
    "text": "getn",
    "type": "global function"
  }, {
    "id": 40,
    "text": "require",
    "type": "global function"
  }, {
    "id": 41,
    "text": "",
    "type": "global variable"
  }, {
    "id": 42,
    "text": "",
    "type": "variable container"
  }, {
    "id": 43,
    "text": "",
    "type": "require container"
  }, {
    "id": 44,
    "text": "",
    "type": "local variable"
  }, {
    "id": 45,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 46,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 47,
    "text": "",
    "type": "local variable"
  }, {
    "id": 48,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 49,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 50,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 51,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 52,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 53,
    "text": "",
    "type": "global variable"
  }, {
    "id": 54,
    "text": "",
    "type": "n/a"
  }, {
    "id": 55,
    "text": "(xavante)",
    "type": "module"
  }, {
    "id": 56,
    "text": "httpd)",
    "type": "module"
  }, {
    "id": 57,
    "text": "xavante)",
    "type": "module"
  }, {
    "id": 58,
    "text": "request)",
    "type": "module"
  }, {
    "id": 59,
    "text": "(xmlrpc)",
    "type": "module"
  } ]
}