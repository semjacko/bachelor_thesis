{
  "_filename": "intellua.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/intellua/intellua.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 7,
    "label": "has",
    "to": 9
  }, {
    "from": 7,
    "label": "has",
    "to": 10
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 7,
    "label": "has",
    "to": 12
  }, {
    "from": 7,
    "label": "has",
    "to": 13
  }, {
    "from": 7,
    "label": "has",
    "to": 14
  }, {
    "from": 3,
    "label": "has",
    "to": 15
  }, {
    "from": 3,
    "label": "has",
    "to": 15
  }, {
    "from": 3,
    "label": "has",
    "to": 16
  }, {
    "from": 17,
    "label": "calls",
    "to": 19
  }, {
    "from": 17,
    "label": "calls",
    "to": 19
  }, {
    "from": 17,
    "label": "calls",
    "to": 21
  }, {
    "from": 17,
    "label": "calls",
    "to": 21
  }, {
    "from": 17,
    "label": "calls",
    "to": 21
  }, {
    "from": 17,
    "label": "calls",
    "to": 22
  }, {
    "from": 17,
    "label": "calls",
    "to": 23
  }, {
    "from": 17,
    "label": "calls",
    "to": 23
  }, {
    "from": 17,
    "label": "calls",
    "to": 20
  }, {
    "from": 17,
    "label": "calls",
    "to": 24
  }, {
    "from": 17,
    "label": "calls",
    "to": 24
  }, {
    "from": 17,
    "label": "calls",
    "to": 25
  }, {
    "from": 17,
    "label": "calls",
    "to": 25
  }, {
    "from": 17,
    "label": "calls",
    "to": 26
  }, {
    "from": 17,
    "label": "calls",
    "to": 27
  }, {
    "from": 1,
    "label": "contains",
    "to": 17
  }, {
    "from": 17,
    "label": "declares",
    "to": 3
  }, {
    "from": 1,
    "label": "contains",
    "to": 28
  }, {
    "from": 1,
    "label": "contains",
    "to": 29
  }, {
    "from": 28,
    "label": "initializes",
    "to": 30
  }, {
    "from": 30,
    "label": "assigns",
    "to": 31
  }, {
    "from": 28,
    "label": "initializes",
    "to": 32
  }, {
    "from": 32,
    "label": "assigns",
    "to": 33
  }, {
    "from": 29,
    "label": "initializes",
    "to": 34
  }, {
    "from": 34,
    "label": "requires",
    "to": 18
  }, {
    "from": 29,
    "label": "initializes",
    "to": 35
  }, {
    "from": 35,
    "label": "requires",
    "to": 2
  }, {
    "from": 1,
    "label": "provides",
    "to": 36
  }, {
    "from": 32,
    "label": "represents",
    "to": 37
  }, {
    "from": 36,
    "label": "provides",
    "to": 37
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "intellua",
    "type": "module"
  }, {
    "id": 2,
    "text": "modules",
    "type": "module"
  }, {
    "id": 3,
    "text": "function(mod)\r\n\tlocal ok, res = pcall(oldrequire, mod)\r\n\tif ok then\r\n\t\treturn res\r\n\telse\r\n\t\tlocal where = modules[mod]\r\n\t\tif type(where) == \"string\" then\r\n\t\t\tassert(dist.install(where))\r\n\t\telseif type(where) == \"table\" then\r\n\t\t\tio.write('The module \"', mod, '\" is provided by the following packages: ')\r\n\t\t\tfor i,m in ipairs(where) do\r\n\t\t\t\tio.write(m, ' ')\r\n\t\t\tend\r\n\t\t\tio.write('\\nChoose package to install: ')\r\n\t\t\tlocal choice = io.read()\r\n\t\t\tassert(dist.install(choice))\r\n\t\tend\r\n\t\treturn oldrequire(mod)\r\n\tend\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "local ok, res = pcall(oldrequire, mod)",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "if ok then\r\n\t\treturn res\r\n\telse\r\n\t\tlocal where = modules[mod]\r\n\t\tif type(where) == \"string\" then\r\n\t\t\tassert(dist.install(where))\r\n\t\telseif type(where) == \"table\" then\r\n\t\t\tio.write('The module \"', mod, '\" is provided by the following packages: ')\r\n\t\t\tfor i,m in ipairs(where) do\r\n\t\t\t\tio.write(m, ' ')\r\n\t\t\tend\r\n\t\t\tio.write('\\nChoose package to install: ')\r\n\t\t\tlocal choice = io.read()\r\n\t\t\tassert(dist.install(choice))\r\n\t\tend\r\n\t\treturn oldrequire(mod)\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 6,
    "text": "local where = modules[mod]",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "if type(where) == \"string\" then\r\n\t\t\tassert(dist.install(where))\r\n\t\telseif type(where) == \"table\" then\r\n\t\t\tio.write('The module \"', mod, '\" is provided by the following packages: ')\r\n\t\t\tfor i,m in ipairs(where) do\r\n\t\t\t\tio.write(m, ' ')\r\n\t\t\tend\r\n\t\t\tio.write('\\nChoose package to install: ')\r\n\t\t\tlocal choice = io.read()\r\n\t\t\tassert(dist.install(choice))\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 8,
    "text": "assert(dist.install(where))",
    "type": "statement:functioncall"
  }, {
    "id": 9,
    "text": "io.write('The module \"', mod, '\" is provided by the following packages: ')",
    "type": "statement:functioncall"
  }, {
    "id": 10,
    "text": "for i,m in ipairs(where) do\r\n\t\t\t\tio.write(m, ' ')\r\n\t\t\tend",
    "type": "statement:genericfor"
  }, {
    "id": 11,
    "text": "io.write(m, ' ')",
    "type": "statement:functioncall"
  }, {
    "id": 12,
    "text": "io.write('\\nChoose package to install: ')",
    "type": "statement:functioncall"
  }, {
    "id": 13,
    "text": "local choice = io.read()",
    "type": "statement:localassign"
  }, {
    "id": 14,
    "text": "assert(dist.install(choice))",
    "type": "statement:functioncall"
  }, {
    "id": 15,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 16,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 17,
    "text": "",
    "type": "function container"
  }, {
    "id": 18,
    "text": "dist",
    "type": "module"
  }, {
    "id": 19,
    "text": "install",
    "type": "global function"
  }, {
    "id": 20,
    "text": "pcall",
    "type": "global function"
  }, {
    "id": 21,
    "text": "write",
    "type": "global function"
  }, {
    "id": 22,
    "text": "ipairs",
    "type": "global function"
  }, {
    "id": 23,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 24,
    "text": "type",
    "type": "global function"
  }, {
    "id": 25,
    "text": "require",
    "type": "global function"
  }, {
    "id": 26,
    "text": "read",
    "type": "global function"
  }, {
    "id": 27,
    "text": "oldrequire",
    "type": "global function"
  }, {
    "id": 28,
    "text": "",
    "type": "variable container"
  }, {
    "id": 29,
    "text": "",
    "type": "require container"
  }, {
    "id": 30,
    "text": "",
    "type": "local variable"
  }, {
    "id": 31,
    "text": "",
    "type": "n/a"
  }, {
    "id": 32,
    "text": "",
    "type": "local variable"
  }, {
    "id": 33,
    "text": "",
    "type": "n/a"
  }, {
    "id": 34,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 35,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 36,
    "text": "",
    "type": "interface container"
  }, {
    "id": 37,
    "text": "",
    "type": "interface"
  } ]
}