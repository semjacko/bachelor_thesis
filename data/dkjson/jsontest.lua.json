{
  "_filename": "jsontest.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/dkjson/jsontest.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 2
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 3,
    "label": "has",
    "to": 8
  }, {
    "from": 3,
    "label": "has",
    "to": 9
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 14,
    "label": "has",
    "to": 13
  }, {
    "from": 15,
    "label": "has",
    "to": 13
  }, {
    "from": 16,
    "label": "has",
    "to": 17
  }, {
    "from": 16,
    "label": "has",
    "to": 18
  }, {
    "from": 18,
    "label": "has",
    "to": 19
  }, {
    "from": 16,
    "label": "has",
    "to": 20
  }, {
    "from": 21,
    "label": "has",
    "to": 22
  }, {
    "from": 21,
    "label": "has",
    "to": 13
  }, {
    "from": 21,
    "label": "has",
    "to": 13
  }, {
    "from": 21,
    "label": "has",
    "to": 13
  }, {
    "from": 21,
    "label": "has",
    "to": 13
  }, {
    "from": 21,
    "label": "has",
    "to": 13
  }, {
    "from": 21,
    "label": "has",
    "to": 13
  }, {
    "from": 21,
    "label": "has",
    "to": 23
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 24,
    "label": "has",
    "to": 26
  }, {
    "from": 24,
    "label": "has",
    "to": 27
  }, {
    "from": 27,
    "label": "has",
    "to": 28
  }, {
    "from": 27,
    "label": "has",
    "to": 29
  }, {
    "from": 27,
    "label": "has",
    "to": 30
  }, {
    "from": 27,
    "label": "has",
    "to": 31
  }, {
    "from": 24,
    "label": "has",
    "to": 13
  }, {
    "from": 24,
    "label": "has",
    "to": 32
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 32,
    "label": "has",
    "to": 34
  }, {
    "from": 24,
    "label": "has",
    "to": 13
  }, {
    "from": 24,
    "label": "has",
    "to": 13
  }, {
    "from": 24,
    "label": "has",
    "to": 13
  }, {
    "from": 24,
    "label": "has",
    "to": 35
  }, {
    "from": 36,
    "label": "has",
    "to": 37
  }, {
    "from": 36,
    "label": "has",
    "to": 38
  }, {
    "from": 38,
    "label": "has",
    "to": 39
  }, {
    "from": 38,
    "label": "has",
    "to": 40
  }, {
    "from": 36,
    "label": "has",
    "to": 41
  }, {
    "from": 42,
    "label": "has",
    "to": 43
  }, {
    "from": 42,
    "label": "has",
    "to": 44
  }, {
    "from": 44,
    "label": "has",
    "to": 45
  }, {
    "from": 44,
    "label": "has",
    "to": 46
  }, {
    "from": 44,
    "label": "has",
    "to": 47
  }, {
    "from": 42,
    "label": "has",
    "to": 48
  }, {
    "from": 3,
    "label": "calls",
    "to": 52
  }, {
    "from": 3,
    "label": "calls",
    "to": 52
  }, {
    "from": 3,
    "label": "calls",
    "to": 52
  }, {
    "from": 49,
    "label": "calls",
    "to": 64
  }, {
    "from": 49,
    "label": "calls",
    "to": 3
  }, {
    "from": 49,
    "label": "calls",
    "to": 3
  }, {
    "from": 49,
    "label": "calls",
    "to": 63
  }, {
    "from": 24,
    "label": "calls",
    "to": 67
  }, {
    "from": 24,
    "label": "calls",
    "to": 67
  }, {
    "from": 49,
    "label": "calls",
    "to": 54
  }, {
    "from": 49,
    "label": "calls",
    "to": 54
  }, {
    "from": 49,
    "label": "calls",
    "to": 54
  }, {
    "from": 49,
    "label": "calls",
    "to": 54
  }, {
    "from": 49,
    "label": "calls",
    "to": 54
  }, {
    "from": 49,
    "label": "calls",
    "to": 54
  }, {
    "from": 49,
    "label": "calls",
    "to": 60
  }, {
    "from": 3,
    "label": "calls",
    "to": 55
  }, {
    "from": 21,
    "label": "calls",
    "to": 61
  }, {
    "from": 21,
    "label": "calls",
    "to": 61
  }, {
    "from": 21,
    "label": "calls",
    "to": 61
  }, {
    "from": 21,
    "label": "calls",
    "to": 61
  }, {
    "from": 21,
    "label": "calls",
    "to": 61
  }, {
    "from": 21,
    "label": "calls",
    "to": 61
  }, {
    "from": 21,
    "label": "calls",
    "to": 61
  }, {
    "from": 21,
    "label": "calls",
    "to": 61
  }, {
    "from": 21,
    "label": "calls",
    "to": 61
  }, {
    "from": 24,
    "label": "calls",
    "to": 61
  }, {
    "from": 49,
    "label": "calls",
    "to": 70
  }, {
    "from": 49,
    "label": "calls",
    "to": 70
  }, {
    "from": 49,
    "label": "calls",
    "to": 70
  }, {
    "from": 49,
    "label": "calls",
    "to": 70
  }, {
    "from": 49,
    "label": "calls",
    "to": 70
  }, {
    "from": 49,
    "label": "calls",
    "to": 70
  }, {
    "from": 49,
    "label": "calls",
    "to": 70
  }, {
    "from": 49,
    "label": "calls",
    "to": 70
  }, {
    "from": 49,
    "label": "calls",
    "to": 70
  }, {
    "from": 49,
    "label": "calls",
    "to": 70
  }, {
    "from": 49,
    "label": "calls",
    "to": 53
  }, {
    "from": 49,
    "label": "calls",
    "to": 56
  }, {
    "from": 24,
    "label": "calls",
    "to": 65
  }, {
    "from": 49,
    "label": "calls",
    "to": 15
  }, {
    "from": 49,
    "label": "calls",
    "to": 15
  }, {
    "from": 49,
    "label": "calls",
    "to": 15
  }, {
    "from": 49,
    "label": "calls",
    "to": 16
  }, {
    "from": 49,
    "label": "calls",
    "to": 16
  }, {
    "from": 49,
    "label": "calls",
    "to": 16
  }, {
    "from": 49,
    "label": "calls",
    "to": 16
  }, {
    "from": 49,
    "label": "calls",
    "to": 16
  }, {
    "from": 49,
    "label": "calls",
    "to": 16
  }, {
    "from": 3,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 16,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 57
  }, {
    "from": 49,
    "label": "calls",
    "to": 24
  }, {
    "from": 49,
    "label": "calls",
    "to": 21
  }, {
    "from": 49,
    "label": "calls",
    "to": 58
  }, {
    "from": 49,
    "label": "calls",
    "to": 58
  }, {
    "from": 49,
    "label": "calls",
    "to": 58
  }, {
    "from": 49,
    "label": "calls",
    "to": 58
  }, {
    "from": 49,
    "label": "calls",
    "to": 58
  }, {
    "from": 49,
    "label": "calls",
    "to": 58
  }, {
    "from": 49,
    "label": "calls",
    "to": 58
  }, {
    "from": 49,
    "label": "calls",
    "to": 58
  }, {
    "from": 49,
    "label": "calls",
    "to": 58
  }, {
    "from": 49,
    "label": "calls",
    "to": 58
  }, {
    "from": 49,
    "label": "calls",
    "to": 58
  }, {
    "from": 49,
    "label": "calls",
    "to": 58
  }, {
    "from": 49,
    "label": "calls",
    "to": 58
  }, {
    "from": 21,
    "label": "calls",
    "to": 62
  }, {
    "from": 21,
    "label": "calls",
    "to": 62
  }, {
    "from": 21,
    "label": "calls",
    "to": 62
  }, {
    "from": 21,
    "label": "calls",
    "to": 62
  }, {
    "from": 49,
    "label": "calls",
    "to": 59
  }, {
    "from": 49,
    "label": "calls",
    "to": 68
  }, {
    "from": 49,
    "label": "calls",
    "to": 69
  }, {
    "from": 49,
    "label": "calls",
    "to": 69
  }, {
    "from": 49,
    "label": "calls",
    "to": 69
  }, {
    "from": 49,
    "label": "calls",
    "to": 69
  }, {
    "from": 49,
    "label": "calls",
    "to": 69
  }, {
    "from": 49,
    "label": "calls",
    "to": 69
  }, {
    "from": 49,
    "label": "calls",
    "to": 66
  }, {
    "from": 49,
    "label": "calls",
    "to": 66
  }, {
    "from": 16,
    "label": "calls",
    "to": 12
  }, {
    "from": 49,
    "label": "calls",
    "to": 12
  }, {
    "from": 49,
    "label": "calls",
    "to": 12
  }, {
    "from": 49,
    "label": "calls",
    "to": 51
  }, {
    "from": 2,
    "label": "contains",
    "to": 49
  }, {
    "from": 49,
    "label": "declares",
    "to": 3
  }, {
    "from": 49,
    "label": "declares",
    "to": 10
  }, {
    "from": 49,
    "label": "declares",
    "to": 12
  }, {
    "from": 49,
    "label": "declares",
    "to": 14
  }, {
    "from": 49,
    "label": "declares",
    "to": 15
  }, {
    "from": 49,
    "label": "declares",
    "to": 16
  }, {
    "from": 49,
    "label": "declares",
    "to": 21
  }, {
    "from": 49,
    "label": "declares",
    "to": 24
  }, {
    "from": 49,
    "label": "declares",
    "to": 36
  }, {
    "from": 49,
    "label": "declares",
    "to": 42
  }, {
    "from": 2,
    "label": "contains",
    "to": 71
  }, {
    "from": 2,
    "label": "contains",
    "to": 72
  }, {
    "from": 71,
    "label": "initializes",
    "to": 73
  }, {
    "from": 71,
    "label": "initializes",
    "to": 74
  }, {
    "from": 71,
    "label": "initializes",
    "to": 75
  }, {
    "from": 71,
    "label": "initializes",
    "to": 76
  }, {
    "from": 71,
    "label": "initializes",
    "to": 77
  }, {
    "from": 77,
    "label": "assigns",
    "to": 78
  }, {
    "from": 71,
    "label": "initializes",
    "to": 79
  }, {
    "from": 71,
    "label": "initializes",
    "to": 80
  }, {
    "from": 80,
    "label": "assigns",
    "to": 81
  }, {
    "from": 72,
    "label": "initializes",
    "to": 82
  }, {
    "from": 82,
    "label": "requires",
    "to": 1
  }, {
    "from": 72,
    "label": "initializes",
    "to": 83
  }, {
    "from": 83,
    "label": "requires",
    "to": 84
  }, {
    "from": 72,
    "label": "initializes",
    "to": 85
  }, {
    "from": 85,
    "label": "requires",
    "to": 50
  }, {
    "from": 72,
    "label": "initializes",
    "to": 86
  }, {
    "from": 86,
    "label": "requires",
    "to": 87
  }, {
    "from": 72,
    "label": "initializes",
    "to": 88
  }, {
    "from": 88,
    "label": "requires",
    "to": 89
  }, {
    "from": 72,
    "label": "initializes",
    "to": 90
  }, {
    "from": 90,
    "label": "requires",
    "to": 91
  }, {
    "from": 72,
    "label": "initializes",
    "to": 92
  }, {
    "from": 92,
    "label": "requires",
    "to": 93
  }, {
    "from": 72,
    "label": "initializes",
    "to": 94
  }, {
    "from": 94,
    "label": "requires",
    "to": 95
  }, {
    "from": 72,
    "label": "initializes",
    "to": 96
  }, {
    "from": 96,
    "label": "requires",
    "to": 97
  }, {
    "from": 98,
    "label": "requires",
    "to": 84
  }, {
    "from": 99,
    "label": "requires",
    "to": 87
  }, {
    "from": 100,
    "label": "requires",
    "to": 89
  }, {
    "from": 101,
    "label": "requires",
    "to": 91
  }, {
    "from": 102,
    "label": "requires",
    "to": 93
  }, {
    "from": 103,
    "label": "requires",
    "to": 95
  }, {
    "from": 104,
    "label": "requires",
    "to": 97
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "dkjson",
    "type": "module"
  }, {
    "id": 2,
    "text": "jsontest",
    "type": "module"
  }, {
    "id": 3,
    "text": "local function inlocale(fn)\r\n  local oldloc = os.setlocale(nil, 'numeric')\r\n  if not os.setlocale(testlocale, 'numeric') then\r\n    print(\"test could not switch to locale \"..testlocale)\r\n  else\r\n    fn()\r\n  end\r\n  os.setlocale(oldloc, 'numeric')\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "local oldloc = os.setlocale(nil, 'numeric')",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "if not os.setlocale(testlocale, 'numeric') then\r\n    print(\"test could not switch to locale \"..testlocale)\r\n  else\r\n    fn()\r\n  end",
    "type": "statement:if"
  }, {
    "id": 6,
    "text": "print(\"test could not switch to locale \"..testlocale)",
    "type": "statement:functioncall"
  }, {
    "id": 7,
    "text": "fn()",
    "type": "statement:functioncall"
  }, {
    "id": 8,
    "text": "os.setlocale(oldloc, 'numeric')",
    "type": "statement:functioncall"
  }, {
    "id": 9,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 10,
    "text": "function () error \"lpeg disabled\" end",
    "type": "function"
  }, {
    "id": 11,
    "text": "error \"lpeg disabled\"",
    "type": "statement:functioncall"
  }, {
    "id": 12,
    "text": "function(x) return fleece.json(x, \"E4\") end",
    "type": "function"
  }, {
    "id": 13,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 14,
    "text": "function(x) return json:encode(x) end",
    "type": "function"
  }, {
    "id": 15,
    "text": "function(x) return json:decode(x) end",
    "type": "function"
  }, {
    "id": 16,
    "text": "local function test (x, n, expect)\r\n    local enc = encode{ x }:match(\"^%s*%[%s*%\\\"(.-)%\\\"%s*%]%s*$\")\r\n    if not enc or (escapecodes[x] ~= enc\r\n        and (\"\\\\u%04x\"):format(n) ~= enc:gsub(\"[A-F]\", string.lower)\r\n        and not (expect and enc:match(\"^\"..expect..\"$\"))) then\r\n      print((\"U+%04X isn't encoded correctly: %q\"):format(n, enc))\r\n    end\r\n  end",
    "type": "function"
  }, {
    "id": 17,
    "text": "local enc = encode{ x }:match(\"^%s*%[%s*%\\\"(.-)%\\\"%s*%]%s*$\")",
    "type": "statement:localassign"
  }, {
    "id": 18,
    "text": "if not enc or (escapecodes[x] ~= enc\r\n        and (\"\\\\u%04x\"):format(n) ~= enc:gsub(\"[A-F]\", string.lower)\r\n        and not (expect and enc:match(\"^\"..expect..\"$\"))) then\r\n      print((\"U+%04X isn't encoded correctly: %q\"):format(n, enc))\r\n    end",
    "type": "statement:if"
  }, {
    "id": 19,
    "text": "print((\"U+%04X isn't encoded correctly: %q\"):format(n, enc))",
    "type": "statement:functioncall"
  }, {
    "id": 20,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 21,
    "text": "local function unichar (value)\r\n  if value < 0 then\r\n    return nil\r\n  elseif value <= 0x007f then\r\n    return strchar (value)\r\n  elseif value <= 0x07ff then\r\n    return strchar (0xc0 + floor(value/0x40),\r\n                    0x80 + (floor(value) % 0x40))\r\n  elseif value <= 0xffff then\r\n    return strchar (0xe0 + floor(value/0x1000),\r\n                    0x80 + (floor(value/0x40) % 0x40),\r\n                    0x80 + (floor(value) % 0x40))\r\n  elseif value <= 0x10ffff then\r\n    return strchar (0xf0 + floor(value/0x40000),\r\n                    0x80 + (floor(value/0x1000) % 0x40),\r\n                    0x80 + (floor(value/0x40) % 0x40),\r\n                    0x80 + (floor(value) % 0x40))\r\n  else\r\n    return nil\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 22,
    "text": "if value < 0 then\r\n    return nil\r\n  elseif value <= 0x007f then\r\n    return strchar (value)\r\n  elseif value <= 0x07ff then\r\n    return strchar (0xc0 + floor(value/0x40),\r\n                    0x80 + (floor(value) % 0x40))\r\n  elseif value <= 0xffff then\r\n    return strchar (0xe0 + floor(value/0x1000),\r\n                    0x80 + (floor(value/0x40) % 0x40),\r\n                    0x80 + (floor(value) % 0x40))\r\n  elseif value <= 0x10ffff then\r\n    return strchar (0xf0 + floor(value/0x40000),\r\n                    0x80 + (floor(value/0x1000) % 0x40),\r\n                    0x80 + (floor(value/0x40) % 0x40),\r\n                    0x80 + (floor(value) % 0x40))\r\n  else\r\n    return nil\r\n  end",
    "type": "statement:if"
  }, {
    "id": 23,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 24,
    "text": "local function escapeutf8 (uchar)\r\n  local a, b, c, d = strbyte (uchar, 1, 4)\r\n  a, b, c, d = a or 0, b or 0, c or 0, d or 0\r\n  if a <= 0x7f then\r\n    value = a\r\n  elseif 0xc0 <= a and a <= 0xdf and b >= 0x80 then\r\n    value = (a - 0xc0) * 0x40 + b - 0x80\r\n  elseif 0xe0 <= a and a <= 0xef and b >= 0x80 and c >= 0x80 then\r\n    value = ((a - 0xe0) * 0x40 + b - 0x80) * 0x40 + c - 0x80\r\n  elseif 0xf0 <= a and a <= 0xf7 and b >= 0x80 and c >= 0x80 and d >= 0x80 then\r\n    value = (((a - 0xf0) * 0x40 + b - 0x80) * 0x40 + c - 0x80) * 0x40 + d - 0x80\r\n  else\r\n    return \"\"\r\n  end\r\n  if value <= 0xffff then\r\n    return strformat (\"\\\\u%.4x\", value)\r\n  elseif value <= 0x10ffff then\r\n    -- encode as UTF-16 surrogate pair\r\n    value = value - 0x10000\r\n    local highsur, lowsur = 0xD800 + floor (value/0x400), 0xDC00 + (value % 0x400)\r\n    return strformat (\"\\\\u%.4x\\\\u%.4x\", highsur, lowsur)\r\n  else\r\n    return \"\"\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 25,
    "text": "local a, b, c, d = strbyte (uchar, 1, 4)",
    "type": "statement:localassign"
  }, {
    "id": 26,
    "text": "a, b, c, d = a or 0, b or 0, c or 0, d or 0",
    "type": "statement:assign"
  }, {
    "id": 27,
    "text": "if a <= 0x7f then\r\n    value = a\r\n  elseif 0xc0 <= a and a <= 0xdf and b >= 0x80 then\r\n    value = (a - 0xc0) * 0x40 + b - 0x80\r\n  elseif 0xe0 <= a and a <= 0xef and b >= 0x80 and c >= 0x80 then\r\n    value = ((a - 0xe0) * 0x40 + b - 0x80) * 0x40 + c - 0x80\r\n  elseif 0xf0 <= a and a <= 0xf7 and b >= 0x80 and c >= 0x80 and d >= 0x80 then\r\n    value = (((a - 0xf0) * 0x40 + b - 0x80) * 0x40 + c - 0x80) * 0x40 + d - 0x80\r\n  else\r\n    return \"\"\r\n  end",
    "type": "statement:if"
  }, {
    "id": 28,
    "text": "value = a",
    "type": "statement:assign"
  }, {
    "id": 29,
    "text": "value = (a - 0xc0) * 0x40 + b - 0x80",
    "type": "statement:assign"
  }, {
    "id": 30,
    "text": "value = ((a - 0xe0) * 0x40 + b - 0x80) * 0x40 + c - 0x80",
    "type": "statement:assign"
  }, {
    "id": 31,
    "text": "value = (((a - 0xf0) * 0x40 + b - 0x80) * 0x40 + c - 0x80) * 0x40 + d - 0x80",
    "type": "statement:assign"
  }, {
    "id": 32,
    "text": "if value <= 0xffff then\r\n    return strformat (\"\\\\u%.4x\", value)\r\n  elseif value <= 0x10ffff then\r\n    -- encode as UTF-16 surrogate pair\r\n    value = value - 0x10000\r\n    local highsur, lowsur = 0xD800 + floor (value/0x400), 0xDC00 + (value % 0x400)\r\n    return strformat (\"\\\\u%.4x\\\\u%.4x\", highsur, lowsur)\r\n  else\r\n    return \"\"\r\n  end",
    "type": "statement:if"
  }, {
    "id": 33,
    "text": "value = value - 0x10000",
    "type": "statement:assign"
  }, {
    "id": 34,
    "text": "local highsur, lowsur = 0xD800 + floor (value/0x400), 0xDC00 + (value % 0x400)",
    "type": "statement:localassign"
  }, {
    "id": 35,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 36,
    "text": "function ()\r\n    local r, x = pcall(encode, { 0.5 })\r\n    if not r then\r\n      print(\"encoding 0.5 in locale raises an error:\", x)\r\n    elseif not x:find(\".\", 1, true) then\r\n      print(\"In locale 0.5 isn't converted into valid JSON:\", x)\r\n    end\r\n  end",
    "type": "function"
  }, {
    "id": 37,
    "text": "local r, x = pcall(encode, { 0.5 })",
    "type": "statement:localassign"
  }, {
    "id": 38,
    "text": "if not r then\r\n      print(\"encoding 0.5 in locale raises an error:\", x)\r\n    elseif not x:find(\".\", 1, true) then\r\n      print(\"In locale 0.5 isn't converted into valid JSON:\", x)\r\n    end",
    "type": "statement:if"
  }, {
    "id": 39,
    "text": "print(\"encoding 0.5 in locale raises an error:\", x)",
    "type": "statement:functioncall"
  }, {
    "id": 40,
    "text": "print(\"In locale 0.5 isn't converted into valid JSON:\", x)",
    "type": "statement:functioncall"
  }, {
    "id": 41,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 42,
    "text": "function ()\r\n    local r, x = pcall(decode, \"[0.5]\")\r\n    if not r then\r\n      print(\"decoding 0.5 in locale raises an error:\", x)\r\n    elseif not x then\r\n      print(\"cannot decode 0.5 in locale\")\r\n    elseif x[1] ~= 0.5 then\r\n      print(\"decoded 0.5 incorrectly in locale:\", x[1])\r\n    end\r\n  end",
    "type": "function"
  }, {
    "id": 43,
    "text": "local r, x = pcall(decode, \"[0.5]\")",
    "type": "statement:localassign"
  }, {
    "id": 44,
    "text": "if not r then\r\n      print(\"decoding 0.5 in locale raises an error:\", x)\r\n    elseif not x then\r\n      print(\"cannot decode 0.5 in locale\")\r\n    elseif x[1] ~= 0.5 then\r\n      print(\"decoded 0.5 incorrectly in locale:\", x[1])\r\n    end",
    "type": "statement:if"
  }, {
    "id": 45,
    "text": "print(\"decoding 0.5 in locale raises an error:\", x)",
    "type": "statement:functioncall"
  }, {
    "id": 46,
    "text": "print(\"cannot decode 0.5 in locale\")",
    "type": "statement:functioncall"
  }, {
    "id": 47,
    "text": "print(\"decoded 0.5 incorrectly in locale:\", x[1])",
    "type": "statement:functioncall"
  }, {
    "id": 48,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 49,
    "text": "",
    "type": "function container"
  }, {
    "id": 50,
    "text": "fleece",
    "type": "module"
  }, {
    "id": 51,
    "text": "json",
    "type": "global function"
  }, {
    "id": 52,
    "text": "setlocale",
    "type": "global function"
  }, {
    "id": 53,
    "text": "tonumber",
    "type": "global function"
  }, {
    "id": 54,
    "text": "dkdecode",
    "type": "global function"
  }, {
    "id": 55,
    "text": "fn",
    "type": "global function"
  }, {
    "id": 56,
    "text": "lower",
    "type": "global function"
  }, {
    "id": 57,
    "text": "print",
    "type": "global function"
  }, {
    "id": 58,
    "text": "pcall",
    "type": "global function"
  }, {
    "id": 59,
    "text": "char",
    "type": "global function"
  }, {
    "id": 60,
    "text": "error",
    "type": "global function"
  }, {
    "id": 61,
    "text": "floor",
    "type": "global function"
  }, {
    "id": 62,
    "text": "strchar",
    "type": "global function"
  }, {
    "id": 63,
    "text": "open",
    "type": "global function"
  }, {
    "id": 64,
    "text": "concat",
    "type": "global function"
  }, {
    "id": 65,
    "text": "strbyte",
    "type": "global function"
  }, {
    "id": 66,
    "text": "getmetatable",
    "type": "global function"
  }, {
    "id": 67,
    "text": "strformat",
    "type": "global function"
  }, {
    "id": 68,
    "text": "match",
    "type": "global function"
  }, {
    "id": 69,
    "text": "type",
    "type": "global function"
  }, {
    "id": 70,
    "text": "require",
    "type": "global function"
  }, {
    "id": 71,
    "text": "",
    "type": "variable container"
  }, {
    "id": 72,
    "text": "",
    "type": "require container"
  }, {
    "id": 73,
    "text": "",
    "type": "local variable"
  }, {
    "id": 74,
    "text": "",
    "type": "local variable"
  }, {
    "id": 75,
    "text": "",
    "type": "local variable"
  }, {
    "id": 76,
    "text": "",
    "type": "local variable"
  }, {
    "id": 77,
    "text": "",
    "type": "local variable"
  }, {
    "id": 78,
    "text": "",
    "type": "symbol"
  }, {
    "id": 79,
    "text": "",
    "type": "local variable"
  }, {
    "id": 80,
    "text": "",
    "type": "local variable"
  }, {
    "id": 81,
    "text": "",
    "type": "string"
  }, {
    "id": 82,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 83,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 84,
    "text": "cmjjson",
    "type": "module"
  }, {
    "id": 85,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 86,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 87,
    "text": "jfjson",
    "type": "module"
  }, {
    "id": 88,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 89,
    "text": "(yajl)",
    "type": "module"
  }, {
    "id": 90,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 91,
    "text": "cjson",
    "type": "module"
  }, {
    "id": 92,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 93,
    "text": "LuaJSON",
    "type": "module"
  }, {
    "id": 94,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 95,
    "text": "sbjson",
    "type": "module"
  }, {
    "id": 96,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 97,
    "text": "json",
    "type": "module"
  }, {
    "id": 98,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 99,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 100,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 101,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 102,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 103,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 104,
    "text": "",
    "type": "require local variable"
  } ]
}