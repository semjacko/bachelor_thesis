{
  "_filename": "aliases.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luadocer/src/luadocer/taglet/standard/aliases.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 6,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 9
  }, {
    "from": 2,
    "label": "calls",
    "to": 14
  }, {
    "from": 2,
    "label": "calls",
    "to": 12
  }, {
    "from": 10,
    "label": "calls",
    "to": 13
  }, {
    "from": 2,
    "label": "calls",
    "to": 15
  }, {
    "from": 1,
    "label": "contains",
    "to": 10
  }, {
    "from": 10,
    "label": "declares",
    "to": 2
  }, {
    "from": 11,
    "label": "calls",
    "to": 2
  }, {
    "from": 1,
    "label": "contains",
    "to": 16
  }, {
    "from": 1,
    "label": "contains",
    "to": 17
  }, {
    "from": 16,
    "label": "initializes",
    "to": 18
  }, {
    "from": 18,
    "label": "assigns",
    "to": 19
  }, {
    "from": 19,
    "label": "assigns",
    "to": 20
  }, {
    "from": 20,
    "label": "assigns",
    "to": 21
  }, {
    "from": 19,
    "label": "assigns",
    "to": 22
  }, {
    "from": 22,
    "label": "assigns",
    "to": 23
  }, {
    "from": 19,
    "label": "assigns",
    "to": 24
  }, {
    "from": 24,
    "label": "assigns",
    "to": 25
  }, {
    "from": 19,
    "label": "assigns",
    "to": 26
  }, {
    "from": 26,
    "label": "assigns",
    "to": 27
  }, {
    "from": 19,
    "label": "assigns",
    "to": 28
  }, {
    "from": 28,
    "label": "assigns",
    "to": 29
  }, {
    "from": 19,
    "label": "assigns",
    "to": 30
  }, {
    "from": 30,
    "label": "assigns",
    "to": 31
  }, {
    "from": 19,
    "label": "assigns",
    "to": 32
  }, {
    "from": 32,
    "label": "assigns",
    "to": 33
  }, {
    "from": 19,
    "label": "assigns",
    "to": 34
  }, {
    "from": 34,
    "label": "assigns",
    "to": 35
  }, {
    "from": 19,
    "label": "assigns",
    "to": 36
  }, {
    "from": 36,
    "label": "assigns",
    "to": 37
  }, {
    "from": 19,
    "label": "assigns",
    "to": 38
  }, {
    "from": 38,
    "label": "assigns",
    "to": 39
  }, {
    "from": 19,
    "label": "assigns",
    "to": 40
  }, {
    "from": 40,
    "label": "assigns",
    "to": 41
  }, {
    "from": 19,
    "label": "assigns",
    "to": 42
  }, {
    "from": 42,
    "label": "assigns",
    "to": 43
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "aliases",
    "type": "module"
  }, {
    "id": 2,
    "text": "function get_tag(alias)\r\n\tfor k,v in pairs(aliases) do\r\n\t\tif(k==alias) then\r\n\t\t\treturn alias;\r\n\t\tend\r\n\t\tif(type(v)==\"table\") then\r\n\t\t\tfor _,a in ipairs(v) do\r\n\t\t\t\tif(a==alias) then\r\n\t\t\t\t\treturn k;\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\treturn alias; --mozno standard tag\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "for k,v in pairs(aliases) do\r\n\t\tif(k==alias) then\r\n\t\t\treturn alias;\r\n\t\tend\r\n\t\tif(type(v)==\"table\") then\r\n\t\t\tfor _,a in ipairs(v) do\r\n\t\t\t\tif(a==alias) then\r\n\t\t\t\t\treturn k;\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend",
    "type": "statement:genericfor"
  }, {
    "id": 4,
    "text": "if(k==alias) then\r\n\t\t\treturn alias;\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 5,
    "text": "if(type(v)==\"table\") then\r\n\t\t\tfor _,a in ipairs(v) do\r\n\t\t\t\tif(a==alias) then\r\n\t\t\t\t\treturn k;\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 6,
    "text": "for _,a in ipairs(v) do\r\n\t\t\t\tif(a==alias) then\r\n\t\t\t\t\treturn k;\r\n\t\t\t\tend\r\n\t\t\tend",
    "type": "statement:genericfor"
  }, {
    "id": 7,
    "text": "if(a==alias) then\r\n\t\t\t\t\treturn k;\r\n\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 8,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 9,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 10,
    "text": "",
    "type": "function container"
  }, {
    "id": 11,
    "text": "function handle (tag, block, text)\r\n\tlocal tag=aliases.get_tag(tag);\r\n\tif not handlers[tag] then\r\n\t\tluadoc.logger:error(string.format(\"undefined handler for tag `%s'\", tag))\r\n\t\treturn\r\n\tend\r\n--\tassert(handlers[tag], string.format(\"undefined handler for tag `%s'\", tag))\r\n\treturn handlers[tag](tag, block, text)\r\nend",
    "type": "function"
  }, {
    "id": 12,
    "text": "ipairs",
    "type": "global function"
  }, {
    "id": 13,
    "text": "module",
    "type": "global function"
  }, {
    "id": 14,
    "text": "pairs",
    "type": "global function"
  }, {
    "id": 15,
    "text": "type",
    "type": "global function"
  }, {
    "id": 16,
    "text": "",
    "type": "variable container"
  }, {
    "id": 17,
    "text": "",
    "type": "require container"
  }, {
    "id": 18,
    "text": "",
    "type": "local variable"
  }, {
    "id": 19,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 20,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 21,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 22,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 23,
    "text": "",
    "type": "keyword"
  }, {
    "id": 24,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 25,
    "text": "",
    "type": "keyword"
  }, {
    "id": 26,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 27,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 28,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 29,
    "text": "",
    "type": "keyword"
  }, {
    "id": 30,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 31,
    "text": "",
    "type": "keyword"
  }, {
    "id": 32,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 33,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 34,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 35,
    "text": "",
    "type": "keyword"
  }, {
    "id": 36,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 37,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 38,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 39,
    "text": "",
    "type": "keyword"
  }, {
    "id": 40,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 41,
    "text": "",
    "type": "keyword"
  }, {
    "id": 42,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 43,
    "text": "",
    "type": "keyword"
  } ]
}