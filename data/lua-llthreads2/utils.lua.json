{
  "_filename": "utils.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": true,
  "_path": "modules/lua-llthreads2/llthreads2/test/utils.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "calls",
    "to": 12
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 4,
    "label": "has",
    "to": 5
  }, {
    "from": 4,
    "label": "has",
    "to": 6
  }, {
    "from": 4,
    "label": "has",
    "to": 7
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 7,
    "label": "has",
    "to": 9
  }, {
    "from": 7,
    "label": "has",
    "to": 9
  }, {
    "from": 7,
    "label": "has",
    "to": 9
  }, {
    "from": 3,
    "label": "has",
    "to": 10
  }, {
    "from": 3,
    "label": "has",
    "to": 11
  }, {
    "from": 12,
    "label": "has",
    "to": 10
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 14,
    "label": "has",
    "to": 15
  }, {
    "from": 14,
    "label": "has",
    "to": 16
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 17,
    "label": "has",
    "to": 19
  }, {
    "from": 3,
    "label": "calls",
    "to": 21
  }, {
    "from": 3,
    "label": "calls",
    "to": 21
  }, {
    "from": 20,
    "label": "calls",
    "to": 21
  }, {
    "from": 20,
    "label": "calls",
    "to": 25
  }, {
    "from": 20,
    "label": "calls",
    "to": 3
  }, {
    "from": 20,
    "label": "calls",
    "to": 28
  }, {
    "from": 20,
    "label": "calls",
    "to": 28
  }, {
    "from": 20,
    "label": "calls",
    "to": 24
  }, {
    "from": 20,
    "label": "calls",
    "to": 23
  }, {
    "from": 20,
    "label": "calls",
    "to": 23
  }, {
    "from": 3,
    "label": "calls",
    "to": 22
  }, {
    "from": 20,
    "label": "calls",
    "to": 26
  }, {
    "from": 1,
    "label": "contains",
    "to": 20
  }, {
    "from": 20,
    "label": "declares",
    "to": 3
  }, {
    "from": 20,
    "label": "declares",
    "to": 12
  }, {
    "from": 20,
    "label": "declares",
    "to": 14
  }, {
    "from": 20,
    "label": "declares",
    "to": 17
  }, {
    "from": 1,
    "label": "declares",
    "to": 27
  }, {
    "from": 30,
    "label": "requires",
    "to": 1
  }, {
    "from": 31,
    "label": "requires",
    "to": 1
  }, {
    "from": 32,
    "label": "requires",
    "to": 1
  }, {
    "from": 33,
    "label": "requires",
    "to": 1
  }, {
    "from": 34,
    "label": "requires",
    "to": 1
  }, {
    "from": 35,
    "label": "requires",
    "to": 1
  }, {
    "from": 36,
    "label": "requires",
    "to": 1
  }, {
    "from": 37,
    "label": "requires",
    "to": 1
  }, {
    "from": 1,
    "label": "contains",
    "to": 38
  }, {
    "from": 1,
    "label": "contains",
    "to": 39
  }, {
    "from": 38,
    "label": "initializes",
    "to": 40
  }, {
    "from": 38,
    "label": "initializes",
    "to": 41
  }, {
    "from": 41,
    "label": "assigns",
    "to": 42
  }, {
    "from": 38,
    "label": "initializes",
    "to": 43
  }, {
    "from": 38,
    "label": "initializes",
    "to": 44
  }, {
    "from": 44,
    "label": "assigns",
    "to": 45
  }, {
    "from": 38,
    "label": "initializes",
    "to": 46
  }, {
    "from": 46,
    "label": "assigns",
    "to": 47
  }, {
    "from": 38,
    "label": "initializes",
    "to": 48
  }, {
    "from": 48,
    "label": "assigns",
    "to": 49
  }, {
    "from": 38,
    "label": "initializes",
    "to": 50
  }, {
    "from": 38,
    "label": "initializes",
    "to": 51
  }, {
    "from": 38,
    "label": "initializes",
    "to": 52
  }, {
    "from": 52,
    "label": "assigns",
    "to": 53
  }, {
    "from": 38,
    "label": "initializes",
    "to": 54
  }, {
    "from": 38,
    "label": "initializes",
    "to": 55
  }, {
    "from": 55,
    "label": "assigns",
    "to": 56
  }, {
    "from": 38,
    "label": "initializes",
    "to": 57
  }, {
    "from": 57,
    "label": "assigns",
    "to": 58
  }, {
    "from": 1,
    "label": "provides",
    "to": 59
  }, {
    "from": 55,
    "label": "represents",
    "to": 60
  }, {
    "from": 59,
    "label": "provides",
    "to": 60
  }, {
    "from": 29,
    "label": "represents",
    "to": 61
  }, {
    "from": 59,
    "label": "provides",
    "to": 61
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "utils",
    "type": "module"
  }, {
    "id": 2,
    "text": "",
    "type": "function container"
  }, {
    "id": 3,
    "text": "local function lua_version()\r\n  if not lua_version_t then \r\n    local version = rawget(_G,\"_VERSION\")\r\n    local maj,min = version:match(\"^Lua (%d+)%.(%d+)$\")\r\n    if maj then                         lua_version_t = {tonumber(maj),tonumber(min)}\r\n    elseif not math.mod then            lua_version_t = {5,2}\r\n    elseif table.pack and not pack then lua_version_t = {5,2}\r\n    else                                lua_version_t = {5,2} end\r\n  end\r\n  return lua_version_t[1], lua_version_t[2]\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "if not lua_version_t then \r\n    local version = rawget(_G,\"_VERSION\")\r\n    local maj,min = version:match(\"^Lua (%d+)%.(%d+)$\")\r\n    if maj then                         lua_version_t = {tonumber(maj),tonumber(min)}\r\n    elseif not math.mod then            lua_version_t = {5,2}\r\n    elseif table.pack and not pack then lua_version_t = {5,2}\r\n    else                                lua_version_t = {5,2} end\r\n  end",
    "type": "statement:if"
  }, {
    "id": 5,
    "text": "local version = rawget(_G,\"_VERSION\")",
    "type": "statement:localassign"
  }, {
    "id": 6,
    "text": "local maj,min = version:match(\"^Lua (%d+)%.(%d+)$\")",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "if maj then                         lua_version_t = {tonumber(maj),tonumber(min)}\r\n    elseif not math.mod then            lua_version_t = {5,2}\r\n    elseif table.pack and not pack then lua_version_t = {5,2}\r\n    else                                lua_version_t = {5,2} end",
    "type": "statement:if"
  }, {
    "id": 8,
    "text": "lua_version_t = {tonumber(maj),tonumber(min)}",
    "type": "statement:assign"
  }, {
    "id": 9,
    "text": "lua_version_t = {5,2}",
    "type": "statement:assign"
  }, {
    "id": 10,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 11,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 12,
    "text": "function(secs)\r\n    return socket.sleep(secs)\r\n  end",
    "type": "function"
  }, {
    "id": 13,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 14,
    "text": "function(secs)\r\n      ztimer.sleep(secs * 1000)\r\n    end",
    "type": "function"
  }, {
    "id": 15,
    "text": "ztimer.sleep(secs * 1000)",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 17,
    "text": "function(secs)\r\n    os.execute(\"sleep \" .. tonumber(secs))\r\n  end",
    "type": "function"
  }, {
    "id": 18,
    "text": "os.execute(\"sleep \" .. tonumber(secs))",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 20,
    "text": "",
    "type": "function container"
  }, {
    "id": 21,
    "text": "tonumber",
    "type": "global function"
  }, {
    "id": 22,
    "text": "rawget",
    "type": "global function"
  }, {
    "id": 23,
    "text": "getenv",
    "type": "global function"
  }, {
    "id": 24,
    "text": "sleep",
    "type": "global function"
  }, {
    "id": 25,
    "text": "execute",
    "type": "global function"
  }, {
    "id": 26,
    "text": "sleep",
    "type": "global function"
  }, {
    "id": 27,
    "text": "execute",
    "type": "global function"
  }, {
    "id": 28,
    "text": "pcall",
    "type": "global function"
  }, {
    "id": 29,
    "text": "",
    "type": "local variable"
  }, {
    "id": 30,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 31,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 32,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 33,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 34,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 35,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 36,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 37,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 38,
    "text": "",
    "type": "variable container"
  }, {
    "id": 39,
    "text": "",
    "type": "require container"
  }, {
    "id": 40,
    "text": "",
    "type": "local variable"
  }, {
    "id": 41,
    "text": "",
    "type": "local variable"
  }, {
    "id": 42,
    "text": "",
    "type": "n/a"
  }, {
    "id": 43,
    "text": "",
    "type": "local variable"
  }, {
    "id": 44,
    "text": "",
    "type": "local variable"
  }, {
    "id": 45,
    "text": "",
    "type": "n/a"
  }, {
    "id": 46,
    "text": "",
    "type": "local variable"
  }, {
    "id": 47,
    "text": "",
    "type": "n/a"
  }, {
    "id": 48,
    "text": "",
    "type": "local variable"
  }, {
    "id": 49,
    "text": "",
    "type": "string"
  }, {
    "id": 50,
    "text": "",
    "type": "local variable"
  }, {
    "id": 51,
    "text": "",
    "type": "local variable"
  }, {
    "id": 52,
    "text": "",
    "type": "local variable"
  }, {
    "id": 53,
    "text": "",
    "type": "n/a"
  }, {
    "id": 54,
    "text": "",
    "type": "local variable"
  }, {
    "id": 55,
    "text": "",
    "type": "global variable"
  }, {
    "id": 56,
    "text": "",
    "type": "n/a"
  }, {
    "id": 57,
    "text": "",
    "type": "global variable"
  }, {
    "id": 58,
    "text": "",
    "type": "n/a"
  }, {
    "id": 59,
    "text": "",
    "type": "interface container"
  }, {
    "id": 60,
    "text": "",
    "type": "interface"
  }, {
    "id": 61,
    "text": "",
    "type": "interface"
  } ]
}