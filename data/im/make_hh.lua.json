{
  "_filename": "make_hh.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/im/doc/html/wb/make_hh.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 9
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 10,
    "label": "has",
    "to": 12
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 13,
    "label": "has",
    "to": 15
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 15,
    "label": "has",
    "to": 17
  }, {
    "from": 13,
    "label": "has",
    "to": 18
  }, {
    "from": 13,
    "label": "has",
    "to": 19
  }, {
    "from": 20,
    "label": "has",
    "to": 21
  }, {
    "from": 21,
    "label": "has",
    "to": 22
  }, {
    "from": 21,
    "label": "has",
    "to": 23
  }, {
    "from": 23,
    "label": "has",
    "to": 24
  }, {
    "from": 23,
    "label": "has",
    "to": 25
  }, {
    "from": 21,
    "label": "has",
    "to": 26
  }, {
    "from": 20,
    "label": "has",
    "to": 27
  }, {
    "from": 28,
    "label": "has",
    "to": 29
  }, {
    "from": 28,
    "label": "has",
    "to": 30
  }, {
    "from": 28,
    "label": "has",
    "to": 31
  }, {
    "from": 28,
    "label": "has",
    "to": 32
  }, {
    "from": 28,
    "label": "has",
    "to": 33
  }, {
    "from": 28,
    "label": "has",
    "to": 34
  }, {
    "from": 28,
    "label": "has",
    "to": 35
  }, {
    "from": 28,
    "label": "has",
    "to": 36
  }, {
    "from": 28,
    "label": "has",
    "to": 37
  }, {
    "from": 28,
    "label": "has",
    "to": 38
  }, {
    "from": 28,
    "label": "has",
    "to": 39
  }, {
    "from": 28,
    "label": "has",
    "to": 40
  }, {
    "from": 28,
    "label": "has",
    "to": 41
  }, {
    "from": 28,
    "label": "has",
    "to": 42
  }, {
    "from": 28,
    "label": "has",
    "to": 43
  }, {
    "from": 44,
    "label": "has",
    "to": 45
  }, {
    "from": 44,
    "label": "has",
    "to": 46
  }, {
    "from": 44,
    "label": "has",
    "to": 47
  }, {
    "from": 48,
    "label": "has",
    "to": 49
  }, {
    "from": 48,
    "label": "has",
    "to": 8
  }, {
    "from": 48,
    "label": "has",
    "to": 50
  }, {
    "from": 48,
    "label": "has",
    "to": 51
  }, {
    "from": 51,
    "label": "has",
    "to": 52
  }, {
    "from": 51,
    "label": "has",
    "to": 53
  }, {
    "from": 48,
    "label": "has",
    "to": 54
  }, {
    "from": 55,
    "label": "has",
    "to": 56
  }, {
    "from": 55,
    "label": "has",
    "to": 57
  }, {
    "from": 55,
    "label": "has",
    "to": 58
  }, {
    "from": 55,
    "label": "has",
    "to": 59
  }, {
    "from": 60,
    "label": "has",
    "to": 61
  }, {
    "from": 60,
    "label": "has",
    "to": 61
  }, {
    "from": 60,
    "label": "has",
    "to": 62
  }, {
    "from": 60,
    "label": "has",
    "to": 63
  }, {
    "from": 60,
    "label": "has",
    "to": 64
  }, {
    "from": 60,
    "label": "has",
    "to": 65
  }, {
    "from": 60,
    "label": "has",
    "to": 66
  }, {
    "from": 60,
    "label": "has",
    "to": 67
  }, {
    "from": 60,
    "label": "has",
    "to": 68
  }, {
    "from": 60,
    "label": "has",
    "to": 69
  }, {
    "from": 60,
    "label": "has",
    "to": 70
  }, {
    "from": 60,
    "label": "has",
    "to": 71
  }, {
    "from": 60,
    "label": "has",
    "to": 72
  }, {
    "from": 60,
    "label": "has",
    "to": 73
  }, {
    "from": 74,
    "label": "has",
    "to": 8
  }, {
    "from": 74,
    "label": "has",
    "to": 75
  }, {
    "from": 76,
    "label": "has",
    "to": 77
  }, {
    "from": 76,
    "label": "has",
    "to": 78
  }, {
    "from": 76,
    "label": "has",
    "to": 79
  }, {
    "from": 76,
    "label": "has",
    "to": 80
  }, {
    "from": 81,
    "label": "has",
    "to": 82
  }, {
    "from": 81,
    "label": "has",
    "to": 8
  }, {
    "from": 81,
    "label": "has",
    "to": 3
  }, {
    "from": 81,
    "label": "has",
    "to": 83
  }, {
    "from": 81,
    "label": "has",
    "to": 84
  }, {
    "from": 84,
    "label": "has",
    "to": 85
  }, {
    "from": 84,
    "label": "has",
    "to": 7
  }, {
    "from": 81,
    "label": "has",
    "to": 86
  }, {
    "from": 81,
    "label": "has",
    "to": 87
  }, {
    "from": 88,
    "label": "has",
    "to": 89
  }, {
    "from": 88,
    "label": "has",
    "to": 90
  }, {
    "from": 88,
    "label": "has",
    "to": 91
  }, {
    "from": 88,
    "label": "has",
    "to": 92
  }, {
    "from": 92,
    "label": "has",
    "to": 93
  }, {
    "from": 88,
    "label": "has",
    "to": 8
  }, {
    "from": 88,
    "label": "has",
    "to": 94
  }, {
    "from": 94,
    "label": "has",
    "to": 95
  }, {
    "from": 94,
    "label": "has",
    "to": 96
  }, {
    "from": 88,
    "label": "has",
    "to": 97
  }, {
    "from": 97,
    "label": "has",
    "to": 98
  }, {
    "from": 88,
    "label": "has",
    "to": 8
  }, {
    "from": 88,
    "label": "has",
    "to": 99
  }, {
    "from": 99,
    "label": "has",
    "to": 100
  }, {
    "from": 99,
    "label": "has",
    "to": 101
  }, {
    "from": 88,
    "label": "has",
    "to": 102
  }, {
    "from": 88,
    "label": "has",
    "to": 103
  }, {
    "from": 103,
    "label": "has",
    "to": 104
  }, {
    "from": 104,
    "label": "has",
    "to": 105
  }, {
    "from": 103,
    "label": "has",
    "to": 106
  }, {
    "from": 106,
    "label": "has",
    "to": 107
  }, {
    "from": 106,
    "label": "has",
    "to": 108
  }, {
    "from": 103,
    "label": "has",
    "to": 109
  }, {
    "from": 88,
    "label": "has",
    "to": 8
  }, {
    "from": 88,
    "label": "has",
    "to": 110
  }, {
    "from": 88,
    "label": "has",
    "to": 111
  }, {
    "from": 88,
    "label": "has",
    "to": 112
  }, {
    "from": 112,
    "label": "has",
    "to": 113
  }, {
    "from": 112,
    "label": "has",
    "to": 114
  }, {
    "from": 114,
    "label": "has",
    "to": 115
  }, {
    "from": 88,
    "label": "has",
    "to": 116
  }, {
    "from": 116,
    "label": "has",
    "to": 117
  }, {
    "from": 117,
    "label": "has",
    "to": 118
  }, {
    "from": 118,
    "label": "has",
    "to": 119
  }, {
    "from": 118,
    "label": "has",
    "to": 120
  }, {
    "from": 117,
    "label": "has",
    "to": 121
  }, {
    "from": 88,
    "label": "has",
    "to": 122
  }, {
    "from": 88,
    "label": "has",
    "to": 123
  }, {
    "from": 123,
    "label": "has",
    "to": 124
  }, {
    "from": 123,
    "label": "has",
    "to": 125
  }, {
    "from": 123,
    "label": "has",
    "to": 126
  }, {
    "from": 126,
    "label": "has",
    "to": 127
  }, {
    "from": 126,
    "label": "has",
    "to": 128
  }, {
    "from": 123,
    "label": "has",
    "to": 129
  }, {
    "from": 88,
    "label": "has",
    "to": 130
  }, {
    "from": 131,
    "label": "has",
    "to": 132
  }, {
    "from": 131,
    "label": "has",
    "to": 8
  }, {
    "from": 131,
    "label": "has",
    "to": 3
  }, {
    "from": 131,
    "label": "has",
    "to": 83
  }, {
    "from": 131,
    "label": "has",
    "to": 133
  }, {
    "from": 133,
    "label": "has",
    "to": 125
  }, {
    "from": 133,
    "label": "has",
    "to": 134
  }, {
    "from": 133,
    "label": "has",
    "to": 129
  }, {
    "from": 133,
    "label": "has",
    "to": 7
  }, {
    "from": 131,
    "label": "has",
    "to": 135
  }, {
    "from": 136,
    "label": "calls",
    "to": 60
  }, {
    "from": 55,
    "label": "calls",
    "to": 28
  }, {
    "from": 136,
    "label": "calls",
    "to": 142
  }, {
    "from": 136,
    "label": "calls",
    "to": 142
  }, {
    "from": 136,
    "label": "calls",
    "to": 143
  }, {
    "from": 136,
    "label": "calls",
    "to": 131
  }, {
    "from": 136,
    "label": "calls",
    "to": 139
  }, {
    "from": 20,
    "label": "calls",
    "to": 144
  }, {
    "from": 88,
    "label": "calls",
    "to": 81
  }, {
    "from": 88,
    "label": "calls",
    "to": 81
  }, {
    "from": 136,
    "label": "calls",
    "to": 55
  }, {
    "from": 48,
    "label": "calls",
    "to": 140
  }, {
    "from": 48,
    "label": "calls",
    "to": 140
  }, {
    "from": 20,
    "label": "calls",
    "to": 138
  }, {
    "from": 55,
    "label": "calls",
    "to": 48
  }, {
    "from": 55,
    "label": "calls",
    "to": 44
  }, {
    "from": 28,
    "label": "calls",
    "to": 10
  }, {
    "from": 28,
    "label": "calls",
    "to": 10
  }, {
    "from": 28,
    "label": "calls",
    "to": 10
  }, {
    "from": 44,
    "label": "calls",
    "to": 10
  }, {
    "from": 60,
    "label": "calls",
    "to": 10
  }, {
    "from": 60,
    "label": "calls",
    "to": 10
  }, {
    "from": 60,
    "label": "calls",
    "to": 10
  }, {
    "from": 60,
    "label": "calls",
    "to": 10
  }, {
    "from": 60,
    "label": "calls",
    "to": 10
  }, {
    "from": 60,
    "label": "calls",
    "to": 10
  }, {
    "from": 60,
    "label": "calls",
    "to": 10
  }, {
    "from": 60,
    "label": "calls",
    "to": 10
  }, {
    "from": 60,
    "label": "calls",
    "to": 10
  }, {
    "from": 60,
    "label": "calls",
    "to": 10
  }, {
    "from": 60,
    "label": "calls",
    "to": 10
  }, {
    "from": 60,
    "label": "calls",
    "to": 10
  }, {
    "from": 60,
    "label": "calls",
    "to": 10
  }, {
    "from": 76,
    "label": "calls",
    "to": 10
  }, {
    "from": 76,
    "label": "calls",
    "to": 10
  }, {
    "from": 76,
    "label": "calls",
    "to": 10
  }, {
    "from": 88,
    "label": "calls",
    "to": 20
  }, {
    "from": 88,
    "label": "calls",
    "to": 20
  }, {
    "from": 28,
    "label": "calls",
    "to": 13
  }, {
    "from": 28,
    "label": "calls",
    "to": 13
  }, {
    "from": 28,
    "label": "calls",
    "to": 13
  }, {
    "from": 28,
    "label": "calls",
    "to": 13
  }, {
    "from": 28,
    "label": "calls",
    "to": 13
  }, {
    "from": 28,
    "label": "calls",
    "to": 13
  }, {
    "from": 28,
    "label": "calls",
    "to": 13
  }, {
    "from": 28,
    "label": "calls",
    "to": 13
  }, {
    "from": 28,
    "label": "calls",
    "to": 13
  }, {
    "from": 28,
    "label": "calls",
    "to": 13
  }, {
    "from": 28,
    "label": "calls",
    "to": 13
  }, {
    "from": 48,
    "label": "calls",
    "to": 13
  }, {
    "from": 88,
    "label": "calls",
    "to": 13
  }, {
    "from": 88,
    "label": "calls",
    "to": 13
  }, {
    "from": 88,
    "label": "calls",
    "to": 13
  }, {
    "from": 88,
    "label": "calls",
    "to": 13
  }, {
    "from": 88,
    "label": "calls",
    "to": 13
  }, {
    "from": 88,
    "label": "calls",
    "to": 13
  }, {
    "from": 88,
    "label": "calls",
    "to": 13
  }, {
    "from": 88,
    "label": "calls",
    "to": 13
  }, {
    "from": 88,
    "label": "calls",
    "to": 13
  }, {
    "from": 88,
    "label": "calls",
    "to": 13
  }, {
    "from": 131,
    "label": "calls",
    "to": 13
  }, {
    "from": 131,
    "label": "calls",
    "to": 13
  }, {
    "from": 74,
    "label": "calls",
    "to": 141
  }, {
    "from": 136,
    "label": "calls",
    "to": 76
  }, {
    "from": 88,
    "label": "calls",
    "to": 137
  }, {
    "from": 88,
    "label": "calls",
    "to": 137
  }, {
    "from": 88,
    "label": "calls",
    "to": 137
  }, {
    "from": 136,
    "label": "calls",
    "to": 137
  }, {
    "from": 136,
    "label": "calls",
    "to": 137
  }, {
    "from": 136,
    "label": "calls",
    "to": 137
  }, {
    "from": 136,
    "label": "calls",
    "to": 137
  }, {
    "from": 81,
    "label": "calls",
    "to": 88
  }, {
    "from": 131,
    "label": "calls",
    "to": 88
  }, {
    "from": 1,
    "label": "contains",
    "to": 136
  }, {
    "from": 136,
    "label": "declares",
    "to": 2
  }, {
    "from": 136,
    "label": "declares",
    "to": 10
  }, {
    "from": 136,
    "label": "declares",
    "to": 13
  }, {
    "from": 136,
    "label": "declares",
    "to": 20
  }, {
    "from": 136,
    "label": "declares",
    "to": 28
  }, {
    "from": 136,
    "label": "declares",
    "to": 44
  }, {
    "from": 136,
    "label": "declares",
    "to": 48
  }, {
    "from": 136,
    "label": "declares",
    "to": 55
  }, {
    "from": 136,
    "label": "declares",
    "to": 60
  }, {
    "from": 136,
    "label": "declares",
    "to": 74
  }, {
    "from": 136,
    "label": "declares",
    "to": 76
  }, {
    "from": 136,
    "label": "declares",
    "to": 81
  }, {
    "from": 136,
    "label": "declares",
    "to": 88
  }, {
    "from": 136,
    "label": "declares",
    "to": 131
  }, {
    "from": 1,
    "label": "contains",
    "to": 145
  }, {
    "from": 1,
    "label": "contains",
    "to": 146
  }, {
    "from": 145,
    "label": "initializes",
    "to": 147
  }, {
    "from": 147,
    "label": "assigns",
    "to": 148
  }, {
    "from": 145,
    "label": "initializes",
    "to": 149
  }, {
    "from": 149,
    "label": "assigns",
    "to": 150
  }, {
    "from": 145,
    "label": "initializes",
    "to": 151
  }, {
    "from": 151,
    "label": "assigns",
    "to": 152
  }, {
    "from": 145,
    "label": "initializes",
    "to": 153
  }, {
    "from": 153,
    "label": "assigns",
    "to": 154
  }, {
    "from": 145,
    "label": "initializes",
    "to": 155
  }, {
    "from": 145,
    "label": "initializes",
    "to": 156
  }, {
    "from": 145,
    "label": "initializes",
    "to": 157
  }, {
    "from": 145,
    "label": "initializes",
    "to": 158
  }, {
    "from": 158,
    "label": "assigns",
    "to": 159
  }, {
    "from": 145,
    "label": "initializes",
    "to": 160
  }, {
    "from": 160,
    "label": "assigns",
    "to": 161
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "make_hh",
    "type": "module"
  }, {
    "id": 2,
    "text": "function isinlist(lng, list)\r\n  local i = 1\r\n  local n = #list\r\n  while i <= n do\r\n    if list[i] == lng then\r\n      return 1\r\n    end\r\n    i = i + 1;\r\n  end\r\n  return nil\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local i = 1",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "local n = #list",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "while i <= n do\r\n    if list[i] == lng then\r\n      return 1\r\n    end\r\n    i = i + 1;\r\n  end",
    "type": "statement:while"
  }, {
    "id": 6,
    "text": "if list[i] == lng then\r\n      return 1\r\n    end",
    "type": "statement:if"
  }, {
    "id": 7,
    "text": "i = i + 1",
    "type": "statement:assign"
  }, {
    "id": 8,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 9,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 10,
    "text": "function out(string)\r\n  file:write(string)\r\nend",
    "type": "function"
  }, {
    "id": 11,
    "text": "file:write(string)",
    "type": "statement:functioncall"
  }, {
    "id": 12,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 13,
    "text": "function outln(string)\r\n  local i = ident + 1\r\n  while i>0 do\r\n    file:write(\"  \")\r\n    i = i - 1\r\n  end\r\n  file:write(string..\"\\n\")\r\nend",
    "type": "function"
  }, {
    "id": 14,
    "text": "local i = ident + 1",
    "type": "statement:localassign"
  }, {
    "id": 15,
    "text": "while i>0 do\r\n    file:write(\"  \")\r\n    i = i - 1\r\n  end",
    "type": "statement:while"
  }, {
    "id": 16,
    "text": "file:write(\"  \")",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "i = i - 1",
    "type": "statement:assign"
  }, {
    "id": 18,
    "text": "file:write(string..\"\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 20,
    "text": "function add2files(v)\r\n  if v then\r\n    -- only up to \"#\"\r\n    local j = string.find(v, \"#\")\r\n    if j then\r\n      f = string.sub(v, 0, j-1)\r\n    else\r\n      f = v\r\n    end\r\n  \r\n    files[f] = f\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 21,
    "text": "if v then\r\n    -- only up to \"#\"\r\n    local j = string.find(v, \"#\")\r\n    if j then\r\n      f = string.sub(v, 0, j-1)\r\n    else\r\n      f = v\r\n    end\r\n  \r\n    files[f] = f\r\n  end",
    "type": "statement:if"
  }, {
    "id": 22,
    "text": "local j = string.find(v, \"#\")",
    "type": "statement:localassign"
  }, {
    "id": 23,
    "text": "if j then\r\n      f = string.sub(v, 0, j-1)\r\n    else\r\n      f = v\r\n    end",
    "type": "statement:if"
  }, {
    "id": 24,
    "text": "f = string.sub(v, 0, j-1)",
    "type": "statement:assign"
  }, {
    "id": 25,
    "text": "f = v",
    "type": "statement:assign"
  }, {
    "id": 26,
    "text": "files[f] = f",
    "type": "statement:assign"
  }, {
    "id": 27,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 28,
    "text": "function writehhpheader()\r\n  out(\"[OPTIONS]\\n\")\r\n  outln(\"Binary Index=No\")\r\n  outln(\"Compatibility=1.0\")\r\n  outln(\"Compiled file=\" .. wb_usr.file_title .. \"_\" .. lng .. \".chm\")\r\n  outln(\"Contents file=wb_tree\" .. \"_\" .. lng .. \".hhc\")\r\n  outln(\"Default topic=\" .. lng .. \"/\" .. wb_usr.tree.link)\r\n  outln(\"Display compile notes=Yes\")\r\n  outln(\"Display compile progress=Yes\")\r\n  outln(\"Full-text search=Yes\")\r\n  outln(\"Language=\"..languages_description[lng])\r\n  outln(\"Title=\"..wb_usr.messages[lng].title)\r\n  out(\"\\n\")\r\n  out(\"[FILES]\\n\")\r\n  outln(lng .. \"/\" .. wb_usr.tree.link)\r\nend",
    "type": "function"
  }, {
    "id": 29,
    "text": "out(\"[OPTIONS]\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 30,
    "text": "outln(\"Binary Index=No\")",
    "type": "statement:functioncall"
  }, {
    "id": 31,
    "text": "outln(\"Compatibility=1.0\")",
    "type": "statement:functioncall"
  }, {
    "id": 32,
    "text": "outln(\"Compiled file=\" .. wb_usr.file_title .. \"_\" .. lng .. \".chm\")",
    "type": "statement:functioncall"
  }, {
    "id": 33,
    "text": "outln(\"Contents file=wb_tree\" .. \"_\" .. lng .. \".hhc\")",
    "type": "statement:functioncall"
  }, {
    "id": 34,
    "text": "outln(\"Default topic=\" .. lng .. \"/\" .. wb_usr.tree.link)",
    "type": "statement:functioncall"
  }, {
    "id": 35,
    "text": "outln(\"Display compile notes=Yes\")",
    "type": "statement:functioncall"
  }, {
    "id": 36,
    "text": "outln(\"Display compile progress=Yes\")",
    "type": "statement:functioncall"
  }, {
    "id": 37,
    "text": "outln(\"Full-text search=Yes\")",
    "type": "statement:functioncall"
  }, {
    "id": 38,
    "text": "outln(\"Language=\"..languages_description[lng])",
    "type": "statement:functioncall"
  }, {
    "id": 39,
    "text": "outln(\"Title=\"..wb_usr.messages[lng].title)",
    "type": "statement:functioncall"
  }, {
    "id": 40,
    "text": "out(\"\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 41,
    "text": "out(\"[FILES]\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 42,
    "text": "outln(lng .. \"/\" .. wb_usr.tree.link)",
    "type": "statement:functioncall"
  }, {
    "id": 43,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 44,
    "text": "function writehhpfooter()\r\n  local tmp = [[\r\n[INFOTYPES]\r\n  ]]\r\n  out(tmp)\r\nend",
    "type": "function"
  }, {
    "id": 45,
    "text": "local tmp = [[\r\n[INFOTYPES]\r\n  ]]",
    "type": "statement:localassign"
  }, {
    "id": 46,
    "text": "out(tmp)",
    "type": "statement:functioncall"
  }, {
    "id": 47,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 48,
    "text": "function writehhpcenter()\r\n  if (not files) then return end\r\n  \r\n  local v = next(files, nil)\r\n  while v ~= nil do\r\n    outln(dir..v)\r\n    v = next(files, v)\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 49,
    "text": "if (not files) then return end",
    "type": "statement:if"
  }, {
    "id": 50,
    "text": "local v = next(files, nil)",
    "type": "statement:localassign"
  }, {
    "id": 51,
    "text": "while v ~= nil do\r\n    outln(dir..v)\r\n    v = next(files, v)\r\n  end",
    "type": "statement:while"
  }, {
    "id": 52,
    "text": "outln(dir..v)",
    "type": "statement:functioncall"
  }, {
    "id": 53,
    "text": "v = next(files, v)",
    "type": "statement:assign"
  }, {
    "id": 54,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 55,
    "text": "function writehhp()\r\n  writehhpheader()\r\n  writehhpcenter()\r\n  writehhpfooter()\r\nend",
    "type": "function"
  }, {
    "id": 56,
    "text": "writehhpheader()",
    "type": "statement:functioncall"
  }, {
    "id": 57,
    "text": "writehhpcenter()",
    "type": "statement:functioncall"
  }, {
    "id": 58,
    "text": "writehhpfooter()",
    "type": "statement:functioncall"
  }, {
    "id": 59,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 60,
    "text": "function writeheader()\r\n  out(\"<!DOCTYPE HTML PUBLIC \\\"-//IETF//DTD HTML//EN\\\">\\n\")\r\n  out(\"<!DOCTYPE HTML PUBLIC \\\"-//IETF//DTD HTML//EN\\\">\\n\")\r\n  out(\"<HTML>\\n\")\r\n  out(\"<HEAD>\\n\")\r\n  out(\"<meta name=\\\"GENERATOR\\\" content=\\\"Microsoft&reg; HTML Help Workshop 4.1\\\">\\n\")\r\n  out(\"<!-- Sitemap 1.0 -->\\n\")\r\n  out(\"<!-- Generated by WebBook -->\\n\")\r\n  out(\"</HEAD><BODY>\\n\")\r\n  out(\"  <UL>\\n\")\r\n  out(\"  <LI> <OBJECT type=\\\"text/sitemap\\\">\\n\")\r\n  out(\"       <param name=\\\"Name\\\" value=\\\"\"..wb_usr.messages[lng].title..\"\\\">\\n\")\r\n  out(\"       <param name=\\\"Local\\\" value=\\\"\"..lng .. \"/\" .. wb_usr.tree.link .. \"\\\">\\n\")\r\n  out(\"       </OBJECT>\\n\")\r\nend",
    "type": "function"
  }, {
    "id": 61,
    "text": "out(\"<!DOCTYPE HTML PUBLIC \\\"-//IETF//DTD HTML//EN\\\">\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 62,
    "text": "out(\"<HTML>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 63,
    "text": "out(\"<HEAD>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 64,
    "text": "out(\"<meta name=\\\"GENERATOR\\\" content=\\\"Microsoft&reg; HTML Help Workshop 4.1\\\">\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 65,
    "text": "out(\"<!-- Sitemap 1.0 -->\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 66,
    "text": "out(\"<!-- Generated by WebBook -->\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 67,
    "text": "out(\"</HEAD><BODY>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 68,
    "text": "out(\"  <UL>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 69,
    "text": "out(\"  <LI> <OBJECT type=\\\"text/sitemap\\\">\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 70,
    "text": "out(\"       <param name=\\\"Name\\\" value=\\\"\"..wb_usr.messages[lng].title..\"\\\">\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 71,
    "text": "out(\"       <param name=\\\"Local\\\" value=\\\"\"..lng .. \"/\" .. wb_usr.tree.link .. \"\\\">\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 72,
    "text": "out(\"       </OBJECT>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 73,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 74,
    "text": "function type_string (o) \r\n  return type(o) == \"string\" \r\nend",
    "type": "function"
  }, {
    "id": 75,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 76,
    "text": "function writeend()\r\n  out(\"  </UL>\\n\")\r\n  out(\"</BODY>\\n\")\r\n  out(\"</HTML>\\n\")\r\nend",
    "type": "function"
  }, {
    "id": 77,
    "text": "out(\"  </UL>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 78,
    "text": "out(\"</BODY>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 79,
    "text": "out(\"</HTML>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 80,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 81,
    "text": "function writesubitems(tree, mainlink)\r\n  if (not tree) then\r\n    return\r\n  end\r\n  local i = 1\r\n  local n = #tree\r\n  while i <= n do\r\n    writetopic(tree[i], mainlink)\r\n    i = i + 1\r\n  end\r\n  ident = ident - 1\r\nend",
    "type": "function"
  }, {
    "id": 82,
    "text": "if (not tree) then\r\n    return\r\n  end",
    "type": "statement:if"
  }, {
    "id": 83,
    "text": "local n = #tree",
    "type": "statement:localassign"
  }, {
    "id": 84,
    "text": "while i <= n do\r\n    writetopic(tree[i], mainlink)\r\n    i = i + 1\r\n  end",
    "type": "statement:while"
  }, {
    "id": 85,
    "text": "writetopic(tree[i], mainlink)",
    "type": "statement:functioncall"
  }, {
    "id": 86,
    "text": "ident = ident - 1",
    "type": "statement:assign"
  }, {
    "id": 87,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 88,
    "text": "function writetopic(t, mainlink)\r\n  local link\r\n  local topic_name\r\n\r\n  add2files(mainlink)\r\n\r\n  if t.name == nil then \r\n    print(\"ERROR: Title is nil.\")\r\n    return\r\n  end\r\n\r\n  if (t.name[lng]) then\r\n    topic_name = t.name[lng]\r\n  else\r\n    topic_name = t.name[\"nl\"]\r\n  end\r\n\r\n  if topic_name == nil then \r\n    print(\"ERROR: Title is nil in language [\" .. lng .. \"].\")\r\n    return\r\n  end\r\n\r\n  if t.link and t.link ~= \"\" then\r\n    link = t.link\r\n  else\r\n    link = nil\r\n  end\r\n \r\n  add2files(link)\r\n  \r\n  if t.bookmark then\r\n    if link == nil and mainlink == nil then\r\n      print(\"Error saving bookmark!!!\")\r\n      return\r\n    end\r\n\r\n    if link then\r\n      linkB = link .. \"#\" .. t.bookmark\r\n    else\r\n      linkB = mainlink .. \"#\" .. t.bookmark\r\n    end\r\n  else\r\n    linkB = nil\r\n  end\r\n\r\n  outln(\"<LI> <OBJECT type=\\\"text/sitemap\\\">\")\r\n  outln(\"<param name=\\\"Name\\\" value=\\\"\"..topic_name..\"\\\">\")\r\n  if linkB then\r\n    outln(\"<param name=\\\"Local\\\" value=\\\"\"..dir..linkB..\"\\\">\")\r\n  else\r\n    if link then\r\n      outln(\"<param name=\\\"Local\\\" value=\\\"\"..dir..link..\"\\\">\")\r\n    end\r\n  end\r\n  if useimage == 1 then\r\n    if t.folder then\r\n      if ident == 0 then\r\n        outln(\"<param name=\\\"ImageNumber\\\" value=\\\"1\\\">\")\r\n      else\r\n        outln(\"<param name=\\\"ImageNumber\\\" value=\\\"6\\\">\")\r\n      end\r\n    else\r\n      outln(\"<param name=\\\"ImageNumber\\\" value=\\\"11\\\">\")\r\n    end\r\n  end\r\n  outln(\"</OBJECT>\")\r\n\r\n  -- Write folder --\r\n  if t.folder then\r\n    ident = ident + 1\r\n    outln(\"<UL>\")\r\n    if link == nil then\r\n      writesubitems(t.folder, mainlink)\r\n    else\r\n      writesubitems(t.folder, link)\r\n    end\r\n    outln(\"</UL>\")\r\n  end\r\n\r\nend",
    "type": "function"
  }, {
    "id": 89,
    "text": "local link",
    "type": "statement:localassign"
  }, {
    "id": 90,
    "text": "local topic_name",
    "type": "statement:localassign"
  }, {
    "id": 91,
    "text": "add2files(mainlink)",
    "type": "statement:functioncall"
  }, {
    "id": 92,
    "text": "if t.name == nil then \r\n    print(\"ERROR: Title is nil.\")\r\n    return\r\n  end",
    "type": "statement:if"
  }, {
    "id": 93,
    "text": "print(\"ERROR: Title is nil.\")",
    "type": "statement:functioncall"
  }, {
    "id": 94,
    "text": "if (t.name[lng]) then\r\n    topic_name = t.name[lng]\r\n  else\r\n    topic_name = t.name[\"nl\"]\r\n  end",
    "type": "statement:if"
  }, {
    "id": 95,
    "text": "topic_name = t.name[lng]",
    "type": "statement:assign"
  }, {
    "id": 96,
    "text": "topic_name = t.name[\"nl\"]",
    "type": "statement:assign"
  }, {
    "id": 97,
    "text": "if topic_name == nil then \r\n    print(\"ERROR: Title is nil in language [\" .. lng .. \"].\")\r\n    return\r\n  end",
    "type": "statement:if"
  }, {
    "id": 98,
    "text": "print(\"ERROR: Title is nil in language [\" .. lng .. \"].\")",
    "type": "statement:functioncall"
  }, {
    "id": 99,
    "text": "if t.link and t.link ~= \"\" then\r\n    link = t.link\r\n  else\r\n    link = nil\r\n  end",
    "type": "statement:if"
  }, {
    "id": 100,
    "text": "link = t.link",
    "type": "statement:assign"
  }, {
    "id": 101,
    "text": "link = nil",
    "type": "statement:assign"
  }, {
    "id": 102,
    "text": "add2files(link)",
    "type": "statement:functioncall"
  }, {
    "id": 103,
    "text": "if t.bookmark then\r\n    if link == nil and mainlink == nil then\r\n      print(\"Error saving bookmark!!!\")\r\n      return\r\n    end\r\n\r\n    if link then\r\n      linkB = link .. \"#\" .. t.bookmark\r\n    else\r\n      linkB = mainlink .. \"#\" .. t.bookmark\r\n    end\r\n  else\r\n    linkB = nil\r\n  end",
    "type": "statement:if"
  }, {
    "id": 104,
    "text": "if link == nil and mainlink == nil then\r\n      print(\"Error saving bookmark!!!\")\r\n      return\r\n    end",
    "type": "statement:if"
  }, {
    "id": 105,
    "text": "print(\"Error saving bookmark!!!\")",
    "type": "statement:functioncall"
  }, {
    "id": 106,
    "text": "if link then\r\n      linkB = link .. \"#\" .. t.bookmark\r\n    else\r\n      linkB = mainlink .. \"#\" .. t.bookmark\r\n    end",
    "type": "statement:if"
  }, {
    "id": 107,
    "text": "linkB = link .. \"#\" .. t.bookmark",
    "type": "statement:assign"
  }, {
    "id": 108,
    "text": "linkB = mainlink .. \"#\" .. t.bookmark",
    "type": "statement:assign"
  }, {
    "id": 109,
    "text": "linkB = nil",
    "type": "statement:assign"
  }, {
    "id": 110,
    "text": "outln(\"<LI> <OBJECT type=\\\"text/sitemap\\\">\")",
    "type": "statement:functioncall"
  }, {
    "id": 111,
    "text": "outln(\"<param name=\\\"Name\\\" value=\\\"\"..topic_name..\"\\\">\")",
    "type": "statement:functioncall"
  }, {
    "id": 112,
    "text": "if linkB then\r\n    outln(\"<param name=\\\"Local\\\" value=\\\"\"..dir..linkB..\"\\\">\")\r\n  else\r\n    if link then\r\n      outln(\"<param name=\\\"Local\\\" value=\\\"\"..dir..link..\"\\\">\")\r\n    end\r\n  end",
    "type": "statement:if"
  }, {
    "id": 113,
    "text": "outln(\"<param name=\\\"Local\\\" value=\\\"\"..dir..linkB..\"\\\">\")",
    "type": "statement:functioncall"
  }, {
    "id": 114,
    "text": "if link then\r\n      outln(\"<param name=\\\"Local\\\" value=\\\"\"..dir..link..\"\\\">\")\r\n    end",
    "type": "statement:if"
  }, {
    "id": 115,
    "text": "outln(\"<param name=\\\"Local\\\" value=\\\"\"..dir..link..\"\\\">\")",
    "type": "statement:functioncall"
  }, {
    "id": 116,
    "text": "if useimage == 1 then\r\n    if t.folder then\r\n      if ident == 0 then\r\n        outln(\"<param name=\\\"ImageNumber\\\" value=\\\"1\\\">\")\r\n      else\r\n        outln(\"<param name=\\\"ImageNumber\\\" value=\\\"6\\\">\")\r\n      end\r\n    else\r\n      outln(\"<param name=\\\"ImageNumber\\\" value=\\\"11\\\">\")\r\n    end\r\n  end",
    "type": "statement:if"
  }, {
    "id": 117,
    "text": "if t.folder then\r\n      if ident == 0 then\r\n        outln(\"<param name=\\\"ImageNumber\\\" value=\\\"1\\\">\")\r\n      else\r\n        outln(\"<param name=\\\"ImageNumber\\\" value=\\\"6\\\">\")\r\n      end\r\n    else\r\n      outln(\"<param name=\\\"ImageNumber\\\" value=\\\"11\\\">\")\r\n    end",
    "type": "statement:if"
  }, {
    "id": 118,
    "text": "if ident == 0 then\r\n        outln(\"<param name=\\\"ImageNumber\\\" value=\\\"1\\\">\")\r\n      else\r\n        outln(\"<param name=\\\"ImageNumber\\\" value=\\\"6\\\">\")\r\n      end",
    "type": "statement:if"
  }, {
    "id": 119,
    "text": "outln(\"<param name=\\\"ImageNumber\\\" value=\\\"1\\\">\")",
    "type": "statement:functioncall"
  }, {
    "id": 120,
    "text": "outln(\"<param name=\\\"ImageNumber\\\" value=\\\"6\\\">\")",
    "type": "statement:functioncall"
  }, {
    "id": 121,
    "text": "outln(\"<param name=\\\"ImageNumber\\\" value=\\\"11\\\">\")",
    "type": "statement:functioncall"
  }, {
    "id": 122,
    "text": "outln(\"</OBJECT>\")",
    "type": "statement:functioncall"
  }, {
    "id": 123,
    "text": "if t.folder then\r\n    ident = ident + 1\r\n    outln(\"<UL>\")\r\n    if link == nil then\r\n      writesubitems(t.folder, mainlink)\r\n    else\r\n      writesubitems(t.folder, link)\r\n    end\r\n    outln(\"</UL>\")\r\n  end",
    "type": "statement:if"
  }, {
    "id": 124,
    "text": "ident = ident + 1",
    "type": "statement:assign"
  }, {
    "id": 125,
    "text": "outln(\"<UL>\")",
    "type": "statement:functioncall"
  }, {
    "id": 126,
    "text": "if link == nil then\r\n      writesubitems(t.folder, mainlink)\r\n    else\r\n      writesubitems(t.folder, link)\r\n    end",
    "type": "statement:if"
  }, {
    "id": 127,
    "text": "writesubitems(t.folder, mainlink)",
    "type": "statement:functioncall"
  }, {
    "id": 128,
    "text": "writesubitems(t.folder, link)",
    "type": "statement:functioncall"
  }, {
    "id": 129,
    "text": "outln(\"</UL>\")",
    "type": "statement:functioncall"
  }, {
    "id": 130,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 131,
    "text": "function writetopics(tree)\r\n  if (not tree) then return end\r\n  local i = 1;\r\n  local n = #tree\r\n  while i <= n do\r\n    outln(\"<UL>\")\r\n    writetopic(tree[i], nil)\r\n    outln(\"</UL>\")\r\n    i = i + 1\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 132,
    "text": "if (not tree) then return end",
    "type": "statement:if"
  }, {
    "id": 133,
    "text": "while i <= n do\r\n    outln(\"<UL>\")\r\n    writetopic(tree[i], nil)\r\n    outln(\"</UL>\")\r\n    i = i + 1\r\n  end",
    "type": "statement:while"
  }, {
    "id": 134,
    "text": "writetopic(tree[i], nil)",
    "type": "statement:functioncall"
  }, {
    "id": 135,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 136,
    "text": "",
    "type": "function container"
  }, {
    "id": 137,
    "text": "print",
    "type": "global function"
  }, {
    "id": 138,
    "text": "find",
    "type": "global function"
  }, {
    "id": 139,
    "text": "dofile",
    "type": "global function"
  }, {
    "id": 140,
    "text": "next",
    "type": "global function"
  }, {
    "id": 141,
    "text": "type",
    "type": "global function"
  }, {
    "id": 142,
    "text": "open",
    "type": "global function"
  }, {
    "id": 143,
    "text": "error",
    "type": "global function"
  }, {
    "id": 144,
    "text": "sub",
    "type": "global function"
  }, {
    "id": 145,
    "text": "",
    "type": "variable container"
  }, {
    "id": 146,
    "text": "",
    "type": "require container"
  }, {
    "id": 147,
    "text": "",
    "type": "global variable"
  }, {
    "id": 148,
    "text": "",
    "type": "n/a"
  }, {
    "id": 149,
    "text": "",
    "type": "global variable"
  }, {
    "id": 150,
    "text": "",
    "type": "n/a"
  }, {
    "id": 151,
    "text": "",
    "type": "global variable"
  }, {
    "id": 152,
    "text": "",
    "type": "n/a"
  }, {
    "id": 153,
    "text": "",
    "type": "global variable"
  }, {
    "id": 154,
    "text": "",
    "type": "n/a"
  }, {
    "id": 155,
    "text": "",
    "type": "global variable"
  }, {
    "id": 156,
    "text": "",
    "type": "global variable"
  }, {
    "id": 157,
    "text": "",
    "type": "global variable"
  }, {
    "id": 158,
    "text": "",
    "type": "global variable"
  }, {
    "id": 159,
    "text": "",
    "type": "n/a"
  }, {
    "id": 160,
    "text": "",
    "type": "global variable"
  }, {
    "id": 161,
    "text": "",
    "type": "n/a"
  } ]
}