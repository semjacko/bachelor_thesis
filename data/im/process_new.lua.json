{
  "_filename": "process_new.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/im/doc/html/examples/process_new.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 9
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 9,
    "label": "has",
    "to": 11
  }, {
    "from": 9,
    "label": "has",
    "to": 12
  }, {
    "from": 9,
    "label": "has",
    "to": 13
  }, {
    "from": 9,
    "label": "has",
    "to": 13
  }, {
    "from": 2,
    "label": "has",
    "to": 14
  }, {
    "from": 2,
    "label": "has",
    "to": 15
  }, {
    "from": 2,
    "label": "has",
    "to": 16
  }, {
    "from": 17,
    "label": "has",
    "to": 10
  }, {
    "from": 17,
    "label": "has",
    "to": 11
  }, {
    "from": 17,
    "label": "has",
    "to": 12
  }, {
    "from": 17,
    "label": "has",
    "to": 13
  }, {
    "from": 17,
    "label": "has",
    "to": 13
  }, {
    "from": 17,
    "label": "has",
    "to": 18
  }, {
    "from": 19,
    "label": "calls",
    "to": 23
  }, {
    "from": 19,
    "label": "calls",
    "to": 24
  }, {
    "from": 2,
    "label": "calls",
    "to": 20
  }, {
    "from": 19,
    "label": "calls",
    "to": 30
  }, {
    "from": 19,
    "label": "calls",
    "to": 21
  }, {
    "from": 2,
    "label": "calls",
    "to": 29
  }, {
    "from": 19,
    "label": "calls",
    "to": 2
  }, {
    "from": 19,
    "label": "calls",
    "to": 2
  }, {
    "from": 19,
    "label": "calls",
    "to": 2
  }, {
    "from": 19,
    "label": "calls",
    "to": 2
  }, {
    "from": 2,
    "label": "calls",
    "to": 28
  }, {
    "from": 2,
    "label": "calls",
    "to": 31
  }, {
    "from": 2,
    "label": "calls",
    "to": 27
  }, {
    "from": 19,
    "label": "calls",
    "to": 26
  }, {
    "from": 19,
    "label": "calls",
    "to": 32
  }, {
    "from": 19,
    "label": "calls",
    "to": 32
  }, {
    "from": 19,
    "label": "calls",
    "to": 22
  }, {
    "from": 19,
    "label": "calls",
    "to": 22
  }, {
    "from": 19,
    "label": "calls",
    "to": 22
  }, {
    "from": 19,
    "label": "calls",
    "to": 25
  }, {
    "from": 1,
    "label": "contains",
    "to": 19
  }, {
    "from": 19,
    "label": "declares",
    "to": 2
  }, {
    "from": 19,
    "label": "declares",
    "to": 17
  }, {
    "from": 1,
    "label": "contains",
    "to": 34
  }, {
    "from": 1,
    "label": "contains",
    "to": 35
  }, {
    "from": 34,
    "label": "initializes",
    "to": 36
  }, {
    "from": 36,
    "label": "assigns",
    "to": 37
  }, {
    "from": 34,
    "label": "initializes",
    "to": 38
  }, {
    "from": 38,
    "label": "assigns",
    "to": 39
  }, {
    "from": 34,
    "label": "initializes",
    "to": 40
  }, {
    "from": 40,
    "label": "assigns",
    "to": 41
  }, {
    "from": 34,
    "label": "initializes",
    "to": 42
  }, {
    "from": 34,
    "label": "initializes",
    "to": 43
  }, {
    "from": 34,
    "label": "initializes",
    "to": 44
  }, {
    "from": 44,
    "label": "assigns",
    "to": 45
  }, {
    "from": 34,
    "label": "initializes",
    "to": 46
  }, {
    "from": 46,
    "label": "assigns",
    "to": 47
  }, {
    "from": 34,
    "label": "initializes",
    "to": 48
  }, {
    "from": 48,
    "label": "assigns",
    "to": 49
  }, {
    "from": 35,
    "label": "initializes",
    "to": 33
  }, {
    "from": 35,
    "label": "initializes",
    "to": 33
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "process_new",
    "type": "module"
  }, {
    "id": 2,
    "text": "function save_histogram (hist, filename, format)\r\n\tlocal height = 200 -- altura da imagem\r\n\tlocal max = math.max(unpack(hist)) -- pega o maior valor do histograma\r\n\tlocal n = table.getn(hist) + 1 -- zero-based\r\n\tlocal image = im.ImageCreate(n, height, im.GRAY, im.BYTE) -- cria a imagem\r\n\tlocal white = 255\r\n\tlocal black = 0\r\n\r\n\tlocal render = function (x, y, d, param)\r\n\t\tlocal v = hist[x] / max\r\n\t\tlocal h = v * height\r\n\t\tif y <= h then return black end\r\n\t\treturn white\r\n\tend\r\n\r\n\tim.ProcessRenderOp(image, render, \"histogram\", {}, 0)\r\n\timage:Save(filename, format)\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local height = 200",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "local max = math.max(unpack(hist))",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "local n = table.getn(hist) + 1",
    "type": "statement:localassign"
  }, {
    "id": 6,
    "text": "local image = im.ImageCreate(n, height, im.GRAY, im.BYTE)",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "local white = 255",
    "type": "statement:localassign"
  }, {
    "id": 8,
    "text": "local black = 0",
    "type": "statement:localassign"
  }, {
    "id": 9,
    "text": "local render = function (x, y, d, param)\r\n\t\tlocal v = hist[x] / max\r\n\t\tlocal h = v * height\r\n\t\tif y <= h then return black end\r\n\t\treturn white\r\n\tend",
    "type": "statement:localassign"
  }, {
    "id": 10,
    "text": "local v = hist[x] / max",
    "type": "statement:localassign"
  }, {
    "id": 11,
    "text": "local h = v * height",
    "type": "statement:localassign"
  }, {
    "id": 12,
    "text": "if y <= h then return black end",
    "type": "statement:if"
  }, {
    "id": 13,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 14,
    "text": "im.ProcessRenderOp(image, render, \"histogram\", {}, 0)",
    "type": "statement:functioncall"
  }, {
    "id": 15,
    "text": "image:Save(filename, format)",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 17,
    "text": "function (x, y, d, param)\r\n\t\tlocal v = hist[x] / max\r\n\t\tlocal h = v * height\r\n\t\tif y <= h then return black end\r\n\t\treturn white\r\n\tend",
    "type": "function"
  }, {
    "id": 18,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 19,
    "text": "",
    "type": "function container"
  }, {
    "id": 20,
    "text": "ImageCreate",
    "type": "global function"
  }, {
    "id": 21,
    "text": "FileImageLoad",
    "type": "global function"
  }, {
    "id": 22,
    "text": "CalcHistogram",
    "type": "global function"
  }, {
    "id": 23,
    "text": "ProcessSplitComponentsNew",
    "type": "global function"
  }, {
    "id": 24,
    "text": "CalcGrayHistogram",
    "type": "global function"
  }, {
    "id": 25,
    "text": "ProcessReplaceColorNew",
    "type": "global function"
  }, {
    "id": 26,
    "text": "ProcessBitMaskNew",
    "type": "global function"
  }, {
    "id": 27,
    "text": "unpack",
    "type": "global function"
  }, {
    "id": 28,
    "text": "ProcessRenderOp",
    "type": "global function"
  }, {
    "id": 29,
    "text": "max",
    "type": "global function"
  }, {
    "id": 30,
    "text": "ProcessMergeComponentsNew",
    "type": "global function"
  }, {
    "id": 31,
    "text": "getn",
    "type": "global function"
  }, {
    "id": 32,
    "text": "require",
    "type": "global function"
  }, {
    "id": 33,
    "text": "",
    "type": "global variable"
  }, {
    "id": 34,
    "text": "",
    "type": "variable container"
  }, {
    "id": 35,
    "text": "",
    "type": "require container"
  }, {
    "id": 36,
    "text": "",
    "type": "local variable"
  }, {
    "id": 37,
    "text": "",
    "type": "string"
  }, {
    "id": 38,
    "text": "",
    "type": "local variable"
  }, {
    "id": 39,
    "text": "",
    "type": "n/a"
  }, {
    "id": 40,
    "text": "",
    "type": "local variable"
  }, {
    "id": 41,
    "text": "",
    "type": "n/a"
  }, {
    "id": 42,
    "text": "",
    "type": "local variable"
  }, {
    "id": 43,
    "text": "",
    "type": "local variable"
  }, {
    "id": 44,
    "text": "",
    "type": "local variable"
  }, {
    "id": 45,
    "text": "",
    "type": "n/a"
  }, {
    "id": 46,
    "text": "",
    "type": "local variable"
  }, {
    "id": 47,
    "text": "",
    "type": "n/a"
  }, {
    "id": 48,
    "text": "",
    "type": "local variable"
  }, {
    "id": 49,
    "text": "",
    "type": "n/a"
  } ]
}