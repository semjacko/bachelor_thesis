{
  "_filename": "wb_build.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/im/doc/html/wb/wb_build.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 8,
    "label": "has",
    "to": 10
  }, {
    "from": 8,
    "label": "has",
    "to": 5
  }, {
    "from": 8,
    "label": "has",
    "to": 11
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 13,
    "label": "has",
    "to": 15
  }, {
    "from": 15,
    "label": "has",
    "to": 16
  }, {
    "from": 15,
    "label": "has",
    "to": 17
  }, {
    "from": 13,
    "label": "has",
    "to": 18
  }, {
    "from": 12,
    "label": "has",
    "to": 19
  }, {
    "from": 20,
    "label": "has",
    "to": 21
  }, {
    "from": 20,
    "label": "has",
    "to": 22
  }, {
    "from": 20,
    "label": "has",
    "to": 23
  }, {
    "from": 20,
    "label": "has",
    "to": 24
  }, {
    "from": 20,
    "label": "has",
    "to": 25
  }, {
    "from": 20,
    "label": "has",
    "to": 26
  }, {
    "from": 26,
    "label": "has",
    "to": 27
  }, {
    "from": 26,
    "label": "has",
    "to": 28
  }, {
    "from": 20,
    "label": "has",
    "to": 29
  }, {
    "from": 20,
    "label": "has",
    "to": 30
  }, {
    "from": 31,
    "label": "has",
    "to": 32
  }, {
    "from": 31,
    "label": "has",
    "to": 33
  }, {
    "from": 31,
    "label": "has",
    "to": 34
  }, {
    "from": 31,
    "label": "has",
    "to": 35
  }, {
    "from": 31,
    "label": "has",
    "to": 36
  }, {
    "from": 31,
    "label": "has",
    "to": 37
  }, {
    "from": 31,
    "label": "has",
    "to": 38
  }, {
    "from": 31,
    "label": "has",
    "to": 39
  }, {
    "from": 31,
    "label": "has",
    "to": 40
  }, {
    "from": 40,
    "label": "has",
    "to": 41
  }, {
    "from": 40,
    "label": "has",
    "to": 42
  }, {
    "from": 31,
    "label": "has",
    "to": 43
  }, {
    "from": 31,
    "label": "has",
    "to": 44
  }, {
    "from": 45,
    "label": "has",
    "to": 46
  }, {
    "from": 45,
    "label": "has",
    "to": 47
  }, {
    "from": 47,
    "label": "has",
    "to": 48
  }, {
    "from": 45,
    "label": "has",
    "to": 49
  }, {
    "from": 50,
    "label": "has",
    "to": 51
  }, {
    "from": 50,
    "label": "has",
    "to": 52
  }, {
    "from": 52,
    "label": "has",
    "to": 53
  }, {
    "from": 52,
    "label": "has",
    "to": 54
  }, {
    "from": 50,
    "label": "has",
    "to": 55
  }, {
    "from": 55,
    "label": "has",
    "to": 56
  }, {
    "from": 50,
    "label": "has",
    "to": 6
  }, {
    "from": 50,
    "label": "has",
    "to": 57
  }, {
    "from": 58,
    "label": "has",
    "to": 59
  }, {
    "from": 59,
    "label": "has",
    "to": 60
  }, {
    "from": 59,
    "label": "has",
    "to": 61
  }, {
    "from": 59,
    "label": "has",
    "to": 62
  }, {
    "from": 59,
    "label": "has",
    "to": 63
  }, {
    "from": 59,
    "label": "has",
    "to": 64
  }, {
    "from": 64,
    "label": "has",
    "to": 65
  }, {
    "from": 64,
    "label": "has",
    "to": 66
  }, {
    "from": 59,
    "label": "has",
    "to": 67
  }, {
    "from": 59,
    "label": "has",
    "to": 68
  }, {
    "from": 68,
    "label": "has",
    "to": 69
  }, {
    "from": 68,
    "label": "has",
    "to": 70
  }, {
    "from": 68,
    "label": "has",
    "to": 71
  }, {
    "from": 68,
    "label": "has",
    "to": 72
  }, {
    "from": 59,
    "label": "has",
    "to": 73
  }, {
    "from": 59,
    "label": "has",
    "to": 60
  }, {
    "from": 59,
    "label": "has",
    "to": 74
  }, {
    "from": 74,
    "label": "has",
    "to": 75
  }, {
    "from": 74,
    "label": "has",
    "to": 76
  }, {
    "from": 59,
    "label": "has",
    "to": 77
  }, {
    "from": 59,
    "label": "has",
    "to": 78
  }, {
    "from": 59,
    "label": "has",
    "to": 79
  }, {
    "from": 59,
    "label": "has",
    "to": 80
  }, {
    "from": 59,
    "label": "has",
    "to": 81
  }, {
    "from": 81,
    "label": "has",
    "to": 82
  }, {
    "from": 59,
    "label": "has",
    "to": 83
  }, {
    "from": 83,
    "label": "has",
    "to": 84
  }, {
    "from": 84,
    "label": "has",
    "to": 85
  }, {
    "from": 83,
    "label": "has",
    "to": 86
  }, {
    "from": 86,
    "label": "has",
    "to": 87
  }, {
    "from": 83,
    "label": "has",
    "to": 88
  }, {
    "from": 59,
    "label": "has",
    "to": 60
  }, {
    "from": 59,
    "label": "has",
    "to": 89
  }, {
    "from": 59,
    "label": "has",
    "to": 90
  }, {
    "from": 90,
    "label": "has",
    "to": 60
  }, {
    "from": 90,
    "label": "has",
    "to": 91
  }, {
    "from": 90,
    "label": "has",
    "to": 70
  }, {
    "from": 90,
    "label": "has",
    "to": 71
  }, {
    "from": 90,
    "label": "has",
    "to": 60
  }, {
    "from": 90,
    "label": "has",
    "to": 92
  }, {
    "from": 90,
    "label": "has",
    "to": 93
  }, {
    "from": 90,
    "label": "has",
    "to": 94
  }, {
    "from": 90,
    "label": "has",
    "to": 95
  }, {
    "from": 58,
    "label": "has",
    "to": 96
  }, {
    "from": 97,
    "label": "has",
    "to": 98
  }, {
    "from": 97,
    "label": "has",
    "to": 99
  }, {
    "from": 97,
    "label": "has",
    "to": 100
  }, {
    "from": 97,
    "label": "has",
    "to": 101
  }, {
    "from": 97,
    "label": "has",
    "to": 102
  }, {
    "from": 97,
    "label": "has",
    "to": 103
  }, {
    "from": 97,
    "label": "has",
    "to": 104
  }, {
    "from": 104,
    "label": "has",
    "to": 105
  }, {
    "from": 105,
    "label": "has",
    "to": 106
  }, {
    "from": 104,
    "label": "has",
    "to": 107
  }, {
    "from": 107,
    "label": "has",
    "to": 108
  }, {
    "from": 104,
    "label": "has",
    "to": 109
  }, {
    "from": 109,
    "label": "has",
    "to": 110
  }, {
    "from": 109,
    "label": "has",
    "to": 111
  }, {
    "from": 97,
    "label": "has",
    "to": 112
  }, {
    "from": 113,
    "label": "has",
    "to": 114
  }, {
    "from": 113,
    "label": "has",
    "to": 115
  }, {
    "from": 113,
    "label": "has",
    "to": 116
  }, {
    "from": 113,
    "label": "has",
    "to": 117
  }, {
    "from": 113,
    "label": "has",
    "to": 118
  }, {
    "from": 113,
    "label": "has",
    "to": 119
  }, {
    "from": 113,
    "label": "has",
    "to": 120
  }, {
    "from": 113,
    "label": "has",
    "to": 121
  }, {
    "from": 113,
    "label": "has",
    "to": 5
  }, {
    "from": 113,
    "label": "has",
    "to": 122
  }, {
    "from": 123,
    "label": "has",
    "to": 124
  }, {
    "from": 123,
    "label": "has",
    "to": 125
  }, {
    "from": 123,
    "label": "has",
    "to": 126
  }, {
    "from": 123,
    "label": "has",
    "to": 127
  }, {
    "from": 123,
    "label": "has",
    "to": 128
  }, {
    "from": 123,
    "label": "has",
    "to": 129
  }, {
    "from": 123,
    "label": "has",
    "to": 130
  }, {
    "from": 123,
    "label": "has",
    "to": 131
  }, {
    "from": 123,
    "label": "has",
    "to": 132
  }, {
    "from": 132,
    "label": "has",
    "to": 133
  }, {
    "from": 132,
    "label": "has",
    "to": 134
  }, {
    "from": 132,
    "label": "has",
    "to": 135
  }, {
    "from": 132,
    "label": "has",
    "to": 136
  }, {
    "from": 123,
    "label": "has",
    "to": 137
  }, {
    "from": 123,
    "label": "has",
    "to": 5
  }, {
    "from": 123,
    "label": "has",
    "to": 138
  }, {
    "from": 139,
    "label": "has",
    "to": 140
  }, {
    "from": 139,
    "label": "has",
    "to": 141
  }, {
    "from": 139,
    "label": "has",
    "to": 142
  }, {
    "from": 139,
    "label": "has",
    "to": 143
  }, {
    "from": 139,
    "label": "has",
    "to": 144
  }, {
    "from": 144,
    "label": "has",
    "to": 145
  }, {
    "from": 144,
    "label": "has",
    "to": 146
  }, {
    "from": 139,
    "label": "has",
    "to": 147
  }, {
    "from": 139,
    "label": "has",
    "to": 5
  }, {
    "from": 139,
    "label": "has",
    "to": 148
  }, {
    "from": 149,
    "label": "has",
    "to": 150
  }, {
    "from": 149,
    "label": "has",
    "to": 151
  }, {
    "from": 149,
    "label": "has",
    "to": 152
  }, {
    "from": 149,
    "label": "has",
    "to": 153
  }, {
    "from": 153,
    "label": "has",
    "to": 154
  }, {
    "from": 153,
    "label": "has",
    "to": 155
  }, {
    "from": 149,
    "label": "has",
    "to": 5
  }, {
    "from": 149,
    "label": "has",
    "to": 156
  }, {
    "from": 157,
    "label": "calls",
    "to": 139
  }, {
    "from": 2,
    "label": "calls",
    "to": 164
  }, {
    "from": 8,
    "label": "calls",
    "to": 164
  }, {
    "from": 113,
    "label": "calls",
    "to": 164
  }, {
    "from": 123,
    "label": "calls",
    "to": 164
  }, {
    "from": 139,
    "label": "calls",
    "to": 164
  }, {
    "from": 149,
    "label": "calls",
    "to": 164
  }, {
    "from": 50,
    "label": "calls",
    "to": 165
  }, {
    "from": 157,
    "label": "calls",
    "to": 160
  }, {
    "from": 157,
    "label": "calls",
    "to": 113
  }, {
    "from": 58,
    "label": "calls",
    "to": 45
  }, {
    "from": 58,
    "label": "calls",
    "to": 45
  }, {
    "from": 58,
    "label": "calls",
    "to": 45
  }, {
    "from": 58,
    "label": "calls",
    "to": 45
  }, {
    "from": 58,
    "label": "calls",
    "to": 45
  }, {
    "from": 113,
    "label": "calls",
    "to": 97
  }, {
    "from": 20,
    "label": "calls",
    "to": 158
  }, {
    "from": 31,
    "label": "calls",
    "to": 158
  }, {
    "from": 113,
    "label": "calls",
    "to": 158
  }, {
    "from": 123,
    "label": "calls",
    "to": 158
  }, {
    "from": 139,
    "label": "calls",
    "to": 158
  }, {
    "from": 149,
    "label": "calls",
    "to": 158
  }, {
    "from": 157,
    "label": "calls",
    "to": 158
  }, {
    "from": 157,
    "label": "calls",
    "to": 158
  }, {
    "from": 58,
    "label": "calls",
    "to": 12
  }, {
    "from": 58,
    "label": "calls",
    "to": 12
  }, {
    "from": 97,
    "label": "calls",
    "to": 12
  }, {
    "from": 58,
    "label": "calls",
    "to": 58
  }, {
    "from": 97,
    "label": "calls",
    "to": 58
  }, {
    "from": 97,
    "label": "calls",
    "to": 58
  }, {
    "from": 58,
    "label": "calls",
    "to": 50
  }, {
    "from": 58,
    "label": "calls",
    "to": 50
  }, {
    "from": 58,
    "label": "calls",
    "to": 50
  }, {
    "from": 97,
    "label": "calls",
    "to": 50
  }, {
    "from": 149,
    "label": "calls",
    "to": 161
  }, {
    "from": 149,
    "label": "calls",
    "to": 161
  }, {
    "from": 157,
    "label": "calls",
    "to": 123
  }, {
    "from": 20,
    "label": "calls",
    "to": 2
  }, {
    "from": 31,
    "label": "calls",
    "to": 2
  }, {
    "from": 113,
    "label": "calls",
    "to": 2
  }, {
    "from": 123,
    "label": "calls",
    "to": 2
  }, {
    "from": 139,
    "label": "calls",
    "to": 2
  }, {
    "from": 20,
    "label": "calls",
    "to": 8
  }, {
    "from": 31,
    "label": "calls",
    "to": 8
  }, {
    "from": 12,
    "label": "calls",
    "to": 159
  }, {
    "from": 12,
    "label": "calls",
    "to": 166
  }, {
    "from": 157,
    "label": "calls",
    "to": 163
  }, {
    "from": 157,
    "label": "calls",
    "to": 163
  }, {
    "from": 157,
    "label": "calls",
    "to": 31
  }, {
    "from": 20,
    "label": "calls",
    "to": 162
  }, {
    "from": 20,
    "label": "calls",
    "to": 162
  }, {
    "from": 20,
    "label": "calls",
    "to": 162
  }, {
    "from": 20,
    "label": "calls",
    "to": 162
  }, {
    "from": 20,
    "label": "calls",
    "to": 162
  }, {
    "from": 31,
    "label": "calls",
    "to": 162
  }, {
    "from": 31,
    "label": "calls",
    "to": 162
  }, {
    "from": 31,
    "label": "calls",
    "to": 162
  }, {
    "from": 31,
    "label": "calls",
    "to": 162
  }, {
    "from": 31,
    "label": "calls",
    "to": 162
  }, {
    "from": 31,
    "label": "calls",
    "to": 162
  }, {
    "from": 31,
    "label": "calls",
    "to": 162
  }, {
    "from": 31,
    "label": "calls",
    "to": 162
  }, {
    "from": 58,
    "label": "calls",
    "to": 162
  }, {
    "from": 58,
    "label": "calls",
    "to": 162
  }, {
    "from": 123,
    "label": "calls",
    "to": 162
  }, {
    "from": 123,
    "label": "calls",
    "to": 162
  }, {
    "from": 123,
    "label": "calls",
    "to": 162
  }, {
    "from": 123,
    "label": "calls",
    "to": 162
  }, {
    "from": 123,
    "label": "calls",
    "to": 162
  }, {
    "from": 123,
    "label": "calls",
    "to": 162
  }, {
    "from": 123,
    "label": "calls",
    "to": 162
  }, {
    "from": 139,
    "label": "calls",
    "to": 162
  }, {
    "from": 139,
    "label": "calls",
    "to": 162
  }, {
    "from": 139,
    "label": "calls",
    "to": 162
  }, {
    "from": 157,
    "label": "calls",
    "to": 20
  }, {
    "from": 157,
    "label": "calls",
    "to": 149
  }, {
    "from": 1,
    "label": "contains",
    "to": 157
  }, {
    "from": 157,
    "label": "declares",
    "to": 2
  }, {
    "from": 157,
    "label": "declares",
    "to": 8
  }, {
    "from": 157,
    "label": "declares",
    "to": 12
  }, {
    "from": 157,
    "label": "declares",
    "to": 20
  }, {
    "from": 157,
    "label": "declares",
    "to": 31
  }, {
    "from": 157,
    "label": "declares",
    "to": 45
  }, {
    "from": 157,
    "label": "declares",
    "to": 50
  }, {
    "from": 157,
    "label": "declares",
    "to": 58
  }, {
    "from": 157,
    "label": "declares",
    "to": 97
  }, {
    "from": 157,
    "label": "declares",
    "to": 113
  }, {
    "from": 157,
    "label": "declares",
    "to": 123
  }, {
    "from": 157,
    "label": "declares",
    "to": 139
  }, {
    "from": 157,
    "label": "declares",
    "to": 149
  }, {
    "from": 1,
    "label": "contains",
    "to": 167
  }, {
    "from": 1,
    "label": "contains",
    "to": 168
  }, {
    "from": 167,
    "label": "initializes",
    "to": 169
  }, {
    "from": 169,
    "label": "assigns",
    "to": 170
  }, {
    "from": 167,
    "label": "initializes",
    "to": 171
  }, {
    "from": 171,
    "label": "assigns",
    "to": 172
  }, {
    "from": 167,
    "label": "initializes",
    "to": 173
  }, {
    "from": 167,
    "label": "initializes",
    "to": 174
  }, {
    "from": 167,
    "label": "initializes",
    "to": 175
  }, {
    "from": 167,
    "label": "initializes",
    "to": 176
  }, {
    "from": 167,
    "label": "initializes",
    "to": 177
  }, {
    "from": 167,
    "label": "initializes",
    "to": 178
  }, {
    "from": 178,
    "label": "assigns",
    "to": 179
  }, {
    "from": 167,
    "label": "initializes",
    "to": 180
  }, {
    "from": 180,
    "label": "assigns",
    "to": 181
  }, {
    "from": 167,
    "label": "initializes",
    "to": 182
  }, {
    "from": 167,
    "label": "initializes",
    "to": 183
  }, {
    "from": 183,
    "label": "assigns",
    "to": 184
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "wb_build",
    "type": "module"
  }, {
    "id": 2,
    "text": "function readFile(filename)\r\n  local file = io.open(filename)\r\n  local text = file:read(\"*a\")\r\n  file:close()\r\n  return text\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local file = io.open(filename)",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "local text = file:read(\"*a\")",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "file:close()",
    "type": "statement:functioncall"
  }, {
    "id": 6,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 7,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 8,
    "text": "function writeFile(filename, text)\r\n  local file = io.open(filename, \"w\")\r\n  file:write(text)\r\n  file:close()\r\nend",
    "type": "function"
  }, {
    "id": 9,
    "text": "local file = io.open(filename, \"w\")",
    "type": "statement:localassign"
  }, {
    "id": 10,
    "text": "file:write(text)",
    "type": "statement:functioncall"
  }, {
    "id": 11,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 12,
    "text": "function addHtmlFile(v)\r\n  if v then\r\n    -- only up to \"#\"\r\n    local j = string.find(v, \"#\")\r\n    if j then\r\n      f = string.sub(v, 0, j-1)\r\n    else\r\n      f = v\r\n    end\r\n  \r\n    htmlFiles[f] = f\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 13,
    "text": "if v then\r\n    -- only up to \"#\"\r\n    local j = string.find(v, \"#\")\r\n    if j then\r\n      f = string.sub(v, 0, j-1)\r\n    else\r\n      f = v\r\n    end\r\n  \r\n    htmlFiles[f] = f\r\n  end",
    "type": "statement:if"
  }, {
    "id": 14,
    "text": "local j = string.find(v, \"#\")",
    "type": "statement:localassign"
  }, {
    "id": 15,
    "text": "if j then\r\n      f = string.sub(v, 0, j-1)\r\n    else\r\n      f = v\r\n    end",
    "type": "statement:if"
  }, {
    "id": 16,
    "text": "f = string.sub(v, 0, j-1)",
    "type": "statement:assign"
  }, {
    "id": 17,
    "text": "f = v",
    "type": "statement:assign"
  }, {
    "id": 18,
    "text": "htmlFiles[f] = f",
    "type": "statement:assign"
  }, {
    "id": 19,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 20,
    "text": "function writeIndexFile()\r\n  print(\"Writing \\\"../index\"..lngSuffix..\".html\\\".\")\r\n  \r\n  local wb_index = readFile(\"template_index.html\")\r\n  \r\n  wb_index = string.gsub(wb_index, \"WB_TITLE\", wb_usr.messages[lngIndex].title)\r\n  wb_index = string.gsub(wb_index, \"WB_START_SIZE\", wb_usr.start_size)\r\n  wb_index = string.gsub(wb_index, \"WB_START_PAGE\", lngIndex..\"/\"..wb_usr.tree.link)\r\n  if (lngCount > 1) then\r\n    wb_index = string.gsub(wb_index, \"WB_LNG\", lngSuffix)\r\n  else\r\n    wb_index = string.gsub(wb_index, \"WB_LNG\", \"\")\r\n  end\r\n  \r\n  writeFile(\"../index\"..lngSuffix..\".html\", wb_index)\r\nend",
    "type": "function"
  }, {
    "id": 21,
    "text": "print(\"Writing \\\"../index\"..lngSuffix..\".html\\\".\")",
    "type": "statement:functioncall"
  }, {
    "id": 22,
    "text": "local wb_index = readFile(\"template_index.html\")",
    "type": "statement:localassign"
  }, {
    "id": 23,
    "text": "wb_index = string.gsub(wb_index, \"WB_TITLE\", wb_usr.messages[lngIndex].title)",
    "type": "statement:assign"
  }, {
    "id": 24,
    "text": "wb_index = string.gsub(wb_index, \"WB_START_SIZE\", wb_usr.start_size)",
    "type": "statement:assign"
  }, {
    "id": 25,
    "text": "wb_index = string.gsub(wb_index, \"WB_START_PAGE\", lngIndex..\"/\"..wb_usr.tree.link)",
    "type": "statement:assign"
  }, {
    "id": 26,
    "text": "if (lngCount > 1) then\r\n    wb_index = string.gsub(wb_index, \"WB_LNG\", lngSuffix)\r\n  else\r\n    wb_index = string.gsub(wb_index, \"WB_LNG\", \"\")\r\n  end",
    "type": "statement:if"
  }, {
    "id": 27,
    "text": "wb_index = string.gsub(wb_index, \"WB_LNG\", lngSuffix)",
    "type": "statement:assign"
  }, {
    "id": 28,
    "text": "wb_index = string.gsub(wb_index, \"WB_LNG\", \"\")",
    "type": "statement:assign"
  }, {
    "id": 29,
    "text": "writeFile(\"../index\"..lngSuffix..\".html\", wb_index)",
    "type": "statement:functioncall"
  }, {
    "id": 30,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 31,
    "text": "function writeTitleFile()\r\n  print(\"Writing \\\"../wb_title\"..lngSuffix..\".html\\\".\")\r\n  \r\n  local wb_title = readFile(\"template_wb_title.html\")\r\n  \r\n  wb_title = string.gsub(wb_title, \"WB_BAR_TITLE\", wb_usr.messages[lngIndex].bar_title)\r\n  wb_title = string.gsub(wb_title, \"WB_TITLE_BGCOLOR\", wb_usr.title_bgcolor)\r\n  wb_title = string.gsub(wb_title, \"WB_SEARCH_LINK\", wb_usr.search_link)\r\n  wb_title = string.gsub(wb_title, \"WB_COPYRIGHT_LINK\", wb_usr.copyright_link)\r\n  wb_title = string.gsub(wb_title, \"WB_COPYRIGHT_NAME\", wb_usr.copyright_name)\r\n  wb_title = string.gsub(wb_title, \"WB_CONTACT\", wb_usr.contact)\r\n  \r\n  if (lngCount > 1) then\r\n    wb_title = string.gsub(wb_title, \"WB_LNG\", lngSuffix)\r\n  else\r\n    wb_title = string.gsub(wb_title, \"WB_LNG\", \"\")\r\n  end\r\n  \r\n  writeFile(\"../wb_title\"..lngSuffix..\".html\", wb_title)\r\nend",
    "type": "function"
  }, {
    "id": 32,
    "text": "print(\"Writing \\\"../wb_title\"..lngSuffix..\".html\\\".\")",
    "type": "statement:functioncall"
  }, {
    "id": 33,
    "text": "local wb_title = readFile(\"template_wb_title.html\")",
    "type": "statement:localassign"
  }, {
    "id": 34,
    "text": "wb_title = string.gsub(wb_title, \"WB_BAR_TITLE\", wb_usr.messages[lngIndex].bar_title)",
    "type": "statement:assign"
  }, {
    "id": 35,
    "text": "wb_title = string.gsub(wb_title, \"WB_TITLE_BGCOLOR\", wb_usr.title_bgcolor)",
    "type": "statement:assign"
  }, {
    "id": 36,
    "text": "wb_title = string.gsub(wb_title, \"WB_SEARCH_LINK\", wb_usr.search_link)",
    "type": "statement:assign"
  }, {
    "id": 37,
    "text": "wb_title = string.gsub(wb_title, \"WB_COPYRIGHT_LINK\", wb_usr.copyright_link)",
    "type": "statement:assign"
  }, {
    "id": 38,
    "text": "wb_title = string.gsub(wb_title, \"WB_COPYRIGHT_NAME\", wb_usr.copyright_name)",
    "type": "statement:assign"
  }, {
    "id": 39,
    "text": "wb_title = string.gsub(wb_title, \"WB_CONTACT\", wb_usr.contact)",
    "type": "statement:assign"
  }, {
    "id": 40,
    "text": "if (lngCount > 1) then\r\n    wb_title = string.gsub(wb_title, \"WB_LNG\", lngSuffix)\r\n  else\r\n    wb_title = string.gsub(wb_title, \"WB_LNG\", \"\")\r\n  end",
    "type": "statement:if"
  }, {
    "id": 41,
    "text": "wb_title = string.gsub(wb_title, \"WB_LNG\", lngSuffix)",
    "type": "statement:assign"
  }, {
    "id": 42,
    "text": "wb_title = string.gsub(wb_title, \"WB_LNG\", \"\")",
    "type": "statement:assign"
  }, {
    "id": 43,
    "text": "writeFile(\"../wb_title\"..lngSuffix..\".html\", wb_title)",
    "type": "statement:functioncall"
  }, {
    "id": 44,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 45,
    "text": "function writeIndent(file, level)\r\n  -- base identation             \r\n  file:write(\"    \")       \r\n  \r\n  for i = 1, level*2, 1 do\r\n    file:write(\" \")\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 46,
    "text": "file:write(\"    \")",
    "type": "statement:functioncall"
  }, {
    "id": 47,
    "text": "for i = 1, level*2, 1 do\r\n    file:write(\" \")\r\n  end",
    "type": "statement:numericfor"
  }, {
    "id": 48,
    "text": "file:write(\" \")",
    "type": "statement:functioncall"
  }, {
    "id": 49,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 50,
    "text": "function getNodeName(node)\r\n  local name = nil\r\n  if (node.name[lngIndex]) then\r\n    name = node.name[lngIndex]\r\n  else\r\n    name = node.name[\"nl\"]\r\n  end\r\n\r\n  if not name then \r\n    error(\"Name not found.\")\r\n  end\r\n  \r\n  return name\r\nend",
    "type": "function"
  }, {
    "id": 51,
    "text": "local name = nil",
    "type": "statement:localassign"
  }, {
    "id": 52,
    "text": "if (node.name[lngIndex]) then\r\n    name = node.name[lngIndex]\r\n  else\r\n    name = node.name[\"nl\"]\r\n  end",
    "type": "statement:if"
  }, {
    "id": 53,
    "text": "name = node.name[lngIndex]",
    "type": "statement:assign"
  }, {
    "id": 54,
    "text": "name = node.name[\"nl\"]",
    "type": "statement:assign"
  }, {
    "id": 55,
    "text": "if not name then \r\n    error(\"Name not found.\")\r\n  end",
    "type": "statement:if"
  }, {
    "id": 56,
    "text": "error(\"Name not found.\")",
    "type": "statement:functioncall"
  }, {
    "id": 57,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 58,
    "text": "function writeNode(file, node, opened, level, folder_index, folder_suffix, node_suffix, child_prefix)\r\n  if (node.folder) then -- folder\r\n    -- box image\r\n    writeIndent(file, level)\r\n    file:write(\"<p>\")\r\n    \r\n    folder_suffix = folder_suffix .. \".\" .. folder_index\r\n                                         \r\n    file:write(child_prefix..\"<img name=\\\"imgfolder\"..folder_suffix..\"\\\" \")\r\n      \r\n    if (opened) then\r\n      file:write(\"src=\\\"wb_img/minusnode\"..node_suffix..\".png\\\" \")\r\n    else\r\n      file:write(\"src=\\\"wb_img/plusnode\"..node_suffix..\".png\\\" \")\r\n    end\r\n    \r\n    file:write(\"onclick=\\\"toggleFolder('folder\"..folder_suffix..\"')\\\">\")\r\n    \r\n    if (node.link) then\r\n      file:write(\"<a name=\\\"link\"..linkCount..\"folder\"..folder_suffix..\"\\\" class=\\\"el\\\" href=\\\"\"..lngIndex..\"/\"..node.link..\"\\\">\"..getNodeName(node)..\"</a>\")\r\n      addHtmlFile(node.link)\r\n      linkCount = linkCount + 1\r\n    else\r\n      file:write(\"  \"..getNodeName(node))\r\n    end\r\n    \r\n    file:write(\"</p>\\n\")\r\n                \r\n    -- folder div            \r\n    writeIndent(file, level)\r\n    if (opened) then\r\n      file:write(\"<div id=\\\"folder\"..folder_suffix..\"\\\" style=\\\"display:block\\\">\\n\")\r\n    else\r\n      file:write(\"<div id=\\\"folder\"..folder_suffix..\"\\\">\\n\")\r\n    end\r\n  \r\n    local n = #(node.folder)\r\n    local next_folder_index = 0\r\n    local next_node_suffix = \"\"\r\n    local next_child_prefix = \"<img src=\\\"wb_img/vertline.png\\\">\"\r\n    if (node_suffix == \"last\") then\r\n      next_child_prefix = \"<img src=\\\"wb_img/blank.png\\\">\"\r\n    end\r\n    for i = 1, n, 1 do\r\n      if (i == n) then\r\n        next_node_suffix = \"last\"\r\n      end\r\n      if (node.folder[i].folder) then\r\n        next_folder_index = next_folder_index + 1\r\n      end\r\n      writeNode(file, node.folder[i], false, level+1, next_folder_index, folder_suffix, next_node_suffix, child_prefix..next_child_prefix)\r\n    end\r\n      \r\n    writeIndent(file, level)\r\n    file:write(\"</div>\\n\")\r\n  else -- leaf\r\n    if (node.link and node.link ~= \"\") then  -- normal leaf\r\n      writeIndent(file, level)\r\n      file:write(\"<p>\"..child_prefix..\"<img src=\\\"wb_img/node\"..node_suffix..\".png\\\"><a class=\\\"el\\\" name=\\\"link\"..linkCount..\"folder\"..folder_suffix..\"\\\" href=\\\"\"..lngIndex..\"/\"..node.link..\"\\\">\"..getNodeName(node)..\"</a></p>\\n\")\r\n      addHtmlFile(node.link)\r\n      linkCount = linkCount + 1\r\n    else  -- separator leaf\r\n      writeIndent(file, level)\r\n      file:write(\"<p class=\\\"sep\\\">\")\r\n      \r\n      local sep_child_prefix = string.gsub(child_prefix, \"/vertline\", \"/sepvertline\")\r\n      sep_child_prefix = string.gsub(sep_child_prefix, \"/blank\", \"/sepblank\")\r\n      \r\n      file:write(sep_child_prefix..\"<img src=\\\"wb_img/sepnode.png\\\"></p>\\n\")\r\n    end\r\n  end  \r\nend",
    "type": "function"
  }, {
    "id": 59,
    "text": "if (node.folder) then -- folder\r\n    -- box image\r\n    writeIndent(file, level)\r\n    file:write(\"<p>\")\r\n    \r\n    folder_suffix = folder_suffix .. \".\" .. folder_index\r\n                                         \r\n    file:write(child_prefix..\"<img name=\\\"imgfolder\"..folder_suffix..\"\\\" \")\r\n      \r\n    if (opened) then\r\n      file:write(\"src=\\\"wb_img/minusnode\"..node_suffix..\".png\\\" \")\r\n    else\r\n      file:write(\"src=\\\"wb_img/plusnode\"..node_suffix..\".png\\\" \")\r\n    end\r\n    \r\n    file:write(\"onclick=\\\"toggleFolder('folder\"..folder_suffix..\"')\\\">\")\r\n    \r\n    if (node.link) then\r\n      file:write(\"<a name=\\\"link\"..linkCount..\"folder\"..folder_suffix..\"\\\" class=\\\"el\\\" href=\\\"\"..lngIndex..\"/\"..node.link..\"\\\">\"..getNodeName(node)..\"</a>\")\r\n      addHtmlFile(node.link)\r\n      linkCount = linkCount + 1\r\n    else\r\n      file:write(\"  \"..getNodeName(node))\r\n    end\r\n    \r\n    file:write(\"</p>\\n\")\r\n                \r\n    -- folder div            \r\n    writeIndent(file, level)\r\n    if (opened) then\r\n      file:write(\"<div id=\\\"folder\"..folder_suffix..\"\\\" style=\\\"display:block\\\">\\n\")\r\n    else\r\n      file:write(\"<div id=\\\"folder\"..folder_suffix..\"\\\">\\n\")\r\n    end\r\n  \r\n    local n = #(node.folder)\r\n    local next_folder_index = 0\r\n    local next_node_suffix = \"\"\r\n    local next_child_prefix = \"<img src=\\\"wb_img/vertline.png\\\">\"\r\n    if (node_suffix == \"last\") then\r\n      next_child_prefix = \"<img src=\\\"wb_img/blank.png\\\">\"\r\n    end\r\n    for i = 1, n, 1 do\r\n      if (i == n) then\r\n        next_node_suffix = \"last\"\r\n      end\r\n      if (node.folder[i].folder) then\r\n        next_folder_index = next_folder_index + 1\r\n      end\r\n      writeNode(file, node.folder[i], false, level+1, next_folder_index, folder_suffix, next_node_suffix, child_prefix..next_child_prefix)\r\n    end\r\n      \r\n    writeIndent(file, level)\r\n    file:write(\"</div>\\n\")\r\n  else -- leaf\r\n    if (node.link and node.link ~= \"\") then  -- normal leaf\r\n      writeIndent(file, level)\r\n      file:write(\"<p>\"..child_prefix..\"<img src=\\\"wb_img/node\"..node_suffix..\".png\\\"><a class=\\\"el\\\" name=\\\"link\"..linkCount..\"folder\"..folder_suffix..\"\\\" href=\\\"\"..lngIndex..\"/\"..node.link..\"\\\">\"..getNodeName(node)..\"</a></p>\\n\")\r\n      addHtmlFile(node.link)\r\n      linkCount = linkCount + 1\r\n    else  -- separator leaf\r\n      writeIndent(file, level)\r\n      file:write(\"<p class=\\\"sep\\\">\")\r\n      \r\n      local sep_child_prefix = string.gsub(child_prefix, \"/vertline\", \"/sepvertline\")\r\n      sep_child_prefix = string.gsub(sep_child_prefix, \"/blank\", \"/sepblank\")\r\n      \r\n      file:write(sep_child_prefix..\"<img src=\\\"wb_img/sepnode.png\\\"></p>\\n\")\r\n    end\r\n  end",
    "type": "statement:if"
  }, {
    "id": 60,
    "text": "writeIndent(file, level)",
    "type": "statement:functioncall"
  }, {
    "id": 61,
    "text": "file:write(\"<p>\")",
    "type": "statement:functioncall"
  }, {
    "id": 62,
    "text": "folder_suffix = folder_suffix .. \".\" .. folder_index",
    "type": "statement:assign"
  }, {
    "id": 63,
    "text": "file:write(child_prefix..\"<img name=\\\"imgfolder\"..folder_suffix..\"\\\" \")",
    "type": "statement:functioncall"
  }, {
    "id": 64,
    "text": "if (opened) then\r\n      file:write(\"src=\\\"wb_img/minusnode\"..node_suffix..\".png\\\" \")\r\n    else\r\n      file:write(\"src=\\\"wb_img/plusnode\"..node_suffix..\".png\\\" \")\r\n    end",
    "type": "statement:if"
  }, {
    "id": 65,
    "text": "file:write(\"src=\\\"wb_img/minusnode\"..node_suffix..\".png\\\" \")",
    "type": "statement:functioncall"
  }, {
    "id": 66,
    "text": "file:write(\"src=\\\"wb_img/plusnode\"..node_suffix..\".png\\\" \")",
    "type": "statement:functioncall"
  }, {
    "id": 67,
    "text": "file:write(\"onclick=\\\"toggleFolder('folder\"..folder_suffix..\"')\\\">\")",
    "type": "statement:functioncall"
  }, {
    "id": 68,
    "text": "if (node.link) then\r\n      file:write(\"<a name=\\\"link\"..linkCount..\"folder\"..folder_suffix..\"\\\" class=\\\"el\\\" href=\\\"\"..lngIndex..\"/\"..node.link..\"\\\">\"..getNodeName(node)..\"</a>\")\r\n      addHtmlFile(node.link)\r\n      linkCount = linkCount + 1\r\n    else\r\n      file:write(\"  \"..getNodeName(node))\r\n    end",
    "type": "statement:if"
  }, {
    "id": 69,
    "text": "file:write(\"<a name=\\\"link\"..linkCount..\"folder\"..folder_suffix..\"\\\" class=\\\"el\\\" href=\\\"\"..lngIndex..\"/\"..node.link..\"\\\">\"..getNodeName(node)..\"</a>\")",
    "type": "statement:functioncall"
  }, {
    "id": 70,
    "text": "addHtmlFile(node.link)",
    "type": "statement:functioncall"
  }, {
    "id": 71,
    "text": "linkCount = linkCount + 1",
    "type": "statement:assign"
  }, {
    "id": 72,
    "text": "file:write(\"  \"..getNodeName(node))",
    "type": "statement:functioncall"
  }, {
    "id": 73,
    "text": "file:write(\"</p>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 74,
    "text": "if (opened) then\r\n      file:write(\"<div id=\\\"folder\"..folder_suffix..\"\\\" style=\\\"display:block\\\">\\n\")\r\n    else\r\n      file:write(\"<div id=\\\"folder\"..folder_suffix..\"\\\">\\n\")\r\n    end",
    "type": "statement:if"
  }, {
    "id": 75,
    "text": "file:write(\"<div id=\\\"folder\"..folder_suffix..\"\\\" style=\\\"display:block\\\">\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 76,
    "text": "file:write(\"<div id=\\\"folder\"..folder_suffix..\"\\\">\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 77,
    "text": "local n = #(node.folder)",
    "type": "statement:localassign"
  }, {
    "id": 78,
    "text": "local next_folder_index = 0",
    "type": "statement:localassign"
  }, {
    "id": 79,
    "text": "local next_node_suffix = \"\"",
    "type": "statement:localassign"
  }, {
    "id": 80,
    "text": "local next_child_prefix = \"<img src=\\\"wb_img/vertline.png\\\">\"",
    "type": "statement:localassign"
  }, {
    "id": 81,
    "text": "if (node_suffix == \"last\") then\r\n      next_child_prefix = \"<img src=\\\"wb_img/blank.png\\\">\"\r\n    end",
    "type": "statement:if"
  }, {
    "id": 82,
    "text": "next_child_prefix = \"<img src=\\\"wb_img/blank.png\\\">\"",
    "type": "statement:assign"
  }, {
    "id": 83,
    "text": "for i = 1, n, 1 do\r\n      if (i == n) then\r\n        next_node_suffix = \"last\"\r\n      end\r\n      if (node.folder[i].folder) then\r\n        next_folder_index = next_folder_index + 1\r\n      end\r\n      writeNode(file, node.folder[i], false, level+1, next_folder_index, folder_suffix, next_node_suffix, child_prefix..next_child_prefix)\r\n    end",
    "type": "statement:numericfor"
  }, {
    "id": 84,
    "text": "if (i == n) then\r\n        next_node_suffix = \"last\"\r\n      end",
    "type": "statement:if"
  }, {
    "id": 85,
    "text": "next_node_suffix = \"last\"",
    "type": "statement:assign"
  }, {
    "id": 86,
    "text": "if (node.folder[i].folder) then\r\n        next_folder_index = next_folder_index + 1\r\n      end",
    "type": "statement:if"
  }, {
    "id": 87,
    "text": "next_folder_index = next_folder_index + 1",
    "type": "statement:assign"
  }, {
    "id": 88,
    "text": "writeNode(file, node.folder[i], false, level+1, next_folder_index, folder_suffix, next_node_suffix, child_prefix..next_child_prefix)",
    "type": "statement:functioncall"
  }, {
    "id": 89,
    "text": "file:write(\"</div>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 90,
    "text": "if (node.link and node.link ~= \"\") then  -- normal leaf\r\n      writeIndent(file, level)\r\n      file:write(\"<p>\"..child_prefix..\"<img src=\\\"wb_img/node\"..node_suffix..\".png\\\"><a class=\\\"el\\\" name=\\\"link\"..linkCount..\"folder\"..folder_suffix..\"\\\" href=\\\"\"..lngIndex..\"/\"..node.link..\"\\\">\"..getNodeName(node)..\"</a></p>\\n\")\r\n      addHtmlFile(node.link)\r\n      linkCount = linkCount + 1\r\n    else  -- separator leaf\r\n      writeIndent(file, level)\r\n      file:write(\"<p class=\\\"sep\\\">\")\r\n      \r\n      local sep_child_prefix = string.gsub(child_prefix, \"/vertline\", \"/sepvertline\")\r\n      sep_child_prefix = string.gsub(sep_child_prefix, \"/blank\", \"/sepblank\")\r\n      \r\n      file:write(sep_child_prefix..\"<img src=\\\"wb_img/sepnode.png\\\"></p>\\n\")\r\n    end",
    "type": "statement:if"
  }, {
    "id": 91,
    "text": "file:write(\"<p>\"..child_prefix..\"<img src=\\\"wb_img/node\"..node_suffix..\".png\\\"><a class=\\\"el\\\" name=\\\"link\"..linkCount..\"folder\"..folder_suffix..\"\\\" href=\\\"\"..lngIndex..\"/\"..node.link..\"\\\">\"..getNodeName(node)..\"</a></p>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 92,
    "text": "file:write(\"<p class=\\\"sep\\\">\")",
    "type": "statement:functioncall"
  }, {
    "id": 93,
    "text": "local sep_child_prefix = string.gsub(child_prefix, \"/vertline\", \"/sepvertline\")",
    "type": "statement:localassign"
  }, {
    "id": 94,
    "text": "sep_child_prefix = string.gsub(sep_child_prefix, \"/blank\", \"/sepblank\")",
    "type": "statement:assign"
  }, {
    "id": 95,
    "text": "file:write(sep_child_prefix..\"<img src=\\\"wb_img/sepnode.png\\\"></p>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 96,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 97,
    "text": "function writeTree(file)\r\n  -- root node              \r\n  file:write(\"    <h3><a name=\\\"link0folder.0\\\" class=\\\"el\\\" href=\\\"\"..lngIndex..\"/\"..wb_usr.tree.link..\"\\\">\"..getNodeName(wb_usr.tree)..\"</a></h3>\\n\")\r\n  addHtmlFile(wb_usr.tree.link)\r\n                       \r\n  local folder = wb_usr.tree.folder                     \r\n  local n = #folder\r\n  local node_suffix = \"\" \r\n  local folder_index = 0\r\n  for i = 1, n, 1 do\r\n    if (i == n) then\r\n      node_suffix = \"last\"\r\n    end                        \r\n    if (folder[i].folder) then\r\n      folder_index = folder_index + 1\r\n    end\r\n    if (i == 1 and wb_usr.start_open) then\r\n      writeNode(file, folder[i], true, 1, folder_index, \"\", node_suffix, \"\")\r\n    else\r\n      writeNode(file, folder[i], false, 1, folder_index, \"\", node_suffix, \"\")\r\n    end\r\n  end\r\nend",
    "type": "function"
  }, {
    "id": 98,
    "text": "file:write(\"    <h3><a name=\\\"link0folder.0\\\" class=\\\"el\\\" href=\\\"\"..lngIndex..\"/\"..wb_usr.tree.link..\"\\\">\"..getNodeName(wb_usr.tree)..\"</a></h3>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 99,
    "text": "addHtmlFile(wb_usr.tree.link)",
    "type": "statement:functioncall"
  }, {
    "id": 100,
    "text": "local folder = wb_usr.tree.folder",
    "type": "statement:localassign"
  }, {
    "id": 101,
    "text": "local n = #folder",
    "type": "statement:localassign"
  }, {
    "id": 102,
    "text": "local node_suffix = \"\"",
    "type": "statement:localassign"
  }, {
    "id": 103,
    "text": "local folder_index = 0",
    "type": "statement:localassign"
  }, {
    "id": 104,
    "text": "for i = 1, n, 1 do\r\n    if (i == n) then\r\n      node_suffix = \"last\"\r\n    end                        \r\n    if (folder[i].folder) then\r\n      folder_index = folder_index + 1\r\n    end\r\n    if (i == 1 and wb_usr.start_open) then\r\n      writeNode(file, folder[i], true, 1, folder_index, \"\", node_suffix, \"\")\r\n    else\r\n      writeNode(file, folder[i], false, 1, folder_index, \"\", node_suffix, \"\")\r\n    end\r\n  end",
    "type": "statement:numericfor"
  }, {
    "id": 105,
    "text": "if (i == n) then\r\n      node_suffix = \"last\"\r\n    end",
    "type": "statement:if"
  }, {
    "id": 106,
    "text": "node_suffix = \"last\"",
    "type": "statement:assign"
  }, {
    "id": 107,
    "text": "if (folder[i].folder) then\r\n      folder_index = folder_index + 1\r\n    end",
    "type": "statement:if"
  }, {
    "id": 108,
    "text": "folder_index = folder_index + 1",
    "type": "statement:assign"
  }, {
    "id": 109,
    "text": "if (i == 1 and wb_usr.start_open) then\r\n      writeNode(file, folder[i], true, 1, folder_index, \"\", node_suffix, \"\")\r\n    else\r\n      writeNode(file, folder[i], false, 1, folder_index, \"\", node_suffix, \"\")\r\n    end",
    "type": "statement:if"
  }, {
    "id": 110,
    "text": "writeNode(file, folder[i], true, 1, folder_index, \"\", node_suffix, \"\")",
    "type": "statement:functioncall"
  }, {
    "id": 111,
    "text": "writeNode(file, folder[i], false, 1, folder_index, \"\", node_suffix, \"\")",
    "type": "statement:functioncall"
  }, {
    "id": 112,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 113,
    "text": "function writeTreeFile()\r\n  print(\"Writing \\\"../wb_tree\"..lngSuffix..\".html\\\".\")\r\n  \r\n  local file = io.open(\"../wb_tree\"..lngSuffix..\".html\", \"w\")\r\n   \r\n  -- Write Header \r\n  local wb_tree = readFile(\"template_wb_tree.html\")\r\n  file:write(wb_tree)\r\n                   \r\n  -- Write Tree Nodes and Leafs\r\n  writeTree(file)\r\n                               \r\n  -- Write Footer                             \r\n  file:write(\"  </div>\\n\")\r\n  file:write(\"</body>\\n\")\r\n  file:write(\"</html>\\n\")\r\n  \r\n  file:close()\r\nend",
    "type": "function"
  }, {
    "id": 114,
    "text": "print(\"Writing \\\"../wb_tree\"..lngSuffix..\".html\\\".\")",
    "type": "statement:functioncall"
  }, {
    "id": 115,
    "text": "local file = io.open(\"../wb_tree\"..lngSuffix..\".html\", \"w\")",
    "type": "statement:localassign"
  }, {
    "id": 116,
    "text": "local wb_tree = readFile(\"template_wb_tree.html\")",
    "type": "statement:localassign"
  }, {
    "id": 117,
    "text": "file:write(wb_tree)",
    "type": "statement:functioncall"
  }, {
    "id": 118,
    "text": "writeTree(file)",
    "type": "statement:functioncall"
  }, {
    "id": 119,
    "text": "file:write(\"  </div>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 120,
    "text": "file:write(\"</body>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 121,
    "text": "file:write(\"</html>\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 122,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 123,
    "text": "function writeBarFile()\r\n  print(\"Writing \\\"../wb_bar\"..lngSuffix..\".html\\\".\")\r\n  \r\n  local file = io.open(\"../wb_bar\"..lngSuffix..\".html\", \"w\")\r\n   \r\n  local wb_bar = readFile(\"template_wb_bar.html\")\r\n  \r\n  wb_bar = string.gsub(wb_bar, \"WB_EXPALL_ALT\", lngMessages.exp_all[lngIndex])\r\n  wb_bar = string.gsub(wb_bar, \"WB_CONTALL_ALT\", lngMessages.cont_all[lngIndex])\r\n  wb_bar = string.gsub(wb_bar, \"WB_SYNC_ALT\", lngMessages.sync[lngIndex])\r\n  wb_bar = string.gsub(wb_bar, \"WB_NEXT_ALT\", lngMessages.next[lngIndex])\r\n  wb_bar = string.gsub(wb_bar, \"WB_PREV_ALT\", lngMessages.prev[lngIndex])\r\n  \r\n  if (lngCount > 1) then                \r\n    local lng_button = \"<img src=\\\"wb_img/barlineright.png\\\">\"\r\n    lng_button = lng_button .. \"<a target=\\\"_top\\\" href=\\\"index_\"..lngNext..\".html\\\"><img alt=\\\"\"..lngMessages.lang[lngIndex]..\"\\\" src=\\\"wb_img/lng\"..lngSuffix..\".png\\\" onmouseover=\\\"this.src='wb_img/lng\"..lngSuffix..\"_over.png'\\\" onmouseout=\\\"this.src='wb_img/lng\"..lngSuffix..\".png'\\\" style=\\\"border-width: 0px\\\"></a>\"\r\n    wb_bar = string.gsub(wb_bar, \"WB_LNG_BUTTON\", lng_button)\r\n  else\r\n    wb_bar = string.gsub(wb_bar, \"WB_LNG_BUTTON\", \"\")\r\n  end\r\n  \r\n  file:write(wb_bar)\r\n  file:close()\r\nend",
    "type": "function"
  }, {
    "id": 124,
    "text": "print(\"Writing \\\"../wb_bar\"..lngSuffix..\".html\\\".\")",
    "type": "statement:functioncall"
  }, {
    "id": 125,
    "text": "local file = io.open(\"../wb_bar\"..lngSuffix..\".html\", \"w\")",
    "type": "statement:localassign"
  }, {
    "id": 126,
    "text": "local wb_bar = readFile(\"template_wb_bar.html\")",
    "type": "statement:localassign"
  }, {
    "id": 127,
    "text": "wb_bar = string.gsub(wb_bar, \"WB_EXPALL_ALT\", lngMessages.exp_all[lngIndex])",
    "type": "statement:assign"
  }, {
    "id": 128,
    "text": "wb_bar = string.gsub(wb_bar, \"WB_CONTALL_ALT\", lngMessages.cont_all[lngIndex])",
    "type": "statement:assign"
  }, {
    "id": 129,
    "text": "wb_bar = string.gsub(wb_bar, \"WB_SYNC_ALT\", lngMessages.sync[lngIndex])",
    "type": "statement:assign"
  }, {
    "id": 130,
    "text": "wb_bar = string.gsub(wb_bar, \"WB_NEXT_ALT\", lngMessages.next[lngIndex])",
    "type": "statement:assign"
  }, {
    "id": 131,
    "text": "wb_bar = string.gsub(wb_bar, \"WB_PREV_ALT\", lngMessages.prev[lngIndex])",
    "type": "statement:assign"
  }, {
    "id": 132,
    "text": "if (lngCount > 1) then                \r\n    local lng_button = \"<img src=\\\"wb_img/barlineright.png\\\">\"\r\n    lng_button = lng_button .. \"<a target=\\\"_top\\\" href=\\\"index_\"..lngNext..\".html\\\"><img alt=\\\"\"..lngMessages.lang[lngIndex]..\"\\\" src=\\\"wb_img/lng\"..lngSuffix..\".png\\\" onmouseover=\\\"this.src='wb_img/lng\"..lngSuffix..\"_over.png'\\\" onmouseout=\\\"this.src='wb_img/lng\"..lngSuffix..\".png'\\\" style=\\\"border-width: 0px\\\"></a>\"\r\n    wb_bar = string.gsub(wb_bar, \"WB_LNG_BUTTON\", lng_button)\r\n  else\r\n    wb_bar = string.gsub(wb_bar, \"WB_LNG_BUTTON\", \"\")\r\n  end",
    "type": "statement:if"
  }, {
    "id": 133,
    "text": "local lng_button = \"<img src=\\\"wb_img/barlineright.png\\\">\"",
    "type": "statement:localassign"
  }, {
    "id": 134,
    "text": "lng_button = lng_button .. \"<a target=\\\"_top\\\" href=\\\"index_\"..lngNext..\".html\\\"><img alt=\\\"\"..lngMessages.lang[lngIndex]..\"\\\" src=\\\"wb_img/lng\"..lngSuffix..\".png\\\" onmouseover=\\\"this.src='wb_img/lng\"..lngSuffix..\"_over.png'\\\" onmouseout=\\\"this.src='wb_img/lng\"..lngSuffix..\".png'\\\" style=\\\"border-width: 0px\\\"></a>\"",
    "type": "statement:assign"
  }, {
    "id": 135,
    "text": "wb_bar = string.gsub(wb_bar, \"WB_LNG_BUTTON\", lng_button)",
    "type": "statement:assign"
  }, {
    "id": 136,
    "text": "wb_bar = string.gsub(wb_bar, \"WB_LNG_BUTTON\", \"\")",
    "type": "statement:assign"
  }, {
    "id": 137,
    "text": "file:write(wb_bar)",
    "type": "statement:functioncall"
  }, {
    "id": 138,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 139,
    "text": "function writeSearchFile()\r\n  print(\"Writing \\\"../ssSearch\"..lngSuffix..\".html\\\".\")\r\n  \r\n  local file = io.open(\"../ssSearch\"..lngSuffix..\".html\", \"w\")\r\n   \r\n  local wb_search = readFile(\"template_ssSearch.html\")\r\n  \r\n  wb_search = string.gsub(wb_search, \"WB_SEARCH\", lngMessages.search[lngIndex])\r\n  \r\n  if (lngCount > 1) then                \r\n    wb_search = string.gsub(wb_search, \"WB_LNG\", lngSuffix)\r\n  else\r\n    wb_search = string.gsub(wb_search, \"WB_LNG\", \"\")\r\n  end\r\n  \r\n  file:write(wb_search)\r\n  file:close()\r\nend",
    "type": "function"
  }, {
    "id": 140,
    "text": "print(\"Writing \\\"../ssSearch\"..lngSuffix..\".html\\\".\")",
    "type": "statement:functioncall"
  }, {
    "id": 141,
    "text": "local file = io.open(\"../ssSearch\"..lngSuffix..\".html\", \"w\")",
    "type": "statement:localassign"
  }, {
    "id": 142,
    "text": "local wb_search = readFile(\"template_ssSearch.html\")",
    "type": "statement:localassign"
  }, {
    "id": 143,
    "text": "wb_search = string.gsub(wb_search, \"WB_SEARCH\", lngMessages.search[lngIndex])",
    "type": "statement:assign"
  }, {
    "id": 144,
    "text": "if (lngCount > 1) then                \r\n    wb_search = string.gsub(wb_search, \"WB_LNG\", lngSuffix)\r\n  else\r\n    wb_search = string.gsub(wb_search, \"WB_LNG\", \"\")\r\n  end",
    "type": "statement:if"
  }, {
    "id": 145,
    "text": "wb_search = string.gsub(wb_search, \"WB_LNG\", lngSuffix)",
    "type": "statement:assign"
  }, {
    "id": 146,
    "text": "wb_search = string.gsub(wb_search, \"WB_LNG\", \"\")",
    "type": "statement:assign"
  }, {
    "id": 147,
    "text": "file:write(wb_search)",
    "type": "statement:functioncall"
  }, {
    "id": 148,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 149,
    "text": "function writeSearchIndexFile()\r\n  print(\"Writing \\\"../wb_search\"..lngSuffix..\".txt\\\".\")\r\n  \r\n  local file = io.open(\"../wb_search\"..lngSuffix..\".txt\", \"w\")\r\n  \r\n  local v = next(htmlFiles, nil)\r\n  while v ~= nil do\r\n    file:write(lngIndex..\"/\"..v..\"\\n\")\r\n    v = next(htmlFiles, v)\r\n  end\r\n  \r\n  file:close()\r\nend",
    "type": "function"
  }, {
    "id": 150,
    "text": "print(\"Writing \\\"../wb_search\"..lngSuffix..\".txt\\\".\")",
    "type": "statement:functioncall"
  }, {
    "id": 151,
    "text": "local file = io.open(\"../wb_search\"..lngSuffix..\".txt\", \"w\")",
    "type": "statement:localassign"
  }, {
    "id": 152,
    "text": "local v = next(htmlFiles, nil)",
    "type": "statement:localassign"
  }, {
    "id": 153,
    "text": "while v ~= nil do\r\n    file:write(lngIndex..\"/\"..v..\"\\n\")\r\n    v = next(htmlFiles, v)\r\n  end",
    "type": "statement:while"
  }, {
    "id": 154,
    "text": "file:write(lngIndex..\"/\"..v..\"\\n\")",
    "type": "statement:functioncall"
  }, {
    "id": 155,
    "text": "v = next(htmlFiles, v)",
    "type": "statement:assign"
  }, {
    "id": 156,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 157,
    "text": "",
    "type": "function container"
  }, {
    "id": 158,
    "text": "print",
    "type": "global function"
  }, {
    "id": 159,
    "text": "find",
    "type": "global function"
  }, {
    "id": 160,
    "text": "dofile",
    "type": "global function"
  }, {
    "id": 161,
    "text": "next",
    "type": "global function"
  }, {
    "id": 162,
    "text": "gsub",
    "type": "global function"
  }, {
    "id": 163,
    "text": "pairs",
    "type": "global function"
  }, {
    "id": 164,
    "text": "open",
    "type": "global function"
  }, {
    "id": 165,
    "text": "error",
    "type": "global function"
  }, {
    "id": 166,
    "text": "sub",
    "type": "global function"
  }, {
    "id": 167,
    "text": "",
    "type": "variable container"
  }, {
    "id": 168,
    "text": "",
    "type": "require container"
  }, {
    "id": 169,
    "text": "",
    "type": "local variable"
  }, {
    "id": 170,
    "text": "",
    "type": "keyword"
  }, {
    "id": 171,
    "text": "",
    "type": "local variable"
  }, {
    "id": 172,
    "text": "",
    "type": "keyword"
  }, {
    "id": 173,
    "text": "",
    "type": "global variable"
  }, {
    "id": 174,
    "text": "",
    "type": "global variable"
  }, {
    "id": 175,
    "text": "",
    "type": "global variable"
  }, {
    "id": 176,
    "text": "",
    "type": "global variable"
  }, {
    "id": 177,
    "text": "",
    "type": "global variable"
  }, {
    "id": 178,
    "text": "",
    "type": "global variable"
  }, {
    "id": 179,
    "text": "",
    "type": "n/a"
  }, {
    "id": 180,
    "text": "",
    "type": "global variable"
  }, {
    "id": 181,
    "text": "",
    "type": "n/a"
  }, {
    "id": 182,
    "text": "",
    "type": "global variable"
  }, {
    "id": 183,
    "text": "",
    "type": "global variable"
  }, {
    "id": 184,
    "text": "",
    "type": "n/a"
  } ]
}