{
  "_filename": "hdtv_resize.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/im/doc/html/examples/hdtv_resize.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 2,
    "label": "has",
    "to": 7
  }, {
    "from": 2,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 9
  }, {
    "from": 2,
    "label": "has",
    "to": 10
  }, {
    "from": 2,
    "label": "has",
    "to": 11
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 11,
    "label": "has",
    "to": 13
  }, {
    "from": 2,
    "label": "has",
    "to": 14
  }, {
    "from": 2,
    "label": "has",
    "to": 15
  }, {
    "from": 2,
    "label": "has",
    "to": 16
  }, {
    "from": 2,
    "label": "has",
    "to": 17
  }, {
    "from": 2,
    "label": "has",
    "to": 18
  }, {
    "from": 2,
    "label": "has",
    "to": 19
  }, {
    "from": 2,
    "label": "has",
    "to": 20
  }, {
    "from": 2,
    "label": "has",
    "to": 21
  }, {
    "from": 2,
    "label": "calls",
    "to": 27
  }, {
    "from": 22,
    "label": "calls",
    "to": 29
  }, {
    "from": 22,
    "label": "calls",
    "to": 29
  }, {
    "from": 22,
    "label": "calls",
    "to": 24
  }, {
    "from": 2,
    "label": "calls",
    "to": 23
  }, {
    "from": 2,
    "label": "calls",
    "to": 26
  }, {
    "from": 22,
    "label": "calls",
    "to": 25
  }, {
    "from": 22,
    "label": "calls",
    "to": 25
  }, {
    "from": 22,
    "label": "calls",
    "to": 25
  }, {
    "from": 22,
    "label": "calls",
    "to": 25
  }, {
    "from": 22,
    "label": "calls",
    "to": 25
  }, {
    "from": 22,
    "label": "calls",
    "to": 25
  }, {
    "from": 22,
    "label": "calls",
    "to": 25
  }, {
    "from": 2,
    "label": "calls",
    "to": 25
  }, {
    "from": 2,
    "label": "calls",
    "to": 25
  }, {
    "from": 2,
    "label": "calls",
    "to": 25
  }, {
    "from": 22,
    "label": "calls",
    "to": 25
  }, {
    "from": 22,
    "label": "calls",
    "to": 2
  }, {
    "from": 2,
    "label": "calls",
    "to": 28
  }, {
    "from": 1,
    "label": "contains",
    "to": 22
  }, {
    "from": 22,
    "label": "declares",
    "to": 2
  }, {
    "from": 1,
    "label": "contains",
    "to": 31
  }, {
    "from": 1,
    "label": "contains",
    "to": 32
  }, {
    "from": 31,
    "label": "initializes",
    "to": 33
  }, {
    "from": 33,
    "label": "assigns",
    "to": 34
  }, {
    "from": 31,
    "label": "initializes",
    "to": 35
  }, {
    "from": 35,
    "label": "assigns",
    "to": 36
  }, {
    "from": 31,
    "label": "initializes",
    "to": 37
  }, {
    "from": 32,
    "label": "initializes",
    "to": 30
  }, {
    "from": 32,
    "label": "initializes",
    "to": 30
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "hdtv_resize",
    "type": "module"
  }, {
    "id": 2,
    "text": "function ProcessImageFile(file_name)\r\n  print(\"Loading File: \"..file_name)\r\n  image, err = im.FileImageLoad(file_name);\r\n\r\n  if (err and err ~= im.ERR_NONE) then\r\n    error(err_msg[err+1])\r\n  end\r\n  \r\n  local w = image:Width()\r\n  local h = image:Height()\r\n  local new_w = 1920\r\n  local new_h = 1080\r\n  if (new_w/new_h < w/h) then\r\n    new_h = new_w * h/w\r\n  else\r\n    new_w = new_h * w/h\r\n  end\r\n  \r\n  local new_image = im.ImageCreateBased(image, new_w, new_h)\r\n\r\n  im.ProcessReduce(image, new_image, 1)\r\n\r\n  print(\"   Saving File: \"..file_name)\r\n  new_image:Save(file_name, \"JPEG\")\r\n\r\n  new_image:Destroy()\r\n  image:Destroy()\r\n  print(\"\")\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "print(\"Loading File: \"..file_name)",
    "type": "statement:functioncall"
  }, {
    "id": 4,
    "text": "image, err = im.FileImageLoad(file_name)",
    "type": "statement:assign"
  }, {
    "id": 5,
    "text": "if (err and err ~= im.ERR_NONE) then\r\n    error(err_msg[err+1])\r\n  end",
    "type": "statement:if"
  }, {
    "id": 6,
    "text": "error(err_msg[err+1])",
    "type": "statement:functioncall"
  }, {
    "id": 7,
    "text": "local w = image:Width()",
    "type": "statement:localassign"
  }, {
    "id": 8,
    "text": "local h = image:Height()",
    "type": "statement:localassign"
  }, {
    "id": 9,
    "text": "local new_w = 1920",
    "type": "statement:localassign"
  }, {
    "id": 10,
    "text": "local new_h = 1080",
    "type": "statement:localassign"
  }, {
    "id": 11,
    "text": "if (new_w/new_h < w/h) then\r\n    new_h = new_w * h/w\r\n  else\r\n    new_w = new_h * w/h\r\n  end",
    "type": "statement:if"
  }, {
    "id": 12,
    "text": "new_h = new_w * h/w",
    "type": "statement:assign"
  }, {
    "id": 13,
    "text": "new_w = new_h * w/h",
    "type": "statement:assign"
  }, {
    "id": 14,
    "text": "local new_image = im.ImageCreateBased(image, new_w, new_h)",
    "type": "statement:localassign"
  }, {
    "id": 15,
    "text": "im.ProcessReduce(image, new_image, 1)",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "print(\"   Saving File: \"..file_name)",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "new_image:Save(file_name, \"JPEG\")",
    "type": "statement:functioncall"
  }, {
    "id": 18,
    "text": "new_image:Destroy()",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "image:Destroy()",
    "type": "statement:functioncall"
  }, {
    "id": 20,
    "text": "print(\"\")",
    "type": "statement:functioncall"
  }, {
    "id": 21,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 22,
    "text": "",
    "type": "function container"
  }, {
    "id": 23,
    "text": "ImageCreateBased",
    "type": "global function"
  }, {
    "id": 24,
    "text": "ipairs",
    "type": "global function"
  }, {
    "id": 25,
    "text": "print",
    "type": "global function"
  }, {
    "id": 26,
    "text": "FileImageLoad",
    "type": "global function"
  }, {
    "id": 27,
    "text": "error",
    "type": "global function"
  }, {
    "id": 28,
    "text": "ProcessReduce",
    "type": "global function"
  }, {
    "id": 29,
    "text": "require",
    "type": "global function"
  }, {
    "id": 30,
    "text": "",
    "type": "global variable"
  }, {
    "id": 31,
    "text": "",
    "type": "variable container"
  }, {
    "id": 32,
    "text": "",
    "type": "require container"
  }, {
    "id": 33,
    "text": "",
    "type": "global variable"
  }, {
    "id": 34,
    "text": "",
    "type": "n/a"
  }, {
    "id": 35,
    "text": "",
    "type": "global variable"
  }, {
    "id": 36,
    "text": "",
    "type": "n/a"
  }, {
    "id": 37,
    "text": "",
    "type": "global variable"
  } ]
}