{
  "_filename": "oluac.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/olua/oluac.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 5,
    "label": "has",
    "to": 7
  }, {
    "from": 5,
    "label": "has",
    "to": 8
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 8,
    "label": "has",
    "to": 10
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 8,
    "label": "has",
    "to": 12
  }, {
    "from": 8,
    "label": "has",
    "to": 13
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 5,
    "label": "has",
    "to": 3
  }, {
    "from": 5,
    "label": "has",
    "to": 15
  }, {
    "from": 16,
    "label": "has",
    "to": 3
  }, {
    "from": 16,
    "label": "has",
    "to": 17
  }, {
    "from": 18,
    "label": "has",
    "to": 6
  }, {
    "from": 18,
    "label": "has",
    "to": 7
  }, {
    "from": 18,
    "label": "has",
    "to": 8
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 8,
    "label": "has",
    "to": 10
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 8,
    "label": "has",
    "to": 12
  }, {
    "from": 8,
    "label": "has",
    "to": 13
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 18,
    "label": "has",
    "to": 19
  }, {
    "from": 18,
    "label": "has",
    "to": 3
  }, {
    "from": 18,
    "label": "has",
    "to": 3
  }, {
    "from": 18,
    "label": "has",
    "to": 20
  }, {
    "from": 21,
    "label": "has",
    "to": 22
  }, {
    "from": 21,
    "label": "has",
    "to": 23
  }, {
    "from": 23,
    "label": "has",
    "to": 24
  }, {
    "from": 21,
    "label": "has",
    "to": 25
  }, {
    "from": 21,
    "label": "has",
    "to": 3
  }, {
    "from": 21,
    "label": "has",
    "to": 26
  }, {
    "from": 27,
    "label": "has",
    "to": 25
  }, {
    "from": 27,
    "label": "has",
    "to": 3
  }, {
    "from": 27,
    "label": "has",
    "to": 28
  }, {
    "from": 29,
    "label": "has",
    "to": 3
  }, {
    "from": 29,
    "label": "has",
    "to": 30
  }, {
    "from": 31,
    "label": "has",
    "to": 32
  }, {
    "from": 32,
    "label": "has",
    "to": 33
  }, {
    "from": 31,
    "label": "has",
    "to": 3
  }, {
    "from": 31,
    "label": "has",
    "to": 34
  }, {
    "from": 35,
    "label": "has",
    "to": 36
  }, {
    "from": 35,
    "label": "has",
    "to": 37
  }, {
    "from": 37,
    "label": "has",
    "to": 38
  }, {
    "from": 37,
    "label": "has",
    "to": 39
  }, {
    "from": 35,
    "label": "has",
    "to": 40
  }, {
    "from": 35,
    "label": "has",
    "to": 41
  }, {
    "from": 35,
    "label": "has",
    "to": 42
  }, {
    "from": 35,
    "label": "has",
    "to": 43
  }, {
    "from": 35,
    "label": "has",
    "to": 44
  }, {
    "from": 35,
    "label": "has",
    "to": 45
  }, {
    "from": 35,
    "label": "has",
    "to": 46
  }, {
    "from": 35,
    "label": "has",
    "to": 3
  }, {
    "from": 35,
    "label": "has",
    "to": 47
  }, {
    "from": 48,
    "label": "calls",
    "to": 50
  }, {
    "from": 48,
    "label": "calls",
    "to": 50
  }, {
    "from": 48,
    "label": "calls",
    "to": 50
  }, {
    "from": 48,
    "label": "calls",
    "to": 50
  }, {
    "from": 48,
    "label": "calls",
    "to": 50
  }, {
    "from": 48,
    "label": "calls",
    "to": 50
  }, {
    "from": 48,
    "label": "calls",
    "to": 50
  }, {
    "from": 48,
    "label": "calls",
    "to": 51
  }, {
    "from": 48,
    "label": "calls",
    "to": 52
  }, {
    "from": 48,
    "label": "calls",
    "to": 52
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 53
  }, {
    "from": 48,
    "label": "calls",
    "to": 58
  }, {
    "from": 48,
    "label": "calls",
    "to": 58
  }, {
    "from": 48,
    "label": "calls",
    "to": 55
  }, {
    "from": 48,
    "label": "calls",
    "to": 55
  }, {
    "from": 48,
    "label": "calls",
    "to": 55
  }, {
    "from": 48,
    "label": "calls",
    "to": 55
  }, {
    "from": 48,
    "label": "calls",
    "to": 55
  }, {
    "from": 48,
    "label": "calls",
    "to": 55
  }, {
    "from": 48,
    "label": "calls",
    "to": 49
  }, {
    "from": 48,
    "label": "calls",
    "to": 57
  }, {
    "from": 48,
    "label": "calls",
    "to": 57
  }, {
    "from": 48,
    "label": "calls",
    "to": 57
  }, {
    "from": 48,
    "label": "calls",
    "to": 57
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 56
  }, {
    "from": 48,
    "label": "calls",
    "to": 59
  }, {
    "from": 48,
    "label": "calls",
    "to": 59
  }, {
    "from": 48,
    "label": "calls",
    "to": 59
  }, {
    "from": 48,
    "label": "calls",
    "to": 59
  }, {
    "from": 48,
    "label": "calls",
    "to": 59
  }, {
    "from": 48,
    "label": "calls",
    "to": 59
  }, {
    "from": 48,
    "label": "calls",
    "to": 59
  }, {
    "from": 48,
    "label": "calls",
    "to": 59
  }, {
    "from": 48,
    "label": "calls",
    "to": 59
  }, {
    "from": 48,
    "label": "calls",
    "to": 59
  }, {
    "from": 48,
    "label": "calls",
    "to": 59
  }, {
    "from": 48,
    "label": "calls",
    "to": 59
  }, {
    "from": 48,
    "label": "calls",
    "to": 54
  }, {
    "from": 48,
    "label": "calls",
    "to": 54
  }, {
    "from": 1,
    "label": "contains",
    "to": 48
  }, {
    "from": 48,
    "label": "declares",
    "to": 2
  }, {
    "from": 48,
    "label": "declares",
    "to": 5
  }, {
    "from": 48,
    "label": "declares",
    "to": 16
  }, {
    "from": 48,
    "label": "declares",
    "to": 18
  }, {
    "from": 48,
    "label": "declares",
    "to": 21
  }, {
    "from": 48,
    "label": "declares",
    "to": 27
  }, {
    "from": 48,
    "label": "declares",
    "to": 29
  }, {
    "from": 48,
    "label": "declares",
    "to": 31
  }, {
    "from": 48,
    "label": "declares",
    "to": 35
  }, {
    "from": 1,
    "label": "contains",
    "to": 60
  }, {
    "from": 1,
    "label": "contains",
    "to": 61
  }, {
    "from": 60,
    "label": "initializes",
    "to": 62
  }, {
    "from": 62,
    "label": "assigns",
    "to": 63
  }, {
    "from": 60,
    "label": "initializes",
    "to": 64
  }, {
    "from": 64,
    "label": "assigns",
    "to": 65
  }, {
    "from": 60,
    "label": "initializes",
    "to": 66
  }, {
    "from": 66,
    "label": "assigns",
    "to": 67
  }, {
    "from": 60,
    "label": "initializes",
    "to": 68
  }, {
    "from": 68,
    "label": "assigns",
    "to": 69
  }, {
    "from": 60,
    "label": "initializes",
    "to": 70
  }, {
    "from": 70,
    "label": "assigns",
    "to": 71
  }, {
    "from": 60,
    "label": "initializes",
    "to": 72
  }, {
    "from": 61,
    "label": "initializes",
    "to": 73
  }, {
    "from": 73,
    "label": "requires",
    "to": 74
  }, {
    "from": 61,
    "label": "initializes",
    "to": 75
  }, {
    "from": 75,
    "label": "requires",
    "to": 76
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "oluac",
    "type": "module"
  }, {
    "id": 2,
    "text": "function(selector)\r\n\t\t\t\t\t\treturn selector, \"\"\r\n\t\t\t\t\tend",
    "type": "function"
  }, {
    "id": 3,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 4,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 5,
    "text": "function(...)\r\n\t\t\t\t\t\tlocal selector = {}\r\n\t\t\t\t\t\tlocal args = {}\r\n\t\t\t\t\t\tfor i = 1, select('#', ...), 2 do\r\n\t\t\t\t\t\t\tlocal selectorelement = select(i, ...)\r\n\t\t\t\t\t\t\tif (selectorelement ~= ',') then\r\n\t\t\t\t\t\t\t\tselector[#selector+1] = selectorelement\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlocal arg = select(i+1, ...)\r\n\t\t\t\t\t\t\tif (arg ~= '') then\r\n\t\t\t\t\t\t\t\targs[#args+1] = arg\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn table.concat(selector), args\r\n\t\t\t\t\tend",
    "type": "function"
  }, {
    "id": 6,
    "text": "local selector = {}",
    "type": "statement:localassign"
  }, {
    "id": 7,
    "text": "local args = {}",
    "type": "statement:localassign"
  }, {
    "id": 8,
    "text": "for i = 1, select('#', ...), 2 do\r\n\t\t\t\t\t\t\tlocal selectorelement = select(i, ...)\r\n\t\t\t\t\t\t\tif (selectorelement ~= ',') then\r\n\t\t\t\t\t\t\t\tselector[#selector+1] = selectorelement\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlocal arg = select(i+1, ...)\r\n\t\t\t\t\t\t\tif (arg ~= '') then\r\n\t\t\t\t\t\t\t\targs[#args+1] = arg\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\tend",
    "type": "statement:numericfor"
  }, {
    "id": 9,
    "text": "local selectorelement = select(i, ...)",
    "type": "statement:localassign"
  }, {
    "id": 10,
    "text": "if (selectorelement ~= ',') then\r\n\t\t\t\t\t\t\t\tselector[#selector+1] = selectorelement\r\n\t\t\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 11,
    "text": "selector[#selector+1] = selectorelement",
    "type": "statement:assign"
  }, {
    "id": 12,
    "text": "local arg = select(i+1, ...)",
    "type": "statement:localassign"
  }, {
    "id": 13,
    "text": "if (arg ~= '') then\r\n\t\t\t\t\t\t\t\targs[#args+1] = arg\r\n\t\t\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 14,
    "text": "args[#args+1] = arg",
    "type": "statement:assign"
  }, {
    "id": 15,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 16,
    "text": "function(selector)\r\n\t\t\t\t\t\treturn selector, \"\"\r\n\t\t\t\t\tend",
    "type": "function"
  }, {
    "id": 17,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 18,
    "text": "function(...)\r\n\t\t\t\t\t\tlocal selector = {}\r\n\t\t\t\t\t\tlocal args = {}\r\n\t\t\t\t\t\tfor i = 1, select('#', ...), 2 do\r\n\t\t\t\t\t\t\tlocal selectorelement = select(i, ...)\r\n\t\t\t\t\t\t\tif (selectorelement ~= ',') then\r\n\t\t\t\t\t\t\t\tselector[#selector+1] = selectorelement\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlocal arg = select(i+1, ...)\r\n\t\t\t\t\t\t\tif (arg ~= '') then\r\n\t\t\t\t\t\t\t\targs[#args+1] = arg\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (#args > 0) then\r\n\t\t\t\t\t\t\treturn table.concat(selector), ','..table.concat(args, ',')\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\treturn table.concat(selector), ''\r\n\t\t\t\t\t\tend \r\n\t\t\t\t\tend",
    "type": "function"
  }, {
    "id": 19,
    "text": "if (#args > 0) then\r\n\t\t\t\t\t\t\treturn table.concat(selector), ','..table.concat(args, ',')\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\treturn table.concat(selector), ''\r\n\t\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 20,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 21,
    "text": "function(selector, args)\r\n\t\t\t\t\t\tlocal comma = ','\r\n\t\t\t\t\t\tif #args == 0 then\r\n\t\t\t\t\t\t\tcomma = ''\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tselector = string.gsub(selector, ':', '_')\r\n\t\t\t\t\t\treturn '__olua_superclass_methods.' .. selector ..\r\n\t\t\t\t\t\t\t'(self' .. comma .. table.concat(args, ',') .. ')'\r\n\t\t\t\t\tend",
    "type": "function"
  }, {
    "id": 22,
    "text": "local comma = ','",
    "type": "statement:localassign"
  }, {
    "id": 23,
    "text": "if #args == 0 then\r\n\t\t\t\t\t\t\tcomma = ''\r\n\t\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 24,
    "text": "comma = ''",
    "type": "statement:assign"
  }, {
    "id": 25,
    "text": "selector = string.gsub(selector, ':', '_')",
    "type": "statement:assign"
  }, {
    "id": 26,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 27,
    "text": "function(object, selector, args)\r\n\t\t\t\t\t\tselector = string.gsub(selector, ':', '_')\r\n\t\t\t\t\t\treturn object .. ':' .. selector .. '(' .. table.concat(args, ',') .. ')'\r\n\t\t\t\t\tend",
    "type": "function"
  }, {
    "id": 28,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 29,
    "text": "function(class, block)\r\n\t\t\t\t\t\treturn 'do ' ..\r\n\t\t\t\t\t\t\t'local __olua_current_class = '..class..\r\n\t\t\t\t\t\t\t' local __olua_superclass_methods = '..class..':superclassMethods()'..\r\n\t\t\t\t\t\t\t' '..block..\r\n\t\t\t\t\t\t\t' end'\r\n\t\t\t\t\tend",
    "type": "function"
  }, {
    "id": 30,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 31,
    "text": "function(class, superclass)\r\n\t\t\t\t\t\tif not superclass then\r\n\t\t\t\t\t\t\tsuperclass = 'nil'\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\t\treturn class .. '=olua.declareclass(' ..\r\n\t\t\t\t\t\t\t'\"' .. class .. '\",' ..\r\n\t\t\t\t\t\t\tsuperclass .. ')' ..\r\n\t\t\t\t\t\t\t'local ' .. class .. '=' .. class\r\n\t\t\t\t\tend",
    "type": "function"
  }, {
    "id": 32,
    "text": "if not superclass then\r\n\t\t\t\t\t\t\tsuperclass = 'nil'\r\n\t\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 33,
    "text": "superclass = 'nil'",
    "type": "statement:assign"
  }, {
    "id": 34,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 35,
    "text": "function(type, selector, args, block)\r\n\t\t\t\t\t\tlocal result = {}\r\n\t\t\t\t\t\tif (type == '-') then\r\n\t\t\t\t\t\t\tresult[#result+1] = 'olua.definemethod'\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tresult[#result+1] = 'olua.defineclassmethod'\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tresult[#result+1] = '(__olua_current_class, \"'\r\n\t\t\t\t\t\tresult[#result+1] = selector:gsub(':', '_')\r\n\t\t\t\t\t\tresult[#result+1] = '\", function(self'\r\n\t\t\t\t\t\tresult[#result+1] = args\r\n\t\t\t\t\t\tresult[#result+1] = ')'\r\n\t\t\t\t\t\tresult[#result+1] = block\r\n\t\t\t\t\t\tresult[#result+1] = 'end)'\r\n\t\t\t\t\t\treturn table.concat(result)\r\n\t\t\t\t\tend",
    "type": "function"
  }, {
    "id": 36,
    "text": "local result = {}",
    "type": "statement:localassign"
  }, {
    "id": 37,
    "text": "if (type == '-') then\r\n\t\t\t\t\t\t\tresult[#result+1] = 'olua.definemethod'\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tresult[#result+1] = 'olua.defineclassmethod'\r\n\t\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 38,
    "text": "result[#result+1] = 'olua.definemethod'",
    "type": "statement:assign"
  }, {
    "id": 39,
    "text": "result[#result+1] = 'olua.defineclassmethod'",
    "type": "statement:assign"
  }, {
    "id": 40,
    "text": "result[#result+1] = '(__olua_current_class, \"'",
    "type": "statement:assign"
  }, {
    "id": 41,
    "text": "result[#result+1] = selector:gsub(':', '_')",
    "type": "statement:assign"
  }, {
    "id": 42,
    "text": "result[#result+1] = '\", function(self'",
    "type": "statement:assign"
  }, {
    "id": 43,
    "text": "result[#result+1] = args",
    "type": "statement:assign"
  }, {
    "id": 44,
    "text": "result[#result+1] = ')'",
    "type": "statement:assign"
  }, {
    "id": 45,
    "text": "result[#result+1] = block",
    "type": "statement:assign"
  }, {
    "id": 46,
    "text": "result[#result+1] = 'end)'",
    "type": "statement:assign"
  }, {
    "id": 47,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 48,
    "text": "",
    "type": "function container"
  }, {
    "id": 49,
    "text": "apply",
    "type": "global function"
  }, {
    "id": 50,
    "text": "concat",
    "type": "global function"
  }, {
    "id": 51,
    "text": "S",
    "type": "global function"
  }, {
    "id": 52,
    "text": "open",
    "type": "global function"
  }, {
    "id": 53,
    "text": "P",
    "type": "global function"
  }, {
    "id": 54,
    "text": "gsub",
    "type": "global function"
  }, {
    "id": 55,
    "text": "select",
    "type": "global function"
  }, {
    "id": 56,
    "text": "V",
    "type": "global function"
  }, {
    "id": 57,
    "text": "Cs",
    "type": "global function"
  }, {
    "id": 58,
    "text": "require",
    "type": "global function"
  }, {
    "id": 59,
    "text": "C",
    "type": "global function"
  }, {
    "id": 60,
    "text": "",
    "type": "variable container"
  }, {
    "id": 61,
    "text": "",
    "type": "require container"
  }, {
    "id": 62,
    "text": "",
    "type": "local variable"
  }, {
    "id": 63,
    "text": "",
    "type": "n/a"
  }, {
    "id": 64,
    "text": "",
    "type": "local variable"
  }, {
    "id": 65,
    "text": "",
    "type": "n/a"
  }, {
    "id": 66,
    "text": "",
    "type": "local variable"
  }, {
    "id": 67,
    "text": "",
    "type": "n/a"
  }, {
    "id": 68,
    "text": "",
    "type": "local variable"
  }, {
    "id": 69,
    "text": "",
    "type": "n/a"
  }, {
    "id": 70,
    "text": "",
    "type": "local variable"
  }, {
    "id": 71,
    "text": "",
    "type": "n/a"
  }, {
    "id": 72,
    "text": "",
    "type": "local variable"
  }, {
    "id": 73,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 74,
    "text": "(lpeg)",
    "type": "module"
  }, {
    "id": 75,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 76,
    "text": "parser)",
    "type": "module"
  } ]
}