{
  "_filename": "lang_lua.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luanativeobjects/native_objects/lang_lua.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 7,
    "label": "has",
    "to": 5
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 9,
    "label": "has",
    "to": 5
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 11,
    "label": "has",
    "to": 12
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 12,
    "label": "has",
    "to": 14
  }, {
    "from": 11,
    "label": "has",
    "to": 5
  }, {
    "from": 11,
    "label": "has",
    "to": 15
  }, {
    "from": 16,
    "label": "has",
    "to": 17
  }, {
    "from": 16,
    "label": "has",
    "to": 5
  }, {
    "from": 16,
    "label": "has",
    "to": 5
  }, {
    "from": 16,
    "label": "has",
    "to": 18
  }, {
    "from": 19,
    "label": "has",
    "to": 20
  }, {
    "from": 19,
    "label": "has",
    "to": 5
  }, {
    "from": 19,
    "label": "has",
    "to": 5
  }, {
    "from": 19,
    "label": "has",
    "to": 21
  }, {
    "from": 22,
    "label": "has",
    "to": 5
  }, {
    "from": 22,
    "label": "has",
    "to": 23
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 25,
    "label": "has",
    "to": 26
  }, {
    "from": 25,
    "label": "has",
    "to": 27
  }, {
    "from": 24,
    "label": "has",
    "to": 5
  }, {
    "from": 24,
    "label": "has",
    "to": 28
  }, {
    "from": 29,
    "label": "has",
    "to": 5
  }, {
    "from": 29,
    "label": "has",
    "to": 30
  }, {
    "from": 31,
    "label": "has",
    "to": 5
  }, {
    "from": 31,
    "label": "has",
    "to": 32
  }, {
    "from": 33,
    "label": "has",
    "to": 34
  }, {
    "from": 33,
    "label": "has",
    "to": 35
  }, {
    "from": 33,
    "label": "has",
    "to": 5
  }, {
    "from": 33,
    "label": "has",
    "to": 5
  }, {
    "from": 33,
    "label": "has",
    "to": 36
  }, {
    "from": 37,
    "label": "has",
    "to": 5
  }, {
    "from": 37,
    "label": "has",
    "to": 38
  }, {
    "from": 39,
    "label": "has",
    "to": 5
  }, {
    "from": 39,
    "label": "has",
    "to": 40
  }, {
    "from": 41,
    "label": "has",
    "to": 42
  }, {
    "from": 41,
    "label": "has",
    "to": 5
  }, {
    "from": 41,
    "label": "has",
    "to": 43
  }, {
    "from": 44,
    "label": "has",
    "to": 5
  }, {
    "from": 44,
    "label": "has",
    "to": 45
  }, {
    "from": 46,
    "label": "has",
    "to": 5
  }, {
    "from": 46,
    "label": "has",
    "to": 47
  }, {
    "from": 48,
    "label": "has",
    "to": 5
  }, {
    "from": 48,
    "label": "has",
    "to": 49
  }, {
    "from": 50,
    "label": "has",
    "to": 5
  }, {
    "from": 50,
    "label": "has",
    "to": 51
  }, {
    "from": 52,
    "label": "has",
    "to": 53
  }, {
    "from": 52,
    "label": "has",
    "to": 5
  }, {
    "from": 52,
    "label": "has",
    "to": 5
  }, {
    "from": 52,
    "label": "has",
    "to": 54
  }, {
    "from": 55,
    "label": "has",
    "to": 56
  }, {
    "from": 55,
    "label": "has",
    "to": 5
  }, {
    "from": 55,
    "label": "has",
    "to": 57
  }, {
    "from": 57,
    "label": "has",
    "to": 58
  }, {
    "from": 55,
    "label": "has",
    "to": 5
  }, {
    "from": 55,
    "label": "has",
    "to": 59
  }, {
    "from": 60,
    "label": "has",
    "to": 61
  }, {
    "from": 60,
    "label": "has",
    "to": 5
  }, {
    "from": 60,
    "label": "has",
    "to": 62
  }, {
    "from": 60,
    "label": "has",
    "to": 5
  }, {
    "from": 60,
    "label": "has",
    "to": 63
  }, {
    "from": 60,
    "label": "has",
    "to": 5
  }, {
    "from": 60,
    "label": "has",
    "to": 64
  }, {
    "from": 65,
    "label": "has",
    "to": 62
  }, {
    "from": 65,
    "label": "has",
    "to": 5
  }, {
    "from": 65,
    "label": "has",
    "to": 63
  }, {
    "from": 65,
    "label": "has",
    "to": 5
  }, {
    "from": 65,
    "label": "has",
    "to": 66
  }, {
    "from": 67,
    "label": "has",
    "to": 68
  }, {
    "from": 67,
    "label": "has",
    "to": 5
  }, {
    "from": 67,
    "label": "has",
    "to": 5
  }, {
    "from": 67,
    "label": "has",
    "to": 69
  }, {
    "from": 70,
    "label": "has",
    "to": 71
  }, {
    "from": 70,
    "label": "has",
    "to": 5
  }, {
    "from": 70,
    "label": "has",
    "to": 57
  }, {
    "from": 57,
    "label": "has",
    "to": 58
  }, {
    "from": 70,
    "label": "has",
    "to": 5
  }, {
    "from": 70,
    "label": "has",
    "to": 72
  }, {
    "from": 73,
    "label": "has",
    "to": 5
  }, {
    "from": 73,
    "label": "has",
    "to": 74
  }, {
    "from": 75,
    "label": "has",
    "to": 5
  }, {
    "from": 75,
    "label": "has",
    "to": 76
  }, {
    "from": 77,
    "label": "has",
    "to": 5
  }, {
    "from": 77,
    "label": "has",
    "to": 78
  }, {
    "from": 79,
    "label": "has",
    "to": 5
  }, {
    "from": 79,
    "label": "has",
    "to": 80
  }, {
    "from": 81,
    "label": "has",
    "to": 82
  }, {
    "from": 81,
    "label": "has",
    "to": 83
  }, {
    "from": 83,
    "label": "has",
    "to": 84
  }, {
    "from": 84,
    "label": "has",
    "to": 3
  }, {
    "from": 84,
    "label": "has",
    "to": 4
  }, {
    "from": 84,
    "label": "has",
    "to": 5
  }, {
    "from": 84,
    "label": "has",
    "to": 5
  }, {
    "from": 83,
    "label": "has",
    "to": 85
  }, {
    "from": 85,
    "label": "has",
    "to": 86
  }, {
    "from": 86,
    "label": "has",
    "to": 5
  }, {
    "from": 85,
    "label": "has",
    "to": 87
  }, {
    "from": 87,
    "label": "has",
    "to": 5
  }, {
    "from": 85,
    "label": "has",
    "to": 88
  }, {
    "from": 88,
    "label": "has",
    "to": 12
  }, {
    "from": 12,
    "label": "has",
    "to": 13
  }, {
    "from": 12,
    "label": "has",
    "to": 14
  }, {
    "from": 88,
    "label": "has",
    "to": 5
  }, {
    "from": 85,
    "label": "has",
    "to": 89
  }, {
    "from": 89,
    "label": "has",
    "to": 17
  }, {
    "from": 89,
    "label": "has",
    "to": 5
  }, {
    "from": 89,
    "label": "has",
    "to": 5
  }, {
    "from": 85,
    "label": "has",
    "to": 90
  }, {
    "from": 90,
    "label": "has",
    "to": 20
  }, {
    "from": 90,
    "label": "has",
    "to": 5
  }, {
    "from": 90,
    "label": "has",
    "to": 5
  }, {
    "from": 85,
    "label": "has",
    "to": 91
  }, {
    "from": 91,
    "label": "has",
    "to": 5
  }, {
    "from": 85,
    "label": "has",
    "to": 92
  }, {
    "from": 92,
    "label": "has",
    "to": 25
  }, {
    "from": 25,
    "label": "has",
    "to": 26
  }, {
    "from": 25,
    "label": "has",
    "to": 27
  }, {
    "from": 92,
    "label": "has",
    "to": 5
  }, {
    "from": 85,
    "label": "has",
    "to": 93
  }, {
    "from": 93,
    "label": "has",
    "to": 5
  }, {
    "from": 85,
    "label": "has",
    "to": 94
  }, {
    "from": 94,
    "label": "has",
    "to": 5
  }, {
    "from": 85,
    "label": "has",
    "to": 95
  }, {
    "from": 95,
    "label": "has",
    "to": 34
  }, {
    "from": 95,
    "label": "has",
    "to": 35
  }, {
    "from": 95,
    "label": "has",
    "to": 5
  }, {
    "from": 95,
    "label": "has",
    "to": 5
  }, {
    "from": 85,
    "label": "has",
    "to": 96
  }, {
    "from": 96,
    "label": "has",
    "to": 5
  }, {
    "from": 85,
    "label": "has",
    "to": 97
  }, {
    "from": 97,
    "label": "has",
    "to": 5
  }, {
    "from": 85,
    "label": "has",
    "to": 98
  }, {
    "from": 98,
    "label": "has",
    "to": 42
  }, {
    "from": 98,
    "label": "has",
    "to": 5
  }, {
    "from": 81,
    "label": "has",
    "to": 99
  }, {
    "from": 100,
    "label": "has",
    "to": 101
  }, {
    "from": 100,
    "label": "has",
    "to": 102
  }, {
    "from": 100,
    "label": "has",
    "to": 103
  }, {
    "from": 103,
    "label": "has",
    "to": 5
  }, {
    "from": 100,
    "label": "has",
    "to": 104
  }, {
    "from": 100,
    "label": "has",
    "to": 105
  }, {
    "from": 105,
    "label": "has",
    "to": 5
  }, {
    "from": 100,
    "label": "has",
    "to": 106
  }, {
    "from": 100,
    "label": "has",
    "to": 107
  }, {
    "from": 108,
    "label": "has",
    "to": 109
  }, {
    "from": 108,
    "label": "has",
    "to": 110
  }, {
    "from": 108,
    "label": "has",
    "to": 111
  }, {
    "from": 108,
    "label": "has",
    "to": 112
  }, {
    "from": 112,
    "label": "has",
    "to": 5
  }, {
    "from": 108,
    "label": "has",
    "to": 113
  }, {
    "from": 113,
    "label": "has",
    "to": 5
  }, {
    "from": 108,
    "label": "has",
    "to": 114
  }, {
    "from": 114,
    "label": "has",
    "to": 53
  }, {
    "from": 114,
    "label": "has",
    "to": 5
  }, {
    "from": 114,
    "label": "has",
    "to": 5
  }, {
    "from": 108,
    "label": "has",
    "to": 115
  }, {
    "from": 108,
    "label": "has",
    "to": 116
  }, {
    "from": 116,
    "label": "has",
    "to": 56
  }, {
    "from": 116,
    "label": "has",
    "to": 5
  }, {
    "from": 116,
    "label": "has",
    "to": 57
  }, {
    "from": 57,
    "label": "has",
    "to": 58
  }, {
    "from": 116,
    "label": "has",
    "to": 5
  }, {
    "from": 108,
    "label": "has",
    "to": 117
  }, {
    "from": 117,
    "label": "has",
    "to": 61
  }, {
    "from": 117,
    "label": "has",
    "to": 5
  }, {
    "from": 117,
    "label": "has",
    "to": 62
  }, {
    "from": 117,
    "label": "has",
    "to": 5
  }, {
    "from": 117,
    "label": "has",
    "to": 63
  }, {
    "from": 117,
    "label": "has",
    "to": 5
  }, {
    "from": 108,
    "label": "has",
    "to": 118
  }, {
    "from": 118,
    "label": "has",
    "to": 62
  }, {
    "from": 118,
    "label": "has",
    "to": 5
  }, {
    "from": 118,
    "label": "has",
    "to": 63
  }, {
    "from": 118,
    "label": "has",
    "to": 5
  }, {
    "from": 108,
    "label": "has",
    "to": 119
  }, {
    "from": 119,
    "label": "has",
    "to": 68
  }, {
    "from": 119,
    "label": "has",
    "to": 5
  }, {
    "from": 119,
    "label": "has",
    "to": 5
  }, {
    "from": 108,
    "label": "has",
    "to": 120
  }, {
    "from": 120,
    "label": "has",
    "to": 71
  }, {
    "from": 120,
    "label": "has",
    "to": 5
  }, {
    "from": 120,
    "label": "has",
    "to": 57
  }, {
    "from": 57,
    "label": "has",
    "to": 58
  }, {
    "from": 120,
    "label": "has",
    "to": 5
  }, {
    "from": 108,
    "label": "has",
    "to": 121
  }, {
    "from": 121,
    "label": "has",
    "to": 122
  }, {
    "from": 122,
    "label": "has",
    "to": 5
  }, {
    "from": 121,
    "label": "has",
    "to": 123
  }, {
    "from": 123,
    "label": "has",
    "to": 5
  }, {
    "from": 108,
    "label": "has",
    "to": 124
  }, {
    "from": 125,
    "label": "has",
    "to": 126
  }, {
    "from": 125,
    "label": "has",
    "to": 127
  }, {
    "from": 127,
    "label": "has",
    "to": 5
  }, {
    "from": 125,
    "label": "has",
    "to": 128
  }, {
    "from": 125,
    "label": "has",
    "to": 115
  }, {
    "from": 125,
    "label": "has",
    "to": 129
  }, {
    "from": 129,
    "label": "has",
    "to": 5
  }, {
    "from": 125,
    "label": "has",
    "to": 130
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 81
  }, {
    "from": 131,
    "label": "calls",
    "to": 134
  }, {
    "from": 131,
    "label": "calls",
    "to": 133
  }, {
    "from": 131,
    "label": "calls",
    "to": 132
  }, {
    "from": 131,
    "label": "calls",
    "to": 132
  }, {
    "from": 131,
    "label": "calls",
    "to": 135
  }, {
    "from": 1,
    "label": "contains",
    "to": 131
  }, {
    "from": 131,
    "label": "declares",
    "to": 2
  }, {
    "from": 131,
    "label": "declares",
    "to": 7
  }, {
    "from": 131,
    "label": "declares",
    "to": 9
  }, {
    "from": 131,
    "label": "declares",
    "to": 11
  }, {
    "from": 131,
    "label": "declares",
    "to": 16
  }, {
    "from": 131,
    "label": "declares",
    "to": 19
  }, {
    "from": 131,
    "label": "declares",
    "to": 22
  }, {
    "from": 131,
    "label": "declares",
    "to": 24
  }, {
    "from": 131,
    "label": "declares",
    "to": 29
  }, {
    "from": 131,
    "label": "declares",
    "to": 31
  }, {
    "from": 131,
    "label": "declares",
    "to": 33
  }, {
    "from": 131,
    "label": "declares",
    "to": 37
  }, {
    "from": 131,
    "label": "declares",
    "to": 39
  }, {
    "from": 131,
    "label": "declares",
    "to": 41
  }, {
    "from": 131,
    "label": "declares",
    "to": 44
  }, {
    "from": 131,
    "label": "declares",
    "to": 46
  }, {
    "from": 131,
    "label": "declares",
    "to": 48
  }, {
    "from": 131,
    "label": "declares",
    "to": 50
  }, {
    "from": 131,
    "label": "declares",
    "to": 52
  }, {
    "from": 131,
    "label": "declares",
    "to": 55
  }, {
    "from": 131,
    "label": "declares",
    "to": 60
  }, {
    "from": 131,
    "label": "declares",
    "to": 65
  }, {
    "from": 131,
    "label": "declares",
    "to": 67
  }, {
    "from": 131,
    "label": "declares",
    "to": 70
  }, {
    "from": 131,
    "label": "declares",
    "to": 73
  }, {
    "from": 131,
    "label": "declares",
    "to": 75
  }, {
    "from": 131,
    "label": "declares",
    "to": 77
  }, {
    "from": 131,
    "label": "declares",
    "to": 79
  }, {
    "from": 131,
    "label": "declares",
    "to": 81
  }, {
    "from": 131,
    "label": "declares",
    "to": 100
  }, {
    "from": 131,
    "label": "declares",
    "to": 108
  }, {
    "from": 131,
    "label": "declares",
    "to": 125
  }, {
    "from": 1,
    "label": "contains",
    "to": 136
  }, {
    "from": 1,
    "label": "contains",
    "to": 137
  }, {
    "from": 136,
    "label": "initializes",
    "to": 138
  }, {
    "from": 138,
    "label": "assigns",
    "to": 139
  }, {
    "from": 139,
    "label": "assigns",
    "to": 140
  }, {
    "from": 140,
    "label": "assigns",
    "to": 141
  }, {
    "from": 139,
    "label": "assigns",
    "to": 142
  }, {
    "from": 142,
    "label": "assigns",
    "to": 143
  }, {
    "from": 139,
    "label": "assigns",
    "to": 144
  }, {
    "from": 144,
    "label": "assigns",
    "to": 145
  }, {
    "from": 139,
    "label": "assigns",
    "to": 146
  }, {
    "from": 146,
    "label": "assigns",
    "to": 147
  }, {
    "from": 139,
    "label": "assigns",
    "to": 148
  }, {
    "from": 148,
    "label": "assigns",
    "to": 149
  }, {
    "from": 139,
    "label": "assigns",
    "to": 150
  }, {
    "from": 150,
    "label": "assigns",
    "to": 151
  }, {
    "from": 139,
    "label": "assigns",
    "to": 152
  }, {
    "from": 152,
    "label": "assigns",
    "to": 153
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "lang_lua",
    "type": "module"
  }, {
    "id": 2,
    "text": "function(self, var, flags, unwrap)\r\n\t\t\t\tlocal wrap = var.ffi_wrap\r\n\t\t\t\tif wrap then\r\n\t\t\t\t\treturn wrap .. '(${' .. var.name .. '})' .. (unwrap or '')\r\n\t\t\t\telse\r\n\t\t\t\t\treturn '${' .. var.name .. '}' .. (unwrap or '')\r\n\t\t\t\tend\r\n\t\t\tend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local wrap = var.ffi_wrap",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "if wrap then\r\n\t\t\t\t\treturn wrap .. '(${' .. var.name .. '})' .. (unwrap or '')\r\n\t\t\t\telse\r\n\t\t\t\t\treturn '${' .. var.name .. '}' .. (unwrap or '')\r\n\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 5,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 6,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 7,
    "text": "function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.to .. '(L,${' .. var.name .. '::idx},&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend",
    "type": "function"
  }, {
    "id": 8,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 9,
    "text": "function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.check .. '(L,${' .. var.name .. '::idx},&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend",
    "type": "function"
  }, {
    "id": 10,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 11,
    "text": "function(self, var, default)\r\n\t\t\t\t\tif default then\r\n\t\t\t\t\t\tdefault = '\"' .. default .. '\"'\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdefault = 'NULL'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.opt .. '(L,${' .. var.name .. '::idx},' .. default ..\r\n\t\t\t\t\t\t',&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend",
    "type": "function"
  }, {
    "id": 12,
    "text": "if default then\r\n\t\t\t\t\t\tdefault = '\"' .. default .. '\"'\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdefault = 'NULL'\r\n\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 13,
    "text": "default = '\"' .. default .. '\"'",
    "type": "statement:assign"
  }, {
    "id": 14,
    "text": "default = 'NULL'",
    "type": "statement:assign"
  }, {
    "id": 15,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 16,
    "text": "function(self, var)\r\n\t\t\t\t\tif var.has_length then\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t'  if(${' .. var.name .. '} == NULL) lua_pushnil(L);' ..\r\n\t\t\t\t\t\t'  else ' .. l_type.push_len .. '(L, ${' .. var.name .. '},' ..\r\n\t\t\t\t\t\t                                    '${' .. var.name .. '_len});\\n'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn '  ' .. l_type.push .. '(L, ${' .. var.name .. '});\\n'\r\n\t\t\t\tend",
    "type": "function"
  }, {
    "id": 17,
    "text": "if var.has_length then\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t'  if(${' .. var.name .. '} == NULL) lua_pushnil(L);' ..\r\n\t\t\t\t\t\t'  else ' .. l_type.push_len .. '(L, ${' .. var.name .. '},' ..\r\n\t\t\t\t\t\t                                    '${' .. var.name .. '_len});\\n'\r\n\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 18,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 19,
    "text": "function(self, var)\r\n\t\t\t\t\tif var.has_length then\r\n\t\t\t\t\t\treturn 'ffi_string_len(${' .. var.name .. '},${' .. var.name .. '_len})'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn 'ffi_string(${' .. var.name .. '})'\r\n\t\t\t\tend",
    "type": "function"
  }, {
    "id": 20,
    "text": "if var.has_length then\r\n\t\t\t\t\t\treturn 'ffi_string_len(${' .. var.name .. '},${' .. var.name .. '_len})'\r\n\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 21,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 22,
    "text": "function(self, var)\r\n\t\t\t\t\treturn 'local ${' .. var.name .. '_len} = #${' .. var.name .. '}\\n'\r\n\t\t\t\tend",
    "type": "function"
  }, {
    "id": 23,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 24,
    "text": "function(self, var, default)\r\n\t\t\t\t\tif default then\r\n\t\t\t\t\t\tdefault = (' or %q'):format(tostring(default))\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdefault = ''\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn \r\n\t\t\t\t\t\t'${' .. var.name .. '} = ${' .. var.name .. '}' .. default .. '\\n' ..\r\n\t\t\t\t\t\t'  local ${' .. var.name .. '_len} = #${' .. var.name .. '}\\n'\r\n\t\t\t\tend",
    "type": "function"
  }, {
    "id": 25,
    "text": "if default then\r\n\t\t\t\t\t\tdefault = (' or %q'):format(tostring(default))\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdefault = ''\r\n\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 26,
    "text": "default = (' or %q'):format(tostring(default))",
    "type": "statement:assign"
  }, {
    "id": 27,
    "text": "default = ''",
    "type": "statement:assign"
  }, {
    "id": 28,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 29,
    "text": "function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' .. l_type.to .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend",
    "type": "function"
  }, {
    "id": 30,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 31,
    "text": "function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' .. l_type.check .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend",
    "type": "function"
  }, {
    "id": 32,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 33,
    "text": "function(self, var, default)\r\n\t\t\t\t\tdefault = default or '0'\r\n\t\t\t\t\tif l_type.opt then\r\n\t\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\t\tl_type.opt .. '(L,${' .. var.name .. '::idx},' .. default .. ');\\n'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.to .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend",
    "type": "function"
  }, {
    "id": 34,
    "text": "default = default or '0'",
    "type": "statement:assign"
  }, {
    "id": 35,
    "text": "if l_type.opt then\r\n\t\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\t\tl_type.opt .. '(L,${' .. var.name .. '::idx},' .. default .. ');\\n'\r\n\t\t\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 36,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 37,
    "text": "function(self, var)\r\n\t\t\t\t\treturn '  ' .. l_type.push .. '(L, ${' .. var.name .. '});\\n'\r\n\t\t\t\tend",
    "type": "function"
  }, {
    "id": 38,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 39,
    "text": "function(self, var)\r\n\t\t\t\t\treturn '\\n'\r\n\t\t\t\tend",
    "type": "function"
  }, {
    "id": 40,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 41,
    "text": "function(self, var, default)\r\n\t\t\t\t\tdefault = tostring(default or '0')\r\n\t\t\t\t\treturn \r\n\t\t\t\t\t\t'  ${' .. var.name .. '} = ${' .. var.name .. '} or ' .. default .. '\\n'\r\n\t\t\t\tend",
    "type": "function"
  }, {
    "id": 42,
    "text": "default = tostring(default or '0')",
    "type": "statement:assign"
  }, {
    "id": 43,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 44,
    "text": "function(self, var)\r\n\t\t\treturn '  ' .. func_name ..'(L, ${' .. var.name .. '});\\n'\r\n\t\tend",
    "type": "function"
  }, {
    "id": 45,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 46,
    "text": "function(self, var, flags, unwrap)\r\n\t\t\treturn func_name ..'(${' .. var.name .. '})' .. (unwrap or '')\r\n\t\tend",
    "type": "function"
  }, {
    "id": 47,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 48,
    "text": "function(self, var)\r\n\t\t\treturn ' ${'..var.name..'} = '..type_name..'_check(L,${'..var.name..'::idx});\\n'\r\n\t\tend",
    "type": "function"
  }, {
    "id": 49,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 50,
    "text": "function(self, var)\r\n\t\t\treturn ' ${'..var.name..'} = '..type_name..'_optional(L,${'..var.name..'::idx});\\n'\r\n\t\tend",
    "type": "function"
  }, {
    "id": 51,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 52,
    "text": "function(self, var, flags)\r\n\t\t\tif not flags then\r\n\t\t\t\treturn ' ${'..var.name..'} = '..type_name..'_delete(L,${'..var.name..'::idx});\\n'\r\n\t\t\tend\r\n\t\t\treturn ' ${'..var.name..'} = '..type_name..'_delete(L,${'..var.name..'::idx},'..flags..');\\n'\r\n\t\tend",
    "type": "function"
  }, {
    "id": 53,
    "text": "if not flags then\r\n\t\t\t\treturn ' ${'..var.name..'} = '..type_name..'_delete(L,${'..var.name..'::idx});\\n'\r\n\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 54,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 55,
    "text": "function(self, var, flags)\r\n\t\t\tif flags == false then\r\n\t\t\t\treturn '  '..type_name..'_push(L, ${'..var.name..'});\\n'\r\n\t\t\tend\r\n\t\t\tif flags == nil then flags = '0' end\r\n\t\t\treturn '  '..type_name..'_push(L, ${'..var.name..'}, ' .. flags .. ');\\n'\r\n\t\tend",
    "type": "function"
  }, {
    "id": 56,
    "text": "if flags == false then\r\n\t\t\t\treturn '  '..type_name..'_push(L, ${'..var.name..'});\\n'\r\n\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 57,
    "text": "if flags == nil then flags = '0' end",
    "type": "statement:if"
  }, {
    "id": 58,
    "text": "flags = '0'",
    "type": "statement:assign"
  }, {
    "id": 59,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 60,
    "text": "function(self, var)\r\n\t\t\tif not rec.subs then\r\n\t\t\t\t-- no sub-classes\r\n\t\t\t\treturn rec._ffi_check_fast(self, var)\r\n\t\t\tend\r\n\t\t\t-- has sub-classes do extra casting if needed.\r\n\t\t\tif var.is_this then\r\n\t\t\t\treturn 'local ${' .. var.name .. '} = '..type_name..'_check(self)\\n'\r\n\t\t\tend\r\n\t\t\tlocal name = '${' .. var.name .. '}'\r\n\t\t\treturn name .. ' = '..type_name..'_check('..name..')\\n'\r\n\t\tend",
    "type": "function"
  }, {
    "id": 61,
    "text": "if not rec.subs then\r\n\t\t\t\t-- no sub-classes\r\n\t\t\t\treturn rec._ffi_check_fast(self, var)\r\n\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 62,
    "text": "if var.is_this then\r\n\t\t\t\treturn 'local ${' .. var.name .. '} = '..type_name..'_check(self)\\n'\r\n\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 63,
    "text": "local name = '${' .. var.name .. '}'",
    "type": "statement:localassign"
  }, {
    "id": 64,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 65,
    "text": "function(self, var)\r\n\t\t\tif var.is_this then\r\n\t\t\t\treturn 'local ${' .. var.name .. '} = '..type_name..'_check(self)\\n'\r\n\t\t\tend\r\n\t\t\tlocal name = '${' .. var.name .. '}'\r\n\t\t\treturn name .. ' = '..name..' and '..type_name..'_check('..name..') or nil\\n'\r\n\t\tend",
    "type": "function"
  }, {
    "id": 66,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 67,
    "text": "function(self, var, has_flags)\r\n\t\t\tif not has_flags then\r\n\t\t\t\treturn 'local ${'..var.name..'} = '..type_name..'_delete(self)\\n'\r\n\t\t\tend\r\n\t\t\treturn 'local ${'..var.name..'},${'..var.name..'_flags} = '..type_name..'_delete(self)\\n'\r\n\t\tend",
    "type": "function"
  }, {
    "id": 68,
    "text": "if not has_flags then\r\n\t\t\t\treturn 'local ${'..var.name..'} = '..type_name..'_delete(self)\\n'\r\n\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 69,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 70,
    "text": "function(self, var, flags, unwrap)\r\n\t\t\tif flags == false then\r\n\t\t\t\treturn type_name..'_push(${'..var.name..'})' .. (unwrap or '')\r\n\t\t\tend\r\n\t\t\tif flags == nil then flags = '0' end\r\n\t\t\treturn type_name..'_push(${'..var.name..'}, ' .. flags .. ')' .. (unwrap or '')\r\n\t\tend",
    "type": "function"
  }, {
    "id": 71,
    "text": "if flags == false then\r\n\t\t\t\treturn type_name..'_push(${'..var.name..'})' .. (unwrap or '')\r\n\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 72,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 73,
    "text": "function(self, var)\r\n\t\t\t\treturn '  lua_pushstring(L, ' .. rec.error_on_null .. ');\\n'\r\n\t\t\tend",
    "type": "function"
  }, {
    "id": 74,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 75,
    "text": "function(self, var)\r\n\t\t\t\treturn rec.error_on_null\r\n\t\t\tend",
    "type": "function"
  }, {
    "id": 76,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 77,
    "text": "function(self, var)\r\n\t\t\treturn 'lua_checktype_ref(L, ${' .. var.name .. '::idx}, LUA_TFUNCTION);\\n'\r\n\t\tend",
    "type": "function"
  }, {
    "id": 78,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 79,
    "text": "function(self, var)\r\n\t\t\treturn 'lua_rawgeti(L, LUA_REGISTRYINDEX, ' .. var .. ');\\n'\r\n\t\tend",
    "type": "function"
  }, {
    "id": 80,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 81,
    "text": "function(self, rec, parent)\r\n\t\tlocal l_type = lua_base_types[rec.lang_type]\r\n\t\tif l_type ~= nil then\r\n\t\t\trec._ffi_push = function(self, var, flags, unwrap)\r\n\t\t\t\tlocal wrap = var.ffi_wrap\r\n\t\t\t\tif wrap then\r\n\t\t\t\t\treturn wrap .. '(${' .. var.name .. '})' .. (unwrap or '')\r\n\t\t\t\telse\r\n\t\t\t\t\treturn '${' .. var.name .. '}' .. (unwrap or '')\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\t\tif rec.lang_type == 'string' then\r\n\t\t\t\trec._to = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.to .. '(L,${' .. var.name .. '::idx},&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._check = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.check .. '(L,${' .. var.name .. '::idx},&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._opt = function(self, var, default)\r\n\t\t\t\t\tif default then\r\n\t\t\t\t\t\tdefault = '\"' .. default .. '\"'\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdefault = 'NULL'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.opt .. '(L,${' .. var.name .. '::idx},' .. default ..\r\n\t\t\t\t\t\t',&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._push = function(self, var)\r\n\t\t\t\t\tif var.has_length then\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t'  if(${' .. var.name .. '} == NULL) lua_pushnil(L);' ..\r\n\t\t\t\t\t\t'  else ' .. l_type.push_len .. '(L, ${' .. var.name .. '},' ..\r\n\t\t\t\t\t\t                                    '${' .. var.name .. '_len});\\n'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn '  ' .. l_type.push .. '(L, ${' .. var.name .. '});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_push = function(self, var)\r\n\t\t\t\t\tif var.has_length then\r\n\t\t\t\t\t\treturn 'ffi_string_len(${' .. var.name .. '},${' .. var.name .. '_len})'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn 'ffi_string(${' .. var.name .. '})'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_check = function(self, var)\r\n\t\t\t\t\treturn 'local ${' .. var.name .. '_len} = #${' .. var.name .. '}\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_opt = function(self, var, default)\r\n\t\t\t\t\tif default then\r\n\t\t\t\t\t\tdefault = (' or %q'):format(tostring(default))\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdefault = ''\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn \r\n\t\t\t\t\t\t'${' .. var.name .. '} = ${' .. var.name .. '}' .. default .. '\\n' ..\r\n\t\t\t\t\t\t'  local ${' .. var.name .. '_len} = #${' .. var.name .. '}\\n'\r\n\t\t\t\tend\r\n\t\t\telse\r\n\t\t\t\trec._to = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' .. l_type.to .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._check = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' .. l_type.check .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._opt = function(self, var, default)\r\n\t\t\t\t\tdefault = default or '0'\r\n\t\t\t\t\tif l_type.opt then\r\n\t\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\t\tl_type.opt .. '(L,${' .. var.name .. '::idx},' .. default .. ');\\n'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.to .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._push = function(self, var)\r\n\t\t\t\t\treturn '  ' .. l_type.push .. '(L, ${' .. var.name .. '});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_check = function(self, var)\r\n\t\t\t\t\treturn '\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_opt = function(self, var, default)\r\n\t\t\t\t\tdefault = tostring(default or '0')\r\n\t\t\t\t\treturn \r\n\t\t\t\t\t\t'  ${' .. var.name .. '} = ${' .. var.name .. '} or ' .. default .. '\\n'\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend",
    "type": "function"
  }, {
    "id": 82,
    "text": "local l_type = lua_base_types[rec.lang_type]",
    "type": "statement:localassign"
  }, {
    "id": 83,
    "text": "if l_type ~= nil then\r\n\t\t\trec._ffi_push = function(self, var, flags, unwrap)\r\n\t\t\t\tlocal wrap = var.ffi_wrap\r\n\t\t\t\tif wrap then\r\n\t\t\t\t\treturn wrap .. '(${' .. var.name .. '})' .. (unwrap or '')\r\n\t\t\t\telse\r\n\t\t\t\t\treturn '${' .. var.name .. '}' .. (unwrap or '')\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\t\tif rec.lang_type == 'string' then\r\n\t\t\t\trec._to = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.to .. '(L,${' .. var.name .. '::idx},&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._check = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.check .. '(L,${' .. var.name .. '::idx},&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._opt = function(self, var, default)\r\n\t\t\t\t\tif default then\r\n\t\t\t\t\t\tdefault = '\"' .. default .. '\"'\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdefault = 'NULL'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.opt .. '(L,${' .. var.name .. '::idx},' .. default ..\r\n\t\t\t\t\t\t',&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._push = function(self, var)\r\n\t\t\t\t\tif var.has_length then\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t'  if(${' .. var.name .. '} == NULL) lua_pushnil(L);' ..\r\n\t\t\t\t\t\t'  else ' .. l_type.push_len .. '(L, ${' .. var.name .. '},' ..\r\n\t\t\t\t\t\t                                    '${' .. var.name .. '_len});\\n'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn '  ' .. l_type.push .. '(L, ${' .. var.name .. '});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_push = function(self, var)\r\n\t\t\t\t\tif var.has_length then\r\n\t\t\t\t\t\treturn 'ffi_string_len(${' .. var.name .. '},${' .. var.name .. '_len})'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn 'ffi_string(${' .. var.name .. '})'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_check = function(self, var)\r\n\t\t\t\t\treturn 'local ${' .. var.name .. '_len} = #${' .. var.name .. '}\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_opt = function(self, var, default)\r\n\t\t\t\t\tif default then\r\n\t\t\t\t\t\tdefault = (' or %q'):format(tostring(default))\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdefault = ''\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn \r\n\t\t\t\t\t\t'${' .. var.name .. '} = ${' .. var.name .. '}' .. default .. '\\n' ..\r\n\t\t\t\t\t\t'  local ${' .. var.name .. '_len} = #${' .. var.name .. '}\\n'\r\n\t\t\t\tend\r\n\t\t\telse\r\n\t\t\t\trec._to = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' .. l_type.to .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._check = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' .. l_type.check .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._opt = function(self, var, default)\r\n\t\t\t\t\tdefault = default or '0'\r\n\t\t\t\t\tif l_type.opt then\r\n\t\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\t\tl_type.opt .. '(L,${' .. var.name .. '::idx},' .. default .. ');\\n'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.to .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._push = function(self, var)\r\n\t\t\t\t\treturn '  ' .. l_type.push .. '(L, ${' .. var.name .. '});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_check = function(self, var)\r\n\t\t\t\t\treturn '\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_opt = function(self, var, default)\r\n\t\t\t\t\tdefault = tostring(default or '0')\r\n\t\t\t\t\treturn \r\n\t\t\t\t\t\t'  ${' .. var.name .. '} = ${' .. var.name .. '} or ' .. default .. '\\n'\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 84,
    "text": "rec._ffi_push = function(self, var, flags, unwrap)\r\n\t\t\t\tlocal wrap = var.ffi_wrap\r\n\t\t\t\tif wrap then\r\n\t\t\t\t\treturn wrap .. '(${' .. var.name .. '})' .. (unwrap or '')\r\n\t\t\t\telse\r\n\t\t\t\t\treturn '${' .. var.name .. '}' .. (unwrap or '')\r\n\t\t\t\tend\r\n\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 85,
    "text": "if rec.lang_type == 'string' then\r\n\t\t\t\trec._to = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.to .. '(L,${' .. var.name .. '::idx},&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._check = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.check .. '(L,${' .. var.name .. '::idx},&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._opt = function(self, var, default)\r\n\t\t\t\t\tif default then\r\n\t\t\t\t\t\tdefault = '\"' .. default .. '\"'\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdefault = 'NULL'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.opt .. '(L,${' .. var.name .. '::idx},' .. default ..\r\n\t\t\t\t\t\t',&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._push = function(self, var)\r\n\t\t\t\t\tif var.has_length then\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t'  if(${' .. var.name .. '} == NULL) lua_pushnil(L);' ..\r\n\t\t\t\t\t\t'  else ' .. l_type.push_len .. '(L, ${' .. var.name .. '},' ..\r\n\t\t\t\t\t\t                                    '${' .. var.name .. '_len});\\n'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn '  ' .. l_type.push .. '(L, ${' .. var.name .. '});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_push = function(self, var)\r\n\t\t\t\t\tif var.has_length then\r\n\t\t\t\t\t\treturn 'ffi_string_len(${' .. var.name .. '},${' .. var.name .. '_len})'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn 'ffi_string(${' .. var.name .. '})'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_check = function(self, var)\r\n\t\t\t\t\treturn 'local ${' .. var.name .. '_len} = #${' .. var.name .. '}\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_opt = function(self, var, default)\r\n\t\t\t\t\tif default then\r\n\t\t\t\t\t\tdefault = (' or %q'):format(tostring(default))\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdefault = ''\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn \r\n\t\t\t\t\t\t'${' .. var.name .. '} = ${' .. var.name .. '}' .. default .. '\\n' ..\r\n\t\t\t\t\t\t'  local ${' .. var.name .. '_len} = #${' .. var.name .. '}\\n'\r\n\t\t\t\tend\r\n\t\t\telse\r\n\t\t\t\trec._to = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' .. l_type.to .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._check = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' .. l_type.check .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._opt = function(self, var, default)\r\n\t\t\t\t\tdefault = default or '0'\r\n\t\t\t\t\tif l_type.opt then\r\n\t\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\t\tl_type.opt .. '(L,${' .. var.name .. '::idx},' .. default .. ');\\n'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.to .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._push = function(self, var)\r\n\t\t\t\t\treturn '  ' .. l_type.push .. '(L, ${' .. var.name .. '});\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_check = function(self, var)\r\n\t\t\t\t\treturn '\\n'\r\n\t\t\t\tend\r\n\t\t\t\trec._ffi_opt = function(self, var, default)\r\n\t\t\t\t\tdefault = tostring(default or '0')\r\n\t\t\t\t\treturn \r\n\t\t\t\t\t\t'  ${' .. var.name .. '} = ${' .. var.name .. '} or ' .. default .. '\\n'\r\n\t\t\t\tend\r\n\t\t\tend",
    "type": "statement:if"
  }, {
    "id": 86,
    "text": "rec._to = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.to .. '(L,${' .. var.name .. '::idx},&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 87,
    "text": "rec._check = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.check .. '(L,${' .. var.name .. '::idx},&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 88,
    "text": "rec._opt = function(self, var, default)\r\n\t\t\t\t\tif default then\r\n\t\t\t\t\t\tdefault = '\"' .. default .. '\"'\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdefault = 'NULL'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.opt .. '(L,${' .. var.name .. '::idx},' .. default ..\r\n\t\t\t\t\t\t',&(${' .. var.name .. '_len}));\\n'\r\n\t\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 89,
    "text": "rec._push = function(self, var)\r\n\t\t\t\t\tif var.has_length then\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t'  if(${' .. var.name .. '} == NULL) lua_pushnil(L);' ..\r\n\t\t\t\t\t\t'  else ' .. l_type.push_len .. '(L, ${' .. var.name .. '},' ..\r\n\t\t\t\t\t\t                                    '${' .. var.name .. '_len});\\n'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn '  ' .. l_type.push .. '(L, ${' .. var.name .. '});\\n'\r\n\t\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 90,
    "text": "rec._ffi_push = function(self, var)\r\n\t\t\t\t\tif var.has_length then\r\n\t\t\t\t\t\treturn 'ffi_string_len(${' .. var.name .. '},${' .. var.name .. '_len})'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn 'ffi_string(${' .. var.name .. '})'\r\n\t\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 91,
    "text": "rec._ffi_check = function(self, var)\r\n\t\t\t\t\treturn 'local ${' .. var.name .. '_len} = #${' .. var.name .. '}\\n'\r\n\t\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 92,
    "text": "rec._ffi_opt = function(self, var, default)\r\n\t\t\t\t\tif default then\r\n\t\t\t\t\t\tdefault = (' or %q'):format(tostring(default))\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdefault = ''\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn \r\n\t\t\t\t\t\t'${' .. var.name .. '} = ${' .. var.name .. '}' .. default .. '\\n' ..\r\n\t\t\t\t\t\t'  local ${' .. var.name .. '_len} = #${' .. var.name .. '}\\n'\r\n\t\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 93,
    "text": "rec._to = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' .. l_type.to .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 94,
    "text": "rec._check = function(self, var)\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' .. l_type.check .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 95,
    "text": "rec._opt = function(self, var, default)\r\n\t\t\t\t\tdefault = default or '0'\r\n\t\t\t\t\tif l_type.opt then\r\n\t\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\t\tl_type.opt .. '(L,${' .. var.name .. '::idx},' .. default .. ');\\n'\r\n\t\t\t\t\tend\r\n\t\t\t\t\treturn ' ${' .. var.name .. '} = ' ..\r\n\t\t\t\t\t\tl_type.to .. '(L,${' .. var.name .. '::idx});\\n'\r\n\t\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 96,
    "text": "rec._push = function(self, var)\r\n\t\t\t\t\treturn '  ' .. l_type.push .. '(L, ${' .. var.name .. '});\\n'\r\n\t\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 97,
    "text": "rec._ffi_check = function(self, var)\r\n\t\t\t\t\treturn '\\n'\r\n\t\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 98,
    "text": "rec._ffi_opt = function(self, var, default)\r\n\t\t\t\t\tdefault = tostring(default or '0')\r\n\t\t\t\t\treturn \r\n\t\t\t\t\t\t'  ${' .. var.name .. '} = ${' .. var.name .. '} or ' .. default .. '\\n'\r\n\t\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 99,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 100,
    "text": "function(self, rec, parent)\r\n\t\tlocal func_name = 'error_code__' .. rec.name .. '__push'\r\n\t\trec.func_name = func_name\r\n\r\n\t\t-- create _push_error & _push function\r\n\t\trec._push = function(self, var)\r\n\t\t\treturn '  ' .. func_name ..'(L, ${' .. var.name .. '});\\n'\r\n\t\tend\r\n\t\trec._push_error = rec._push\r\n\t\trec._ffi_push = function(self, var, flags, unwrap)\r\n\t\t\treturn func_name ..'(${' .. var.name .. '})' .. (unwrap or '')\r\n\t\tend\r\n\t\trec._ffi_push_error = rec._ffi_push\r\n\tend",
    "type": "function"
  }, {
    "id": 101,
    "text": "local func_name = 'error_code__' .. rec.name .. '__push'",
    "type": "statement:localassign"
  }, {
    "id": 102,
    "text": "rec.func_name = func_name",
    "type": "statement:assign"
  }, {
    "id": 103,
    "text": "rec._push = function(self, var)\r\n\t\t\treturn '  ' .. func_name ..'(L, ${' .. var.name .. '});\\n'\r\n\t\tend",
    "type": "statement:assign"
  }, {
    "id": 104,
    "text": "rec._push_error = rec._push",
    "type": "statement:assign"
  }, {
    "id": 105,
    "text": "rec._ffi_push = function(self, var, flags, unwrap)\r\n\t\t\treturn func_name ..'(${' .. var.name .. '})' .. (unwrap or '')\r\n\t\tend",
    "type": "statement:assign"
  }, {
    "id": 106,
    "text": "rec._ffi_push_error = rec._ffi_push",
    "type": "statement:assign"
  }, {
    "id": 107,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 108,
    "text": "function(self, rec, parent)\r\n\t\trec.lang_type = 'userdata'\r\n\t\tlocal type_name = 'obj_type_' .. rec.name\r\n\t\trec._obj_type_name = type_name\r\n\r\n\t\t-- create _check/_delete/_push functions\r\n\t\trec._check = function(self, var)\r\n\t\t\treturn ' ${'..var.name..'} = '..type_name..'_check(L,${'..var.name..'::idx});\\n'\r\n\t\tend\r\n\t\trec._opt = function(self, var)\r\n\t\t\treturn ' ${'..var.name..'} = '..type_name..'_optional(L,${'..var.name..'::idx});\\n'\r\n\t\tend\r\n\t\trec._delete = function(self, var, flags)\r\n\t\t\tif not flags then\r\n\t\t\t\treturn ' ${'..var.name..'} = '..type_name..'_delete(L,${'..var.name..'::idx});\\n'\r\n\t\t\tend\r\n\t\t\treturn ' ${'..var.name..'} = '..type_name..'_delete(L,${'..var.name..'::idx},'..flags..');\\n'\r\n\t\tend\r\n\t\trec._to = rec._check\r\n\t\trec._push = function(self, var, flags)\r\n\t\t\tif flags == false then\r\n\t\t\t\treturn '  '..type_name..'_push(L, ${'..var.name..'});\\n'\r\n\t\t\tend\r\n\t\t\tif flags == nil then flags = '0' end\r\n\t\t\treturn '  '..type_name..'_push(L, ${'..var.name..'}, ' .. flags .. ');\\n'\r\n\t\tend\r\n\t\trec._ffi_check = function(self, var)\r\n\t\t\tif not rec.subs then\r\n\t\t\t\t-- no sub-classes\r\n\t\t\t\treturn rec._ffi_check_fast(self, var)\r\n\t\t\tend\r\n\t\t\t-- has sub-classes do extra casting if needed.\r\n\t\t\tif var.is_this then\r\n\t\t\t\treturn 'local ${' .. var.name .. '} = '..type_name..'_check(self)\\n'\r\n\t\t\tend\r\n\t\t\tlocal name = '${' .. var.name .. '}'\r\n\t\t\treturn name .. ' = '..type_name..'_check('..name..')\\n'\r\n\t\tend\r\n\t\trec._ffi_opt = function(self, var)\r\n\t\t\tif var.is_this then\r\n\t\t\t\treturn 'local ${' .. var.name .. '} = '..type_name..'_check(self)\\n'\r\n\t\t\tend\r\n\t\t\tlocal name = '${' .. var.name .. '}'\r\n\t\t\treturn name .. ' = '..name..' and '..type_name..'_check('..name..') or nil\\n'\r\n\t\tend\r\n\t\trec._ffi_delete = function(self, var, has_flags)\r\n\t\t\tif not has_flags then\r\n\t\t\t\treturn 'local ${'..var.name..'} = '..type_name..'_delete(self)\\n'\r\n\t\t\tend\r\n\t\t\treturn 'local ${'..var.name..'},${'..var.name..'_flags} = '..type_name..'_delete(self)\\n'\r\n\t\tend\r\n\t\trec._ffi_push = function(self, var, flags, unwrap)\r\n\t\t\tif flags == false then\r\n\t\t\t\treturn type_name..'_push(${'..var.name..'})' .. (unwrap or '')\r\n\t\t\tend\r\n\t\t\tif flags == nil then flags = '0' end\r\n\t\t\treturn type_name..'_push(${'..var.name..'}, ' .. flags .. ')' .. (unwrap or '')\r\n\t\tend\r\n\t\tif rec.error_on_null then\r\n\t\t\trec._push_error = function(self, var)\r\n\t\t\t\treturn '  lua_pushstring(L, ' .. rec.error_on_null .. ');\\n'\r\n\t\t\tend\r\n\t\t\trec._ffi_push_error = function(self, var)\r\n\t\t\t\treturn rec.error_on_null\r\n\t\t\tend\r\n\t\tend\r\n\tend",
    "type": "function"
  }, {
    "id": 109,
    "text": "rec.lang_type = 'userdata'",
    "type": "statement:assign"
  }, {
    "id": 110,
    "text": "local type_name = 'obj_type_' .. rec.name",
    "type": "statement:localassign"
  }, {
    "id": 111,
    "text": "rec._obj_type_name = type_name",
    "type": "statement:assign"
  }, {
    "id": 112,
    "text": "rec._check = function(self, var)\r\n\t\t\treturn ' ${'..var.name..'} = '..type_name..'_check(L,${'..var.name..'::idx});\\n'\r\n\t\tend",
    "type": "statement:assign"
  }, {
    "id": 113,
    "text": "rec._opt = function(self, var)\r\n\t\t\treturn ' ${'..var.name..'} = '..type_name..'_optional(L,${'..var.name..'::idx});\\n'\r\n\t\tend",
    "type": "statement:assign"
  }, {
    "id": 114,
    "text": "rec._delete = function(self, var, flags)\r\n\t\t\tif not flags then\r\n\t\t\t\treturn ' ${'..var.name..'} = '..type_name..'_delete(L,${'..var.name..'::idx});\\n'\r\n\t\t\tend\r\n\t\t\treturn ' ${'..var.name..'} = '..type_name..'_delete(L,${'..var.name..'::idx},'..flags..');\\n'\r\n\t\tend",
    "type": "statement:assign"
  }, {
    "id": 115,
    "text": "rec._to = rec._check",
    "type": "statement:assign"
  }, {
    "id": 116,
    "text": "rec._push = function(self, var, flags)\r\n\t\t\tif flags == false then\r\n\t\t\t\treturn '  '..type_name..'_push(L, ${'..var.name..'});\\n'\r\n\t\t\tend\r\n\t\t\tif flags == nil then flags = '0' end\r\n\t\t\treturn '  '..type_name..'_push(L, ${'..var.name..'}, ' .. flags .. ');\\n'\r\n\t\tend",
    "type": "statement:assign"
  }, {
    "id": 117,
    "text": "rec._ffi_check = function(self, var)\r\n\t\t\tif not rec.subs then\r\n\t\t\t\t-- no sub-classes\r\n\t\t\t\treturn rec._ffi_check_fast(self, var)\r\n\t\t\tend\r\n\t\t\t-- has sub-classes do extra casting if needed.\r\n\t\t\tif var.is_this then\r\n\t\t\t\treturn 'local ${' .. var.name .. '} = '..type_name..'_check(self)\\n'\r\n\t\t\tend\r\n\t\t\tlocal name = '${' .. var.name .. '}'\r\n\t\t\treturn name .. ' = '..type_name..'_check('..name..')\\n'\r\n\t\tend",
    "type": "statement:assign"
  }, {
    "id": 118,
    "text": "rec._ffi_opt = function(self, var)\r\n\t\t\tif var.is_this then\r\n\t\t\t\treturn 'local ${' .. var.name .. '} = '..type_name..'_check(self)\\n'\r\n\t\t\tend\r\n\t\t\tlocal name = '${' .. var.name .. '}'\r\n\t\t\treturn name .. ' = '..name..' and '..type_name..'_check('..name..') or nil\\n'\r\n\t\tend",
    "type": "statement:assign"
  }, {
    "id": 119,
    "text": "rec._ffi_delete = function(self, var, has_flags)\r\n\t\t\tif not has_flags then\r\n\t\t\t\treturn 'local ${'..var.name..'} = '..type_name..'_delete(self)\\n'\r\n\t\t\tend\r\n\t\t\treturn 'local ${'..var.name..'},${'..var.name..'_flags} = '..type_name..'_delete(self)\\n'\r\n\t\tend",
    "type": "statement:assign"
  }, {
    "id": 120,
    "text": "rec._ffi_push = function(self, var, flags, unwrap)\r\n\t\t\tif flags == false then\r\n\t\t\t\treturn type_name..'_push(${'..var.name..'})' .. (unwrap or '')\r\n\t\t\tend\r\n\t\t\tif flags == nil then flags = '0' end\r\n\t\t\treturn type_name..'_push(${'..var.name..'}, ' .. flags .. ')' .. (unwrap or '')\r\n\t\tend",
    "type": "statement:assign"
  }, {
    "id": 121,
    "text": "if rec.error_on_null then\r\n\t\t\trec._push_error = function(self, var)\r\n\t\t\t\treturn '  lua_pushstring(L, ' .. rec.error_on_null .. ');\\n'\r\n\t\t\tend\r\n\t\t\trec._ffi_push_error = function(self, var)\r\n\t\t\t\treturn rec.error_on_null\r\n\t\t\tend\r\n\t\tend",
    "type": "statement:if"
  }, {
    "id": 122,
    "text": "rec._push_error = function(self, var)\r\n\t\t\t\treturn '  lua_pushstring(L, ' .. rec.error_on_null .. ');\\n'\r\n\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 123,
    "text": "rec._ffi_push_error = function(self, var)\r\n\t\t\t\treturn rec.error_on_null\r\n\t\t\tend",
    "type": "statement:assign"
  }, {
    "id": 124,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 125,
    "text": "function(self, rec, parent)\r\n\t\trec.lang_type = 'function'\r\n\r\n\t\t-- create _check/_delete/_push functions\r\n\t\trec._check = function(self, var)\r\n\t\t\treturn 'lua_checktype_ref(L, ${' .. var.name .. '::idx}, LUA_TFUNCTION);\\n'\r\n\t\tend\r\n\t\trec._delete = nil\r\n\t\trec._to = rec._check\r\n\t\trec._push = function(self, var)\r\n\t\t\treturn 'lua_rawgeti(L, LUA_REGISTRYINDEX, ' .. var .. ');\\n'\r\n\t\tend\r\n\tend",
    "type": "function"
  }, {
    "id": 126,
    "text": "rec.lang_type = 'function'",
    "type": "statement:assign"
  }, {
    "id": 127,
    "text": "rec._check = function(self, var)\r\n\t\t\treturn 'lua_checktype_ref(L, ${' .. var.name .. '::idx}, LUA_TFUNCTION);\\n'\r\n\t\tend",
    "type": "statement:assign"
  }, {
    "id": 128,
    "text": "rec._delete = nil",
    "type": "statement:assign"
  }, {
    "id": 129,
    "text": "rec._push = function(self, var)\r\n\t\t\treturn 'lua_rawgeti(L, LUA_REGISTRYINDEX, ' .. var .. ');\\n'\r\n\t\tend",
    "type": "statement:assign"
  }, {
    "id": 130,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 131,
    "text": "",
    "type": "function container"
  }, {
    "id": 132,
    "text": "tostring",
    "type": "global function"
  }, {
    "id": 133,
    "text": "print",
    "type": "global function"
  }, {
    "id": 134,
    "text": "process_records",
    "type": "global function"
  }, {
    "id": 135,
    "text": "_ffi_check_fast",
    "type": "global function"
  }, {
    "id": 136,
    "text": "",
    "type": "variable container"
  }, {
    "id": 137,
    "text": "",
    "type": "require container"
  }, {
    "id": 138,
    "text": "",
    "type": "local variable"
  }, {
    "id": 139,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 140,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 141,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 142,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 143,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 144,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 145,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 146,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 147,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 148,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 149,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 150,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 151,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 152,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 153,
    "text": "",
    "type": "tableconstructor"
  } ]
}