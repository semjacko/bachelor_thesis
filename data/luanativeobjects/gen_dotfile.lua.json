{
  "_filename": "gen_dotfile.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luanativeobjects/native_objects/gen_dotfile.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 6,
    "label": "has",
    "to": 7
  }, {
    "from": 6,
    "label": "has",
    "to": 8
  }, {
    "from": 2,
    "label": "has",
    "to": 9
  }, {
    "from": 9,
    "label": "has",
    "to": 10
  }, {
    "from": 2,
    "label": "has",
    "to": 11
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 12
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 13,
    "label": "has",
    "to": 15
  }, {
    "from": 16,
    "label": "has",
    "to": 17
  }, {
    "from": 16,
    "label": "has",
    "to": 18
  }, {
    "from": 16,
    "label": "has",
    "to": 19
  }, {
    "from": 16,
    "label": "has",
    "to": 20
  }, {
    "from": 16,
    "label": "has",
    "to": 21
  }, {
    "from": 16,
    "label": "has",
    "to": 22
  }, {
    "from": 16,
    "label": "has",
    "to": 23
  }, {
    "from": 24,
    "label": "has",
    "to": 25
  }, {
    "from": 24,
    "label": "has",
    "to": 26
  }, {
    "from": 27,
    "label": "has",
    "to": 28
  }, {
    "from": 27,
    "label": "has",
    "to": 29
  }, {
    "from": 30,
    "label": "has",
    "to": 31
  }, {
    "from": 30,
    "label": "has",
    "to": 32
  }, {
    "from": 30,
    "label": "has",
    "to": 33
  }, {
    "from": 30,
    "label": "has",
    "to": 34
  }, {
    "from": 35,
    "label": "has",
    "to": 36
  }, {
    "from": 35,
    "label": "has",
    "to": 37
  }, {
    "from": 38,
    "label": "has",
    "to": 39
  }, {
    "from": 39,
    "label": "has",
    "to": 40
  }, {
    "from": 39,
    "label": "has",
    "to": 41
  }, {
    "from": 38,
    "label": "has",
    "to": 42
  }, {
    "from": 38,
    "label": "has",
    "to": 43
  }, {
    "from": 44,
    "label": "calls",
    "to": 48
  }, {
    "from": 44,
    "label": "calls",
    "to": 49
  }, {
    "from": 44,
    "label": "calls",
    "to": 2
  }, {
    "from": 44,
    "label": "calls",
    "to": 2
  }, {
    "from": 44,
    "label": "calls",
    "to": 45
  }, {
    "from": 44,
    "label": "calls",
    "to": 45
  }, {
    "from": 44,
    "label": "calls",
    "to": 50
  }, {
    "from": 44,
    "label": "calls",
    "to": 50
  }, {
    "from": 44,
    "label": "calls",
    "to": 46
  }, {
    "from": 44,
    "label": "calls",
    "to": 47
  }, {
    "from": 1,
    "label": "contains",
    "to": 44
  }, {
    "from": 44,
    "label": "declares",
    "to": 2
  }, {
    "from": 44,
    "label": "declares",
    "to": 13
  }, {
    "from": 44,
    "label": "declares",
    "to": 16
  }, {
    "from": 44,
    "label": "declares",
    "to": 24
  }, {
    "from": 44,
    "label": "declares",
    "to": 27
  }, {
    "from": 44,
    "label": "declares",
    "to": 30
  }, {
    "from": 44,
    "label": "declares",
    "to": 35
  }, {
    "from": 44,
    "label": "declares",
    "to": 38
  }, {
    "from": 1,
    "label": "contains",
    "to": 51
  }, {
    "from": 1,
    "label": "contains",
    "to": 52
  }, {
    "from": 51,
    "label": "initializes",
    "to": 53
  }, {
    "from": 53,
    "label": "assigns",
    "to": 54
  }, {
    "from": 51,
    "label": "initializes",
    "to": 55
  }, {
    "from": 55,
    "label": "assigns",
    "to": 56
  }, {
    "from": 52,
    "label": "initializes",
    "to": 57
  }, {
    "from": 57,
    "label": "requires",
    "to": 58
  }, {
    "from": 59,
    "label": "initializes",
    "to": 57
  }, {
    "from": 57,
    "label": "requires",
    "to": 60
  }, {
    "from": 61,
    "label": "initializes",
    "to": 57
  }, {
    "from": 57,
    "label": "requires",
    "to": 62
  }, {
    "from": 61,
    "label": "initializes",
    "to": 57
  }, {
    "from": 57,
    "label": "requires",
    "to": 63
  }, {
    "from": 61,
    "label": "initializes",
    "to": 57
  }, {
    "from": 57,
    "label": "requires",
    "to": 64
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "gen_dotfile",
    "type": "module"
  }, {
    "id": 2,
    "text": "local function parent_add_child(parent, child, name)\r\n\tif parent == nil then return {} end\r\n\tlocal info = parent.info\r\n\tif info == nil then info = {}; parent.info = info end\r\n\tif name == nil then name = #info + 1 end\r\n\tinfo[name] = child\r\n\treturn child\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "if parent == nil then return {} end",
    "type": "statement:if"
  }, {
    "id": 4,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 5,
    "text": "local info = parent.info",
    "type": "statement:localassign"
  }, {
    "id": 6,
    "text": "if info == nil then info = {}; parent.info = info end",
    "type": "statement:if"
  }, {
    "id": 7,
    "text": "info = {}",
    "type": "statement:assign"
  }, {
    "id": 8,
    "text": "parent.info = info",
    "type": "statement:assign"
  }, {
    "id": 9,
    "text": "if name == nil then name = #info + 1 end",
    "type": "statement:if"
  }, {
    "id": 10,
    "text": "name = #info + 1",
    "type": "statement:assign"
  }, {
    "id": 11,
    "text": "info[name] = child",
    "type": "statement:assign"
  }, {
    "id": 12,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 13,
    "text": "function(self, rec, parent)\r\n\troot = rec.info\r\nend",
    "type": "function"
  }, {
    "id": 14,
    "text": "root = rec.info",
    "type": "statement:assign"
  }, {
    "id": 15,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 16,
    "text": "function(self, rec, parent)\r\n\tlocal info = parent_add_child(parent, {})\r\n\tobjects[rec.name] = info\r\n\tinfo[1] = rec._rec_type\r\n\tinfo[2] = rec.name\r\n\tinfo[3] = \"==========================\"\r\n\trec.info = info\r\nend",
    "type": "function"
  }, {
    "id": 17,
    "text": "local info = parent_add_child(parent, {})",
    "type": "statement:localassign"
  }, {
    "id": 18,
    "text": "objects[rec.name] = info",
    "type": "statement:assign"
  }, {
    "id": 19,
    "text": "info[1] = rec._rec_type",
    "type": "statement:assign"
  }, {
    "id": 20,
    "text": "info[2] = rec.name",
    "type": "statement:assign"
  }, {
    "id": 21,
    "text": "info[3] = \"==========================\"",
    "type": "statement:assign"
  }, {
    "id": 22,
    "text": "rec.info = info",
    "type": "statement:assign"
  }, {
    "id": 23,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 24,
    "text": "function(self, rec, parent)\r\n\tparent.info.extends = objects[rec.name]\r\nend",
    "type": "function"
  }, {
    "id": 25,
    "text": "parent.info.extends = objects[rec.name]",
    "type": "statement:assign"
  }, {
    "id": 26,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 27,
    "text": "function(self, rec, parent)\r\n\trec.params = ''\r\nend",
    "type": "function"
  }, {
    "id": 28,
    "text": "rec.params = ''",
    "type": "statement:assign"
  }, {
    "id": 29,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 30,
    "text": "function(self, rec, parent)\r\n\tlocal ret_type = rec.ret_type or \"void\"\r\n\tlocal func = ret_type .. \" \" .. rec.name .. \"(\" .. rec.params .. \")\"\r\n\tparent_add_child(parent, func)\r\nend",
    "type": "function"
  }, {
    "id": 31,
    "text": "local ret_type = rec.ret_type or \"void\"",
    "type": "statement:localassign"
  }, {
    "id": 32,
    "text": "local func = ret_type .. \" \" .. rec.name .. \"(\" .. rec.params .. \")\"",
    "type": "statement:localassign"
  }, {
    "id": 33,
    "text": "parent_add_child(parent, func)",
    "type": "statement:functioncall"
  }, {
    "id": 34,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 35,
    "text": "function(self, rec, parent)\r\n\tparent.ret_type = rec.c_type\r\nend",
    "type": "function"
  }, {
    "id": 36,
    "text": "parent.ret_type = rec.c_type",
    "type": "statement:assign"
  }, {
    "id": 37,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 38,
    "text": "function(self, rec, parent)\r\n\tif parent._first_var ~= nil then\r\n\t\tparent.params = parent.params .. ', '\r\n\telse\r\n\t\tparent._first_var = true\r\n\tend\r\n\tparent.params = parent.params .. rec.c_type .. \" \" .. rec.name\r\nend",
    "type": "function"
  }, {
    "id": 39,
    "text": "if parent._first_var ~= nil then\r\n\t\tparent.params = parent.params .. ', '\r\n\telse\r\n\t\tparent._first_var = true\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 40,
    "text": "parent.params = parent.params .. ', '",
    "type": "statement:assign"
  }, {
    "id": 41,
    "text": "parent._first_var = true",
    "type": "statement:assign"
  }, {
    "id": 42,
    "text": "parent.params = parent.params .. rec.c_type .. \" \" .. rec.name",
    "type": "statement:assign"
  }, {
    "id": 43,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 44,
    "text": "",
    "type": "function container"
  }, {
    "id": 45,
    "text": "print",
    "type": "global function"
  }, {
    "id": 46,
    "text": "process_records",
    "type": "global function"
  }, {
    "id": 47,
    "text": "get_outfile_name",
    "type": "global function"
  }, {
    "id": 48,
    "text": "dump",
    "type": "global function"
  }, {
    "id": 49,
    "text": "dottify",
    "type": "global function"
  }, {
    "id": 50,
    "text": "require",
    "type": "global function"
  }, {
    "id": 51,
    "text": "",
    "type": "variable container"
  }, {
    "id": 52,
    "text": "",
    "type": "require container"
  }, {
    "id": 53,
    "text": "",
    "type": "local variable"
  }, {
    "id": 54,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 55,
    "text": "",
    "type": "local variable"
  }, {
    "id": 56,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 57,
    "text": "",
    "type": "global variable"
  }, {
    "id": 58,
    "text": "utils",
    "type": "module"
  }, {
    "id": 59,
    "text": "",
    "type": "require container"
  }, {
    "id": 60,
    "text": "gen_lua_ffi)",
    "type": "module"
  }, {
    "id": 61,
    "text": "",
    "type": "require container"
  }, {
    "id": 62,
    "text": "(record)",
    "type": "module"
  }, {
    "id": 63,
    "text": " gen_lang)",
    "type": "module"
  }, {
    "id": 64,
    "text": " gen_module)",
    "type": "module"
  } ]
}