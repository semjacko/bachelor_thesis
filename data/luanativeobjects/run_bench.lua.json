{
  "_filename": "run_bench.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/luanativeobjects/examples/run_bench.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 2
  }, {
    "from": 3,
    "label": "has",
    "to": 4
  }, {
    "from": 3,
    "label": "has",
    "to": 5
  }, {
    "from": 5,
    "label": "has",
    "to": 6
  }, {
    "from": 3,
    "label": "has",
    "to": 7
  }, {
    "from": 3,
    "label": "has",
    "to": 8
  }, {
    "from": 8,
    "label": "has",
    "to": 9
  }, {
    "from": 3,
    "label": "has",
    "to": 10
  }, {
    "from": 3,
    "label": "has",
    "to": 11
  }, {
    "from": 3,
    "label": "has",
    "to": 12
  }, {
    "from": 13,
    "label": "has",
    "to": 14
  }, {
    "from": 13,
    "label": "has",
    "to": 15
  }, {
    "from": 16,
    "label": "has",
    "to": 17
  }, {
    "from": 16,
    "label": "has",
    "to": 18
  }, {
    "from": 19,
    "label": "calls",
    "to": 23
  }, {
    "from": 3,
    "label": "calls",
    "to": 26
  }, {
    "from": 19,
    "label": "calls",
    "to": 20
  }, {
    "from": 3,
    "label": "calls",
    "to": 25
  }, {
    "from": 3,
    "label": "calls",
    "to": 22
  }, {
    "from": 19,
    "label": "calls",
    "to": 27
  }, {
    "from": 19,
    "label": "calls",
    "to": 27
  }, {
    "from": 3,
    "label": "calls",
    "to": 24
  }, {
    "from": 19,
    "label": "calls",
    "to": 3
  }, {
    "from": 19,
    "label": "calls",
    "to": 3
  }, {
    "from": 2,
    "label": "contains",
    "to": 19
  }, {
    "from": 19,
    "label": "declares",
    "to": 3
  }, {
    "from": 19,
    "label": "declares",
    "to": 13
  }, {
    "from": 19,
    "label": "declares",
    "to": 16
  }, {
    "from": 2,
    "label": "contains",
    "to": 28
  }, {
    "from": 2,
    "label": "contains",
    "to": 29
  }, {
    "from": 28,
    "label": "initializes",
    "to": 30
  }, {
    "from": 30,
    "label": "assigns",
    "to": 31
  }, {
    "from": 28,
    "label": "initializes",
    "to": 32
  }, {
    "from": 32,
    "label": "assigns",
    "to": 33
  }, {
    "from": 29,
    "label": "initializes",
    "to": 34
  }, {
    "from": 34,
    "label": "requires",
    "to": 1
  }, {
    "from": 29,
    "label": "initializes",
    "to": 35
  }, {
    "from": 35,
    "label": "requires",
    "to": 21
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "bench",
    "type": "module"
  }, {
    "id": 2,
    "text": "run_bench",
    "type": "module"
  }, {
    "id": 3,
    "text": "local function run_bench(action_name, N, func)\r\n\r\n\tlocal timer = zmq.stopwatch_start()\r\n\t\r\n\tfor i=1,N do\r\n\t\tfunc()\r\n\tend\r\n\t\r\n\tlocal elapsed = timer:stop()\r\n\tif elapsed == 0 then elapsed = 1 end\r\n\t\r\n\tlocal throughput = N / (elapsed / 1000000)\r\n\t\r\n\tprint(string.format(\"finished in %i sec, %i millisec and %i microsec, %i '%s'/s\",\r\n\t(elapsed / 1000000), (elapsed / 1000) % 1000, (elapsed % 1000), throughput, action_name\r\n\t))\r\nend",
    "type": "function"
  }, {
    "id": 4,
    "text": "local timer = zmq.stopwatch_start()",
    "type": "statement:localassign"
  }, {
    "id": 5,
    "text": "for i=1,N do\r\n\t\tfunc()\r\n\tend",
    "type": "statement:numericfor"
  }, {
    "id": 6,
    "text": "func()",
    "type": "statement:functioncall"
  }, {
    "id": 7,
    "text": "local elapsed = timer:stop()",
    "type": "statement:localassign"
  }, {
    "id": 8,
    "text": "if elapsed == 0 then elapsed = 1 end",
    "type": "statement:if"
  }, {
    "id": 9,
    "text": "elapsed = 1",
    "type": "statement:assign"
  }, {
    "id": 10,
    "text": "local throughput = N / (elapsed / 1000000)",
    "type": "statement:localassign"
  }, {
    "id": 11,
    "text": "print(string.format(\"finished in %i sec, %i millisec and %i microsec, %i '%s'/s\",\r\n\t(elapsed / 1000000), (elapsed / 1000) % 1000, (elapsed % 1000), throughput, action_name\r\n\t))",
    "type": "statement:functioncall"
  }, {
    "id": 12,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 13,
    "text": "function()\r\n\ttest:simple()\r\nend",
    "type": "function"
  }, {
    "id": 14,
    "text": "test:simple()",
    "type": "statement:functioncall"
  }, {
    "id": 15,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 16,
    "text": "function()\r\n\ttest:null()\r\nend",
    "type": "function"
  }, {
    "id": 17,
    "text": "test:null()",
    "type": "statement:functioncall"
  }, {
    "id": 18,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 19,
    "text": "",
    "type": "function container"
  }, {
    "id": 20,
    "text": "method_call",
    "type": "global function"
  }, {
    "id": 21,
    "text": "zmq",
    "type": "module"
  }, {
    "id": 22,
    "text": "stopwatch_start",
    "type": "global function"
  }, {
    "id": 23,
    "text": "tonumber",
    "type": "global function"
  }, {
    "id": 24,
    "text": "func",
    "type": "global function"
  }, {
    "id": 25,
    "text": "print",
    "type": "global function"
  }, {
    "id": 26,
    "text": "format",
    "type": "global function"
  }, {
    "id": 27,
    "text": "require",
    "type": "global function"
  }, {
    "id": 28,
    "text": "",
    "type": "variable container"
  }, {
    "id": 29,
    "text": "",
    "type": "require container"
  }, {
    "id": 30,
    "text": "",
    "type": "local variable"
  }, {
    "id": 31,
    "text": "",
    "type": "n/a"
  }, {
    "id": 32,
    "text": "",
    "type": "local variable"
  }, {
    "id": 33,
    "text": "",
    "type": "n/a"
  }, {
    "id": 34,
    "text": "",
    "type": "require local variable"
  }, {
    "id": 35,
    "text": "",
    "type": "require local variable"
  } ]
}