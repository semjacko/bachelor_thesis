{
  "_filename": "build.lua",
  "_isShebang": false,
  "_isSpec": false,
  "_isTest": false,
  "_path": "modules/lualogging/doc/build.lua",
  "edges": [ {
    "from": 0,
    "label": "implements",
    "to": 1
  }, {
    "from": 2,
    "label": "has",
    "to": 3
  }, {
    "from": 2,
    "label": "has",
    "to": 4
  }, {
    "from": 2,
    "label": "has",
    "to": 5
  }, {
    "from": 2,
    "label": "has",
    "to": 6
  }, {
    "from": 7,
    "label": "has",
    "to": 8
  }, {
    "from": 7,
    "label": "has",
    "to": 9
  }, {
    "from": 7,
    "label": "has",
    "to": 10
  }, {
    "from": 10,
    "label": "has",
    "to": 11
  }, {
    "from": 7,
    "label": "has",
    "to": 12
  }, {
    "from": 7,
    "label": "has",
    "to": 13
  }, {
    "from": 7,
    "label": "has",
    "to": 14
  }, {
    "from": 7,
    "label": "has",
    "to": 15
  }, {
    "from": 7,
    "label": "has",
    "to": 16
  }, {
    "from": 7,
    "label": "has",
    "to": 17
  }, {
    "from": 7,
    "label": "has",
    "to": 18
  }, {
    "from": 7,
    "label": "has",
    "to": 19
  }, {
    "from": 7,
    "label": "has",
    "to": 20
  }, {
    "from": 2,
    "label": "calls",
    "to": 22
  }, {
    "from": 7,
    "label": "calls",
    "to": 22
  }, {
    "from": 2,
    "label": "calls",
    "to": 26
  }, {
    "from": 7,
    "label": "calls",
    "to": 26
  }, {
    "from": 7,
    "label": "calls",
    "to": 26
  }, {
    "from": 7,
    "label": "calls",
    "to": 2
  }, {
    "from": 7,
    "label": "calls",
    "to": 2
  }, {
    "from": 7,
    "label": "calls",
    "to": 2
  }, {
    "from": 7,
    "label": "calls",
    "to": 27
  }, {
    "from": 21,
    "label": "calls",
    "to": 25
  }, {
    "from": 7,
    "label": "calls",
    "to": 24
  }, {
    "from": 7,
    "label": "calls",
    "to": 23
  }, {
    "from": 21,
    "label": "calls",
    "to": 7
  }, {
    "from": 1,
    "label": "contains",
    "to": 21
  }, {
    "from": 21,
    "label": "declares",
    "to": 2
  }, {
    "from": 21,
    "label": "declares",
    "to": 7
  }, {
    "from": 1,
    "label": "contains",
    "to": 28
  }, {
    "from": 1,
    "label": "contains",
    "to": 29
  }, {
    "from": 28,
    "label": "initializes",
    "to": 30
  }, {
    "from": 30,
    "label": "assigns",
    "to": 31
  }, {
    "from": 28,
    "label": "initializes",
    "to": 32
  }, {
    "from": 32,
    "label": "assigns",
    "to": 33
  }, {
    "from": 33,
    "label": "assigns",
    "to": 34
  }, {
    "from": 33,
    "label": "assigns",
    "to": 35
  }, {
    "from": 33,
    "label": "assigns",
    "to": 36
  }, {
    "from": 33,
    "label": "assigns",
    "to": 37
  }, {
    "from": 33,
    "label": "assigns",
    "to": 38
  }, {
    "from": 33,
    "label": "assigns",
    "to": 39
  }, {
    "from": 33,
    "label": "assigns",
    "to": 40
  }, {
    "from": 33,
    "label": "assigns",
    "to": 41
  }, {
    "from": 33,
    "label": "assigns",
    "to": 42
  }, {
    "from": 28,
    "label": "initializes",
    "to": 43
  }, {
    "from": 43,
    "label": "assigns",
    "to": 44
  }, {
    "from": 44,
    "label": "assigns",
    "to": 45
  }, {
    "from": 45,
    "label": "assigns",
    "to": 46
  }, {
    "from": 44,
    "label": "assigns",
    "to": 47
  }, {
    "from": 47,
    "label": "assigns",
    "to": 48
  } ],
  "nodes": [ {
    "id": 0,
    "text": "",
    "type": "file"
  }, {
    "id": 1,
    "text": "build",
    "type": "module"
  }, {
    "id": 2,
    "text": "local function dump_file(out, file)\r\n\tlocal fd = assert(io.open(file))\r\n\tout:write(fd:read(\"*a\"))\r\n\tfd:close()\r\nend",
    "type": "function"
  }, {
    "id": 3,
    "text": "local fd = assert(io.open(file))",
    "type": "statement:localassign"
  }, {
    "id": 4,
    "text": "out:write(fd:read(\"*a\"))",
    "type": "statement:functioncall"
  }, {
    "id": 5,
    "text": "fd:close()",
    "type": "statement:functioncall"
  }, {
    "id": 6,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 7,
    "text": "local function dump_page(out, page, lang)\r\n\tlocal page_template = page:gsub(\".html$\", \".tpl\")\r\n\t-- check if the template for this page exists.\r\n\tlocal f_template = io.open(lang .. page_template)\r\n\tif not f_template then\r\n\t\tprint(\"no template for page '\" .. page .. \"' of language '\" .. lang .. \"'\")\r\n\t\treturn\r\n\tend\r\n\t-- dump page\r\n\tlocal out = assert(io.open(out, 'w'))\r\n\tdofile(lang .. \"menu.lua\")\r\n\tdump_file(out, lang .. 'header.tpl')\r\n\tdump_menu(out, page)\r\n\tdump_file(out, lang .. page_template)\r\n\tdump_file(out, lang .. 'footer.tpl')\r\n\tout:close()\r\nend",
    "type": "function"
  }, {
    "id": 8,
    "text": "local page_template = page:gsub(\".html$\", \".tpl\")",
    "type": "statement:localassign"
  }, {
    "id": 9,
    "text": "local f_template = io.open(lang .. page_template)",
    "type": "statement:localassign"
  }, {
    "id": 10,
    "text": "if not f_template then\r\n\t\tprint(\"no template for page '\" .. page .. \"' of language '\" .. lang .. \"'\")\r\n\t\treturn\r\n\tend",
    "type": "statement:if"
  }, {
    "id": 11,
    "text": "print(\"no template for page '\" .. page .. \"' of language '\" .. lang .. \"'\")",
    "type": "statement:functioncall"
  }, {
    "id": 12,
    "text": "return",
    "type": "statement:keyword"
  }, {
    "id": 13,
    "text": "local out = assert(io.open(out, 'w'))",
    "type": "statement:localassign"
  }, {
    "id": 14,
    "text": "dofile(lang .. \"menu.lua\")",
    "type": "statement:functioncall"
  }, {
    "id": 15,
    "text": "dump_file(out, lang .. 'header.tpl')",
    "type": "statement:functioncall"
  }, {
    "id": 16,
    "text": "dump_menu(out, page)",
    "type": "statement:functioncall"
  }, {
    "id": 17,
    "text": "dump_file(out, lang .. page_template)",
    "type": "statement:functioncall"
  }, {
    "id": 18,
    "text": "dump_file(out, lang .. 'footer.tpl')",
    "type": "statement:functioncall"
  }, {
    "id": 19,
    "text": "out:close()",
    "type": "statement:functioncall"
  }, {
    "id": 20,
    "text": "",
    "type": "blank lines"
  }, {
    "id": 21,
    "text": "",
    "type": "function container"
  }, {
    "id": 22,
    "text": "assert",
    "type": "global function"
  }, {
    "id": 23,
    "text": "dump_menu",
    "type": "global function"
  }, {
    "id": 24,
    "text": "print",
    "type": "global function"
  }, {
    "id": 25,
    "text": "pairs",
    "type": "global function"
  }, {
    "id": 26,
    "text": "open",
    "type": "global function"
  }, {
    "id": 27,
    "text": "dofile",
    "type": "global function"
  }, {
    "id": 28,
    "text": "",
    "type": "variable container"
  }, {
    "id": 29,
    "text": "",
    "type": "require container"
  }, {
    "id": 30,
    "text": "",
    "type": "local variable"
  }, {
    "id": 31,
    "text": "",
    "type": "n/a"
  }, {
    "id": 32,
    "text": "",
    "type": "local variable"
  }, {
    "id": 33,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 34,
    "text": "",
    "type": "string"
  }, {
    "id": 35,
    "text": "",
    "type": "string"
  }, {
    "id": 36,
    "text": "",
    "type": "string"
  }, {
    "id": 37,
    "text": "",
    "type": "string"
  }, {
    "id": 38,
    "text": "",
    "type": "string"
  }, {
    "id": 39,
    "text": "",
    "type": "string"
  }, {
    "id": 40,
    "text": "",
    "type": "string"
  }, {
    "id": 41,
    "text": "",
    "type": "string"
  }, {
    "id": 42,
    "text": "",
    "type": "string"
  }, {
    "id": 43,
    "text": "",
    "type": "local variable"
  }, {
    "id": 44,
    "text": "",
    "type": "tableconstructor"
  }, {
    "id": 45,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 46,
    "text": "",
    "type": "string"
  }, {
    "id": 47,
    "text": "",
    "type": "table assign node"
  }, {
    "id": 48,
    "text": "",
    "type": "string"
  } ]
}