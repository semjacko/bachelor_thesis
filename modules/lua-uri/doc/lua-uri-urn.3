.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "LUA-URI-URN 3"
.TH LUA-URI-URN 3 "2007-11-02" "1.0" "Lua uri.urn module"
.SH "Name"
.IX Header "Name"
lua-uri-urn \- \s-1URN\s0 support for Lua \s-1URI\s0 library
.SH "Description"
.IX Header "Description"
The class \f(CW\*(C`uri.urn\*(C'\fR is used for URNs, that is, URIs with the \f(CW\*(C`urn\*(C'\fR scheme.
It inherits from the uri class.
.PP
Any \s-1URN\s0 containing an authority part or query part is considered to be invalid,
as is one which does not have a valid \s-1NID\s0.  URNs must be of the form
\&\f(CW\*(C`urn:nid:nss\*(C'\fR, where the \s-1NSS\s0 part has a syntax specific to the \s-1NID\s0.  The
scheme and \s-1NID\s0 part are both normalized to lowercase.  Some NIDs have
subclasses which enforce further syntax constraints, do NID-specific
normalization, or provide additional methods.
.SH "Methods"
.IX Header "Methods"
All the methods defined in \fIlua\-uri\fR\|(3) are supported.  The \f(CW\*(C`userinfo\*(C'\fR,
\&\f(CW\*(C`host\*(C'\fR, \f(CW\*(C`port\*(C'\fR, and \f(CW\*(C`query\*(C'\fR methods will always return nil, and will throw
an exception when passed anything other than nil.  The \f(CW\*(C`path\*(C'\fR method will
throw an exception if given a new path which is nil or not valid for the \f(CW\*(C`urn\*(C'\fR
scheme.
.PP
The following additional methods are supported:
.IP "uri:nid(...)" 4
.IX Item "uri:nid(...)"
Get or set the \s-1NID\s0 (Namespace Identifier) of the \s-1URN\s0 (the part of the path
before the first colon).  If a new value is supplied then the \s-1URI\s0's path will
be changed to have the new \s-1NID\s0 but with the same \s-1NSS\s0 value.
.Sp
An exception will be thrown if the new \s-1NID\s0 is invalid, or if the existing
\&\s-1NSS\s0 value is invalid in the context of the new \s-1NID\s0.  Note that the value
\&'urn' is an invalid \s-1NID\s0.
.Sp
This can cause the class of the \s-1URI\s0 object to change, if a different class
is appropriate for the new \s-1NID\s0.
.IP "uri:nss(...)" 4
.IX Item "uri:nss(...)"
Get or set the \s-1NSS\s0 (Namespace Specific String) part of the \s-1URN\s0 (the part of the
path after the first colon).  If a new value is supplied then the \s-1URI\s0's path
will be changed to use the new \s-1NSS\s0, but the \s-1NID\s0 will be unchanged.
.Sp
This will throw an exception if the new value is invalid for the current \s-1NID\s0.
.SH "Subclasses"
.IX Header "Subclasses"
The following subclasses are used for URNs with certain NIDs.  URNs with
other NIDs just use the generic \f(CW\*(C`uri.urn\*(C'\fR class.
.IP "uri.urn.isbn" 4
.IX Item "uri.urn.isbn"
.PD 0
.IP "uri.urn.issn" 4
.IX Item "uri.urn.issn"
.IP "uri.urn.oid" 4
.IX Item "uri.urn.oid"
.PD
.SH "References"
.IX Header "References"
This class is based on \*(L"\s-1RFC\s0 2141\*(R".
